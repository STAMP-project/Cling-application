import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest7 {

    public static boolean debug = false;

    @Test
    public void test03501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03501");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str3 = type2.getDescriptor();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        int int22 = value21.getSize();
        org.mockito.asm.tree.analysis.Value value23 = simpleVerifier15.merge(value18, value21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value23);
        boolean boolean25 = type6.equals((java.lang.Object) analyzerException24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray39);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray39);
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray39);
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list43, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("double", (java.lang.Object) 7, value50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;", (java.lang.Object) false, value50);
        int int53 = value50.getSize();
        int int54 = value50.getSize();
        int int55 = value50.getSize();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "S" + "'", str3, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "double" + "'", str5, "double");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)V" + "'", str41, "(S)V");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(S)D" + "'", str42, "(S)D");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
    }

    @Test
    public void test03502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03502");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        int int7 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, false);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        boolean boolean22 = type12.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray23);
        java.lang.String str25 = type10.getDescriptor();
        int int26 = type10.getSort();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        boolean boolean39 = type29.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray40);
        int int42 = type27.getSize();
        boolean boolean44 = type27.equals((java.lang.Object) 181);
        int int45 = type27.getSize();
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray46);
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray46);
        boolean boolean49 = type1.equals((java.lang.Object) type3);
        java.lang.String str50 = type1.getClassName();
        java.lang.String str51 = type1.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(S)C" + "'", str24, "(S)C");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)C" + "'", str41, "(S)C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)C" + "'", str47, "(C)C");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)LC;" + "'", str48, "(C)LC;");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.mockito.asm.Type" + "'", str50, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.mockito.asm.Type" + "'", str51, "org.mockito.asm.Type");
    }

    @Test
    public void test03503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03503");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, true);
        int int11 = type7.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)C");
        java.lang.Class<?> wildcardClass14 = analyzerException13.getClass();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type16, false);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        boolean boolean31 = type21.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray32);
        int int34 = type19.getSize();
        boolean boolean36 = type19.equals((java.lang.Object) 181);
        int int37 = type19.getSize();
        java.lang.String str38 = type19.toString();
        int int39 = type19.getSort();
        int int41 = type19.getOpcode(113);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getReturnType("(S)D");
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type43, list44, false);
        org.mockito.asm.Type type47 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        int int55 = type49.getSort();
        java.lang.String str56 = type49.getClassName();
        java.lang.String str57 = type49.getDescriptor();
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list58, false);
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier46.newValue(type47);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass64 = type63.getClass();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        java.lang.String str66 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass64);
        java.lang.String str67 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        java.lang.String str70 = type69.getDescriptor();
        int int71 = type69.getSort();
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier46.newValue(type69);
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type69, list73, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode76 = null;
        java.util.List list77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value78 = simpleVerifier75.naryOperation(abstractInsnNode76, list77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(S)C" + "'", str33, "(S)C");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 113 + "'", int41 == 113);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "short" + "'", str56, "short");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "S" + "'", str57, "S");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str66, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org/mockito/asm/Type" + "'", str67, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str70, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertNotNull(value72);
    }

    @Test
    public void test03504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03504");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        boolean boolean14 = type9.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        int int29 = type23.getSort();
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray30);
        java.lang.String str33 = type9.toString();
        org.mockito.asm.Type type34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type34, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        int int53 = value52.getSize();
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier46.merge(value49, value52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        int int74 = value73.getSize();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier67.merge(value70, value73);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value75);
        analyzerException58.addSuppressed((java.lang.Throwable) analyzerException76);
        analyzerException55.addSuppressed((java.lang.Throwable) analyzerException76);
        java.lang.Class<?> wildcardClass79 = analyzerException76.getClass();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass79);
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier36.newValue(type80);
        org.mockito.asm.Type[] typeArray83 = org.mockito.asm.Type.getArgumentTypes("(S)C");
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type80, typeArray83);
        java.lang.String str85 = type80.getInternalName();
        java.lang.String str86 = type80.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)S" + "'", str32, "(S)S");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(S)Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str84, "(S)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str85, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str86, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test03505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03505");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: I: expected null, but found I");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03506");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass4);
        java.lang.String str8 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass4);
        boolean boolean9 = type1.equals((java.lang.Object) str8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode13 = null;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray23);
        boolean boolean26 = type16.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray27);
        java.lang.String str29 = type14.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        java.lang.String str37 = type33.getDescriptor();
        int int39 = type33.getOpcode((int) (short) 0);
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type33, list40, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getObjectType("(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int45 = type44.getDimensions();
        int int47 = type44.getOpcode(91);
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier42.newValue(type44);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getObjectType("Lg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value51 = simpleVerifier42.newValue(type50);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value52 = simpleVerifier12.copyOperation(abstractInsnNode13, value51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org/mockito/asm/Type" + "'", str8, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(C)S" + "'", str24, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(S)C" + "'", str28, "(S)C");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "C" + "'", str37, "C");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 95 + "'", int47 == 95);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
    }

    @Test
    public void test03507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03507");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        int int17 = type3.getSize();
        java.lang.String str18 = type3.toString();
        boolean boolean20 = type3.equals((java.lang.Object) 3);
        java.lang.String str21 = type3.getClassName();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray35);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, list37, true);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type40 = type3.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "char" + "'", str21, "char");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(S)C" + "'", str36, "(S)C");
    }

    @Test
    public void test03508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03508");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        java.lang.String str23 = type19.getDescriptor();
        int int25 = type19.getOpcode((int) (short) 0);
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list26, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str31 = type30.toString();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type35, true);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str39 = type38.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray48);
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type38, list51, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type68 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray69);
        boolean boolean72 = type62.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type62, true);
        int int75 = type57.getSort();
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type57, list76, true);
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list79, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type33, true);
        java.lang.String str84 = type33.getInternalName();
        int int85 = type33.getSort();
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier28.newValue(type33);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode87 = null;
        java.util.List list88 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value89 = simpleVerifier28.naryOperation(abstractInsnNode87, list88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L(C)Z;" + "'", str31, "L(C)Z;");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "boolean" + "'", str39, "boolean");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(C)S" + "'", str49, "(C)S");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)Z" + "'", str50, "(C)Z");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(C)S" + "'", str70, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str84, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertNotNull(value86);
    }

    @Test
    public void test03509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03509");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        boolean boolean13 = type3.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type3 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray14);
        int int16 = type1.getSize();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type18, false);
        boolean boolean22 = type18.equals((java.lang.Object) 23);
        java.lang.String str23 = type18.getClassName();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass27 = type26.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        java.lang.String str29 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.asm.tree.analysis.Value value31 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type30, value31);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type30, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type18, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode37 = null;
        java.util.List list38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value39 = simpleVerifier36.naryOperation(abstractInsnNode37, list38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(C)S" + "'", str11, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(S)C" + "'", str15, "(S)C");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "char" + "'", str23, "char");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str28, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str29, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type30);
    }

    @Test
    public void test03510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03510");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass10 = type9.getClass();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        java.lang.String str13 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        boolean boolean14 = type7.equals((java.lang.Object) str13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        int int22 = type16.getSort();
        boolean boolean24 = type16.equals((java.lang.Object) 192);
        int int25 = type16.getSort();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        int int31 = type30.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        int int47 = value46.getSize();
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier40.merge(value43, value46);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter32.copyOperation(abstractInsnNode33, value46);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode50 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        int int64 = value63.getSize();
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier57.merge(value60, value63);
        int int66 = value63.getSize();
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter32.copyOperation(abstractInsnNode50, value63);
        boolean boolean68 = type30.equals((java.lang.Object) basicInterpreter32);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        int int70 = type69.getSort();
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type69, list71, false);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type74, type75, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type75, true);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier29.newValue(type30);
        boolean boolean81 = type16.equals((java.lang.Object) value80);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type16, true);
        int int84 = type7.getDimensions();
        org.mockito.asm.Type[] typeArray86 = org.mockito.asm.Type.getArgumentTypes("(SC)Ljava/lang/Object;");
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray86);
        java.lang.String str88 = type7.getInternalName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str13, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 7 + "'", int70 == 7);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(SC)Lorg/mockito/asm/Type;" + "'", str87, "(SC)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org/mockito/asm/Type" + "'", str88, "org/mockito/asm/Type");
    }

    @Test
    public void test03511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03511");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        int int24 = type18.getSort();
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray25);
        java.lang.String str27 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type13, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode30 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        boolean boolean49 = type39.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type39, true);
        org.mockito.asm.Type type52 = null;
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        int int70 = value69.getSize();
        org.mockito.asm.tree.analysis.Value value71 = simpleVerifier63.merge(value66, value69);
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier51.merge(value56, value71);
        int int73 = value72.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value74 = simpleVerifier29.copyOperation(abstractInsnNode30, value72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(S)C" + "'", str26, "(S)C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)S" + "'", str47, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
    }

    @Test
    public void test03512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03512");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        int int16 = type0.getSort();
        java.lang.String str17 = type0.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        java.lang.String str25 = type21.getDescriptor();
        java.lang.Class<?> wildcardClass26 = type21.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type29 = type28.getElementType();
        int int31 = type29.getOpcode(173);
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type29, list32, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        java.util.List list36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value37 = simpleVerifier34.naryOperation(abstractInsnNode35, list36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "char" + "'", str17, "char");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/Type" + "'", str27, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 177 + "'", int31 == 177);
    }

    @Test
    public void test03513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03513");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str2 = type1.toString();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str10 = type9.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray19);
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type9, list22, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        boolean boolean43 = type33.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type33, true);
        int int46 = type28.getSort();
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type28, list47, true);
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list50, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str56 = type55.toString();
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier54.newValue(type55);
        int int58 = type55.getSize();
        int int59 = type55.getSort();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type60 = type55.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L(C)Z;" + "'", str2, "L(C)Z;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "boolean" + "'", str10, "boolean");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)Z" + "'", str21, "(C)Z");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Z" + "'", str56, "Z");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
    }

    @Test
    public void test03514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03514");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        java.lang.String str17 = type3.getDescriptor();
        int int19 = type3.getOpcode(185);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list37, false);
        java.lang.String str40 = type24.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type24, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass45 = type44.getClass();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        java.lang.String str48 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        boolean boolean53 = type3.equals((java.lang.Object) wildcardClass45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = type3.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 185 + "'", int19 == 185);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "boolean" + "'", str40, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str48, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str50, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/Type" + "'", str51, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test03515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03515");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        java.lang.Throwable throwable6 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = value25.getSize();
        org.mockito.asm.tree.analysis.Value value27 = simpleVerifier19.merge(value22, value25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        int int42 = value41.getSize();
        org.mockito.asm.tree.analysis.Value value43 = simpleVerifier35.merge(value38, value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        int int57 = value56.getSize();
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier50.merge(value53, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        int int72 = value71.getSize();
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier65.merge(value68, value71);
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier35.merge(value56, value73);
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier8.merge(value27, value74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException7, value75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type78, true);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str82 = type81.getDescriptor();
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier80.newValue(type81);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier3.merge(value75, value83);
        java.lang.Class<?> wildcardClass85 = value83.getClass();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass85);
        java.lang.String str87 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass85);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass85);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "I" + "'", str82, "I");
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str87, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type88);
    }

    @Test
    public void test03516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03516");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        boolean boolean31 = type21.equals((java.lang.Object) '4');
        boolean boolean33 = type21.equals((java.lang.Object) 193);
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier19.newValue(type21);
        int int36 = type21.getOpcode(113);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type38, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str42 = type41.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray51);
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type41, list54, false);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        boolean boolean69 = type59.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray70);
        java.lang.String str72 = type57.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type74, type76, list77, true);
        java.lang.String str80 = type76.getDescriptor();
        int int82 = type76.getOpcode((int) (short) 0);
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type76, list83, true);
        int int86 = type57.getSort();
        java.util.List list87 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type57, list87, false);
        java.util.List list90 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier92 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type41, list90, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode93 = null;
        java.util.List list94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value95 = simpleVerifier92.naryOperation(abstractInsnNode93, list94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 113 + "'", int36 == 113);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "boolean" + "'", str42, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)Z" + "'", str53, "(C)Z");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)S" + "'", str67, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(S)C" + "'", str71, "(S)C");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "C" + "'", str72, "C");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "C" + "'", str80, "C");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
    }

    @Test
    public void test03517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03517");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: (C)L(C)Z;");
        int int3 = type1.getOpcode(28);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
    }

    @Test
    public void test03518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03518");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        int int2 = type0.getOpcode(84);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        int int10 = type4.getSort();
        boolean boolean12 = type4.equals((java.lang.Object) 192);
        int int13 = type4.getSort();
        java.lang.String str14 = type4.toString();
        boolean boolean15 = type0.equals((java.lang.Object) str14);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type16 = type0.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 84 + "'", int2 == 84);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 4 + "'", int13 == 4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "S" + "'", str14, "S");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test03519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03519");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int2 = type1.getSort();
        java.lang.Class<?> wildcardClass3 = type1.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass3);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        java.lang.String str12 = type10.getDescriptor();
        int int13 = type10.getSize();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str19 = type18.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray28);
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type18, list31, false);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value36 = simpleVerifier33.newValue(type35);
        java.lang.String str37 = type35.toString();
        java.lang.String str38 = type35.toString();
        java.lang.String str39 = type35.getClassName();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, false);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        boolean boolean58 = type48.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray59);
        java.lang.String str61 = type46.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        java.lang.String str69 = type65.getDescriptor();
        int int71 = type65.getOpcode((int) (short) 0);
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type65, list72, true);
        int int75 = type46.getSort();
        java.lang.String str76 = type46.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type46, false);
        boolean boolean79 = type35.equals((java.lang.Object) type40);
        org.mockito.asm.Type[] typeArray81 = org.mockito.asm.Type.getArgumentTypes("(S)B");
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray81);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray81);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type10, false);
        org.mockito.asm.Type type86 = null;
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier85.newValue(type86);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "D" + "'", str12, "D");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "boolean" + "'", str19, "boolean");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)Z" + "'", str30, "(C)Z");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "C" + "'", str37, "C");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "char" + "'", str39, "char");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)C" + "'", str60, "(S)C");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "C" + "'", str61, "C");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "C" + "'", str76, "C");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(S)Z" + "'", str82, "(S)Z");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(S)D" + "'", str83, "(S)D");
        org.junit.Assert.assertNotNull(value87);
    }

    @Test
    public void test03520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03520");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass6 = type5.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        boolean boolean23 = type13.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray24);
        int int26 = type11.getSize();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type28, false);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str32 = type31.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type45, true);
        boolean boolean48 = type31.equals((java.lang.Object) simpleVerifier47);
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type31, list49, false);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.BYTE_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type52, list53, true);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        int int72 = value71.getSize();
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier65.merge(value68, value71);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value73);
        boolean boolean75 = type56.equals((java.lang.Object) analyzerException74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type78, type80, list81, true);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray85 = new org.mockito.asm.Type[] { type84 };
        java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type78, typeArray85);
        boolean boolean88 = type78.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray89 = new org.mockito.asm.Type[] { type78 };
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type76, typeArray89);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray89);
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray89);
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray89);
        java.lang.String str94 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray89);
        java.lang.String str95 = type1.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            int int96 = type1.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "S" + "'", str3, "S");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(S)C" + "'", str25, "(S)C");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "boolean" + "'", str32, "boolean");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)Z" + "'", str43, "(C)Z");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(C)S" + "'", str86, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(S)C" + "'", str90, "(S)C");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(S)V" + "'", str91, "(S)V");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(S)B" + "'", str92, "(S)B");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(S)Lorg/mockito/asm/Type;" + "'", str93, "(S)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(S)S" + "'", str94, "(S)S");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "short" + "'", str95, "short");
    }

    @Test
    public void test03521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03521");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        int int24 = type18.getSort();
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray25);
        java.lang.String str27 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type13, false);
        org.mockito.asm.Type type30 = null;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        boolean boolean46 = type36.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray47);
        int int49 = type34.getSize();
        boolean boolean51 = type34.equals((java.lang.Object) 181);
        java.lang.String str52 = type34.getClassName();
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier33.newValue(type34);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode54 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        java.lang.String str62 = type58.getDescriptor();
        int int64 = type58.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        int int79 = type73.getSort();
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray80);
        java.lang.String str82 = type68.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type68, false);
        org.mockito.asm.Type type85 = null;
        java.util.List list86 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type85, list86, true);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I: expected org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I, but found I");
        int int91 = type90.getSort();
        java.lang.String str92 = type90.getDescriptor();
        org.mockito.asm.tree.analysis.Value value93 = simpleVerifier88.newValue(type90);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value94 = simpleVerifier33.unaryOperation(abstractInsnNode54, value93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(S)C" + "'", str26, "(S)C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(S)C" + "'", str48, "(S)C");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "char" + "'", str52, "char");
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "C" + "'", str62, "C");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 4 + "'", int79 == 4);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(S)C" + "'", str81, "(S)C");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "C" + "'", str82, "C");
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 4 + "'", int91 == 4);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "S" + "'", str92, "S");
        org.junit.Assert.assertNotNull(value93);
    }

    @Test
    public void test03522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03522");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        java.lang.String str2 = analyzerException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str2, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
    }

    @Test
    public void test03523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03523");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.Class<?> wildcardClass8 = type7.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass8);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/Type" + "'", str9, "org/mockito/asm/Type");
    }

    @Test
    public void test03524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03524");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type4 = type1.getElementType();
        int int5 = type4.getSort();
        int int7 = type4.getOpcode(184);
        int int8 = type4.getSort();
        java.lang.Class<?> wildcardClass9 = type4.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 188 + "'", int7 == 188);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test03525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03525");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass3 = type2.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        java.lang.String str8 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        int int17 = type11.getSort();
        java.lang.String str18 = type11.toString();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type19, list20, false);
        boolean boolean24 = type19.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        int int39 = type33.getSort();
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray40);
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray40);
        java.lang.String str43 = type19.toString();
        org.mockito.asm.Type type44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type44, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        int int63 = value62.getSize();
        org.mockito.asm.tree.analysis.Value value64 = simpleVerifier56.merge(value59, value62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type74, list75, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        int int84 = value83.getSize();
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier77.merge(value80, value83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value85);
        analyzerException68.addSuppressed((java.lang.Throwable) analyzerException86);
        analyzerException65.addSuppressed((java.lang.Throwable) analyzerException86);
        java.lang.Class<?> wildcardClass89 = analyzerException86.getClass();
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass89);
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier46.newValue(type90);
        int int92 = value91.getSize();
        int int93 = value91.getSize();
        int int94 = value91.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException95 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I", (java.lang.Object) wildcardClass3, value91);
        org.mockito.asm.Type type96 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org/mockito/asm/Type" + "'", str8, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "S" + "'", str18, "S");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)C" + "'", str41, "(S)C");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(S)S" + "'", str42, "(S)S");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "S" + "'", str43, "S");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNotNull(type96);
    }

    @Test
    public void test03526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03526");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        int int18 = type0.getSize();
        java.lang.String str19 = type0.toString();
        int int20 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        java.lang.String str29 = type22.toString();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type30, list31, false);
        boolean boolean35 = type30.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type30, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.Value value40 = simpleVerifier37.newValue(type39);
        java.lang.Object obj42 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        int int56 = value55.getSize();
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier49.merge(value52, value55);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", obj42, value57);
        java.lang.Class<?> wildcardClass60 = value57.getClass();
        java.lang.String str61 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass60);
        java.lang.String str62 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass60);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        int int69 = type67.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, false);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type73, true);
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type67, list76, false);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier37.newValue(type67);
        int int81 = type67.getOpcode(148);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)B");
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getObjectType("(SC)L(C)LC;;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type83, type85, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type85, false);
        java.lang.String str90 = type67.getDescriptor();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "S" + "'", str29, "S");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str61, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str62, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 4 + "'", int69 == 4);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 148 + "'", int81 == 148);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "S" + "'", str90, "S");
    }

    @Test
    public void test03527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03527");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int12 = type11.getDimensions();
        java.lang.String str13 = type11.toString();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray23);
        boolean boolean26 = type16.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray27);
        int int29 = type14.getSize();
        boolean boolean31 = type14.equals((java.lang.Object) 181);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getObjectType("(S)C");
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type33, list34, true);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass39 = type38.getClass();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass39);
        java.lang.String str42 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type46, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str50 = type49.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type58 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray59);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray59);
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type49, list62, false);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str66 = type65.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type74 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray75);
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray75);
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray75);
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray75);
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray75);
        int int81 = type11.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str13, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(C)S" + "'", str24, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(S)C" + "'", str28, "(S)C");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str41, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org/mockito/asm/Type" + "'", str42, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "boolean" + "'", str50, "boolean");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(C)S" + "'", str60, "(C)S");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)Z" + "'", str61, "(C)Z");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "boolean" + "'", str66, "boolean");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)S" + "'", str76, "(C)S");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(C)Z" + "'", str77, "(C)Z");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(C)C" + "'", str78, "(C)C");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str79, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str80, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
    }

    @Test
    public void test03528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03528");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSort();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        int int15 = type9.getSort();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier7.newValue(type9);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str24 = type23.getDescriptor();
        org.mockito.asm.tree.analysis.Value value25 = simpleVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.Value value26 = simpleVerifier7.newValue(type23);
        int int28 = type23.getOpcode(129);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type29 = type23.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "S" + "'", str24, "S");
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 129 + "'", int28 == 129);
    }

    @Test
    public void test03529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03529");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I", (java.lang.Throwable) analyzerException4);
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        int int24 = value23.getSize();
        org.mockito.asm.tree.analysis.Value value25 = simpleVerifier17.merge(value20, value23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException26);
        java.lang.Throwable[] throwableArray28 = analyzerException27.getSuppressed();
        java.lang.Throwable[] throwableArray29 = analyzerException27.getSuppressed();
        java.lang.Throwable[] throwableArray30 = analyzerException27.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I", (java.lang.Throwable) analyzerException27);
        analyzerException4.addSuppressed((java.lang.Throwable) analyzerException27);
        java.lang.String str33 = analyzerException4.toString();
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: I" + "'", str33, "org.mockito.asm.tree.analysis.AnalyzerException: I");
    }

    @Test
    public void test03530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03530");
        java.lang.Object obj1 = new java.lang.Object();
        java.lang.Class<?> wildcardClass2 = obj1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int4 = type3.getSize();
        int int5 = type3.getSort();
        java.lang.Object obj6 = null;
        boolean boolean7 = type3.equals(obj6);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        boolean boolean22 = type12.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray23);
        java.lang.String str25 = type10.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        java.lang.String str33 = type29.getDescriptor();
        int int35 = type29.getOpcode((int) (short) 0);
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type29, list36, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        boolean boolean57 = type47.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type47, true);
        org.mockito.asm.Type type60 = null;
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        int int78 = value77.getSize();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier71.merge(value74, value77);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier59.merge(value64, value79);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type84, list85, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier88 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value90 = basicVerifier88.newValue(type89);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier91 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type92 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value93 = basicVerifier91.newValue(type92);
        int int94 = value93.getSize();
        org.mockito.asm.tree.analysis.Value value95 = simpleVerifier87.merge(value90, value93);
        org.mockito.asm.tree.analysis.Value value96 = simpleVerifier38.merge(value79, value95);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException97 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)D", (java.lang.Object) 10.0f, value96);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException98 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) type3, value96);
        java.lang.String str99 = type3.toString();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(S)C" + "'", str24, "(S)C");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertNotNull(value96);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "Ljava/lang/Object;" + "'", str99, "Ljava/lang/Object;");
    }

    @Test
    public void test03531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03531");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type type15 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type15, list16, false);
        java.lang.String str19 = type15.getClassName();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type21, false);
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type21, list24, true);
        java.lang.String str27 = type21.getDescriptor();
        int int29 = type21.getOpcode(138);
        java.lang.String str30 = type21.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "int" + "'", str19, "int");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str27, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 142 + "'", int29 == 142);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.mockito.asm.Type" + "'", str30, "org.mockito.asm.Type");
    }

    @Test
    public void test03532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03532");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        int int8 = type2.getSort();
        java.lang.String str9 = type2.toString();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type10, list11, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type type26 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type26, list27, false);
        java.lang.String str30 = type26.getClassName();
        int int31 = type26.getSort();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        boolean boolean44 = type34.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray45);
        int int47 = type32.getSize();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type49, false);
        boolean boolean53 = type49.equals((java.lang.Object) 23);
        java.lang.String str54 = type49.getClassName();
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type49, list55, true);
        java.lang.String str58 = type26.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type26, false);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getReturnType("B");
        java.lang.String str63 = type62.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type62, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type69, list70, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type74, type76, list77, true);
        java.lang.String str80 = type76.getDescriptor();
        int int81 = type76.getSort();
        java.util.List list82 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type76, list82, true);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass87 = type86.getClass();
        java.lang.String str88 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        java.lang.String str89 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        org.mockito.asm.Type type91 = type90.getElementType();
        org.mockito.asm.tree.analysis.Value value92 = simpleVerifier84.newValue(type91);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException93 = new org.mockito.asm.tree.analysis.AnalyzerException("LLg/mockito/asm/Type;;", (java.lang.Object) simpleVerifier65, value92);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode94 = null;
        java.util.List list95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value96 = simpleVerifier65.naryOperation(abstractInsnNode94, list95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "S" + "'", str9, "S");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "int" + "'", str30, "int");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(S)C" + "'", str46, "(S)C");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "char" + "'", str54, "char");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "I" + "'", str58, "I");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "B" + "'", str63, "B");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "C" + "'", str80, "C");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str88, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str89, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(value92);
    }

    @Test
    public void test03533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03533");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier11.merge(value14, value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value19);
        boolean boolean21 = type2.equals((java.lang.Object) analyzerException20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray35);
        java.lang.String str37 = type22.getDescriptor();
        int int38 = type22.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type22, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str42 = type41.getDescriptor();
        boolean boolean43 = type22.equals((java.lang.Object) type41);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getReturnType("(S)C");
        int int46 = type45.getSize();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getReturnType("(S)S");
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        boolean boolean61 = type51.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray62);
        java.lang.String str64 = type49.getDescriptor();
        int int65 = type49.getSort();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type74 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray75);
        boolean boolean78 = type68.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type68 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray79);
        int int81 = type66.getSize();
        boolean boolean83 = type66.equals((java.lang.Object) 181);
        int int84 = type66.getSize();
        org.mockito.asm.Type[] typeArray85 = new org.mockito.asm.Type[] { type66 };
        java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray85);
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray85);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray85);
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray85);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray85);
        int int91 = type1.getDimensions();
        java.lang.String str92 = type1.getInternalName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(S)C" + "'", str36, "(S)C");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "C" + "'", str37, "C");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "I" + "'", str42, "I");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)S" + "'", str59, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(S)C" + "'", str63, "(S)C");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "C" + "'", str64, "C");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)S" + "'", str76, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(S)C" + "'", str80, "(S)C");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(C)C" + "'", str86, "(C)C");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(C)S" + "'", str87, "(C)S");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(C)C" + "'", str88, "(C)C");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(C)C" + "'", str89, "(C)C");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(C)L(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;;" + "'", str90, "(C)L(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;;");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str92, "(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test03534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03534");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        int int17 = type3.getSize();
        java.lang.String str18 = type3.toString();
        int int19 = type3.getSize();
        java.lang.String str20 = type3.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "C" + "'", str20, "C");
    }

    @Test
    public void test03535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03535");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type4 = type1.getElementType();
        int int5 = type4.getSize();
        int int6 = type4.getSize();
        boolean boolean8 = type4.equals((java.lang.Object) "(S)L(C)Z;");
        org.mockito.asm.Type type9 = type4.getElementType();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass12 = type11.getClass();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        java.lang.String str14 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass12);
        java.lang.String str15 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        java.lang.String str18 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type20 = type19.getElementType();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type22, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str26 = type25.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray35);
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type25, list38, false);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value43 = simpleVerifier40.newValue(type42);
        java.lang.String str44 = type42.toString();
        java.lang.String str45 = type42.toString();
        java.lang.String str46 = type42.getClassName();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, false);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        boolean boolean65 = type55.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray66);
        java.lang.String str68 = type53.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type72, list73, true);
        java.lang.String str76 = type72.getDescriptor();
        int int78 = type72.getOpcode((int) (short) 0);
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type72, list79, true);
        int int82 = type53.getSort();
        java.lang.String str83 = type53.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type53, false);
        boolean boolean86 = type42.equals((java.lang.Object) type47);
        org.mockito.asm.Type[] typeArray88 = org.mockito.asm.Type.getArgumentTypes("(S)B");
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray88);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray88);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray88);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str14, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/Type" + "'", str15, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/Type" + "'", str17, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str18, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "boolean" + "'", str26, "boolean");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)Z" + "'", str37, "(C)Z");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "char" + "'", str46, "char");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(C)S" + "'", str63, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(S)C" + "'", str67, "(S)C");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "C" + "'", str68, "C");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "C" + "'", str76, "C");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "C" + "'", str83, "C");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(S)Z" + "'", str89, "(S)Z");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(S)Lg/mockito/asm/Type;" + "'", str90, "(S)Lg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(S)Lmockito/asm/Type;" + "'", str91, "(S)Lmockito/asm/Type;");
    }

    @Test
    public void test03536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03536");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("LS;");
        java.lang.String str2 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray18);
        boolean boolean21 = type11.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type11, true);
        int int24 = type6.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        int int32 = type26.getSort();
        java.lang.String str33 = type26.getClassName();
        java.lang.String str34 = type26.getDescriptor();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        int int43 = type37.getSort();
        java.lang.String str44 = type37.toString();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type45, list46, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        int int56 = type50.getSort();
        java.lang.String str57 = type50.getClassName();
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier48.newValue(type50);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type50, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type35, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type26, true);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getType("(C)L(S)C;");
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        int int72 = type70.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, false);
        java.lang.Class<?> wildcardClass75 = type70.getClass();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] {};
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type76, typeArray77);
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray77);
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray77);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray77);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LS;" + "'", str2, "LS;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(C)S" + "'", str19, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "short" + "'", str33, "short");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "S" + "'", str34, "S");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "S" + "'", str44, "S");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "short" + "'", str57, "short");
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 4 + "'", int72 == 4);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "()Lorg/mockito/asm/Type;" + "'", str78, "()Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "()LC)L(S)C;" + "'", str79, "()LC)L(S)C;");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "()C" + "'", str80, "()C");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "()LS;" + "'", str81, "()LS;");
    }

    @Test
    public void test03537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03537");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str11 = type10.getDescriptor();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type10, list12, false);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        boolean boolean27 = type17.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray28);
        int int30 = type15.getSize();
        boolean boolean32 = type15.equals((java.lang.Object) 181);
        int int33 = type15.getSize();
        java.lang.String str34 = type15.toString();
        int int35 = type15.getSort();
        int int37 = type15.getOpcode(113);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getReturnType("(S)D");
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type39, list40, false);
        java.lang.String str43 = type39.toString();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier14.newValue(type39);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        java.util.List list46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value47 = simpleVerifier14.naryOperation(abstractInsnNode45, list46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "B" + "'", str11, "B");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(C)S" + "'", str25, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(S)C" + "'", str29, "(S)C");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 113 + "'", int37 == 113);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "D" + "'", str43, "D");
        org.junit.Assert.assertNotNull(value44);
    }

    @Test
    public void test03538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03538");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        int int8 = type6.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        int int16 = type10.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type10, false);
        java.lang.Class<?> wildcardClass19 = type10.getClass();
        java.lang.String str20 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        java.lang.String str22 = type21.getInternalName();
        java.lang.String str23 = type21.toString();
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type21, list24, false);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, false);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str34 = type33.getDescriptor();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        boolean boolean54 = type44.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type44, true);
        boolean boolean58 = type44.equals((java.lang.Object) 158);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType("S");
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type60, list61, false);
        org.mockito.asm.tree.analysis.Value value64 = simpleVerifier32.newValue(type44);
        org.mockito.asm.tree.analysis.Value value65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value66 = simpleVerifier26.merge(value64, value65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/Type" + "'", str3, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str20, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org/mockito/asm/Type" + "'", str22, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str23, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "S" + "'", str34, "S");
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value64);
    }

    @Test
    public void test03539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03539");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, false);
        java.lang.Class<?> wildcardClass14 = type5.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        java.lang.String str16 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        java.lang.String str17 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        java.lang.String str18 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str16, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str17, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org/mockito/asm/Type" + "'", str18, "org/mockito/asm/Type");
    }

    @Test
    public void test03540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03540");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type28, true);
        int int41 = type23.getSort();
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type23, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = simpleVerifier44.newValue(type45);
        java.lang.String str47 = type45.getDescriptor();
        int int48 = type45.getSize();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass51 = type50.getClass();
        java.lang.String str52 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass51);
        java.lang.String str53 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass51);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, false);
        java.lang.String str60 = type57.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type57, true);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = type57.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "I" + "'", str47, "I");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str52, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str53, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "char" + "'", str60, "char");
    }

    @Test
    public void test03541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03541");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type6, true);
        java.lang.Throwable throwable11 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        int int31 = value30.getSize();
        org.mockito.asm.tree.analysis.Value value32 = simpleVerifier24.merge(value27, value30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        int int47 = value46.getSize();
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier40.merge(value43, value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        int int62 = value61.getSize();
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier55.merge(value58, value61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier40.merge(value61, value78);
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier13.merge(value32, value79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException12, value80);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type83, true);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str87 = type86.getDescriptor();
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier85.newValue(type86);
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier8.merge(value80, value88);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str91 = type90.getClassName();
        int int93 = type90.getOpcode(0);
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier8.newValue(type90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException95 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) analyzerException4, value94);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException96 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)C", (java.lang.Throwable) analyzerException95);
        java.lang.Throwable[] throwableArray97 = analyzerException96.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException98 = new org.mockito.asm.tree.analysis.AnalyzerException("Lboolean;", (java.lang.Throwable) analyzerException96);
        java.lang.String str99 = analyzerException96.toString();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "I" + "'", str87, "I");
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "double" + "'", str91, "double");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 3 + "'", int93 == 3);
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertNotNull(throwableArray97);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (C)C" + "'", str99, "org.mockito.asm.tree.analysis.AnalyzerException: (C)C");
    }

    @Test
    public void test03542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03542");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)C");
        java.lang.Class<?> wildcardClass2 = analyzerException1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str8 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str5, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str8, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str9, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test03543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03543");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str3 = type2.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier13.merge(value16, value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value21);
        boolean boolean23 = type4.equals((java.lang.Object) analyzerException22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        boolean boolean36 = type26.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray37);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        int int54 = value53.getSize();
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier47.merge(value50, value53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Object) type2, value50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Throwable) analyzerException56);
        java.lang.Throwable[] throwableArray58 = analyzerException57.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        int int76 = value75.getSize();
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier69.merge(value72, value75);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException78);
        java.lang.Throwable[] throwableArray80 = analyzerException78.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Throwable) analyzerException78);
        analyzerException57.addSuppressed((java.lang.Throwable) analyzerException78);
        java.lang.Throwable[] throwableArray83 = analyzerException78.getSuppressed();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "double" + "'", str3, "double");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)S" + "'", str34, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)C" + "'", str38, "(S)C");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)V" + "'", str39, "(S)V");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)D" + "'", str40, "(S)D");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(throwableArray83);
    }

    @Test
    public void test03544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03544");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I: expected org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I, but found I");
        int int2 = type1.getSort();
        java.lang.Class<?> wildcardClass3 = type1.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass3);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass3);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
    }

    @Test
    public void test03545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03545");
        java.lang.Object obj2 = null;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray20);
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type10, list23, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        boolean boolean44 = type34.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type34, true);
        int int47 = type29.getSort();
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type29, list48, true);
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list51, false);
        java.lang.String str54 = type5.getInternalName();
        java.lang.Object obj55 = null;
        boolean boolean56 = type5.equals(obj55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        int int64 = type58.getSort();
        int int65 = type58.getSize();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int68 = type67.getSort();
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type67, list69, true);
        int int72 = type67.getDimensions();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type67, false);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType("LS;");
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type76, list77, true);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass82 = type81.getClass();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass82);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass82);
        java.lang.String str86 = type85.getDescriptor();
        org.mockito.asm.Type type87 = type85.getElementType();
        java.lang.String str88 = type85.getClassName();
        int int89 = type85.getDimensions();
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getObjectType("org/mockito/asm/Type");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier93 = new org.mockito.asm.tree.analysis.SimpleVerifier(type85, type91, true);
        org.mockito.asm.Type type95 = org.mockito.asm.Type.getReturnType("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        org.mockito.asm.tree.analysis.Value value96 = simpleVerifier93.newValue(type95);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException97 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)L(S)Lorg/mockito/asm/Type;;", (java.lang.Object) list77, value96);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException98 = new org.mockito.asm.tree.analysis.AnalyzerException("(SC)C", obj2, value96);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException99 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)L(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;;", (java.lang.Throwable) analyzerException98);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean" + "'", str11, "boolean");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)Z" + "'", str22, "(C)Z");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str54, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 4 + "'", int64 == 4);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str86, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org.mockito.asm.Type" + "'", str88, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertNotNull(value96);
    }

    @Test
    public void test03546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03546");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        java.lang.String str23 = type19.getDescriptor();
        int int25 = type19.getOpcode((int) (short) 0);
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list26, true);
        int int29 = type19.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        int int37 = type31.getSort();
        java.lang.String str38 = type31.toString();
        java.lang.String str39 = type31.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type31, true);
        int int42 = type31.getSort();
        java.lang.String str43 = type31.getClassName();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 4 + "'", int37 == 4);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "S" + "'", str38, "S");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "S" + "'", str39, "S");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "short" + "'", str43, "short");
    }

    @Test
    public void test03547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03547");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.Value value15 = simpleVerifier7.merge(value10, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        int int29 = value28.getSize();
        org.mockito.asm.tree.analysis.Value value30 = simpleVerifier22.merge(value25, value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier37.merge(value40, value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = value58.getSize();
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier52.merge(value55, value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        int int74 = value73.getSize();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier67.merge(value70, value73);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier37.merge(value58, value75);
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier7.merge(value30, value75);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.LONG_TYPE;
        int int79 = type78.getSort();
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier7.newValue(type78);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType("S");
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier7.newValue(type82);
        java.lang.String str84 = type82.getDescriptor();
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type82, list85, false);
        int int88 = type82.getSize();
        int int90 = type82.getOpcode(24);
        java.lang.String str91 = type82.toString();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 7 + "'", int79 == 7);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "S" + "'", str84, "S");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 24 + "'", int90 == 24);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "S" + "'", str91, "S");
    }

    @Test
    public void test03548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03548");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value20);
        boolean boolean22 = type3.equals((java.lang.Object) analyzerException21);
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier0.newValue(type3);
        org.mockito.asm.Type type24 = null;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier0.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode26 = null;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str29 = type28.toString();
        int int30 = type28.getDimensions();
        org.mockito.asm.Type type31 = type28.getElementType();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type33, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier35.newValue(type37);
        boolean boolean39 = type28.equals((java.lang.Object) value38);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value40 = basicVerifier0.unaryOperation(abstractInsnNode26, value38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(value23);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str29, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test03549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03549");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("(C)B");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03550");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str3 = type2.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier13.merge(value16, value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value21);
        boolean boolean23 = type4.equals((java.lang.Object) analyzerException22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        boolean boolean36 = type26.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray37);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        int int54 = value53.getSize();
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier47.merge(value50, value53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Object) type2, value50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Throwable) analyzerException56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/Type;");
        analyzerException57.addSuppressed((java.lang.Throwable) analyzerException59);
        java.lang.Throwable[] throwableArray61 = analyzerException57.getSuppressed();
        java.lang.Class<?> wildcardClass62 = analyzerException57.getClass();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass62);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType("Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, false);
        int int69 = type65.getOpcode((int) '#');
        java.lang.Class<?> wildcardClass70 = type65.getClass();
        java.lang.String str71 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass70);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "double" + "'", str3, "double");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)S" + "'", str34, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)C" + "'", str38, "(S)C");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)V" + "'", str39, "(S)V");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)D" + "'", str40, "(S)D");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 39 + "'", int69 == 39);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str71, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03551");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Ldouble;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        int int4 = type3.getSize();
        java.lang.String str5 = type3.getClassName();
        org.mockito.asm.Type type6 = type3.getElementType();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type6, list7, true);
        java.lang.String str10 = type1.getInternalName();
        java.lang.String str11 = type1.getInternalName();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type13, true);
        java.lang.Class<?> wildcardClass16 = type12.getClass();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type20, list21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        boolean boolean36 = type26.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray37);
        int int39 = type24.getSize();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type41, false);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str49 = type48.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray58);
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type48, list61, false);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type72 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray73);
        boolean boolean76 = type66.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type66 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray77);
        java.lang.String str79 = type64.getDescriptor();
        int int80 = type64.getSort();
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type64, list81, true);
        boolean boolean84 = type41.equals((java.lang.Object) type45);
        int int85 = type41.getSize();
        int int86 = type41.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type41, false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = type41.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I" + "'", str5, "org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "double" + "'", str10, "double");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)S" + "'", str34, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)C" + "'", str38, "(S)C");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "boolean" + "'", str49, "boolean");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)S" + "'", str59, "(C)S");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(C)Z" + "'", str60, "(C)Z");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(C)S" + "'", str74, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(S)C" + "'", str78, "(S)C");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "C" + "'", str79, "C");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test03552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03552");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        int int24 = type22.getOpcode(8192);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, true);
        java.lang.String str27 = type20.getDescriptor();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = type32.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, false);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list37, false);
        java.lang.String str40 = type30.getInternalName();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        boolean boolean53 = type43.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray54);
        java.lang.String str56 = type41.getDescriptor();
        int int57 = type41.getSort();
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type41, list58, true);
        java.lang.Class<?> wildcardClass61 = simpleVerifier60.getClass();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type63, list64, true);
        int int67 = type63.getDimensions();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier19.newValue(type63);
        int int69 = value68.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8196 + "'", int24 == 8196);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "D" + "'", str27, "D");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)S" + "'", str51, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(S)C" + "'", str55, "(S)C");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "C" + "'", str56, "C");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
    }

    @Test
    public void test03553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03553");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        int int9 = type3.getSort();
        java.lang.String str10 = type3.toString();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type11, list12, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        int int22 = type16.getSort();
        java.lang.String str23 = type16.getClassName();
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier14.newValue(type16);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type16, true);
        java.lang.String str27 = type16.toString();
        java.lang.String str28 = type16.toString();
        java.lang.Object obj31 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        int int45 = value44.getSize();
        org.mockito.asm.tree.analysis.Value value46 = simpleVerifier38.merge(value41, value44);
        int int47 = value46.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", obj31, value46);
        org.mockito.asm.Type type49 = null;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str52 = type51.toString();
        int int53 = type51.getDimensions();
        org.mockito.asm.Type type54 = type51.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type54, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter60 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode61 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        int int75 = value74.getSize();
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier68.merge(value71, value74);
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter60.copyOperation(abstractInsnNode61, value74);
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier56.merge(value59, value74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I: expected org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I, but found I", (java.lang.Object) "(C)S", value74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)L(S)C;", (java.lang.Object) type16, value74);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type81 = type16.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "S" + "'", str10, "S");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "short" + "'", str23, "short");
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "S" + "'", str27, "S");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "S" + "'", str28, "S");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str52, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(value78);
    }

    @Test
    public void test03554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03554");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier36.merge(value57, value74);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier6.merge(value29, value74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        int int78 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier6.newValue(type77);
        java.lang.Class<?> wildcardClass80 = value79.getClass();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass80);
        java.lang.String str82 = type81.getInternalName();
        int int83 = type81.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 7 + "'", int78 == 7);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str82, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    public void test03555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03555");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        int int8 = type1.getSize();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list12, true);
        int int15 = type10.getDimensions();
        java.lang.String str16 = type10.getInternalName();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getReturnType("(C)LC;");
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        int int29 = type23.getSort();
        java.lang.String str30 = type23.toString();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type31, list32, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        boolean boolean46 = type36.equals((java.lang.Object) '4');
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type47, list48, false);
        java.lang.String str51 = type47.getClassName();
        int int52 = type47.getSort();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        boolean boolean65 = type55.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray66);
        int int68 = type53.getSize();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type70, false);
        boolean boolean74 = type70.equals((java.lang.Object) 23);
        java.lang.String str75 = type70.getClassName();
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type70, list76, true);
        java.lang.String str79 = type47.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type47, false);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getReturnType("B");
        java.lang.String str84 = type83.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type83, true);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier86.newValue(type88);
        org.mockito.asm.tree.analysis.Value value90 = simpleVerifier21.newValue(type88);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode91 = null;
        java.util.List list92 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value93 = simpleVerifier21.naryOperation(abstractInsnNode91, list92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str16, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "S" + "'", str30, "S");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "int" + "'", str51, "int");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(C)S" + "'", str63, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(S)C" + "'", str67, "(S)C");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "char" + "'", str75, "char");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "I" + "'", str79, "I");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "B" + "'", str84, "B");
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
    }

    @Test
    public void test03556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03556");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass3 = type2.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.tree.analysis.Value value7 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type6, value7);
        boolean boolean10 = type6.equals((java.lang.Object) 188);
        org.mockito.asm.Type type11 = type6.getElementType();
        int int12 = type6.getSort();
        org.mockito.asm.Type[] typeArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
    }

    @Test
    public void test03557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03557");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, false);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str14 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.Value value15 = simpleVerifier12.newValue(type13);
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type13, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        boolean boolean31 = type21.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray32);
        java.lang.String str34 = type19.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        java.lang.String str42 = type38.getDescriptor();
        int int44 = type38.getOpcode((int) (short) 0);
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type38, list45, true);
        int int48 = type19.getSort();
        java.lang.String str49 = type19.toString();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str51 = type50.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray60);
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray60);
        org.mockito.asm.tree.analysis.Value value64 = simpleVerifier18.newValue(type19);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode65 = null;
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type71, true);
        int int74 = type70.getSize();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier69.newValue(type70);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass78 = type77.getClass();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass78);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass78);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass78);
        java.lang.String str82 = type81.getDescriptor();
        org.mockito.asm.Type type83 = type81.getElementType();
        java.lang.String str84 = type81.getClassName();
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier69.newValue(type81);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value86 = simpleVerifier18.copyOperation(abstractInsnNode65, value85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "S" + "'", str14, "S");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(S)C" + "'", str33, "(S)C");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "C" + "'", str42, "C");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "C" + "'", str49, "C");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "boolean" + "'", str51, "boolean");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)S" + "'", str61, "(C)S");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(C)Z" + "'", str62, "(C)Z");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(C)C" + "'", str63, "(C)C");
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str82, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.mockito.asm.Type" + "'", str84, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(value85);
    }

    @Test
    public void test03558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03558");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        int int35 = value34.getSize();
        org.mockito.asm.tree.analysis.Value value36 = simpleVerifier28.merge(value31, value34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        int int50 = value49.getSize();
        org.mockito.asm.tree.analysis.Value value51 = simpleVerifier43.merge(value46, value49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        int int65 = value64.getSize();
        org.mockito.asm.tree.analysis.Value value66 = simpleVerifier58.merge(value61, value64);
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier28.merge(value49, value66);
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier1.merge(value20, value67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/tree/analysis/SimpleVerifier;", (java.lang.Object) value67, value71);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException77);
        analyzerException72.addSuppressed((java.lang.Throwable) analyzerException78);
        java.lang.Throwable[] throwableArray80 = analyzerException72.getSuppressed();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(throwableArray80);
    }

    @Test
    public void test03559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03559");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        java.lang.String str12 = type1.toString();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        int int28 = type13.getSize();
        boolean boolean30 = type13.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type13, false);
        java.lang.String str33 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type35, list41, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass46 = type45.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        java.lang.String str48 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type50 = type49.getElementType();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, false);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str58 = type57.getDescriptor();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier56.newValue(type57);
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type57, list60, true);
        java.lang.String str63 = type50.toString();
        org.mockito.asm.tree.analysis.Value value64 = simpleVerifier43.newValue(type50);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getObjectType("(S)L(C)Z;");
        org.mockito.asm.Type type67 = type66.getElementType();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier43.newValue(type66);
        org.mockito.asm.Type type69 = null;
        org.mockito.asm.tree.analysis.Value value70 = simpleVerifier43.newValue(type69);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type73, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list80 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type79, list80, true);
        int int83 = type77.getSort();
        boolean boolean85 = type77.equals((java.lang.Object) "(S)V");
        org.mockito.asm.Type type86 = null;
        java.util.List list87 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type86, list87, true);
        int int90 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier75.newValue(type77);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value92 = simpleVerifier43.unaryOperation(abstractInsnNode71, value91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "S" + "'", str12, "S");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str47, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str48, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "S" + "'", str58, "S");
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Lg/mockito/asm/Type;" + "'", str63, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 4 + "'", int83 == 4);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 4 + "'", int90 == 4);
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test03560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03560");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type3, true);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str7 = type6.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray16);
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type6, list19, false);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str23 = type22.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray32);
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray32);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        boolean boolean48 = type38.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray49);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray49);
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list52, false);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getReturnType("(C)S");
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier54.newValue(type56);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode58 = null;
        java.util.List list59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value60 = simpleVerifier54.naryOperation(abstractInsnNode58, list59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean" + "'", str7, "boolean");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)Z" + "'", str18, "(C)Z");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "boolean" + "'", str23, "boolean");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)S" + "'", str33, "(C)S");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)Z" + "'", str34, "(C)Z");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)C" + "'", str35, "(C)C");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(C)S" + "'", str46, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(S)C" + "'", str50, "(S)C");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(S)C" + "'", str51, "(S)C");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
    }

    @Test
    public void test03561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03561");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C: expected D, but found I");
        org.mockito.asm.Type type2 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        java.lang.String str5 = type1.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (S)C: expected D, but found I" + "'", str5, "org.mockito.asm.tree.analysis.AnalyzerException: (S)C: expected D, but found I");
    }

    @Test
    public void test03562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03562");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier19.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass29 = type28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, false);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        int int44 = type42.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        int int60 = value59.getSize();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier53.merge(value56, value59);
        int int62 = value59.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Object) type42, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        int int79 = value78.getSize();
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier37.merge(value59, value78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("B", (java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I", value78);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value82 = simpleVerifier19.unaryOperation(abstractInsnNode23, value78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str30, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str31, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(value80);
    }

    @Test
    public void test03563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03563");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, false);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = type15.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        int int33 = value32.getSize();
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier26.merge(value29, value32);
        int int35 = value32.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Object) type15, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        int int50 = value49.getSize();
        org.mockito.asm.tree.analysis.Value value51 = simpleVerifier43.merge(value46, value49);
        int int52 = value51.getSize();
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier10.merge(value32, value51);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int56 = type55.getSort();
        java.lang.String str57 = type55.toString();
        org.mockito.asm.Type type58 = type55.getElementType();
        int int59 = type58.getSize();
        int int60 = type58.getSort();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier10.newValue(type58);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass65 = type64.getClass();
        java.lang.String str66 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass65);
        java.lang.String str67 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass65);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass65);
        org.mockito.asm.tree.analysis.Value value69 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type68, value69);
        boolean boolean72 = type68.equals((java.lang.Object) 188);
        int int73 = type68.getSort();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier10.newValue(type68);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode75 = null;
        java.util.List list76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value77 = simpleVerifier10.naryOperation(abstractInsnNode75, list76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str57, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str66, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str67, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertNotNull(value74);
    }

    @Test
    public void test03564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03564");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type12, list13, false);
        java.lang.String str16 = type12.getClassName();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType("[Ljava/lang/Throwable;");
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        boolean boolean31 = type21.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray32);
        java.lang.String str34 = type19.getDescriptor();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int38 = type36.getOpcode(86);
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type36, list39, true);
        int int42 = type36.getSort();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int45 = type44.getSort();
        java.lang.String str46 = type44.toString();
        org.mockito.asm.Type type47 = type44.getElementType();
        int int48 = type47.getSort();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        int int65 = value64.getSize();
        org.mockito.asm.tree.analysis.Value value66 = simpleVerifier58.merge(value61, value64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value66);
        boolean boolean68 = type49.equals((java.lang.Object) analyzerException67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type73, list74, true);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray78 = new org.mockito.asm.Type[] { type77 };
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray78);
        boolean boolean81 = type71.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray82 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray82);
        java.lang.String str84 = type69.getDescriptor();
        int int85 = type69.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type69, true);
        java.lang.String str88 = type69.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type69, false);
        org.mockito.asm.Type[] typeArray92 = org.mockito.asm.Type.getArgumentTypes("(C)D");
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray92);
        java.lang.String str94 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray92);
        java.lang.String str95 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray92);
        java.lang.String str96 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray92);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type97 = type12.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "int" + "'", str16, "int");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(S)C" + "'", str33, "(S)C");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 86 + "'", int38 == 86);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str46, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(C)S" + "'", str79, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(S)C" + "'", str83, "(S)C");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "C" + "'", str84, "C");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "C" + "'", str88, "C");
        org.junit.Assert.assertNotNull(typeArray92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(C)C" + "'", str93, "(C)C");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(C)S" + "'", str94, "(C)S");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "(C)[Ljava/lang/Throwable;" + "'", str95, "(C)[Ljava/lang/Throwable;");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "(C)I" + "'", str96, "(C)I");
    }

    @Test
    public void test03565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03565");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier0 = new org.mockito.asm.tree.analysis.SimpleVerifier();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.Value value15 = simpleVerifier7.merge(value10, value13);
        int int16 = value13.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        boolean boolean35 = type25.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type25, true);
        org.mockito.asm.Type type38 = null;
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        int int56 = value55.getSize();
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier49.merge(value52, value55);
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier37.merge(value42, value57);
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier0.merge(value13, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        int int75 = value74.getSize();
        int int76 = value74.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type78, type80, list81, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier87 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value89 = basicVerifier87.newValue(type88);
        int int90 = value89.getSize();
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier83.merge(value86, value89);
        int int92 = value89.getSize();
        int int93 = value89.getSize();
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier0.merge(value74, value89);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode95 = null;
        org.mockito.asm.tree.analysis.Value value96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value97 = simpleVerifier0.unaryOperation(abstractInsnNode95, value96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)S" + "'", str33, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(value94);
    }

    @Test
    public void test03566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03566");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        int int16 = type10.getSort();
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray17);
        int int19 = type5.getSize();
        java.lang.String str20 = type5.toString();
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, list21, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.Type type25 = org.mockito.asm.Type.LONG_TYPE;
        int int26 = type25.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        int int42 = value41.getSize();
        org.mockito.asm.tree.analysis.Value value43 = simpleVerifier35.merge(value38, value41);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter27.copyOperation(abstractInsnNode28, value41);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = value58.getSize();
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier52.merge(value55, value58);
        int int61 = value58.getSize();
        org.mockito.asm.tree.analysis.Value value62 = basicInterpreter27.copyOperation(abstractInsnNode45, value58);
        boolean boolean63 = type25.equals((java.lang.Object) basicInterpreter27);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.LONG_TYPE;
        int int65 = type64.getSort();
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type64, list66, false);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = simpleVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str72 = type71.getDescriptor();
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier68.newValue(type71);
        int int74 = value73.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value75 = simpleVerifier23.copyOperation(abstractInsnNode24, value73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "C" + "'", str20, "C");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 7 + "'", int26 == 7);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 7 + "'", int65 == 7);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "S" + "'", str72, "S");
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
    }

    @Test
    public void test03567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03567");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I", (java.lang.Throwable) analyzerException3);
        java.lang.Throwable[] throwableArray5 = analyzerException3.getSuppressed();
        java.lang.Throwable[] throwableArray6 = analyzerException3.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: D");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;: expected (C)S, but found null", (java.lang.Throwable) analyzerException11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z", (java.lang.Throwable) analyzerException11);
        analyzerException7.addSuppressed((java.lang.Throwable) analyzerException11);
        java.lang.String str15 = analyzerException11.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: D" + "'", str15, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: D");
    }

    @Test
    public void test03568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03568");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("LS;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        int int7 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, false);
        java.lang.Class<?> wildcardClass10 = type5.getClass();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type12, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value16 = simpleVerifier14.newOperation(abstractInsnNode15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
    }

    @Test
    public void test03569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03569");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, false);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str18 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier10.newValue(type17);
        java.lang.Class<?> wildcardClass21 = type17.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "S" + "'", str18, "S");
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test03570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03570");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        int int18 = type0.getSize();
        java.lang.String str19 = type0.getClassName();
        java.lang.String str20 = type0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = type0.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "char" + "'", str19, "char");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "C" + "'", str20, "C");
    }

    @Test
    public void test03571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03571");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.Class<?> wildcardClass6 = type5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = type8.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray18);
        boolean boolean21 = type11.equals((java.lang.Object) '4');
        java.lang.String str22 = type11.toString();
        int int24 = type11.getOpcode(50);
        int int25 = type11.getSort();
        int int26 = type11.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type11, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str32 = type31.getClassName();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass35 = type34.getClass();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type37, list38, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, false);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str48 = type47.getDescriptor();
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier40.newValue(type47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        int int54 = type52.getSort();
        java.lang.Object obj55 = null;
        boolean boolean56 = type52.equals(obj55);
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier40.newValue(type52);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value58 = simpleVerifier28.unaryOperation(abstractInsnNode29, value57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(C)S" + "'", str19, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "S" + "'", str22, "S");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "S" + "'", str32, "S");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "S" + "'", str48, "S");
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(value57);
    }

    @Test
    public void test03572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03572");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = type5.getDescriptor();
        org.mockito.asm.Type type7 = type5.getElementType();
        java.lang.String str8 = type5.getClassName();
        int int9 = type5.getDimensions();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getObjectType("org/mockito/asm/Type");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type11, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str16 = type15.getDescriptor();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier13.newValue(type15);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass19);
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier13.newValue(type23);
        java.lang.String str25 = type23.getInternalName();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getObjectType("Z");
        java.lang.String str28 = type27.getClassName();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray42);
        int int44 = type29.getSize();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type46, false);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str54 = type53.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type62 };
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray63);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray63);
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type53, list66, false);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type73, list74, true);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray78 = new org.mockito.asm.Type[] { type77 };
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray78);
        boolean boolean81 = type71.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray82 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray82);
        java.lang.String str84 = type69.getDescriptor();
        int int85 = type69.getSort();
        java.util.List list86 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type69, list86, true);
        boolean boolean89 = type46.equals((java.lang.Object) type50);
        int int90 = type46.getSize();
        java.lang.String str91 = type46.getClassName();
        int int93 = type46.getOpcode(0);
        int int94 = type46.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier96 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type46, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier98 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type46, false);
        int int99 = type46.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.mockito.asm.Type" + "'", str8, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "S" + "'", str16, "S");
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "java/lang/Object" + "'", str21, "java/lang/Object");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Ljava/lang/Object;" + "'", str22, "Ljava/lang/Object;");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "java/lang/Object" + "'", str25, "java/lang/Object");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Z" + "'", str28, "Z");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(S)C" + "'", str43, "(S)C");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "boolean" + "'", str54, "boolean");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(C)S" + "'", str64, "(C)S");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(C)Z" + "'", str65, "(C)Z");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(C)S" + "'", str79, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(S)C" + "'", str83, "(S)C");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "C" + "'", str84, "C");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "char" + "'", str91, "char");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 2 + "'", int94 == 2);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 1 + "'", int99 == 1);
    }

    @Test
    public void test03573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03573");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        int int8 = type1.getSize();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list12, true);
        int int15 = type10.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        int int18 = type17.getDimensions();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type17, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.Value value22 = null;
        org.mockito.asm.tree.analysis.Value value23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value24 = simpleVerifier20.binaryOperation(abstractInsnNode21, value22, value23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test03574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03574");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, false);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str18 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier10.newValue(type17);
        int int21 = type17.getSize();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: boolean");
        java.lang.String str24 = type23.toString();
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type23, list25, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType("L(S)L(C)Z;;");
        org.mockito.asm.Type type32 = null;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str35 = type34.toString();
        int int36 = type34.getDimensions();
        org.mockito.asm.Type type37 = type34.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type37, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter43 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter43.copyOperation(abstractInsnNode44, value57);
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier39.merge(value42, value57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Object) "L(S)L(C)Z;;", value42);
        int int63 = value42.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value64 = simpleVerifier27.copyOperation(abstractInsnNode28, value42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "S" + "'", str18, "S");
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: boolean;" + "'", str24, "Lorg.mockito.asm.tree.analysis.AnalyzerException: boolean;");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str35, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
    }

    @Test
    public void test03575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03575");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("Ldouble;");
        java.lang.Throwable[] throwableArray2 = analyzerException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test03576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03576");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str2 = type1.getDescriptor();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        boolean boolean15 = type5.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type5 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray16);
        java.lang.String str18 = type3.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        java.lang.String str26 = type22.getDescriptor();
        int int28 = type22.getOpcode((int) (short) 0);
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, list29, true);
        int int32 = type22.getSort();
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type22, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        int int53 = value52.getSize();
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier46.merge(value49, value52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        int int72 = value71.getSize();
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier65.merge(value68, value71);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) 0, value71);
        analyzerException55.addSuppressed((java.lang.Throwable) analyzerException74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException55);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("S");
        boolean boolean81 = type78.equals((java.lang.Object) analyzerException80);
        analyzerException55.addSuppressed((java.lang.Throwable) analyzerException80);
        boolean boolean83 = type22.equals((java.lang.Object) analyzerException55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: g.mockito.asm.Type: expected true, but found I", (java.lang.Throwable) analyzerException55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException90 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException91);
        java.lang.Throwable[] throwableArray93 = analyzerException92.getSuppressed();
        analyzerException86.addSuppressed((java.lang.Throwable) analyzerException92);
        analyzerException84.addSuppressed((java.lang.Throwable) analyzerException92);
        java.lang.String str96 = analyzerException92.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "I" + "'", str2, "I");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)S" + "'", str13, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(S)C" + "'", str17, "(S)C");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: " + "'", str96, "org.mockito.asm.tree.analysis.AnalyzerException: ");
    }

    @Test
    public void test03577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03577");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        boolean boolean31 = type21.equals((java.lang.Object) '4');
        boolean boolean33 = type21.equals((java.lang.Object) 193);
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier19.newValue(type21);
        int int36 = type21.getOpcode(126);
        java.lang.String str37 = type21.toString();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        int int45 = type39.getSort();
        java.lang.String str46 = type39.toString();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type47, list48, false);
        boolean boolean52 = type47.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = type56.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, false);
        java.lang.String str61 = type54.toString();
        org.mockito.asm.Type[] typeArray63 = org.mockito.asm.Type.getArgumentTypes("(C)S");
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray63);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray63);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = type21.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 126 + "'", int36 == 126);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "S" + "'", str37, "S");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "S" + "'", str46, "S");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "LC;" + "'", str61, "LC;");
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(C)LC;" + "'", str64, "(C)LC;");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(C)S" + "'", str65, "(C)S");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(C)S" + "'", str66, "(C)S");
    }

    @Test
    public void test03578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03578");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("double");
        java.lang.String str2 = type1.getDescriptor();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        int int9 = type7.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, false);
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list12, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        java.lang.String str25 = type21.getDescriptor();
        int int27 = type21.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        int int42 = type36.getSort();
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray43);
        java.lang.String str45 = type31.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type31, false);
        org.mockito.asm.Type type48 = null;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        int int55 = type53.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        int int63 = type57.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type57, false);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier65.newValue(type66);
        int int68 = value67.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier51.merge(value67, value71);
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier14.merge(value17, value67);
        boolean boolean74 = type1.equals((java.lang.Object) value17);
        java.lang.String str75 = type1.getDescriptor();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str77 = type76.getDescriptor();
        java.lang.String str78 = type76.getDescriptor();
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type76, list79, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value83 = simpleVerifier81.newOperation(abstractInsnNode82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Ldouble;" + "'", str2, "Ldouble;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(S)C" + "'", str44, "(S)C");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Ldouble;" + "'", str75, "Ldouble;");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "I" + "'", str77, "I");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "I" + "'", str78, "I");
    }

    @Test
    public void test03579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03579");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("LC;");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        int int17 = type2.getSize();
        java.lang.String str18 = type2.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str22 = type21.getClassName();
        org.mockito.asm.tree.analysis.Value value23 = simpleVerifier20.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str28 = type27.getDescriptor();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str30 = type29.getClassName();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        int int47 = value46.getSize();
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier40.merge(value43, value46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value48);
        boolean boolean50 = type31.equals((java.lang.Object) analyzerException49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        boolean boolean63 = type53.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray64);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray64);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray64);
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list68, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("double", (java.lang.Object) 7, value75);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;", (java.lang.Object) false, value75);
        int int78 = value75.getSize();
        int int79 = value75.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value80 = simpleVerifier20.unaryOperation(abstractInsnNode24, value75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "long" + "'", str22, "long");
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "S" + "'", str28, "S");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "double" + "'", str30, "double");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)S" + "'", str61, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(S)C" + "'", str65, "(S)C");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(S)V" + "'", str66, "(S)V");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(S)D" + "'", str67, "(S)D");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
    }

    @Test
    public void test03580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03580");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list37, false);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        boolean boolean52 = type42.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray53);
        java.lang.String str55 = type40.getDescriptor();
        int int56 = type40.getSort();
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type40, list57, true);
        boolean boolean60 = type17.equals((java.lang.Object) type21);
        int int61 = type17.getSize();
        java.lang.String str62 = type17.getClassName();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        int int68 = type66.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, false);
        java.lang.Class<?> wildcardClass71 = type66.getClass();
        boolean boolean72 = type17.equals((java.lang.Object) wildcardClass71);
        int int73 = type17.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)S" + "'", str50, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(S)C" + "'", str54, "(S)C");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "char" + "'", str62, "char");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
    }

    @Test
    public void test03581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03581");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType("[Ljava/lang/Throwable;");
        java.lang.String str6 = type5.toString();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, list7, false);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getReturnType("Ljava/lang/Object;");
        org.mockito.asm.tree.analysis.Value value12 = simpleVerifier9.newValue(type11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;: expected I, but found I");
        java.lang.String str15 = type14.getDescriptor();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier9.newValue(type14);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type19, true);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str23 = type22.getDescriptor();
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("double", (java.lang.Object) 7, value29);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass33 = type32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass33);
        java.lang.String str35 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getObjectType("Z");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        int int49 = type43.getSort();
        int int50 = type43.getSize();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int53 = type52.getSort();
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type52, list54, true);
        int int57 = type52.getDimensions();
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier41.newValue(type52);
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier21.merge(value29, value58);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value60 = simpleVerifier9.copyOperation(abstractInsnNode17, value58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "S" + "'", str3, "S");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[Ljava/lang/Throwable;" + "'", str6, "[Ljava/lang/Throwable;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str15, "Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "I" + "'", str23, "I");
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str34, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str35, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4 + "'", int49 == 4);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(value59);
    }

    @Test
    public void test03582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03582");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("L(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;;");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03583");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        int int17 = type2.getSize();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type19, false);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str27 = type26.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray36);
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type26, list39, false);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        boolean boolean54 = type44.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray55);
        java.lang.String str57 = type42.getDescriptor();
        int int58 = type42.getSort();
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type42, list59, true);
        boolean boolean62 = type19.equals((java.lang.Object) type23);
        int int63 = type19.getSize();
        java.lang.String str64 = type19.getClassName();
        int int66 = type19.getOpcode(0);
        java.lang.String str67 = type19.toString();
        int int68 = type19.getSort();
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type19, list69, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        int int83 = type73.getOpcode(136);
        java.lang.String str84 = type73.getClassName();
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type73, list85, false);
        org.mockito.asm.Type type88 = type1.getElementType();
        int int89 = type88.getSort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str90 = type88.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "boolean" + "'", str27, "boolean");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)Z" + "'", str38, "(C)Z");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(S)C" + "'", str56, "(S)C");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "C" + "'", str57, "C");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "char" + "'", str64, "char");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "C" + "'", str67, "C");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)S" + "'", str81, "(C)S");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 136 + "'", int83 == 136);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "short" + "'", str84, "short");
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
    }

    @Test
    public void test03584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03584");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        int int31 = type29.getSort();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        int int43 = type37.getSort();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier35.newValue(type37);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, false);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str52 = type51.getDescriptor();
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier35.newValue(type51);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getReturnType("S");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter58 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode59 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter58.copyOperation(abstractInsnNode59, value72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) "S", value75);
        int int77 = value75.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier27.merge(value54, value75);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value79 = simpleVerifier19.unaryOperation(abstractInsnNode20, value75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "S" + "'", str52, "S");
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
    }

    @Test
    public void test03585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03585");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        int int24 = type18.getSort();
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray25);
        java.lang.String str27 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type13, false);
        org.mockito.asm.Type type30 = null;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type30, list31, true);
        int int34 = type3.getSort();
        java.lang.String str35 = type3.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(S)C" + "'", str26, "(S)C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
    }

    @Test
    public void test03586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03586");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("[Ljava/lang/Throwable;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("boolean");
        java.lang.String str4 = type3.getClassName();
        java.lang.Class<?> wildcardClass5 = type3.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        boolean boolean7 = type1.equals((java.lang.Object) type6);
        java.lang.String str8 = type6.toString();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass11 = type10.getClass();
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        java.lang.String str13 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type15 = type14.getElementType();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, false);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str23 = type22.getDescriptor();
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier21.newValue(type22);
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type22, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray41);
        java.lang.String str43 = type28.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        java.lang.String str51 = type47.getDescriptor();
        int int53 = type47.getOpcode((int) (short) 0);
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type47, list54, true);
        int int57 = type28.getSort();
        java.lang.String str58 = type28.toString();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str60 = type59.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type68 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray69);
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray69);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray69);
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier27.newValue(type28);
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type28, list74, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value78 = simpleVerifier76.newOperation(abstractInsnNode77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "boolean" + "'", str4, "boolean");
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str12, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str13, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "S" + "'", str23, "S");
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(S)C" + "'", str42, "(S)C");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "C" + "'", str43, "C");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "boolean" + "'", str60, "boolean");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(C)S" + "'", str70, "(C)S");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)Z" + "'", str71, "(C)Z");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)C" + "'", str72, "(C)C");
        org.junit.Assert.assertNotNull(value73);
    }

    @Test
    public void test03587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03587");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        java.lang.String str3 = type1.toString();
        int int4 = type1.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean8 = type6.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type10, list12, false);
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list15, false);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType("B");
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier17.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        boolean boolean33 = type23.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray34);
        int int36 = type21.getSize();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type38, false);
        boolean boolean42 = type38.equals((java.lang.Object) 23);
        java.lang.String str43 = type38.getClassName();
        java.lang.String str44 = type38.getDescriptor();
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier17.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        java.util.List list47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value48 = simpleVerifier17.naryOperation(abstractInsnNode46, list47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "S" + "'", str3, "S");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)C" + "'", str35, "(S)C");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "char" + "'", str43, "char");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
        org.junit.Assert.assertNotNull(value45);
    }

    @Test
    public void test03588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03588");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;: expected I, but found I");
        org.mockito.asm.Type type2 = type1.getElementType();
        java.lang.String str3 = type1.getInternalName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        int int7 = type5.getSort();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        int int19 = type13.getSort();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier11.newValue(type13);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        int int23 = type21.getOpcode(84);
        int int25 = type21.getOpcode(136);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type21, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type13, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getObjectType("(C)Lg/mockito/asm/Type;");
        org.mockito.asm.Type type32 = type31.getElementType();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier29.newValue(type31);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value35 = simpleVerifier29.newOperation(abstractInsnNode34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "rg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier" + "'", str3, "rg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 84 + "'", int23 == 84);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
    }

    @Test
    public void test03589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03589");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str3 = type2.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier13.merge(value16, value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value21);
        boolean boolean23 = type4.equals((java.lang.Object) analyzerException22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        boolean boolean36 = type26.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray37);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        int int54 = value53.getSize();
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier47.merge(value50, value53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Object) type2, value50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Throwable) analyzerException56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/Type;");
        analyzerException57.addSuppressed((java.lang.Throwable) analyzerException59);
        java.lang.Throwable[] throwableArray61 = analyzerException57.getSuppressed();
        java.lang.Class<?> wildcardClass62 = analyzerException57.getClass();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass62);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType("Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, false);
        int int69 = type65.getOpcode((int) '#');
        java.lang.Class<?> wildcardClass70 = type65.getClass();
        java.lang.String str71 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass70);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "double" + "'", str3, "double");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)S" + "'", str34, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)C" + "'", str38, "(S)C");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)V" + "'", str39, "(S)V");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)D" + "'", str40, "(S)D");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 39 + "'", int69 == 39);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org/mockito/asm/Type" + "'", str71, "org/mockito/asm/Type");
    }

    @Test
    public void test03590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03590");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        java.lang.String str3 = type1.toString();
        int int4 = type1.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean8 = type6.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type10, list12, false);
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list15, false);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType("B");
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier17.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        boolean boolean33 = type23.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray34);
        int int36 = type21.getSize();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type38, false);
        boolean boolean42 = type38.equals((java.lang.Object) 23);
        java.lang.String str43 = type38.getClassName();
        java.lang.String str44 = type38.getDescriptor();
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier17.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value47 = simpleVerifier17.newOperation(abstractInsnNode46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "S" + "'", str3, "S");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)C" + "'", str35, "(S)C");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "char" + "'", str43, "char");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
        org.junit.Assert.assertNotNull(value45);
    }

    @Test
    public void test03591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03591");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        int int40 = value39.getSize();
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier33.merge(value36, value39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException42);
        java.lang.Throwable[] throwableArray44 = analyzerException43.getSuppressed();
        java.lang.Throwable[] throwableArray45 = analyzerException43.getSuppressed();
        analyzerException23.addSuppressed((java.lang.Throwable) analyzerException43);
        analyzerException19.addSuppressed((java.lang.Throwable) analyzerException43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;;", (java.lang.Throwable) analyzerException43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.SimpleVerifier", (java.lang.Throwable) analyzerException43);
        java.lang.String str50 = analyzerException49.toString();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.SimpleVerifier" + "'", str50, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.SimpleVerifier");
    }

    @Test
    public void test03592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03592");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/Type;");
        java.lang.String str2 = analyzerException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;" + "'", str2, "org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03593");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.Class<?> wildcardClass6 = type5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = type8.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray18);
        boolean boolean21 = type11.equals((java.lang.Object) '4');
        java.lang.String str22 = type11.toString();
        int int24 = type11.getOpcode(50);
        int int25 = type11.getSort();
        int int26 = type11.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type11, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value30 = simpleVerifier28.newOperation(abstractInsnNode29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(C)S" + "'", str19, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "S" + "'", str22, "S");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test03594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03594");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        int int18 = type0.getSize();
        java.lang.String str19 = type0.toString();
        int int20 = type0.getSort();
        int int22 = type0.getOpcode(113);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getReturnType("(S)D");
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type24, list25, false);
        int int28 = type0.getSort();
        java.lang.String str29 = type0.toString();
        int int30 = type0.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 113 + "'", int22 == 113);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
    }

    @Test
    public void test03595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03595");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        java.lang.String str23 = type19.getDescriptor();
        int int25 = type19.getOpcode((int) (short) 0);
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list26, true);
        java.lang.String str29 = type0.toString();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int32 = type31.getSort();
        java.lang.String str33 = type31.toString();
        org.mockito.asm.Type type34 = type31.getElementType();
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type34, list35, false);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        boolean boolean50 = type40.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray51);
        java.lang.String str53 = type38.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        java.lang.String str61 = type57.getDescriptor();
        int int63 = type57.getOpcode((int) (short) 0);
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type57, list64, true);
        int int67 = type38.getSort();
        java.lang.String str68 = type38.toString();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str70 = type69.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type74, list75, true);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type78 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray79);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray79);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray79);
        java.lang.String str83 = type38.toString();
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier37.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value86 = simpleVerifier37.newOperation(abstractInsnNode85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str33, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)S" + "'", str48, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(S)C" + "'", str52, "(S)C");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "C" + "'", str53, "C");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "C" + "'", str61, "C");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "C" + "'", str68, "C");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "boolean" + "'", str70, "boolean");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(C)S" + "'", str80, "(C)S");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)Z" + "'", str81, "(C)Z");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(C)C" + "'", str82, "(C)C");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "C" + "'", str83, "C");
        org.junit.Assert.assertNotNull(value84);
    }

    @Test
    public void test03596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03596");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("Ldouble;");
        org.mockito.asm.Type type2 = type1.getElementType();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        int int32 = value31.getSize();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier25.merge(value28, value31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        int int47 = value46.getSize();
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier40.merge(value43, value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        int int62 = value61.getSize();
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier55.merge(value58, value61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier40.merge(value61, value78);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier10.merge(value33, value78);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.LONG_TYPE;
        int int82 = type81.getSort();
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier10.newValue(type81);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getType("S");
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier10.newValue(type85);
        java.lang.String str87 = type85.getDescriptor();
        java.util.List list88 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type85, list88, false);
        boolean boolean91 = type2.equals((java.lang.Object) simpleVerifier90);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode92 = null;
        org.mockito.asm.tree.analysis.Value value93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value94 = simpleVerifier90.copyOperation(abstractInsnNode92, value93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 7 + "'", int82 == 7);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "S" + "'", str87, "S");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test03597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03597");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray20);
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type10, list23, false);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray39);
        java.lang.String str41 = type26.getDescriptor();
        int int42 = type26.getSort();
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type26, list43, true);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter5.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) analyzerException4, value46);
        java.lang.Throwable[] throwableArray48 = analyzerException4.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I: expected org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I, but found I", (java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Throwable) analyzerException4);
        java.lang.Throwable[] throwableArray51 = analyzerException50.getSuppressed();
        java.lang.Throwable[] throwableArray52 = analyzerException50.getSuppressed();
        java.lang.String str53 = analyzerException50.toString();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean" + "'", str11, "boolean");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)Z" + "'", str22, "(C)Z");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str53, "org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test03598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03598");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        int int9 = type3.getSort();
        java.lang.String str10 = type3.toString();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type11, list12, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        int int22 = type16.getSort();
        java.lang.String str23 = type16.getClassName();
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier14.newValue(type16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) "org/mockito/asm/Type", value24);
        java.lang.String str26 = analyzerException25.toString();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "S" + "'", str10, "S");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "short" + "'", str23, "short");
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: : expected org/mockito/asm/Type, but found I" + "'", str26, "org.mockito.asm.tree.analysis.AnalyzerException: : expected org/mockito/asm/Type, but found I");
    }

    @Test
    public void test03599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03599");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value7 = simpleVerifier5.newOperation(abstractInsnNode6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
    }

    @Test
    public void test03600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03600");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.getClassName();
        java.lang.String str9 = type1.getDescriptor();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        int int18 = type12.getSort();
        java.lang.String str19 = type12.toString();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type20, list21, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        int int31 = type25.getSort();
        java.lang.String str32 = type25.getClassName();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier23.newValue(type25);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type25, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, false);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getObjectType("Ldouble;");
        org.mockito.asm.Type type40 = type39.getElementType();
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier37.newValue(type40);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value43 = simpleVerifier37.newOperation(abstractInsnNode42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "short" + "'", str8, "short");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "S" + "'", str9, "S");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "S" + "'", str19, "S");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "short" + "'", str32, "short");
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
    }

    @Test
    public void test03601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03601");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str12 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str13 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/Type" + "'", str6, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/Type" + "'", str10, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/Type" + "'", str11, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org/mockito/asm/Type" + "'", str12, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str13, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03602");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("boolean");
        java.lang.String str2 = type1.getClassName();
        java.lang.Class<?> wildcardClass3 = type1.getClass();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        int int7 = type5.getOpcode((int) (byte) 0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "boolean" + "'", str2, "boolean");
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
    }

    @Test
    public void test03603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03603");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)L(C)Z;");
        java.lang.String str2 = type1.getInternalName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "(C)L(C)Z;" + "'", str2, "(C)L(C)Z;");
    }

    @Test
    public void test03604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03604");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: (S)F");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03605");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        boolean boolean17 = type7.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray18);
        int int20 = type5.getSize();
        java.lang.String str21 = type5.toString();
        int int22 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type5, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int28 = type26.getOpcode((int) (byte) 10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        int int36 = type30.getSort();
        int int37 = type30.getSize();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int40 = type39.getSort();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type39, list41, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type39, true);
        int int46 = type26.getDimensions();
        org.mockito.asm.Type type47 = type26.getElementType();
        java.lang.Class<?> wildcardClass48 = type47.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        boolean boolean50 = type5.equals((java.lang.Object) str49);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/Type" + "'", str3, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(S)C" + "'", str19, "(S)C");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "C" + "'", str21, "C");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 14 + "'", int28 == 14);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 4 + "'", int36 == 4);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test03606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03606");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("L(S)V;");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03607");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/SimpleVerifier");
        java.lang.String str2 = analyzerException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/tree/analysis/SimpleVerifier" + "'", str2, "org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/tree/analysis/SimpleVerifier");
    }

    @Test
    public void test03608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03608");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("B");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str8 = type7.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray17);
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type7, list20, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        boolean boolean35 = type25.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray36);
        java.lang.String str38 = type23.getDescriptor();
        int int39 = type23.getSort();
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type23, list40, true);
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type23, list43, false);
        int int46 = type1.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "B" + "'", str2, "B");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean" + "'", str8, "boolean");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)S" + "'", str18, "(C)S");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(C)Z" + "'", str19, "(C)Z");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)S" + "'", str33, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(S)C" + "'", str37, "(S)C");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
    }

    @Test
    public void test03609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03609");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)L(C)Z;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        boolean boolean13 = type3.equals((java.lang.Object) '4');
        boolean boolean15 = type3.equals((java.lang.Object) 193);
        java.lang.String str16 = type3.getDescriptor();
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list17, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str22 = type21.getDescriptor();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str24 = type23.getClassName();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        int int41 = value40.getSize();
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier34.merge(value37, value40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value42);
        boolean boolean44 = type25.equals((java.lang.Object) analyzerException43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        boolean boolean57 = type47.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray58);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray58);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray58);
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list62, false);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str67 = type66.toString();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier64.newValue(type66);
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type66, list69, false);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getObjectType("(S)L(C)Z;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type75, type77, list78, true);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray82 = new org.mockito.asm.Type[] { type81 };
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type75, typeArray82);
        boolean boolean85 = type75.equals((java.lang.Object) '4');
        boolean boolean87 = type75.equals((java.lang.Object) 193);
        java.lang.String str88 = type75.getDescriptor();
        java.util.List list89 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier91 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list89, false);
        java.lang.String str92 = type73.getClassName();
        org.mockito.asm.tree.analysis.Value value93 = simpleVerifier71.newValue(type73);
        int int94 = value93.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(C)S" + "'", str11, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "S" + "'", str16, "S");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "S" + "'", str22, "S");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "double" + "'", str24, "double");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(S)C" + "'", str59, "(S)C");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)V" + "'", str60, "(S)V");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(S)D" + "'", str61, "(S)D");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L(C)Z;" + "'", str67, "L(C)Z;");
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(C)S" + "'", str83, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "S" + "'", str88, "S");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(S)L(C)Z;" + "'", str92, "(S)L(C)Z;");
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test03610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03610");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int2 = type1.getSort();
        int int4 = type1.getOpcode(113);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        java.lang.String str17 = type6.toString();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        boolean boolean30 = type20.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray31);
        int int33 = type18.getSize();
        boolean boolean35 = type18.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type18, false);
        java.lang.String str38 = type18.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type18, false);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        int int46 = type44.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, false);
        java.lang.String str49 = type42.toString();
        java.lang.String str50 = type42.toString();
        org.mockito.asm.tree.analysis.Value value51 = simpleVerifier40.newValue(type42);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value53 = simpleVerifier40.newOperation(abstractInsnNode52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 117 + "'", int4 == 117);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "S" + "'", str17, "S");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)S" + "'", str28, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LC;" + "'", str49, "LC;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "LC;" + "'", str50, "LC;");
        org.junit.Assert.assertNotNull(value51);
    }

    @Test
    public void test03611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03611");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)C");
        java.lang.Class<?> wildcardClass2 = analyzerException1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str3, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str4, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str5, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str6, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str7, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test03612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03612");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray20);
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type10, list23, false);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray39);
        java.lang.String str41 = type26.getDescriptor();
        int int42 = type26.getSort();
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type26, list43, true);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter5.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) analyzerException4, value46);
        java.lang.Throwable[] throwableArray48 = analyzerException4.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I: expected org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I, but found I", (java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Throwable) analyzerException4);
        java.lang.Throwable[] throwableArray51 = analyzerException50.getSuppressed();
        java.lang.Throwable[] throwableArray52 = analyzerException50.getSuppressed();
        java.lang.Throwable[] throwableArray53 = analyzerException50.getSuppressed();
        java.lang.Throwable[] throwableArray54 = analyzerException50.getSuppressed();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean" + "'", str11, "boolean");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)Z" + "'", str22, "(C)Z");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray54);
    }

    @Test
    public void test03613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03613");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: boolean");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03614");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        boolean boolean9 = type1.equals((java.lang.Object) 192);
        int int10 = type1.getSort();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.LONG_TYPE;
        int int16 = type15.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter17 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode18 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        int int32 = value31.getSize();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier25.merge(value28, value31);
        org.mockito.asm.tree.analysis.Value value34 = basicInterpreter17.copyOperation(abstractInsnNode18, value31);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        int int49 = value48.getSize();
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier42.merge(value45, value48);
        int int51 = value48.getSize();
        org.mockito.asm.tree.analysis.Value value52 = basicInterpreter17.copyOperation(abstractInsnNode35, value48);
        boolean boolean53 = type15.equals((java.lang.Object) basicInterpreter17);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.LONG_TYPE;
        int int55 = type54.getSort();
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type54, list56, false);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type60, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type60, true);
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier14.newValue(type15);
        boolean boolean66 = type1.equals((java.lang.Object) value65);
        int int68 = type1.getOpcode(134);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = type1.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7 + "'", int16 == 7);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 7 + "'", int55 == 7);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 134 + "'", int68 == 134);
    }

    @Test
    public void test03615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03615");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        int int33 = value32.getSize();
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier26.merge(value29, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        boolean boolean53 = type43.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type43, true);
        org.mockito.asm.Type type56 = null;
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        int int74 = value73.getSize();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier67.merge(value70, value73);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier55.merge(value60, value75);
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter2.merge(value29, value60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)B", (java.lang.Object) 141, value77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)C");
        analyzerException78.addSuppressed((java.lang.Throwable) analyzerException80);
        java.lang.String str82 = analyzerException80.toString();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)S" + "'", str51, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (C)C" + "'", str82, "org.mockito.asm.tree.analysis.AnalyzerException: (C)C");
    }

    @Test
    public void test03616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03616");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, false);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str14 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.Value value15 = simpleVerifier12.newValue(type13);
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type13, list16, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type22, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getObjectType("B");
        java.lang.String str30 = type29.getClassName();
        int int31 = type29.getSort();
        java.lang.String str32 = type29.getInternalName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = type34.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        int int44 = type38.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type38, false);
        java.lang.Class<?> wildcardClass47 = type38.getClass();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type48, true);
        boolean boolean51 = type13.equals((java.lang.Object) simpleVerifier50);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode52 = null;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getObjectType("(S)L(C)Z;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type62 };
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray63);
        boolean boolean66 = type56.equals((java.lang.Object) '4');
        boolean boolean68 = type56.equals((java.lang.Object) 193);
        java.lang.String str69 = type56.getDescriptor();
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list70, false);
        org.mockito.asm.Type type73 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type75, type77, list78, true);
        int int81 = type75.getSort();
        java.lang.String str82 = type75.getClassName();
        java.lang.String str83 = type75.getDescriptor();
        java.util.List list84 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list84, false);
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier72.newValue(type75);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value88 = simpleVerifier50.copyOperation(abstractInsnNode52, value87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "S" + "'", str14, "S");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "B" + "'", str30, "B");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "B" + "'", str32, "B");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(C)S" + "'", str64, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "S" + "'", str69, "S");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 4 + "'", int81 == 4);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "short" + "'", str82, "short");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "S" + "'", str83, "S");
        org.junit.Assert.assertNotNull(value87);
    }

    @Test
    public void test03617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03617");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: I: expected null, but found I");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 78");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03618");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type2 = type1.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test03619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03619");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        int int6 = type4.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, false);
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list9, false);
        java.lang.String str12 = type2.getInternalName();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        java.lang.String str28 = type13.getDescriptor();
        int int29 = type13.getSort();
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type13, list30, true);
        java.lang.Class<?> wildcardClass33 = simpleVerifier32.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        boolean boolean47 = type37.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray48);
        int int50 = type35.getSize();
        boolean boolean52 = type35.equals((java.lang.Object) 181);
        java.lang.String str53 = type35.getClassName();
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type35, list54, true);
        java.lang.String str57 = type35.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass61 = type60.getClass();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        java.lang.String str65 = type64.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type69, list70, true);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray74);
        boolean boolean77 = type67.equals((java.lang.Object) '4');
        java.lang.String str78 = type67.toString();
        int int79 = type67.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type67, true);
        org.mockito.asm.tree.analysis.Value value82 = simpleVerifier58.newValue(type64);
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type64, list83, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode86 = null;
        java.util.List list87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value88 = simpleVerifier85.naryOperation(abstractInsnNode86, list87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "C" + "'", str12, "C");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "C" + "'", str28, "C");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)S" + "'", str45, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(S)C" + "'", str49, "(S)C");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "char" + "'", str53, "char");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "char" + "'", str57, "char");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str65, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(C)S" + "'", str75, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "S" + "'", str78, "S");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 4 + "'", int79 == 4);
        org.junit.Assert.assertNotNull(value82);
    }

    @Test
    public void test03620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03620");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int4 = type3.getSort();
        java.lang.String str5 = type3.toString();
        org.mockito.asm.Type type6 = type3.getElementType();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list7, true);
        java.lang.String str10 = type1.getClassName();
        java.lang.String str11 = type1.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)Z" + "'", str10, "(C)Z");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "L(C)Z;" + "'", str11, "L(C)Z;");
    }

    @Test
    public void test03621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03621");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        int int24 = type18.getSort();
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray25);
        java.lang.String str27 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type13, false);
        org.mockito.asm.Type type30 = null;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type30, list31, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I: expected org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I, but found I");
        int int36 = type35.getSort();
        java.lang.String str37 = type35.getDescriptor();
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier33.newValue(type35);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode39 = null;
        java.util.List list40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value41 = simpleVerifier33.naryOperation(abstractInsnNode39, list40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(S)C" + "'", str26, "(S)C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 4 + "'", int36 == 4);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "S" + "'", str37, "S");
        org.junit.Assert.assertNotNull(value38);
    }

    @Test
    public void test03622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03622");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("C");
        int int3 = type1.getOpcode(160);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type6 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray17);
        int int19 = type4.getSize();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type21, false);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type38, true);
        boolean boolean41 = type24.equals((java.lang.Object) simpleVerifier40);
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type24, list42, false);
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list45, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        java.lang.String str50 = type49.getDescriptor();
        org.mockito.asm.tree.analysis.Value value51 = simpleVerifier47.newValue(type49);
        java.lang.Class<?> wildcardClass52 = value51.getClass();
        java.lang.String str53 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass52);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 160 + "'", int3 == 160);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str50, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str53, "org/mockito/asm/tree/analysis/BasicValue");
    }

    @Test
    public void test03623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03623");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str6 = type5.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray15);
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type5, list18, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        boolean boolean33 = type23.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray34);
        java.lang.String str36 = type21.getDescriptor();
        int int37 = type21.getSort();
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type21, list38, true);
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter0.newValue(type21);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type[] typeArray44 = org.mockito.asm.Type.getArgumentTypes("(S)C");
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray44);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type42, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        java.util.List list49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value50 = simpleVerifier47.naryOperation(abstractInsnNode48, list49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "boolean" + "'", str6, "boolean");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)Z" + "'", str17, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)C" + "'", str35, "(S)C");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "C" + "'", str36, "C");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(S)F" + "'", str45, "(S)F");
    }

    @Test
    public void test03624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03624");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)C");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = type1.getElementType();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass7 = type6.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type13, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode18 = null;
        java.util.List list19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value20 = simpleVerifier17.naryOperation(abstractInsnNode18, list19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(S)C" + "'", str3, "(S)C");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str9, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
    }

    @Test
    public void test03625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03625");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        int int1 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        int int36 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter2.copyOperation(abstractInsnNode20, value33);
        boolean boolean38 = type0.equals((java.lang.Object) basicInterpreter2);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        int int40 = type39.getSort();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type39, list41, false);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str47 = type46.getDescriptor();
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier43.newValue(type46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        int int53 = type51.getOpcode(8192);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, true);
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier43.newValue(type51);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode57 = null;
        java.util.List list58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value59 = simpleVerifier43.naryOperation(abstractInsnNode57, list58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7 + "'", int1 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "S" + "'", str47, "S");
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8196 + "'", int53 == 8196);
        org.junit.Assert.assertNotNull(value56);
    }

    @Test
    public void test03626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03626");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier19.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        int int25 = type23.getOpcode(84);
        int int26 = type23.getSize();
        org.mockito.asm.tree.analysis.Value value27 = simpleVerifier19.newValue(type23);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type28 = type23.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 84 + "'", int25 == 84);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(value27);
    }

    @Test
    public void test03627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03627");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("float");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test03628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03628");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.Value value15 = simpleVerifier7.merge(value10, value13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        int int29 = value28.getSize();
        org.mockito.asm.tree.analysis.Value value30 = simpleVerifier22.merge(value25, value28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier37.merge(value40, value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = value58.getSize();
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier52.merge(value55, value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        int int74 = value73.getSize();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier67.merge(value70, value73);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier37.merge(value58, value75);
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier7.merge(value30, value75);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.LONG_TYPE;
        int int79 = type78.getSort();
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier7.newValue(type78);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType("S");
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier7.newValue(type82);
        java.lang.String str84 = type82.getDescriptor();
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type82, list85, false);
        int int88 = type82.getSize();
        int int90 = type82.getOpcode(24);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        java.lang.String str93 = type92.getDescriptor();
        boolean boolean94 = type82.equals((java.lang.Object) type92);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 7 + "'", int79 == 7);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "S" + "'", str84, "S");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 24 + "'", int90 == 24);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;" + "'", str93, "Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test03629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03629");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type6, true);
        java.lang.Throwable throwable11 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        int int31 = value30.getSize();
        org.mockito.asm.tree.analysis.Value value32 = simpleVerifier24.merge(value27, value30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        int int47 = value46.getSize();
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier40.merge(value43, value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        int int62 = value61.getSize();
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier55.merge(value58, value61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier40.merge(value61, value78);
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier13.merge(value32, value79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException12, value80);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type83, true);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str87 = type86.getDescriptor();
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier85.newValue(type86);
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier8.merge(value80, value88);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str91 = type90.getClassName();
        int int93 = type90.getOpcode(0);
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier8.newValue(type90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException95 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) analyzerException4, value94);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException96 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)C", (java.lang.Throwable) analyzerException95);
        java.lang.Throwable[] throwableArray97 = analyzerException96.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException98 = new org.mockito.asm.tree.analysis.AnalyzerException("Lboolean;", (java.lang.Throwable) analyzerException96);
        java.lang.Throwable[] throwableArray99 = analyzerException96.getSuppressed();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "I" + "'", str87, "I");
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "double" + "'", str91, "double");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 3 + "'", int93 == 3);
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertNotNull(throwableArray97);
        org.junit.Assert.assertNotNull(throwableArray99);
    }

    @Test
    public void test03630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03630");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        int int17 = type3.getSize();
        java.lang.String str18 = type3.toString();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass21 = type20.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type24, list25, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        int int41 = value40.getSize();
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier34.merge(value37, value40);
        int int43 = value40.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        int int57 = value56.getSize();
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier50.merge(value53, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        int int72 = value71.getSize();
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier65.merge(value68, value71);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type75, type77, list78, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        int int87 = value86.getSize();
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier80.merge(value83, value86);
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier50.merge(value71, value88);
        org.mockito.asm.tree.analysis.Value value90 = simpleVerifier27.merge(value40, value71);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: boolean");
        int int94 = type92.getOpcode(124);
        org.mockito.asm.tree.analysis.Value value95 = simpleVerifier27.newValue(type92);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode96 = null;
        java.util.List list97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value98 = simpleVerifier27.naryOperation(abstractInsnNode96, list97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str23, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 128 + "'", int94 == 128);
        org.junit.Assert.assertNotNull(value95);
    }

    @Test
    public void test03631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03631");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("Ldouble;");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str3 = type2.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        int int22 = type16.getSort();
        boolean boolean24 = type16.equals((java.lang.Object) 192);
        int int25 = type16.getSort();
        java.lang.String str26 = type16.toString();
        java.lang.String str27 = type16.getDescriptor();
        int int28 = type16.getSize();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass31 = type30.getClass();
        java.lang.String str32 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass31);
        boolean boolean34 = type16.equals((java.lang.Object) type33);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type16, false);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass40 = type39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.asm.tree.analysis.Value value44 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type43, value44);
        org.mockito.asm.Type type46 = type43.getElementType();
        int int47 = type46.getSort();
        java.lang.String str48 = type46.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type46, false);
        java.lang.Class<?> wildcardClass51 = type16.getClass();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type52, false);
        int int55 = type1.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "boolean" + "'", str3, "boolean");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)S" + "'", str13, "(C)S");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)Z" + "'", str14, "(C)Z");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "S" + "'", str26, "S");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "S" + "'", str27, "S");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org/mockito/asm/Type" + "'", str32, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str41, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str42, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Lg/mockito/asm/Type;" + "'", str48, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
    }

    @Test
    public void test03632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03632");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("S");
        boolean boolean5 = type2.equals((java.lang.Object) analyzerException4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("[Ljava/lang/Throwable;", (java.lang.Throwable) analyzerException4);
        java.lang.String str7 = analyzerException4.toString();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S" + "'", str7, "org.mockito.asm.tree.analysis.AnalyzerException: S");
    }

    @Test
    public void test03633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03633");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        int int17 = type3.getSize();
        java.lang.String str18 = type3.toString();
        boolean boolean20 = type3.equals((java.lang.Object) 3);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, false);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray42);
        java.lang.String str44 = type29.getDescriptor();
        int int45 = type29.getSort();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        boolean boolean58 = type48.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray59);
        int int61 = type46.getSize();
        boolean boolean63 = type46.equals((java.lang.Object) 181);
        int int64 = type46.getSize();
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray65);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray65);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, false);
        int int70 = type3.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(S)C" + "'", str43, "(S)C");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)C" + "'", str60, "(S)C");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(C)C" + "'", str66, "(C)C");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)LC;" + "'", str67, "(C)LC;");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
    }

    @Test
    public void test03634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03634");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str21 = type20.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray30);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type34, true);
        boolean boolean37 = type20.equals((java.lang.Object) simpleVerifier36);
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type20, list38, false);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BYTE_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type41, list42, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        java.util.List list46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value47 = simpleVerifier44.naryOperation(abstractInsnNode45, list46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "boolean" + "'", str21, "boolean");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)Z" + "'", str32, "(C)Z");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type41);
    }

    @Test
    public void test03635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03635");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = type5.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        java.lang.String str19 = type8.toString();
        int int20 = type8.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type8, true);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = type8.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "S" + "'", str19, "S");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
    }

    @Test
    public void test03636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03636");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass1);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "java/lang/Object" + "'", str3, "java/lang/Object");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Ljava/lang/Object;" + "'", str4, "Ljava/lang/Object;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Ljava/lang/Object;" + "'", str5, "Ljava/lang/Object;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java/lang/Object" + "'", str6, "java/lang/Object");
    }

    @Test
    public void test03637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03637");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)C");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        int int17 = type2.getSize();
        boolean boolean19 = type2.equals((java.lang.Object) 181);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getObjectType("(S)C");
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type21, list22, true);
        int int26 = type21.getOpcode(131072);
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type21, list27, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode30 = null;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;: expected I, but found I");
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getReturnType("S");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter37 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        int int52 = value51.getSize();
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier45.merge(value48, value51);
        org.mockito.asm.tree.analysis.Value value54 = basicInterpreter37.copyOperation(abstractInsnNode38, value51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) "S", value54);
        int int56 = value54.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)L(S)C;", (java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;: expected I, but found I", value54);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value58 = simpleVerifier29.unaryOperation(abstractInsnNode30, value54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 131076 + "'", int26 == 131076);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
    }

    @Test
    public void test03638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03638");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        int int7 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, false);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        boolean boolean22 = type12.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray23);
        java.lang.String str25 = type10.getDescriptor();
        int int26 = type10.getSort();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        boolean boolean39 = type29.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray40);
        int int42 = type27.getSize();
        boolean boolean44 = type27.equals((java.lang.Object) 181);
        int int45 = type27.getSize();
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray46);
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray46);
        boolean boolean49 = type1.equals((java.lang.Object) type3);
        org.mockito.asm.Type type50 = type1.getElementType();
        int int52 = type1.getOpcode(109);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(S)C" + "'", str24, "(S)C");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)C" + "'", str41, "(S)C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)C" + "'", str47, "(C)C");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)LC;" + "'", str48, "(C)LC;");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 113 + "'", int52 == 113);
    }

    @Test
    public void test03639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03639");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("boolean");
        int int6 = type4.getOpcode(82);
        java.lang.String str7 = type4.getClassName();
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list8, true);
        org.mockito.asm.Type type11 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        boolean boolean23 = type13.equals((java.lang.Object) '4');
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list24, true);
        org.mockito.asm.tree.analysis.Value value27 = simpleVerifier10.newValue(type11);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        int int42 = type31.getSort();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str45 = type44.getClassName();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass48 = type47.getClass();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, false);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str61 = type60.getDescriptor();
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier53.newValue(type60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Z", (java.lang.Object) type31, value63);
        int int65 = value63.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value66 = simpleVerifier10.unaryOperation(abstractInsnNode28, value63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 86 + "'", int6 == 86);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean" + "'", str7, "boolean");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "S" + "'", str45, "S");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "S" + "'", str61, "S");
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
    }

    @Test
    public void test03640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03640");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I: expected LLS;;, but found Ljava/lang/Object;");
    }

    @Test
    public void test03641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03641");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        int int18 = type0.getSize();
        int int20 = type0.getOpcode(8196);
        java.lang.Class<?> wildcardClass21 = type0.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8196 + "'", int20 == 8196);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03642");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        boolean boolean14 = type9.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        int int29 = type23.getSort();
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray30);
        java.lang.String str33 = type9.toString();
        org.mockito.asm.Type type34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type34, false);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        boolean boolean49 = type39.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray50);
        java.lang.String str52 = type37.getDescriptor();
        int int53 = type37.getSort();
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier36.newValue(type37);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str56 = type55.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray65);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray65);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type69, true);
        boolean boolean72 = type55.equals((java.lang.Object) simpleVerifier71);
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier36.newValue(type55);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode74 = null;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type75, type76, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type80, true);
        int int83 = type79.getSize();
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier78.newValue(type79);
        int int85 = value84.getSize();
        int int86 = value84.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value87 = simpleVerifier36.copyOperation(abstractInsnNode74, value84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)S" + "'", str32, "(S)S");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)S" + "'", str47, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(S)C" + "'", str51, "(S)C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "boolean" + "'", str56, "boolean");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(C)S" + "'", str66, "(C)S");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)Z" + "'", str67, "(C)Z");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test03643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03643");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        java.lang.String str12 = type1.toString();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        int int28 = type13.getSize();
        boolean boolean30 = type13.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type13, false);
        java.lang.String str33 = type13.getDescriptor();
        java.lang.String str34 = type13.getDescriptor();
        int int35 = type13.getSize();
        boolean boolean37 = type13.equals((java.lang.Object) "(C)Lg/mockito/asm/Type;");
        int int39 = type13.getOpcode(36);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "S" + "'", str12, "S");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 36 + "'", int39 == 36);
    }

    @Test
    public void test03644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03644");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        boolean boolean9 = type1.equals((java.lang.Object) "(S)V");
        java.lang.String str10 = type1.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "S" + "'", str10, "S");
    }

    @Test
    public void test03645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03645");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("boolean");
        int int6 = type4.getOpcode(82);
        java.lang.String str7 = type4.getClassName();
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list8, true);
        java.lang.String str11 = type1.getClassName();
        java.lang.Class<?> wildcardClass12 = type1.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 86 + "'", int6 == 86);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean" + "'", str7, "boolean");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "S" + "'", str11, "S");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test03646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03646");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str1 = type0.getDescriptor();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        java.lang.String str17 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        java.lang.String str25 = type21.getDescriptor();
        int int27 = type21.getOpcode((int) (short) 0);
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type21, list28, true);
        int int31 = type21.getSort();
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type21, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        int int52 = value51.getSize();
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier45.merge(value48, value51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        int int71 = value70.getSize();
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier64.merge(value67, value70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) 0, value70);
        analyzerException54.addSuppressed((java.lang.Throwable) analyzerException73);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException54);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("S");
        boolean boolean80 = type77.equals((java.lang.Object) analyzerException79);
        analyzerException54.addSuppressed((java.lang.Throwable) analyzerException79);
        boolean boolean82 = type21.equals((java.lang.Object) analyzerException54);
        java.lang.Throwable[] throwableArray83 = analyzerException54.getSuppressed();
        java.lang.Throwable[] throwableArray84 = analyzerException54.getSuppressed();
        java.lang.String str85 = analyzerException54.toString();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "I" + "'", str1, "I");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str85, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
    }

    @Test
    public void test03647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03647");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        int int17 = type3.getSize();
        java.lang.String str18 = type3.toString();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass21 = type20.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type24, list25, false);
        java.lang.String str28 = type3.getClassName();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getObjectType("(S)C");
        int int31 = type30.getSort();
        int int32 = type30.getSort();
        org.mockito.asm.Type type33 = type30.getElementType();
        java.lang.String str34 = type33.getDescriptor();
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type33, list35, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value39 = simpleVerifier37.newOperation(abstractInsnNode38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str23, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "char" + "'", str28, "char");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "S" + "'", str34, "S");
    }

    @Test
    public void test03648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03648");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;: expected I, but found I");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.LONG_TYPE;
        int int3 = type2.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter4.copyOperation(abstractInsnNode5, value18);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode22 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        int int38 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter4.copyOperation(abstractInsnNode22, value35);
        boolean boolean40 = type2.equals((java.lang.Object) basicInterpreter4);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        int int42 = type41.getSort();
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type41, list43, false);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type47, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type47, true);
        int int52 = type47.getSort();
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type47, list53, false);
        int int56 = type1.getSort();
        int int58 = type1.getOpcode(83);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 7 + "'", int3 == 7);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 7 + "'", int42 == 7);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 87 + "'", int58 == 87);
    }

    @Test
    public void test03649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03649");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        int int5 = type1.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        int int11 = type9.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        int int19 = type13.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type13, false);
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier7.newValue(type9);
        java.lang.Class<?> wildcardClass23 = value22.getClass();
        java.lang.String str24 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass23);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str24, "org/mockito/asm/tree/analysis/BasicValue");
    }

    @Test
    public void test03650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03650");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int3 = type1.getOpcode((int) (byte) 10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        int int12 = type5.getSize();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int15 = type14.getSort();
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type14, list16, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        int int29 = type22.getSize();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int32 = type31.getSort();
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type31, list33, true);
        java.lang.String str36 = type31.toString();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int39 = type38.getSort();
        java.lang.String str40 = type38.toString();
        org.mockito.asm.Type type41 = type38.getElementType();
        int int42 = type41.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = value58.getSize();
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier52.merge(value55, value58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value60);
        boolean boolean62 = type43.equals((java.lang.Object) analyzerException61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        boolean boolean75 = type65.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray76);
        java.lang.String str78 = type63.getDescriptor();
        int int79 = type63.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type63, true);
        java.lang.String str82 = type63.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type63, false);
        java.lang.String str85 = type63.toString();
        java.lang.String str86 = type63.getClassName();
        java.util.List list87 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type63, list87, false);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type91 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier93 = new org.mockito.asm.tree.analysis.SimpleVerifier(type90, type91, true);
        java.lang.String str94 = type90.getClassName();
        org.mockito.asm.tree.analysis.Value value95 = simpleVerifier89.newValue(type90);
        org.mockito.asm.tree.analysis.Value value96 = simpleVerifier20.newValue(type90);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value98 = simpleVerifier20.newOperation(abstractInsnNode97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 14 + "'", int3 == 14);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str36, "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str40, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(C)S" + "'", str73, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(S)C" + "'", str77, "(S)C");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "C" + "'", str78, "C");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "C" + "'", str82, "C");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "C" + "'", str85, "C");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "char" + "'", str86, "char");
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "short" + "'", str94, "short");
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertNotNull(value96);
    }

    @Test
    public void test03651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03651");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        java.lang.Throwable[] throwableArray3 = analyzerException2.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;: expected (C)S, but found null", (java.lang.Throwable) analyzerException2);
        java.lang.Throwable[] throwableArray5 = analyzerException4.getSuppressed();
        java.lang.Class<?> wildcardClass6 = analyzerException4.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass6);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str7, "org/mockito/asm/tree/analysis/AnalyzerException");
    }

    @Test
    public void test03652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03652");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: (C)LZ;");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 55");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03653");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        java.lang.String str11 = type7.getDescriptor();
        int int13 = type7.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray29);
        java.lang.String str31 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type17, false);
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type7, list34, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass40 = type39.getClass();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        java.lang.String str44 = type43.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        boolean boolean56 = type46.equals((java.lang.Object) '4');
        java.lang.String str57 = type46.toString();
        int int58 = type46.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type46, true);
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier37.newValue(type43);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass64 = type63.getClass();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        java.lang.String str68 = type67.getDescriptor();
        org.mockito.asm.Type type69 = type67.getElementType();
        java.lang.String str70 = type67.getClassName();
        int int71 = type67.getDimensions();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getObjectType("org/mockito/asm/Type");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type73, true);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str78 = type77.getDescriptor();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier75.newValue(type77);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier36.merge(value61, value79);
        int int81 = value80.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "C" + "'", str11, "C");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(S)C" + "'", str30, "(S)C");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "C" + "'", str31, "C");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str44, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "S" + "'", str57, "S");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str68, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.mockito.asm.Type" + "'", str70, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "S" + "'", str78, "S");
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
    }

    @Test
    public void test03654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03654");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int2 = type1.getSort();
        java.lang.Class<?> wildcardClass3 = type1.getClass();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str8 = type7.getDescriptor();
        java.lang.String str9 = type7.toString();
        java.lang.String str10 = type7.getClassName();
        java.lang.String str11 = type7.getClassName();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str13 = type12.getClassName();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        int int30 = value29.getSize();
        org.mockito.asm.tree.analysis.Value value31 = simpleVerifier23.merge(value26, value29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value31);
        boolean boolean33 = type14.equals((java.lang.Object) analyzerException32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        boolean boolean46 = type36.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray47);
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray47);
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray47);
        boolean boolean51 = type7.equals((java.lang.Object) type12);
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type12, list52, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value56 = simpleVerifier54.newOperation(abstractInsnNode55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "S" + "'", str9, "S");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "short" + "'", str10, "short");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "short" + "'", str11, "short");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "double" + "'", str13, "double");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(S)C" + "'", str48, "(S)C");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(S)V" + "'", str49, "(S)V");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(S)D" + "'", str50, "(S)D");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test03655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03655");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("()Lorg.mockito.asm.tree.analysis.BasicValue;");
    }

    @Test
    public void test03656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03656");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("C");
        java.lang.Class<?> wildcardClass2 = analyzerException1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str3, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str4, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str5, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test03657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03657");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        boolean boolean22 = type8.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type31, true);
        org.mockito.asm.Type type44 = null;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier43.newValue(type46);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type46, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        java.lang.String str57 = type53.getDescriptor();
        java.lang.Class<?> wildcardClass58 = type53.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type61 = type60.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type61, true);
        int int65 = type61.getOpcode(187);
        org.mockito.asm.Type[] typeArray67 = org.mockito.asm.Type.getArgumentTypes("(S)B");
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray67);
        java.lang.String str69 = type61.getClassName();
        int int70 = type61.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "C" + "'", str57, "C");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/Type" + "'", str59, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 191 + "'", int65 == 191);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(S)Lg/mockito/asm/Type;" + "'", str68, "(S)Lg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "g.mockito.asm.Type" + "'", str69, "g.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
    }

    @Test
    public void test03658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03658");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        int int5 = type1.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        int int51 = value50.getSize();
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier44.merge(value47, value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        int int66 = value65.getSize();
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier59.merge(value62, value65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type71, list72, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        int int81 = value80.getSize();
        org.mockito.asm.tree.analysis.Value value82 = simpleVerifier74.merge(value77, value80);
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier44.merge(value65, value82);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier14.merge(value37, value82);
        java.lang.Class<?> wildcardClass85 = value84.getClass();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass85);
        int int87 = type86.getDimensions();
        java.lang.String str88 = type86.toString();
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier7.newValue(type86);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value91 = simpleVerifier7.newOperation(abstractInsnNode90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str88, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(value89);
    }

    @Test
    public void test03659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03659");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str2 = type1.getDescriptor();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        boolean boolean15 = type5.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type5 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray16);
        java.lang.String str18 = type3.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        java.lang.String str26 = type22.getDescriptor();
        int int28 = type22.getOpcode((int) (short) 0);
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, list29, true);
        int int32 = type22.getSort();
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type22, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        int int53 = value52.getSize();
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier46.merge(value49, value52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        int int72 = value71.getSize();
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier65.merge(value68, value71);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) 0, value71);
        analyzerException55.addSuppressed((java.lang.Throwable) analyzerException74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException55);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("S");
        boolean boolean81 = type78.equals((java.lang.Object) analyzerException80);
        analyzerException55.addSuppressed((java.lang.Throwable) analyzerException80);
        boolean boolean83 = type22.equals((java.lang.Object) analyzerException55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: g.mockito.asm.Type: expected true, but found I", (java.lang.Throwable) analyzerException55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException90 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException91);
        java.lang.Throwable[] throwableArray93 = analyzerException92.getSuppressed();
        analyzerException86.addSuppressed((java.lang.Throwable) analyzerException92);
        analyzerException84.addSuppressed((java.lang.Throwable) analyzerException92);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException97 = new org.mockito.asm.tree.analysis.AnalyzerException("C");
        analyzerException84.addSuppressed((java.lang.Throwable) analyzerException97);
        java.lang.Throwable[] throwableArray99 = analyzerException84.getSuppressed();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "I" + "'", str2, "I");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)S" + "'", str13, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(S)C" + "'", str17, "(S)C");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertNotNull(throwableArray99);
    }

    @Test
    public void test03660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03660");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        java.lang.String str3 = type1.toString();
        int int4 = type1.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean8 = type6.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type10, list12, false);
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list15, false);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("Ldouble;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type28, true);
        int int41 = type23.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        int int49 = type43.getSort();
        java.lang.String str50 = type43.getClassName();
        java.lang.String str51 = type43.getDescriptor();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        int int60 = type54.getSort();
        java.lang.String str61 = type54.toString();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type62, list63, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type69, list70, true);
        int int73 = type67.getSort();
        java.lang.String str74 = type67.getClassName();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier65.newValue(type67);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type67, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type52, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type43, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type43, true);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier17.newValue(type43);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode85 = null;
        java.util.List list86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value87 = simpleVerifier17.naryOperation(abstractInsnNode85, list86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "S" + "'", str3, "S");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4 + "'", int49 == 4);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "short" + "'", str50, "short");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "S" + "'", str51, "S");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "S" + "'", str61, "S");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 4 + "'", int73 == 4);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "short" + "'", str74, "short");
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value84);
    }

    @Test
    public void test03661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03661");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        java.lang.String str12 = type1.toString();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        int int28 = type13.getSize();
        boolean boolean30 = type13.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type13, false);
        java.lang.String str33 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type35, list41, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass46 = type45.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        java.lang.String str48 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type50 = type49.getElementType();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, false);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str58 = type57.getDescriptor();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier56.newValue(type57);
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type57, list60, true);
        java.lang.String str63 = type50.toString();
        org.mockito.asm.tree.analysis.Value value64 = simpleVerifier43.newValue(type50);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getObjectType("(S)L(C)Z;");
        org.mockito.asm.Type type67 = type66.getElementType();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier43.newValue(type66);
        org.mockito.asm.Type type69 = null;
        org.mockito.asm.tree.analysis.Value value70 = simpleVerifier43.newValue(type69);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        java.util.List list72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value73 = simpleVerifier43.naryOperation(abstractInsnNode71, list72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "S" + "'", str12, "S");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str47, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str48, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "S" + "'", str58, "S");
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Lg/mockito/asm/Type;" + "'", str63, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(value70);
    }

    @Test
    public void test03662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03662");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, true);
        int int11 = type7.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)C");
        java.lang.Class<?> wildcardClass14 = analyzerException13.getClass();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type16, false);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        boolean boolean31 = type21.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray32);
        int int34 = type19.getSize();
        boolean boolean36 = type19.equals((java.lang.Object) 181);
        int int37 = type19.getSize();
        java.lang.String str38 = type19.toString();
        int int39 = type19.getSort();
        int int41 = type19.getOpcode(113);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getReturnType("(S)D");
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type43, list44, false);
        org.mockito.asm.Type type47 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        int int55 = type49.getSort();
        java.lang.String str56 = type49.getClassName();
        java.lang.String str57 = type49.getDescriptor();
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list58, false);
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier46.newValue(type47);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass64 = type63.getClass();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        java.lang.String str66 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass64);
        java.lang.String str67 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        java.lang.String str70 = type69.getDescriptor();
        int int71 = type69.getSort();
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier46.newValue(type69);
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type69, list73, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value77 = simpleVerifier75.newOperation(abstractInsnNode76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(S)C" + "'", str33, "(S)C");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 113 + "'", int41 == 113);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "short" + "'", str56, "short");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "S" + "'", str57, "S");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str66, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org/mockito/asm/Type" + "'", str67, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str70, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertNotNull(value72);
    }

    @Test
    public void test03663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03663");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)J");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        java.lang.String str13 = type9.getDescriptor();
        int int15 = type9.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        int int30 = type24.getSort();
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray31);
        java.lang.String str33 = type19.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type19, false);
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type9, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        int int47 = type41.getSort();
        java.lang.String str48 = type41.toString();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type49, list50, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        int int60 = type54.getSort();
        java.lang.String str61 = type54.getClassName();
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier52.newValue(type54);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type54, true);
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier38.newValue(type54);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str71 = type70.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray80);
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type70, list83, false);
        java.util.List list86 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type67, list86, true);
        java.lang.String str89 = type67.getClassName();
        int int91 = type67.getOpcode((int) (byte) -1);
        java.util.List list92 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type67, list92, true);
        org.mockito.asm.Type type96 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.tree.analysis.Value value97 = simpleVerifier94.newValue(type96);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier94.newOperation(abstractInsnNode98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "C" + "'", str13, "C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "S" + "'", str48, "S");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "short" + "'", str61, "short");
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "boolean" + "'", str71, "boolean");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)S" + "'", str81, "(C)S");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(C)Z" + "'", str82, "(C)Z");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "char" + "'", str89, "char");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(type96);
        org.junit.Assert.assertNotNull(value97);
    }

    @Test
    public void test03664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03664");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("LSC)L(C)LC;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test03665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03665");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        int int21 = type8.getSize();
        java.lang.String str22 = type8.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "S" + "'", str22, "S");
    }

    @Test
    public void test03666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03666");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int3 = type1.getOpcode((int) (byte) 10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        boolean boolean22 = type12.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type12, true);
        boolean boolean26 = type12.equals((java.lang.Object) 158);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType("S");
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type28, list29, false);
        org.mockito.asm.Type type32 = null;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str35 = type34.toString();
        int int36 = type34.getDimensions();
        org.mockito.asm.Type type37 = type34.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type37, false);
        boolean boolean40 = type28.equals((java.lang.Object) simpleVerifier39);
        boolean boolean41 = type1.equals((java.lang.Object) simpleVerifier39);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg.mockito.asm.Type;");
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier39.newValue(type43);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        java.util.List list46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value47 = simpleVerifier39.naryOperation(abstractInsnNode45, list46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 14 + "'", int3 == 14);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str35, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
    }

    @Test
    public void test03667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03667");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)B");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test03668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03668");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        int int9 = type3.getSort();
        java.lang.String str10 = type3.toString();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type11, list12, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        int int22 = type16.getSort();
        java.lang.String str23 = type16.getClassName();
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier14.newValue(type16);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type16, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        boolean boolean39 = type29.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray40);
        int int42 = type27.getSize();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type44, false);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str48 = type47.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray57);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type61, true);
        boolean boolean64 = type47.equals((java.lang.Object) simpleVerifier63);
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type47, list65, false);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.BYTE_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type68, list69, true);
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier26.newValue(type68);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type68, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode75 = null;
        java.util.List list76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value77 = simpleVerifier74.naryOperation(abstractInsnNode75, list76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "S" + "'", str10, "S");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "short" + "'", str23, "short");
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)C" + "'", str41, "(S)C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "boolean" + "'", str48, "boolean");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(C)S" + "'", str58, "(C)S");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)Z" + "'", str59, "(C)Z");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value72);
    }

    @Test
    public void test03669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03669");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("C");
        int int3 = type1.getOpcode(160);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type6 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray17);
        int int19 = type4.getSize();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type21, false);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type38, true);
        boolean boolean41 = type24.equals((java.lang.Object) simpleVerifier40);
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type24, list42, false);
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list45, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getObjectType("double");
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier47.newValue(type49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        int int66 = type60.getSort();
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type60 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray67);
        java.lang.String str69 = type55.getDescriptor();
        java.lang.String str70 = type55.getDescriptor();
        org.mockito.asm.tree.analysis.Value value71 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)C", (java.lang.Object) type55, value71);
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type55, list73, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value77 = simpleVerifier75.newOperation(abstractInsnNode76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 160 + "'", int3 == 160);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(S)C" + "'", str68, "(S)C");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "C" + "'", str70, "C");
    }

    @Test
    public void test03670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03670");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.Throwable[] throwableArray2 = analyzerException1.getSuppressed();
        java.lang.String str3 = analyzerException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S" + "'", str3, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
    }

    @Test
    public void test03671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03671");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(C)Z");
        int int2 = type1.getSort();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str6 = type5.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray15);
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray15);
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list19, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str24 = type23.getClassName();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass27 = type26.getClass();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, false);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str40 = type39.getDescriptor();
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier32.newValue(type39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        int int46 = type44.getSort();
        java.lang.Object obj47 = null;
        boolean boolean48 = type44.equals(obj47);
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier32.newValue(type44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        boolean boolean61 = type51.equals((java.lang.Object) '4');
        java.lang.String str62 = type51.toString();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        boolean boolean75 = type65.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray76);
        int int78 = type63.getSize();
        boolean boolean80 = type63.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type63, false);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier82.newValue(type84);
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier21.merge(value49, value85);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str88 = type87.getDescriptor();
        int int89 = type87.getSort();
        int int90 = type87.getSort();
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier21.newValue(type87);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode92 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value93 = simpleVerifier21.newOperation(abstractInsnNode92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "boolean" + "'", str6, "boolean");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)Z" + "'", str17, "(C)Z");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;" + "'", str18, "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "S" + "'", str24, "S");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "S" + "'", str40, "S");
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)S" + "'", str59, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "S" + "'", str62, "S");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(C)S" + "'", str73, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(S)C" + "'", str77, "(S)C");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "I" + "'", str88, "I");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 5 + "'", int89 == 5);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 5 + "'", int90 == 5);
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test03672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03672");
        org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("(SC)L(C)LC;;");
        org.junit.Assert.assertNotNull(typeArray1);
    }

    @Test
    public void test03673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03673");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str8 = type7.getInternalName();
        int int9 = type7.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org/mockito/asm/Type" + "'", str8, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test03674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03674");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str4 = type3.getClassName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value22);
        boolean boolean24 = type5.equals((java.lang.Object) analyzerException23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        boolean boolean37 = type27.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray38);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray38);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray38);
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list42, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier44.newValue(type46);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getObjectType("hi!");
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type");
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType("(C)L(C)LC;");
        org.mockito.asm.Type type56 = type55.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, true);
        int int61 = type51.getSize();
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier44.newValue(type51);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode63 = null;
        java.util.List list64 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value65 = simpleVerifier44.naryOperation(abstractInsnNode63, list64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "double" + "'", str4, "double");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)C" + "'", str39, "(S)C");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)V" + "'", str40, "(S)V");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)D" + "'", str41, "(S)D");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(value62);
    }

    @Test
    public void test03675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03675");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = type5.getDescriptor();
        org.mockito.asm.Type type7 = type5.getElementType();
        java.lang.String str8 = type5.getClassName();
        int int9 = type5.getDimensions();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getObjectType("org/mockito/asm/Type");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type11, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str16 = type15.getDescriptor();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier13.newValue(type15);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier13.newValue(type19);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        java.util.List list22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value23 = simpleVerifier13.naryOperation(abstractInsnNode21, list22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.mockito.asm.Type" + "'", str8, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "S" + "'", str16, "S");
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
    }

    @Test
    public void test03676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03676");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        int int7 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, false);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        boolean boolean22 = type12.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray23);
        java.lang.String str25 = type10.getDescriptor();
        int int26 = type10.getSort();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        boolean boolean39 = type29.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray40);
        int int42 = type27.getSize();
        boolean boolean44 = type27.equals((java.lang.Object) 181);
        int int45 = type27.getSize();
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray46);
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray46);
        boolean boolean49 = type1.equals((java.lang.Object) type3);
        java.lang.Class<?> wildcardClass50 = type1.getClass();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        java.lang.String str52 = type51.getClassName();
        java.lang.String str53 = type51.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(S)C" + "'", str24, "(S)C");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)C" + "'", str41, "(S)C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)C" + "'", str47, "(C)C");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)LC;" + "'", str48, "(C)LC;");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.mockito.asm.Type" + "'", str52, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str53, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03677");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        int int17 = type3.getSize();
        java.lang.String str18 = type3.toString();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass21 = type20.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type24, list25, false);
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier27.newValue(type28);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getReturnType("LS;");
        org.mockito.asm.tree.analysis.Value value32 = simpleVerifier27.newValue(type31);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str35 = type34.toString();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str43 = type42.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray52);
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray52);
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type42, list55, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type72 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray73);
        boolean boolean76 = type66.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type66, true);
        int int79 = type61.getSort();
        java.util.List list80 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type61, list80, true);
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list83, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type37, true);
        java.lang.String str88 = type37.getInternalName();
        int int89 = type37.getSort();
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected true, but found I");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier93 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type91, true);
        int int94 = type37.getDimensions();
        org.mockito.asm.tree.analysis.Value value95 = simpleVerifier27.newValue(type37);
        java.lang.Class<?> wildcardClass96 = type37.getClass();
        java.lang.String str97 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass96);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str23, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "L(C)Z;" + "'", str35, "L(C)Z;");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "boolean" + "'", str43, "boolean");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)S" + "'", str53, "(C)S");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)Z" + "'", str54, "(C)Z");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(C)S" + "'", str74, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str88, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10 + "'", int89 == 10);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "org/mockito/asm/Type" + "'", str97, "org/mockito/asm/Type");
    }

    @Test
    public void test03678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03678");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("boolean");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        int int32 = value31.getSize();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier25.merge(value28, value31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        int int47 = value46.getSize();
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier40.merge(value43, value46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        int int62 = value61.getSize();
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier55.merge(value58, value61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier40.merge(value61, value78);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier10.merge(value33, value78);
        int int81 = value33.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)LC;", (java.lang.Object) "boolean", value33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("B");
        analyzerException82.addSuppressed((java.lang.Throwable) analyzerException84);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("void", (java.lang.Throwable) analyzerException82);
        java.lang.Throwable throwable88 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable88);
        java.lang.Throwable[] throwableArray90 = analyzerException89.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)LLorg/mockito/asm/tree/analysis/SimpleVerifier;;");
        analyzerException89.addSuppressed((java.lang.Throwable) analyzerException92);
        analyzerException86.addSuppressed((java.lang.Throwable) analyzerException92);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test03679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03679");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str3 = type2.getClassName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass6 = type5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, false);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str19 = type18.getDescriptor();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier11.newValue(type18);
        int int22 = type18.getSize();
        java.lang.String str23 = type18.getDescriptor();
        int int24 = type18.getSize();
        org.mockito.asm.Type[] typeArray26 = org.mockito.asm.Type.getArgumentTypes("(C)S");
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray26);
        java.lang.Object obj29 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;", obj29, value39);
        int int46 = value39.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("F", (java.lang.Object) str27, value39);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "S" + "'", str3, "S");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "S" + "'", str19, "S");
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "S" + "'", str23, "S");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(C)S" + "'", str27, "(C)S");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
    }

    @Test
    public void test03680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03680");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("B");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str8 = type7.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray17);
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type7, list20, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        boolean boolean35 = type25.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray36);
        java.lang.String str38 = type23.getDescriptor();
        int int39 = type23.getSort();
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type23, list40, true);
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type23, list43, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str49 = type48.getClassName();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass52 = type51.getClass();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type54, list55, true);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, false);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str65 = type64.getDescriptor();
        org.mockito.asm.tree.analysis.Value value66 = simpleVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier57.newValue(type64);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value68 = simpleVerifier45.copyOperation(abstractInsnNode46, value67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "B" + "'", str2, "B");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean" + "'", str8, "boolean");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)S" + "'", str18, "(C)S");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(C)Z" + "'", str19, "(C)Z");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)S" + "'", str33, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(S)C" + "'", str37, "(S)C");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "S" + "'", str49, "S");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "S" + "'", str65, "S");
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(value67);
    }

    @Test
    public void test03681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03681");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, false);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = type15.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        int int33 = value32.getSize();
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier26.merge(value29, value32);
        int int35 = value32.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Object) type15, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        int int50 = value49.getSize();
        org.mockito.asm.tree.analysis.Value value51 = simpleVerifier43.merge(value46, value49);
        int int52 = value51.getSize();
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier10.merge(value32, value51);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int56 = type55.getSort();
        java.lang.String str57 = type55.toString();
        org.mockito.asm.Type type58 = type55.getElementType();
        int int59 = type58.getSize();
        int int60 = type58.getSort();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier10.newValue(type58);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value63 = simpleVerifier10.newOperation(abstractInsnNode62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str57, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertNotNull(value61);
    }

    @Test
    public void test03682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03682");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = type6.getElementType();
        java.lang.String str8 = type7.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lg/mockito/asm/Type;" + "'", str8, "Lg/mockito/asm/Type;");
    }

    @Test
    public void test03683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03683");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        int int4 = type3.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier13.merge(value16, value19);
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter5.copyOperation(abstractInsnNode6, value19);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        int int37 = value36.getSize();
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier30.merge(value33, value36);
        int int39 = value36.getSize();
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter5.copyOperation(abstractInsnNode23, value36);
        boolean boolean41 = type3.equals((java.lang.Object) basicInterpreter5);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        int int43 = type42.getSort();
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type42, list44, false);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type48, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type48, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type54, true);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type58, true);
        int int61 = type57.getSize();
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier52.newValue(type57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Object) 55, value63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException", (java.lang.Throwable) analyzerException64);
        java.lang.Throwable[] throwableArray66 = analyzerException65.getSuppressed();
        java.lang.String str67 = analyzerException65.toString();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 7 + "'", int4 == 7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7 + "'", int43 == 7);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException" + "'", str67, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException");
    }

    @Test
    public void test03684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03684");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("rg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 93");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03685");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("hi!");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType("(C)L(C)LC;");
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        java.util.List list12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value13 = simpleVerifier10.naryOperation(abstractInsnNode11, list12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
    }

    @Test
    public void test03686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03686");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier19.newValue(type21);
        org.mockito.asm.Type type23 = null;
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier19.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        int int32 = type26.getSort();
        java.lang.String str33 = type26.toString();
        int int35 = type26.getOpcode(99);
        org.mockito.asm.tree.analysis.Value value36 = simpleVerifier19.newValue(type26);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value38 = simpleVerifier19.newOperation(abstractInsnNode37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 99 + "'", int35 == 99);
        org.junit.Assert.assertNotNull(value36);
    }

    @Test
    public void test03687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03687");
        java.lang.Object obj2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier9.merge(value12, value15);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", obj2, value17);
        java.lang.Throwable throwable22 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        int int42 = value41.getSize();
        org.mockito.asm.tree.analysis.Value value43 = simpleVerifier35.merge(value38, value41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type76, type78, list79, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier85 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier85.newValue(type86);
        int int88 = value87.getSize();
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier81.merge(value84, value87);
        org.mockito.asm.tree.analysis.Value value90 = simpleVerifier51.merge(value72, value89);
        org.mockito.asm.tree.analysis.Value value91 = basicVerifier24.merge(value43, value90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException23, value91);
        analyzerException19.addSuppressed((java.lang.Throwable) analyzerException92);
        java.lang.Throwable[] throwableArray94 = analyzerException19.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException95 = new org.mockito.asm.tree.analysis.AnalyzerException("L(S)F;", (java.lang.Throwable) analyzerException19);
        java.lang.String str96 = analyzerException95.toString();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: L(S)F;" + "'", str96, "org.mockito.asm.tree.analysis.AnalyzerException: L(S)F;");
    }

    @Test
    public void test03688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03688");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type4 = type1.getElementType();
        int int5 = type4.getSize();
        int int6 = type4.getSort();
        int int8 = type4.getOpcode(256);
        int int9 = type4.getSize();
        java.lang.String str10 = type4.toString();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass13 = type12.getClass();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        java.lang.String str17 = type16.getDescriptor();
        org.mockito.asm.Type type18 = type16.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        boolean boolean30 = type20.equals((java.lang.Object) '4');
        org.mockito.asm.Type type31 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type31, list32, false);
        java.lang.String str35 = type31.getClassName();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type37, false);
        java.lang.String str40 = type37.getDescriptor();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type37, list41, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type37, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value47 = simpleVerifier45.newOperation(abstractInsnNode46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 260 + "'", int8 == 260);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lg/mockito/asm/Type;" + "'", str10, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str17, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)S" + "'", str28, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "int" + "'", str35, "int");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str40, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03689");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        java.lang.String str8 = type4.getDescriptor();
        java.lang.Class<?> wildcardClass9 = type4.getClass();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass9);
        org.mockito.asm.Type type11 = type10.getElementType();
        org.mockito.asm.Type type12 = type11.getElementType();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type[] typeArray15 = org.mockito.asm.Type.getArgumentTypes("(S)C");
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray15);
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray15);
        java.lang.String str18 = type11.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        int int26 = type20.getSort();
        java.lang.String str27 = type20.toString();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type28, list29, false);
        boolean boolean33 = type28.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        int int48 = type42.getSort();
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray49);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray49);
        java.lang.String str52 = type28.toString();
        org.mockito.asm.Type type53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type53, false);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray65);
        boolean boolean68 = type58.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type58 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray69);
        java.lang.String str71 = type56.getDescriptor();
        int int72 = type56.getSort();
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier55.newValue(type56);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier55.newValue(type74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getReturnType("()Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier55.newValue(type77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("LJ;", (java.lang.Object) type11, value78);
        java.lang.String str80 = analyzerException79.toString();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "C" + "'", str8, "C");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)F" + "'", str16, "(S)F");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(S)Lg/mockito/asm/Type;" + "'", str17, "(S)Lg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Lg/mockito/asm/Type;" + "'", str18, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "S" + "'", str27, "S");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(S)C" + "'", str50, "(S)C");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(S)S" + "'", str51, "(S)S");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "S" + "'", str52, "S");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(C)S" + "'", str66, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(S)C" + "'", str70, "(S)C");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "C" + "'", str71, "C");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: LJ;: expected Lg/mockito/asm/Type;, but found Lorg/mockito/asm/Type;" + "'", str80, "org.mockito.asm.tree.analysis.AnalyzerException: LJ;: expected Lg/mockito/asm/Type;, but found Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03690");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)C");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = type1.getElementType();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type7 = type6.getElementType();
        boolean boolean8 = type1.equals((java.lang.Object) type7);
        int int9 = type7.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray25);
        boolean boolean28 = type18.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type18, true);
        boolean boolean32 = type18.equals((java.lang.Object) 158);
        int int34 = type18.getOpcode(159);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type36, list37, false);
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type36, list40, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value44 = simpleVerifier42.newOperation(abstractInsnNode43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(S)C" + "'", str3, "(S)C");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(C)S" + "'", str26, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 159 + "'", int34 == 159);
        org.junit.Assert.assertNotNull(type36);
    }

    @Test
    public void test03691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03691");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        int int18 = type0.getSize();
        java.lang.String str19 = type0.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        boolean boolean21 = type0.equals((java.lang.Object) basicVerifier20);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode22 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        int int38 = value37.getSize();
        int int39 = value37.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value40 = basicVerifier20.copyOperation(abstractInsnNode22, value37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "char" + "'", str19, "char");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test03692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03692");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier13.merge(value16, value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value21);
        boolean boolean23 = type4.equals((java.lang.Object) analyzerException22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        boolean boolean36 = type26.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray37);
        java.lang.String str39 = type24.getDescriptor();
        int int40 = type24.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type24, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = type46.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        int int56 = type50.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type50, false);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getObjectType("(S)C");
        int int61 = type60.getSort();
        java.lang.String str62 = type60.getClassName();
        org.mockito.asm.Type type63 = type60.getElementType();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type66 = type65.getElementType();
        boolean boolean67 = type60.equals((java.lang.Object) type66);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type69, list70, false);
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier58.newValue(type69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list82 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type81, list82, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier85 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier85.newValue(type86);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier88 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value90 = basicVerifier88.newValue(type89);
        int int91 = value90.getSize();
        org.mockito.asm.tree.analysis.Value value92 = simpleVerifier84.merge(value87, value90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException93 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value92);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)S", (java.lang.Object) 175, value92);
        org.mockito.asm.tree.analysis.Value value95 = simpleVerifier44.merge(value73, value92);
        int int96 = value95.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)S" + "'", str34, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)C" + "'", str38, "(S)C");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "C" + "'", str39, "C");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(S)C" + "'", str62, "(S)C");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
    }

    @Test
    public void test03693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03693");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        java.lang.String str11 = type7.getDescriptor();
        int int13 = type7.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray29);
        java.lang.String str31 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type17, false);
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type7, list34, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value38 = simpleVerifier36.newOperation(abstractInsnNode37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "C" + "'", str11, "C");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(S)C" + "'", str30, "(S)C");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "C" + "'", str31, "C");
    }

    @Test
    public void test03694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03694");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("LLLorg/mockito/asm/tree/analysis/AnalyzerException;;;");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 53");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03695");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = type5.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        java.lang.String str19 = type8.toString();
        int int20 = type8.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        int int39 = type33.getSort();
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray40);
        java.lang.String str42 = type28.getDescriptor();
        java.lang.String str43 = type28.getDescriptor();
        org.mockito.asm.tree.analysis.Value value44 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)C", (java.lang.Object) type28, value44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)D", (java.lang.Throwable) analyzerException45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/BasicValue");
        java.lang.Throwable[] throwableArray50 = analyzerException49.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("J", (java.lang.Throwable) analyzerException49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        int int68 = value67.getSize();
        org.mockito.asm.tree.analysis.Value value69 = simpleVerifier61.merge(value64, value67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) 0, value67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Throwable) analyzerException70);
        analyzerException49.addSuppressed((java.lang.Throwable) analyzerException71);
        analyzerException45.addSuppressed((java.lang.Throwable) analyzerException49);
        boolean boolean74 = type5.equals((java.lang.Object) analyzerException45);
        java.lang.String str75 = type5.getClassName();
        org.mockito.asm.Type type76 = type5.getElementType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "S" + "'", str19, "S");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)C" + "'", str41, "(S)C");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "C" + "'", str42, "C");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "C" + "'", str43, "C");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.mockito.asm.Type" + "'", str75, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type76);
    }

    @Test
    public void test03696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03696");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S");
        org.mockito.asm.tree.analysis.Value value4 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/Type;", (java.lang.Object) "(C)S", value4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass11 = type10.getClass();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        boolean boolean29 = type19.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray30);
        java.lang.String str32 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        java.lang.String str40 = type36.getDescriptor();
        int int42 = type36.getOpcode((int) (short) 0);
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type36, list43, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        int int62 = value61.getSize();
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier55.merge(value58, value61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value63);
        boolean boolean65 = type46.equals((java.lang.Object) analyzerException64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type74 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray75);
        boolean boolean78 = type68.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type68 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray79);
        java.lang.String str81 = type66.getDescriptor();
        int int82 = type66.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type66, true);
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier45.newValue(type66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) type16, value85);
        java.lang.Throwable[] throwableArray87 = analyzerException86.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException88 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;: expected (C)S, but found null", (java.lang.Throwable) analyzerException86);
        analyzerException5.addSuppressed((java.lang.Throwable) analyzerException86);
        java.lang.Throwable[] throwableArray90 = analyzerException5.getSuppressed();
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(C)S" + "'", str27, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)S" + "'", str76, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(S)C" + "'", str80, "(S)C");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "C" + "'", str81, "C");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test03697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03697");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str1 = type0.getDescriptor();
        java.lang.String str2 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier9.merge(value12, value15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        int int31 = value30.getSize();
        org.mockito.asm.tree.analysis.Value value32 = simpleVerifier24.merge(value27, value30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        int int46 = value45.getSize();
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier39.merge(value42, value45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        int int61 = value60.getSize();
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier54.merge(value57, value60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        int int76 = value75.getSize();
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier69.merge(value72, value75);
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier39.merge(value60, value77);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier9.merge(value32, value77);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.LONG_TYPE;
        int int81 = type80.getSort();
        org.mockito.asm.tree.analysis.Value value82 = simpleVerifier9.newValue(type80);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType("S");
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier9.newValue(type84);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass88 = type87.getClass();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier9.newValue(type90);
        int int92 = type90.getSize();
        org.mockito.asm.Type[] typeArray94 = org.mockito.asm.Type.getArgumentTypes("(S)S");
        java.lang.String str95 = org.mockito.asm.Type.getMethodDescriptor(type90, typeArray94);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier97 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type90, true);
        int int99 = type0.getOpcode(162);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "I" + "'", str1, "I");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "I" + "'", str2, "I");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 7 + "'", int81 == 7);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertNotNull(typeArray94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "(S)Lorg/mockito/asm/Type;" + "'", str95, "(S)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 162 + "'", int99 == 162);
    }

    @Test
    public void test03698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03698");
        java.lang.Object obj1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier9.merge(value12, value15);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter18 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode19 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        int int33 = value32.getSize();
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier26.merge(value29, value32);
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter18.copyOperation(abstractInsnNode19, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        int int49 = value48.getSize();
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier42.merge(value45, value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        boolean boolean69 = type59.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type59, true);
        org.mockito.asm.Type type72 = null;
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type78, type80, list81, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier87 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value89 = basicVerifier87.newValue(type88);
        int int90 = value89.getSize();
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier83.merge(value86, value89);
        org.mockito.asm.tree.analysis.Value value92 = simpleVerifier71.merge(value76, value91);
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter18.merge(value45, value76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)D", (java.lang.Object) value17, value93);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException95 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)F", obj1, value93);
        int int96 = value93.getSize();
        int int97 = value93.getSize();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)S" + "'", str67, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1 + "'", int97 == 1);
    }

    @Test
    public void test03699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03699");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I");
        java.lang.String str2 = type1.getInternalName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        java.lang.String str15 = type4.toString();
        java.lang.String str16 = type4.toString();
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, true);
        int int21 = type1.getOpcode(0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I" + "'", str2, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "S" + "'", str15, "S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "S" + "'", str16, "S");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
    }

    @Test
    public void test03700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03700");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        boolean boolean17 = type7.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray18);
        int int20 = type5.getSize();
        java.lang.String str21 = type5.toString();
        int int22 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type5, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value26 = simpleVerifier24.newOperation(abstractInsnNode25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/Type" + "'", str3, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(S)C" + "'", str19, "(S)C");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "C" + "'", str21, "C");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
    }

    @Test
    public void test03701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03701");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type28, true);
        int int41 = type23.getSort();
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type23, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = simpleVerifier44.newValue(type45);
        int int47 = type45.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
    }

    @Test
    public void test03702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03702");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type12, list13, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type24, true);
        org.mockito.asm.Type type37 = null;
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        int int55 = value54.getSize();
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier48.merge(value51, value54);
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier36.merge(value41, value56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getReturnType("(C)Z");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type67 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray68);
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray68);
        org.mockito.asm.tree.analysis.Value value71 = simpleVerifier36.newValue(type59);
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier15.newValue(type59);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getReturnType("L(C)Z;");
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier15.newValue(type74);
        java.lang.String str76 = type74.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(C)S" + "'", str69, "(C)S");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(C)Z" + "'", str70, "(C)Z");
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Z" + "'", str76, "Z");
    }

    @Test
    public void test03703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03703");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)L(C)Z;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        boolean boolean13 = type3.equals((java.lang.Object) '4');
        boolean boolean15 = type3.equals((java.lang.Object) 193);
        java.lang.String str16 = type3.getDescriptor();
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list17, false);
        org.mockito.asm.Type type20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        java.lang.String str29 = type22.getClassName();
        java.lang.String str30 = type22.getDescriptor();
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list31, false);
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier19.newValue(type22);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getReturnType("(S)B");
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass39 = type38.getClass();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass39);
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass39);
        java.lang.String str44 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        int int50 = type48.getOpcode(107);
        int int51 = type48.getSize();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getReturnType("(S)S");
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type62 };
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray63);
        boolean boolean66 = type56.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type56 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray67);
        java.lang.String str69 = type54.getDescriptor();
        int int70 = type54.getSort();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        boolean boolean83 = type73.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray84 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray84);
        int int86 = type71.getSize();
        boolean boolean88 = type71.equals((java.lang.Object) 181);
        int int89 = type71.getSize();
        org.mockito.asm.Type[] typeArray90 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray90);
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray90);
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray90);
        java.lang.String str94 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray90);
        org.mockito.asm.tree.analysis.Value value95 = simpleVerifier19.newValue(type36);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value97 = simpleVerifier19.newOperation(abstractInsnNode96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(C)S" + "'", str11, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "S" + "'", str16, "S");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "short" + "'", str29, "short");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "S" + "'", str30, "S");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str42, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str43, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str44, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 111 + "'", int50 == 111);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(C)S" + "'", str64, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(S)C" + "'", str68, "(S)C");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)S" + "'", str81, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(S)C" + "'", str85, "(S)C");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(C)C" + "'", str91, "(C)C");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(C)S" + "'", str92, "(C)S");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str93, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(C)B" + "'", str94, "(C)B");
        org.junit.Assert.assertNotNull(value95);
    }

    @Test
    public void test03704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03704");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("()Lorg.mockito.asm.Type;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)L(C)Z;", (java.lang.Throwable) analyzerException2);
        java.lang.String str4 = analyzerException2.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: ()Lorg.mockito.asm.Type;" + "'", str4, "org.mockito.asm.tree.analysis.AnalyzerException: ()Lorg.mockito.asm.Type;");
    }

    @Test
    public void test03705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03705");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("S");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = value25.getSize();
        org.mockito.asm.tree.analysis.Value value27 = simpleVerifier19.merge(value22, value25);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter11.copyOperation(abstractInsnNode12, value25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) "S", value28);
        int int30 = value28.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value31 = simpleVerifier6.unaryOperation(abstractInsnNode7, value28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test03706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03706");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03707");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("B");
        java.lang.String str2 = type1.getClassName();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getInternalName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        int int8 = type6.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        int int16 = type10.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type10, false);
        java.lang.Class<?> wildcardClass19 = type10.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type20, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z");
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type24, list25, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        java.util.List list29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value30 = simpleVerifier27.naryOperation(abstractInsnNode28, list29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "B" + "'", str2, "B");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "B" + "'", str4, "B");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type24);
    }

    @Test
    public void test03708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03708");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier11.merge(value14, value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value19);
        boolean boolean21 = type2.equals((java.lang.Object) analyzerException20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray35);
        java.lang.String str37 = type22.getDescriptor();
        int int38 = type22.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type22, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type22, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode43 = null;
        org.mockito.asm.tree.analysis.Value value44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value45 = simpleVerifier42.copyOperation(abstractInsnNode43, value44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(S)C" + "'", str36, "(S)C");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "C" + "'", str37, "C");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
    }

    @Test
    public void test03709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03709");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.tree.analysis.Value value8 = simpleVerifier5.newValue(type6);
        int int10 = type6.getOpcode(164);
        java.lang.String str11 = type6.getDescriptor();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str13 = type12.getClassName();
        java.lang.String str14 = type12.getDescriptor();
        int int15 = type12.getSize();
        java.lang.String str16 = type12.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type12, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode19 = null;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list37, false);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        boolean boolean52 = type42.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray53);
        int int55 = type40.getSize();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type57, false);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str61 = type60.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray70);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type74, true);
        boolean boolean77 = type60.equals((java.lang.Object) simpleVerifier76);
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type60, list78, false);
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier39.newValue(type60);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int85 = type83.getOpcode(86);
        java.lang.String str86 = type83.getDescriptor();
        java.util.List list87 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type83, list87, true);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass92 = type91.getClass();
        org.mockito.asm.Type type93 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass92);
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier89.newValue(type93);
        int int95 = value94.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value96 = simpleVerifier18.copyOperation(abstractInsnNode19, value94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "S" + "'", str7, "S");
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 164 + "'", int10 == 164);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "S" + "'", str11, "S");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "double" + "'", str13, "double");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "D" + "'", str14, "D");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)S" + "'", str50, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(S)C" + "'", str54, "(S)C");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "boolean" + "'", str61, "boolean");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)S" + "'", str71, "(C)S");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)Z" + "'", str72, "(C)Z");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 86 + "'", int85 == 86);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "S" + "'", str86, "S");
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
    }

    @Test
    public void test03710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03710");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("long");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str8 = type7.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray17);
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type7, list20, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        boolean boolean35 = type25.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray36);
        java.lang.String str38 = type23.getDescriptor();
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type23, list39, false);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type43, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str47 = type46.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray56);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray56);
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type46, list59, false);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        boolean boolean74 = type64.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray75);
        java.lang.String str77 = type62.getDescriptor();
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type62, list78, false);
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type46, list81, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type23, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode86 = null;
        java.util.List list87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value88 = simpleVerifier85.naryOperation(abstractInsnNode86, list87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "long" + "'", str2, "long");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean" + "'", str8, "boolean");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)S" + "'", str18, "(C)S");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(C)Z" + "'", str19, "(C)Z");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)S" + "'", str33, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(S)C" + "'", str37, "(S)C");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "boolean" + "'", str47, "boolean");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)S" + "'", str57, "(C)S");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(C)Z" + "'", str58, "(C)Z");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)S" + "'", str72, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(S)C" + "'", str76, "(S)C");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "C" + "'", str77, "C");
    }

    @Test
    public void test03711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03711");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)J");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        java.lang.String str13 = type9.getDescriptor();
        int int15 = type9.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        int int30 = type24.getSort();
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray31);
        java.lang.String str33 = type19.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type19, false);
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type9, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        int int47 = type41.getSort();
        java.lang.String str48 = type41.toString();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type49, list50, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        int int60 = type54.getSort();
        java.lang.String str61 = type54.getClassName();
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier52.newValue(type54);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type54, true);
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier38.newValue(type54);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str71 = type70.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray80);
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type70, list83, false);
        java.util.List list86 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type67, list86, true);
        java.lang.String str89 = type67.getClassName();
        int int91 = type67.getOpcode((int) (byte) -1);
        java.util.List list92 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type67, list92, true);
        org.mockito.asm.Type type96 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.tree.analysis.Value value97 = simpleVerifier94.newValue(type96);
        int int99 = type96.getOpcode(48);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "C" + "'", str13, "C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "S" + "'", str48, "S");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "short" + "'", str61, "short");
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "boolean" + "'", str71, "boolean");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)S" + "'", str81, "(C)S");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(C)Z" + "'", str82, "(C)Z");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "char" + "'", str89, "char");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(type96);
        org.junit.Assert.assertNotNull(value97);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 52 + "'", int99 == 52);
    }

    @Test
    public void test03712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03712");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        java.lang.String str23 = type19.getDescriptor();
        int int25 = type19.getOpcode((int) (short) 0);
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        boolean boolean47 = type37.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type37, true);
        org.mockito.asm.Type type50 = null;
        org.mockito.asm.tree.analysis.Value value51 = simpleVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        int int68 = value67.getSize();
        org.mockito.asm.tree.analysis.Value value69 = simpleVerifier61.merge(value64, value67);
        org.mockito.asm.tree.analysis.Value value70 = simpleVerifier49.merge(value54, value69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type74, list75, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        int int84 = value83.getSize();
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier77.merge(value80, value83);
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier28.merge(value69, value85);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.LONG_TYPE;
        int int88 = type87.getSort();
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier28.newValue(type87);
        java.lang.String str90 = type87.getClassName();
        int int91 = type87.getSort();
        int int93 = type87.getOpcode(130);
        java.lang.String str94 = type87.toString();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)S" + "'", str45, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 7 + "'", int88 == 7);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "long" + "'", str90, "long");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 7 + "'", int91 == 7);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 131 + "'", int93 == 131);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "J" + "'", str94, "J");
    }

    @Test
    public void test03713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03713");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass10 = type9.getClass();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        java.lang.String str13 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass10);
        boolean boolean14 = type7.equals((java.lang.Object) str13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        int int22 = type16.getSort();
        boolean boolean24 = type16.equals((java.lang.Object) 192);
        int int25 = type16.getSort();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        int int31 = type30.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        int int47 = value46.getSize();
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier40.merge(value43, value46);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter32.copyOperation(abstractInsnNode33, value46);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode50 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        int int64 = value63.getSize();
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier57.merge(value60, value63);
        int int66 = value63.getSize();
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter32.copyOperation(abstractInsnNode50, value63);
        boolean boolean68 = type30.equals((java.lang.Object) basicInterpreter32);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        int int70 = type69.getSort();
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type69, list71, false);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type74, type75, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type75, true);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier29.newValue(type30);
        boolean boolean81 = type16.equals((java.lang.Object) value80);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type16, true);
        int int84 = type7.getDimensions();
        int int85 = type7.getSort();
        java.lang.String str86 = type7.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str13, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 7 + "'", int70 == 7);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str86, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03714");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str12 = type11.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray21);
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type11, list24, false);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        boolean boolean39 = type29.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray40);
        java.lang.String str42 = type27.getDescriptor();
        int int43 = type27.getSort();
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type27, list44, true);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter6.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) analyzerException5, value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S", (java.lang.Object) 176, value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("V");
        analyzerException49.addSuppressed((java.lang.Throwable) analyzerException51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("Ljava/lang/Object;", (java.lang.Throwable) analyzerException49);
        java.lang.String str54 = analyzerException49.toString();
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "boolean" + "'", str12, "boolean");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)S" + "'", str22, "(C)S");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)Z" + "'", str23, "(C)Z");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)C" + "'", str41, "(S)C");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "C" + "'", str42, "C");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 176, but found I" + "'", str54, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 176, but found I");
    }

    @Test
    public void test03715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03715");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        java.lang.String str12 = type1.toString();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        int int28 = type13.getSize();
        boolean boolean30 = type13.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type13, false);
        java.lang.String str33 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type35, list41, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass46 = type45.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        java.lang.String str48 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type50 = type49.getElementType();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, false);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str58 = type57.getDescriptor();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier56.newValue(type57);
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type57, list60, true);
        java.lang.String str63 = type50.toString();
        org.mockito.asm.tree.analysis.Value value64 = simpleVerifier43.newValue(type50);
        java.lang.String str65 = type50.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "S" + "'", str12, "S");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str47, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str48, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "S" + "'", str58, "S");
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Lg/mockito/asm/Type;" + "'", str63, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "g.mockito.asm.Type" + "'", str65, "g.mockito.asm.Type");
    }

    @Test
    public void test03716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03716");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type4 = type1.getElementType();
        int int5 = type4.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        int int22 = value21.getSize();
        org.mockito.asm.tree.analysis.Value value23 = simpleVerifier15.merge(value18, value21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value23);
        boolean boolean25 = type6.equals((java.lang.Object) analyzerException24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray39);
        java.lang.String str41 = type26.getDescriptor();
        int int42 = type26.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type26, true);
        java.lang.String str45 = type26.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type26, false);
        java.lang.String str48 = type26.toString();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str50 = type49.getClassName();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        int int67 = value66.getSize();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier60.merge(value63, value66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value68);
        boolean boolean70 = type51.equals((java.lang.Object) analyzerException69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        boolean boolean83 = type73.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray84 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray84);
        java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray84);
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray84);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = type26.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "C" + "'", str48, "C");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "double" + "'", str50, "double");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)S" + "'", str81, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(S)C" + "'", str85, "(S)C");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(S)V" + "'", str86, "(S)V");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(S)D" + "'", str87, "(S)D");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(S)C" + "'", str88, "(S)C");
    }

    @Test
    public void test03717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03717");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)B");
        java.lang.String str2 = type1.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "B" + "'", str2, "B");
    }

    @Test
    public void test03718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03718");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: boolean");
        int int4 = type2.getOpcode(124);
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list5, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.Type type9 = null;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str12 = type11.toString();
        int int13 = type11.getDimensions();
        org.mockito.asm.Type type14 = type11.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type14, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter20 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        int int35 = value34.getSize();
        org.mockito.asm.tree.analysis.Value value36 = simpleVerifier28.merge(value31, value34);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter20.copyOperation(abstractInsnNode21, value34);
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier16.merge(value19, value34);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass42 = type41.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass42);
        java.lang.String str44 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        org.mockito.asm.tree.analysis.Value value46 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type45, value46);
        boolean boolean49 = type45.equals((java.lang.Object) 188);
        org.mockito.asm.Type type50 = type45.getElementType();
        org.mockito.asm.tree.analysis.Value value51 = simpleVerifier16.newValue(type50);
        int int52 = value51.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value53 = simpleVerifier7.copyOperation(abstractInsnNode8, value51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 128 + "'", int4 == 128);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str12, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str43, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str44, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test03719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03719");
        org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("(S)LS;");
        java.lang.Class<?> wildcardClass2 = typeArray1.getClass();
        org.junit.Assert.assertNotNull(typeArray1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test03720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03720");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str11 = type10.getDescriptor();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type10, list12, false);
        int int15 = type9.getDimensions();
        int int17 = type9.getOpcode(164);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "B" + "'", str11, "B");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 168 + "'", int17 == 168);
    }

    @Test
    public void test03721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03721");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        int int16 = type10.getSort();
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray17);
        int int19 = type5.getSize();
        java.lang.String str20 = type5.toString();
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, list21, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        java.util.List list25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value26 = simpleVerifier23.naryOperation(abstractInsnNode24, list25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "C" + "'", str20, "C");
    }

    @Test
    public void test03722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03722");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str8 = type7.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray17);
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type7, list20, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type31, true);
        int int44 = type26.getSort();
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type26, list45, true);
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list48, false);
        java.lang.String str51 = type2.getInternalName();
        java.lang.Object obj52 = null;
        boolean boolean53 = type2.equals(obj52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        int int61 = type55.getSort();
        int int62 = type55.getSize();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int65 = type64.getSort();
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type64, list66, true);
        int int69 = type64.getDimensions();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type64, false);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getType("LS;");
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type73, list74, true);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass79 = type78.getClass();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass79);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass79);
        java.lang.String str83 = type82.getDescriptor();
        org.mockito.asm.Type type84 = type82.getElementType();
        java.lang.String str85 = type82.getClassName();
        int int86 = type82.getDimensions();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getObjectType("org/mockito/asm/Type");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type88, true);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getReturnType("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        org.mockito.asm.tree.analysis.Value value93 = simpleVerifier90.newValue(type92);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)L(S)Lorg/mockito/asm/Type;;", (java.lang.Object) list74, value93);
        int int95 = value93.getSize();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean" + "'", str8, "boolean");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)S" + "'", str18, "(C)S");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(C)Z" + "'", str19, "(C)Z");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str51, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str83, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org.mockito.asm.Type" + "'", str85, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
    }

    @Test
    public void test03723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03723");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSort();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        int int15 = type9.getSort();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier7.newValue(type9);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        int int19 = type17.getOpcode(84);
        int int21 = type17.getOpcode(136);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type17, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null");
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type25, list26, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int31 = type30.getSort();
        java.lang.String str32 = type30.toString();
        org.mockito.asm.Type type33 = type30.getElementType();
        int int34 = type33.getSize();
        int int35 = type33.getSize();
        boolean boolean37 = type33.equals((java.lang.Object) "(S)L(C)Z;");
        org.mockito.asm.Type type38 = type33.getElementType();
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier28.newValue(type33);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value41 = simpleVerifier28.newOperation(abstractInsnNode40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 84 + "'", int19 == 84);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 136 + "'", int21 == 136);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str32, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
    }

    @Test
    public void test03724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03724");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, false);
        java.lang.Class<?> wildcardClass14 = type5.getClass();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        int int17 = type15.getOpcode((int) (short) 0);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str20 = type19.getDescriptor();
        java.lang.String str21 = type19.toString();
        java.lang.String str22 = type19.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type19, true);
        int int25 = type15.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "S" + "'", str20, "S");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "S" + "'", str21, "S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "short" + "'", str22, "short");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
    }

    @Test
    public void test03725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03725");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03726");
        java.lang.Object obj3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;", obj3, value13);
        java.lang.Throwable[] throwableArray20 = analyzerException19.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        analyzerException19.addSuppressed((java.lang.Throwable) analyzerException22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        int int46 = value45.getSize();
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier39.merge(value42, value45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException48);
        java.lang.Throwable[] throwableArray50 = analyzerException49.getSuppressed();
        java.lang.Throwable[] throwableArray51 = analyzerException49.getSuppressed();
        analyzerException29.addSuppressed((java.lang.Throwable) analyzerException49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Z", (java.lang.Throwable) analyzerException29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("short");
        analyzerException29.addSuppressed((java.lang.Throwable) analyzerException55);
        analyzerException24.addSuppressed((java.lang.Throwable) analyzerException55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: g/mockito/asm/Type", (java.lang.Throwable) analyzerException55);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test03727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03727");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str8 = type7.getClassName();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass11 = type10.getClass();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type13, list14, true);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str24 = type23.getDescriptor();
        org.mockito.asm.tree.analysis.Value value25 = simpleVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.Value value26 = simpleVerifier16.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        int int30 = type28.getSort();
        java.lang.Object obj31 = null;
        boolean boolean32 = type28.equals(obj31);
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier16.newValue(type28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        int int41 = type35.getSort();
        java.lang.String str42 = type35.getClassName();
        java.lang.String str43 = type35.getDescriptor();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        int int52 = type46.getSort();
        java.lang.String str53 = type46.toString();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type54, list55, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        int int65 = type59.getSort();
        java.lang.String str66 = type59.getClassName();
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier57.newValue(type59);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type59, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type44, false);
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier16.newValue(type44);
        int int73 = value72.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value74 = simpleVerifier4.unaryOperation(abstractInsnNode5, value72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "boolean" + "'", str2, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "S" + "'", str24, "S");
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "short" + "'", str42, "short");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "S" + "'", str43, "S");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "S" + "'", str53, "S");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "short" + "'", str66, "short");
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
    }

    @Test
    public void test03728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03728");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("short");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03729");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        int int16 = type0.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        boolean boolean29 = type19.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray30);
        int int32 = type17.getSize();
        boolean boolean34 = type17.equals((java.lang.Object) 181);
        int int35 = type17.getSize();
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        boolean boolean49 = type39.equals((java.lang.Object) '4');
        java.lang.String str50 = type39.toString();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        boolean boolean63 = type53.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray64);
        int int66 = type51.getSize();
        boolean boolean68 = type51.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type51, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type51, true);
        java.lang.String str73 = type51.getDescriptor();
        java.lang.String str74 = type51.getDescriptor();
        int int75 = type51.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(C)S" + "'", str27, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)C" + "'", str37, "(C)C");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)S" + "'", str47, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "S" + "'", str50, "S");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)S" + "'", str61, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(S)C" + "'", str65, "(S)C");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "C" + "'", str73, "C");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "C" + "'", str74, "C");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
    }

    @Test
    public void test03730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03730");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        org.mockito.asm.Type type21 = null;
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        boolean boolean56 = type46.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type46, true);
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier58.merge(value63, value78);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier20.merge(value37, value78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type84, list85, true);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray89 = new org.mockito.asm.Type[] { type88 };
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray89);
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier20.newValue(type82);
        org.mockito.asm.Type type93 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int95 = type93.getOpcode(86);
        org.mockito.asm.tree.analysis.Value value96 = simpleVerifier20.newValue(type93);
        java.lang.Object obj97 = null;
        boolean boolean98 = type93.equals(obj97);
        int int99 = type93.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(C)S" + "'", str90, "(C)S");
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 86 + "'", int95 == 86);
        org.junit.Assert.assertNotNull(value96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 4 + "'", int99 == 4);
    }

    @Test
    public void test03731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03731");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        int int5 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        int int19 = type13.getSort();
        int int20 = type13.getSize();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int23 = type22.getSort();
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type22, list24, true);
        int int27 = type22.getDimensions();
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, list28, true);
        org.mockito.asm.Type type31 = null;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        int int37 = type35.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, false);
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list40, false);
        java.lang.String str43 = type33.getInternalName();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        boolean boolean56 = type46.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray57);
        java.lang.String str59 = type44.getDescriptor();
        int int60 = type44.getSort();
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type44, list61, true);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type72 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray73);
        boolean boolean76 = type66.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type66 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray77);
        int int79 = type64.getSize();
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier30.newValue(type64);
        int int82 = type64.getSort();
        // The following exception was thrown during execution in test generation
        try {
            int int83 = type64.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 4 + "'", int37 == 4);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "C" + "'", str43, "C");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(S)C" + "'", str58, "(S)C");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "C" + "'", str59, "C");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(C)S" + "'", str74, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(S)C" + "'", str78, "(S)C");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
    }

    @Test
    public void test03732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03732");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)LC)Lorg.mockito.asm.tree.analysis.AnalyzerException;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test03733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03733");
        org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("SC)L(C)LC");
        org.junit.Assert.assertNotNull(typeArray1);
    }

    @Test
    public void test03734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03734");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        org.mockito.asm.Type type21 = null;
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        boolean boolean56 = type46.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type46, true);
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier58.merge(value63, value78);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier20.merge(value37, value78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type84, list85, true);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray89 = new org.mockito.asm.Type[] { type88 };
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray89);
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier20.newValue(type82);
        org.mockito.asm.Type type93 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int95 = type93.getOpcode(86);
        org.mockito.asm.tree.analysis.Value value96 = simpleVerifier20.newValue(type93);
        int int98 = type93.getOpcode(55);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(C)S" + "'", str90, "(C)S");
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 86 + "'", int95 == 86);
        org.junit.Assert.assertNotNull(value96);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 55 + "'", int98 == 55);
    }

    @Test
    public void test03735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03735");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        int int5 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type12 = type11.getElementType();
        int int13 = type11.getSort();
        org.mockito.asm.Type type14 = type11.getElementType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str9, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(type14);
    }

    @Test
    public void test03736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03736");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type4 = type1.getElementType();
        int int5 = type4.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        int int22 = value21.getSize();
        org.mockito.asm.tree.analysis.Value value23 = simpleVerifier15.merge(value18, value21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value23);
        boolean boolean25 = type6.equals((java.lang.Object) analyzerException24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray39);
        java.lang.String str41 = type26.getDescriptor();
        int int42 = type26.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type26, true);
        java.lang.String str45 = type26.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type26, false);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getReturnType("B");
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier47.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        int int55 = type53.getOpcode(8192);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, true);
        java.lang.String str58 = type51.getDescriptor();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier47.newValue(type51);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value61 = simpleVerifier47.newOperation(abstractInsnNode60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8196 + "'", int55 == 8196);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "D" + "'", str58, "D");
        org.junit.Assert.assertNotNull(value59);
    }

    @Test
    public void test03737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03737");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)Z;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("L(SC)L(C)LC;;;", (java.lang.Throwable) analyzerException2);
        java.lang.String str4 = analyzerException3.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: L(SC)L(C)LC;;;" + "'", str4, "org.mockito.asm.tree.analysis.AnalyzerException: L(SC)L(C)LC;;;");
    }

    @Test
    public void test03738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03738");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("hi!");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType("(C)L(C)LC;");
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str15 = type14.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        int int29 = value28.getSize();
        org.mockito.asm.tree.analysis.Value value30 = simpleVerifier22.merge(value25, value28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: hi!", (java.lang.Object) str15, value25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)C", (java.lang.Object) 125, value25);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass36 = type35.getClass();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        java.lang.String str38 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass36);
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        int int54 = value53.getSize();
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier47.merge(value50, value53);
        int int56 = value55.getSize();
        int int57 = value55.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("(SC)C", (java.lang.Object) type40, value55);
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier10.merge(value25, value55);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value61 = simpleVerifier10.newOperation(abstractInsnNode60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "I" + "'", str15, "I");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str38, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/asm/Type" + "'", str39, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(value59);
    }

    @Test
    public void test03739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03739");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(SC)Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test03740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03740");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int2 = type1.getSort();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        boolean boolean15 = type5.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type5 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray16);
        int int18 = type3.getSize();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type20, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str28 = type27.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray37);
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type27, list40, false);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray52);
        boolean boolean55 = type45.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray56);
        java.lang.String str58 = type43.getDescriptor();
        int int59 = type43.getSort();
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type43, list60, true);
        boolean boolean63 = type20.equals((java.lang.Object) type24);
        int int64 = type20.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type20, true);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type68, true);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str72 = type71.getDescriptor();
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier70.newValue(type71);
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.newValue(type71);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type75, type76, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str80 = type79.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type84, list85, true);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray89 = new org.mockito.asm.Type[] { type88 };
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray89);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type79, typeArray89);
        java.util.List list92 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type76, type79, list92, false);
        org.mockito.asm.Type type96 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value97 = simpleVerifier94.newValue(type96);
        org.mockito.asm.tree.analysis.Value value98 = simpleVerifier66.newValue(type96);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = type96.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)S" + "'", str13, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(S)C" + "'", str17, "(S)C");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "boolean" + "'", str28, "boolean");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)Z" + "'", str39, "(C)Z");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)S" + "'", str53, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(S)C" + "'", str57, "(S)C");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "I" + "'", str72, "I");
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "boolean" + "'", str80, "boolean");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(C)S" + "'", str90, "(C)S");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(C)Z" + "'", str91, "(C)Z");
        org.junit.Assert.assertNotNull(type96);
        org.junit.Assert.assertNotNull(value97);
        org.junit.Assert.assertNotNull(value98);
    }

    @Test
    public void test03741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03741");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        int int1 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        int int36 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter2.copyOperation(abstractInsnNode20, value33);
        boolean boolean38 = type0.equals((java.lang.Object) basicInterpreter2);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        int int40 = type39.getSort();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type39, list41, false);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        int int47 = type44.getOpcode((-1));
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        int int55 = type49.getSort();
        java.lang.String str56 = type49.toString();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type57, list58, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        int int68 = type62.getSort();
        java.lang.String str69 = type62.getClassName();
        org.mockito.asm.tree.analysis.Value value70 = simpleVerifier60.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type74, list75, true);
        java.lang.String str78 = type72.toString();
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type72, list79, false);
        int int83 = type72.getOpcode(113);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type72, false);
        java.lang.String str86 = type72.toString();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7 + "'", int1 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "S" + "'", str56, "S");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "short" + "'", str69, "short");
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "S" + "'", str78, "S");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 113 + "'", int83 == 113);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "S" + "'", str86, "S");
    }

    @Test
    public void test03742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03742");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier11.merge(value14, value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)S", (java.lang.Object) 175, value19);
        java.lang.Throwable[] throwableArray22 = analyzerException21.getSuppressed();
        java.lang.Throwable[] throwableArray23 = analyzerException21.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        int int41 = value40.getSize();
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier34.merge(value37, value40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Z", (java.lang.Throwable) analyzerException44);
        analyzerException21.addSuppressed((java.lang.Throwable) analyzerException45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Throwable) analyzerException21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.SimpleVerifier", (java.lang.Throwable) analyzerException50);
        analyzerException21.addSuppressed((java.lang.Throwable) analyzerException50);
        java.lang.String str53 = analyzerException21.toString();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (S)S: expected 175, but found I" + "'", str53, "org.mockito.asm.tree.analysis.AnalyzerException: (S)S: expected 175, but found I");
    }

    @Test
    public void test03743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03743");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, false);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getObjectType("(S)C");
        int int16 = type15.getSort();
        java.lang.String str17 = type15.getClassName();
        org.mockito.asm.Type type18 = type15.getElementType();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type21 = type20.getElementType();
        boolean boolean22 = type15.equals((java.lang.Object) type21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list25, false);
        org.mockito.asm.tree.analysis.Value value28 = simpleVerifier13.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        java.util.List list30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value31 = simpleVerifier13.naryOperation(abstractInsnNode29, list30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(S)C" + "'", str17, "(S)C");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value28);
    }

    @Test
    public void test03744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03744");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str1 = type0.getClassName();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier11.merge(value14, value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value19);
        boolean boolean21 = type2.equals((java.lang.Object) analyzerException20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray35);
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray35);
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray35);
        java.lang.String str39 = type0.getDescriptor();
        java.lang.String str40 = type0.toString();
        java.lang.String str41 = type0.getDescriptor();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "double" + "'", str1, "double");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(S)C" + "'", str36, "(S)C");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(S)V" + "'", str37, "(S)V");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)D" + "'", str38, "(S)D");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "D" + "'", str39, "D");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "D" + "'", str40, "D");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "D" + "'", str41, "D");
    }

    @Test
    public void test03745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03745");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Ldouble;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        int int4 = type3.getSize();
        java.lang.String str5 = type3.getClassName();
        org.mockito.asm.Type type6 = type3.getElementType();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type6, list7, true);
        java.lang.String str10 = type1.getInternalName();
        java.lang.String str11 = type1.getInternalName();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type13, true);
        java.lang.Class<?> wildcardClass16 = type12.getClass();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type20, list21, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        java.lang.String str32 = type28.getDescriptor();
        int int34 = type28.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        int int49 = type43.getSort();
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray50);
        java.lang.String str52 = type38.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type38, false);
        org.mockito.asm.Type type55 = null;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type55, list56, true);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type67 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray68);
        boolean boolean71 = type61.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray72);
        int int74 = type59.getSize();
        boolean boolean76 = type59.equals((java.lang.Object) 181);
        java.lang.String str77 = type59.getClassName();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier58.newValue(type59);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value79 = simpleVerifier23.unaryOperation(abstractInsnNode24, value78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I" + "'", str5, "org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "double" + "'", str10, "double");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4 + "'", int49 == 4);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(S)C" + "'", str51, "(S)C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(C)S" + "'", str69, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(S)C" + "'", str73, "(S)C");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "char" + "'", str77, "char");
        org.junit.Assert.assertNotNull(value78);
    }

    @Test
    public void test03746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03746");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)C");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.FLOAT_TYPE;
        int int4 = type2.getOpcode(110);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value22);
        boolean boolean24 = type5.equals((java.lang.Object) analyzerException23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        boolean boolean37 = type27.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray38);
        java.lang.String str40 = type25.getDescriptor();
        int int41 = type25.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type25, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str45 = type44.getDescriptor();
        boolean boolean46 = type25.equals((java.lang.Object) type44);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass50 = type49.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass50);
        java.lang.String str52 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        org.mockito.asm.tree.analysis.Value value54 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type53, value54);
        java.lang.String str56 = type53.getInternalName();
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type53, list57, true);
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type44, list60, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        int int69 = type67.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier79.newValue(type80);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        int int85 = value84.getSize();
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier78.merge(value81, value84);
        int int87 = value84.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException88 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Object) type67, value84);
        int int89 = type67.getSize();
        java.lang.String str90 = type67.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier92 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type67, false);
        int int93 = type44.getSort();
        java.util.List list94 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier96 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type44, list94, false);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 112 + "'", int4 == 112);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)C" + "'", str39, "(S)C");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "I" + "'", str45, "I");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str51, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str52, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/Type" + "'", str56, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 4 + "'", int69 == 4);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "S" + "'", str90, "S");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 5 + "'", int93 == 5);
    }

    @Test
    public void test03747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03747");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;: expected I, but found I");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.LONG_TYPE;
        int int3 = type2.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode5 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.Value value21 = basicInterpreter4.copyOperation(abstractInsnNode5, value18);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode22 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        int int38 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value39 = basicInterpreter4.copyOperation(abstractInsnNode22, value35);
        boolean boolean40 = type2.equals((java.lang.Object) basicInterpreter4);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.LONG_TYPE;
        int int42 = type41.getSort();
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type41, list43, false);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type47, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type47, true);
        int int52 = type47.getSort();
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type47, list53, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value57 = simpleVerifier55.newOperation(abstractInsnNode56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 7 + "'", int3 == 7);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 7 + "'", int42 == 7);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
    }

    @Test
    public void test03748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03748");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier19.newValue(type21);
        org.mockito.asm.Type type23 = null;
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier19.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        int int32 = type26.getSort();
        java.lang.String str33 = type26.toString();
        int int35 = type26.getOpcode(99);
        org.mockito.asm.tree.analysis.Value value36 = simpleVerifier19.newValue(type26);
        int int37 = value36.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 99 + "'", int35 == 99);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
    }

    @Test
    public void test03749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03749");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int8 = type7.getSize();
        int int9 = type7.getSort();
        java.lang.String str10 = type7.getDescriptor();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        boolean boolean23 = type13.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray24);
        int int26 = type11.getSize();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type28, false);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str32 = type31.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type45, true);
        boolean boolean48 = type31.equals((java.lang.Object) simpleVerifier47);
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type31, list49, false);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.BYTE_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type52, list53, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type11, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value59 = simpleVerifier57.newOperation(abstractInsnNode58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(S)C" + "'", str25, "(S)C");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "boolean" + "'", str32, "boolean");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)Z" + "'", str43, "(C)Z");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type52);
    }

    @Test
    public void test03750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03750");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier9.merge(value12, value15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        int int35 = value34.getSize();
        org.mockito.asm.tree.analysis.Value value36 = simpleVerifier28.merge(value31, value34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) 0, value34);
        analyzerException18.addSuppressed((java.lang.Throwable) analyzerException37);
        java.lang.Throwable[] throwableArray39 = analyzerException18.getSuppressed();
        java.lang.Class<?> wildcardClass40 = analyzerException18.getClass();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test03751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03751");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lg/mockito/asm/Type;");
        java.lang.String str2 = type1.getInternalName();
        java.lang.String str3 = type1.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "g/mockito/asm/Type" + "'", str2, "g/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lg/mockito/asm/Type;" + "'", str3, "Lg/mockito/asm/Type;");
    }

    @Test
    public void test03752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03752");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        int int5 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        int int19 = type13.getSort();
        int int20 = type13.getSize();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int23 = type22.getSort();
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type22, list24, true);
        int int27 = type22.getDimensions();
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, list28, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray39);
        boolean boolean42 = type32.equals((java.lang.Object) '4');
        org.mockito.asm.Type type43 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type43, list44, false);
        java.lang.String str47 = type43.getClassName();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type49, false);
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier30.newValue(type43);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass55 = type54.getClass();
        java.lang.String str56 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass55);
        java.lang.String str57 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass55);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass55);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        org.mockito.asm.Type[] typeArray62 = org.mockito.asm.Type.getArgumentTypes("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray62);
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray62);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(C)S" + "'", str40, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "int" + "'", str47, "int");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str56, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str57, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/Type" + "'", str59, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str63, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(C)I" + "'", str64, "(C)I");
    }

    @Test
    public void test03753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03753");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Z", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/SimpleVerifier", (java.lang.Throwable) analyzerException4);
        java.lang.Throwable[] throwableArray6 = analyzerException5.getSuppressed();
        java.lang.Class<?> wildcardClass7 = analyzerException5.getClass();
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str8, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test03754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03754");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSort();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        int int15 = type9.getSort();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier7.newValue(type9);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str24 = type23.getDescriptor();
        org.mockito.asm.tree.analysis.Value value25 = simpleVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.Value value26 = simpleVerifier7.newValue(type23);
        int int28 = type23.getOpcode(129);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type30, list31, true);
        int int34 = type30.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "S" + "'", str24, "S");
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 129 + "'", int28 == 129);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
    }

    @Test
    public void test03755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03755");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("double");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        int int16 = type10.getSort();
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray17);
        int int19 = type5.getSize();
        java.lang.String str20 = type5.toString();
        boolean boolean22 = type5.equals((java.lang.Object) 3);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = type26.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, false);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        boolean boolean43 = type33.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray44);
        java.lang.String str46 = type31.getDescriptor();
        int int47 = type31.getSort();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        boolean boolean60 = type50.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray61);
        int int63 = type48.getSize();
        boolean boolean65 = type48.equals((java.lang.Object) 181);
        int int66 = type48.getSize();
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray67);
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray67);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type24, false);
        boolean boolean72 = type1.equals((java.lang.Object) simpleVerifier71);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass77 = type76.getClass();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass77);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass77);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass77);
        java.lang.String str81 = type80.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list86 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type83, type85, list86, true);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray90 = new org.mockito.asm.Type[] { type89 };
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type83, typeArray90);
        boolean boolean93 = type83.equals((java.lang.Object) '4');
        java.lang.String str94 = type83.toString();
        int int95 = type83.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier97 = new org.mockito.asm.tree.analysis.SimpleVerifier(type80, type83, true);
        org.mockito.asm.tree.analysis.Value value98 = simpleVerifier74.newValue(type80);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier71.copyOperation(abstractInsnNode73, value98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "C" + "'", str20, "C");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(S)C" + "'", str45, "(S)C");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "C" + "'", str46, "C");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(C)S" + "'", str58, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(S)C" + "'", str62, "(S)C");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(C)C" + "'", str68, "(C)C");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(C)LC;" + "'", str69, "(C)LC;");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str81, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(C)S" + "'", str91, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "S" + "'", str94, "S");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 4 + "'", int95 == 4);
        org.junit.Assert.assertNotNull(value98);
    }

    @Test
    public void test03756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03756");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray20);
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type10, list23, false);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray39);
        java.lang.String str41 = type26.getDescriptor();
        int int42 = type26.getSort();
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type26, list43, true);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter5.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) analyzerException4, value46);
        java.lang.Throwable[] throwableArray48 = analyzerException4.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I: expected org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I, but found I", (java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: C", (java.lang.Throwable) analyzerException4);
        java.lang.Throwable[] throwableArray51 = analyzerException50.getSuppressed();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean" + "'", str11, "boolean");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)Z" + "'", str22, "(C)Z");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test03757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03757");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.FLOAT_TYPE;
        int int2 = type0.getOpcode(110);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value20);
        boolean boolean22 = type3.equals((java.lang.Object) analyzerException21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        boolean boolean35 = type25.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray36);
        java.lang.String str38 = type23.getDescriptor();
        int int39 = type23.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type23, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str43 = type42.getDescriptor();
        boolean boolean44 = type23.equals((java.lang.Object) type42);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass48 = type47.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        org.mockito.asm.tree.analysis.Value value52 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type51, value52);
        java.lang.String str54 = type51.getInternalName();
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type51, list55, true);
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type42, list58, true);
        org.mockito.asm.Type type61 = null;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        int int67 = type65.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, false);
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list70, false);
        java.lang.String str73 = type63.getClassName();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier60.newValue(type63);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode75 = null;
        java.util.List list76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value77 = simpleVerifier60.naryOperation(abstractInsnNode75, list76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 112 + "'", int2 == 112);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)S" + "'", str33, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(S)C" + "'", str37, "(S)C");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "I" + "'", str43, "I");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str50, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/asm/Type" + "'", str54, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "C" + "'", str73, "C");
        org.junit.Assert.assertNotNull(value74);
    }

    @Test
    public void test03758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03758");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str6 = type5.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray15);
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type5, list18, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        boolean boolean33 = type23.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray34);
        java.lang.String str36 = type21.getDescriptor();
        int int37 = type21.getSort();
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type21, list38, true);
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter0.newValue(type21);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type43, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type43, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        int int55 = type49.getSort();
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier47.newValue(type49);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode57 = null;
        org.mockito.asm.tree.analysis.Value value58 = null;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, false);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str66 = type65.getDescriptor();
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier64.newValue(type65);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str70 = type69.getClassName();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass73 = type72.getClass();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass73);
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type75, list76, true);
        java.lang.String str79 = type69.getDescriptor();
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier64.newValue(type69);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value81 = simpleVerifier47.binaryOperation(abstractInsnNode57, value58, value80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "boolean" + "'", str6, "boolean");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)Z" + "'", str17, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)C" + "'", str35, "(S)C");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "C" + "'", str36, "C");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "S" + "'", str66, "S");
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "S" + "'", str70, "S");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "LS;" + "'", str79, "LS;");
        org.junit.Assert.assertNotNull(value80);
    }

    @Test
    public void test03759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03759");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int2 = type1.getSort();
        java.lang.Class<?> wildcardClass3 = type1.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass3);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        java.lang.String str12 = type10.getDescriptor();
        int int13 = type10.getSize();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str19 = type18.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray28);
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type18, list31, false);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value36 = simpleVerifier33.newValue(type35);
        java.lang.String str37 = type35.toString();
        java.lang.String str38 = type35.toString();
        java.lang.String str39 = type35.getClassName();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, false);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        boolean boolean58 = type48.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray59);
        java.lang.String str61 = type46.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        java.lang.String str69 = type65.getDescriptor();
        int int71 = type65.getOpcode((int) (short) 0);
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type65, list72, true);
        int int75 = type46.getSort();
        java.lang.String str76 = type46.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type46, false);
        boolean boolean79 = type35.equals((java.lang.Object) type40);
        org.mockito.asm.Type[] typeArray81 = org.mockito.asm.Type.getArgumentTypes("(S)B");
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray81);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray81);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type10, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode86 = null;
        org.mockito.asm.tree.analysis.Value value87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value88 = simpleVerifier85.unaryOperation(abstractInsnNode86, value87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "D" + "'", str12, "D");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "boolean" + "'", str19, "boolean");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)Z" + "'", str30, "(C)Z");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "C" + "'", str37, "C");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "char" + "'", str39, "char");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)C" + "'", str60, "(S)C");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "C" + "'", str61, "C");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "C" + "'", str76, "C");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(S)Z" + "'", str82, "(S)Z");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(S)D" + "'", str83, "(S)D");
    }

    @Test
    public void test03760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03760");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        java.lang.String str17 = type3.getDescriptor();
        int int19 = type3.getOpcode(185);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list37, false);
        java.lang.String str40 = type24.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        boolean boolean54 = type44.equals((java.lang.Object) '4');
        org.mockito.asm.Type type55 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type55, list56, false);
        java.lang.String str59 = type55.getClassName();
        int int60 = type55.getSort();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        boolean boolean73 = type63.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type63 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray74);
        int int76 = type61.getSize();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type78, false);
        boolean boolean82 = type78.equals((java.lang.Object) 23);
        java.lang.String str83 = type78.getClassName();
        java.util.List list84 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type78, list84, true);
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier42.newValue(type55);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier90 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type91 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value92 = basicVerifier90.newValue(type91);
        int int93 = type91.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier95 = new org.mockito.asm.tree.analysis.SimpleVerifier(type89, type91, false);
        java.lang.String str96 = type89.toString();
        org.mockito.asm.tree.analysis.Value value97 = simpleVerifier42.newValue(type89);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = type89.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 185 + "'", int19 == 185);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "boolean" + "'", str40, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "int" + "'", str59, "int");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)S" + "'", str71, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(S)C" + "'", str75, "(S)C");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "char" + "'", str83, "char");
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 4 + "'", int93 == 4);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "LC;" + "'", str96, "LC;");
        org.junit.Assert.assertNotNull(value97);
    }

    @Test
    public void test03761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03761");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: g.mockito.asm.Type: expected true, but found I");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 95");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03762");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        boolean boolean22 = type8.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type31, true);
        org.mockito.asm.Type type44 = null;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier43.newValue(type46);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type46, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode50 = null;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str56 = type55.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray65);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray65);
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type55, list68, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type74, list75, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list82 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type81, list82, true);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray86 = new org.mockito.asm.Type[] { type85 };
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type79, typeArray86);
        boolean boolean89 = type79.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier91 = new org.mockito.asm.tree.analysis.SimpleVerifier(type74, type79, true);
        int int92 = type74.getSort();
        java.util.List list93 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier95 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type74, list93, true);
        org.mockito.asm.Type type96 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value97 = simpleVerifier95.newValue(type96);
        int int98 = value97.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier49.copyOperation(abstractInsnNode50, value97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "boolean" + "'", str56, "boolean");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(C)S" + "'", str66, "(C)S");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)Z" + "'", str67, "(C)Z");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(C)S" + "'", str87, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 2 + "'", int92 == 2);
        org.junit.Assert.assertNotNull(type96);
        org.junit.Assert.assertNotNull(value97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
    }

    @Test
    public void test03763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03763");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str8 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/Type" + "'", str6, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org/mockito/asm/Type" + "'", str8, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str9, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/Type" + "'", str11, "org/mockito/asm/Type");
    }

    @Test
    public void test03764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03764");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value14 = simpleVerifier12.newOperation(abstractInsnNode13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
    }

    @Test
    public void test03765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03765");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str4 = type3.toString();
        int int5 = type3.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        int int49 = value48.getSize();
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier42.merge(value45, value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        int int64 = value63.getSize();
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier57.merge(value60, value63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type69, list70, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        int int79 = value78.getSize();
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier72.merge(value75, value78);
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier42.merge(value63, value80);
        org.mockito.asm.tree.analysis.Value value82 = simpleVerifier12.merge(value35, value80);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.LONG_TYPE;
        int int84 = type83.getSort();
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier12.newValue(type83);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getType("S");
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier12.newValue(type87);
        java.lang.String str89 = type87.getDescriptor();
        org.mockito.asm.Type type90 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str91 = type90.getClassName();
        java.util.List list92 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type87, type90, list92, true);
        boolean boolean95 = type3.equals((java.lang.Object) type90);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier97 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type90, true);
        int int98 = type1.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 7 + "'", int84 == 7);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "S" + "'", str89, "S");
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "boolean" + "'", str91, "boolean");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 10 + "'", int98 == 10);
    }

    @Test
    public void test03766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03766");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value20);
        boolean boolean22 = type3.equals((java.lang.Object) analyzerException21);
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier0.newValue(type3);
        org.mockito.asm.Type type24 = null;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier0.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value27 = basicVerifier0.newOperation(abstractInsnNode26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(value23);
        org.junit.Assert.assertNotNull(value25);
    }

    @Test
    public void test03767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03767");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)B");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        java.lang.String str8 = type7.getDescriptor();
        org.mockito.asm.Type type9 = type7.getElementType();
        java.lang.String str10 = type7.getClassName();
        int int11 = type7.getDimensions();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getObjectType("org/mockito/asm/Type");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type13, true);
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list16, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode19 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter20 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type22, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str26 = type25.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray35);
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type25, list38, false);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        boolean boolean53 = type43.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray54);
        java.lang.String str56 = type41.getDescriptor();
        int int57 = type41.getSort();
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type41, list58, true);
        org.mockito.asm.tree.analysis.Value value61 = basicInterpreter20.newValue(type41);
        int int62 = value61.getSize();
        int int63 = value61.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value64 = simpleVerifier18.copyOperation(abstractInsnNode19, value61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.mockito.asm.Type" + "'", str10, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "boolean" + "'", str26, "boolean");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)Z" + "'", str37, "(C)Z");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)S" + "'", str51, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(S)C" + "'", str55, "(S)C");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "C" + "'", str56, "C");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
    }

    @Test
    public void test03768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03768");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("rg.mockito.asm.tree.analysis.AnalyzerException: LLS");
        java.lang.Throwable[] throwableArray2 = analyzerException1.getSuppressed();
        java.lang.Throwable[] throwableArray3 = analyzerException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test03769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03769");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray18);
        boolean boolean21 = type11.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray22);
        java.lang.String str24 = type9.getDescriptor();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int28 = type26.getOpcode(86);
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type26, list29, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type9, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        boolean boolean48 = type38.equals((java.lang.Object) '4');
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type49, list50, false);
        java.lang.String str53 = type49.getClassName();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type55, false);
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type55, list58, true);
        int int61 = type35.getSize();
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier33.newValue(type35);
        java.lang.Class<?> wildcardClass63 = simpleVerifier33.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(C)S" + "'", str19, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(S)C" + "'", str23, "(S)C");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "C" + "'", str24, "C");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 86 + "'", int28 == 86);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(C)S" + "'", str46, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "int" + "'", str53, "int");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test03770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03770");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("C");
        int int3 = type1.getOpcode(160);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type6 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray17);
        int int19 = type4.getSize();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type21, false);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type38, true);
        boolean boolean41 = type24.equals((java.lang.Object) simpleVerifier40);
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type24, list42, false);
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list45, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode48 = null;
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str54 = type53.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type62 };
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray63);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray63);
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type53, list66, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type72, list73, true);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type76 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray77);
        boolean boolean80 = type70.equals((java.lang.Object) '4');
        boolean boolean82 = type70.equals((java.lang.Object) 193);
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier68.newValue(type70);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value84 = simpleVerifier47.unaryOperation(abstractInsnNode48, value83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 160 + "'", int3 == 160);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "boolean" + "'", str54, "boolean");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(C)S" + "'", str64, "(C)S");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(C)Z" + "'", str65, "(C)Z");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(C)S" + "'", str78, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(value83);
    }

    @Test
    public void test03771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03771");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int19 = type17.getOpcode(86);
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str28 = type27.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray37);
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type27, list40, false);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str44 = type43.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray53);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray53);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray53);
        java.lang.Class<?> wildcardClass58 = type17.getClass();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        java.lang.String str61 = type60.getInternalName();
        int int63 = type60.getOpcode(51);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 86 + "'", int19 == 86);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "boolean" + "'", str28, "boolean");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)Z" + "'", str39, "(C)Z");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "boolean" + "'", str44, "boolean");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)Z" + "'", str55, "(C)Z");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)C" + "'", str56, "(C)C");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)S" + "'", str57, "(C)S");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/Type" + "'", str61, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 55 + "'", int63 == 55);
    }

    @Test
    public void test03772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03772");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)C");
        int int2 = type1.getSort();
        int int3 = type1.getSort();
        org.mockito.asm.Type type4 = type1.getElementType();
        java.lang.String str5 = type1.getDescriptor();
        java.lang.Class<?> wildcardClass6 = type1.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "L(S)C;" + "'", str5, "L(S)C;");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test03773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03773");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)F");
        int int2 = type1.getDimensions();
        java.lang.String str3 = type1.toString();
        int int4 = type1.getSize();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass7 = type6.getClass();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        java.lang.String str12 = type11.getDescriptor();
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type11, list13, true);
        int int16 = type1.getDimensions();
        org.mockito.asm.Type type17 = type1.getElementType();
        int int19 = type17.getOpcode(168);
        java.lang.String str20 = type17.getClassName();
        java.lang.String str21 = type17.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L(S)F;" + "'", str3, "L(S)F;");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str9, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str12, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 168 + "'", int19 == 168);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "short" + "'", str20, "short");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "S" + "'", str21, "S");
    }

    @Test
    public void test03774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03774");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (short) 0);
        java.lang.String str10 = type3.getClassName();
        org.mockito.asm.Type type11 = null;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type11, list12, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value16 = simpleVerifier14.newOperation(abstractInsnNode15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "char" + "'", str10, "char");
    }

    @Test
    public void test03775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03775");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int2 = type1.getSort();
        int int4 = type1.getOpcode(113);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        java.lang.String str17 = type6.toString();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        boolean boolean30 = type20.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray31);
        int int33 = type18.getSize();
        boolean boolean35 = type18.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type18, false);
        java.lang.String str38 = type18.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type18, false);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        int int46 = type44.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, false);
        java.lang.String str49 = type42.toString();
        java.lang.String str50 = type42.toString();
        org.mockito.asm.tree.analysis.Value value51 = simpleVerifier40.newValue(type42);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode52 = null;
        java.util.List list53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value54 = simpleVerifier40.naryOperation(abstractInsnNode52, list53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 117 + "'", int4 == 117);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "S" + "'", str17, "S");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)S" + "'", str28, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LC;" + "'", str49, "LC;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "LC;" + "'", str50, "LC;");
        org.junit.Assert.assertNotNull(value51);
    }

    @Test
    public void test03776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03776");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str2 = type1.toString();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str10 = type9.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray19);
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type9, list22, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        boolean boolean43 = type33.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type33, true);
        int int46 = type28.getSort();
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type28, list47, true);
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list50, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, true);
        java.lang.String str55 = type4.getInternalName();
        int int56 = type4.getSort();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected true, but found I");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type58, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode61 = null;
        java.util.List list62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value63 = simpleVerifier60.naryOperation(abstractInsnNode61, list62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L(C)Z;" + "'", str2, "L(C)Z;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "boolean" + "'", str10, "boolean");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)Z" + "'", str21, "(C)Z");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str55, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNotNull(type58);
    }

    @Test
    public void test03777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03777");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        boolean boolean32 = type22.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray33);
        int int35 = type20.getSize();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type37, false);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str41 = type40.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray50);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type54, true);
        boolean boolean57 = type40.equals((java.lang.Object) simpleVerifier56);
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type40, list58, false);
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier19.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        boolean boolean73 = type63.equals((java.lang.Object) '4');
        java.lang.String str74 = type63.toString();
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type63, list75, true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str78 = type40.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)S" + "'", str30, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "boolean" + "'", str41, "boolean");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)S" + "'", str51, "(C)S");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)Z" + "'", str52, "(C)Z");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)S" + "'", str71, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "S" + "'", str74, "S");
    }

    @Test
    public void test03778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03778");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        org.mockito.asm.Type type21 = null;
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        boolean boolean56 = type46.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type46, true);
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier58.merge(value63, value78);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier20.merge(value37, value78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type84, list85, true);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray89 = new org.mockito.asm.Type[] { type88 };
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray89);
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier20.newValue(type82);
        org.mockito.asm.Type type93 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int95 = type93.getOpcode(86);
        org.mockito.asm.tree.analysis.Value value96 = simpleVerifier20.newValue(type93);
        int int98 = type93.getOpcode(95);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = type93.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(C)S" + "'", str90, "(C)S");
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 86 + "'", int95 == 86);
        org.junit.Assert.assertNotNull(value96);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 95 + "'", int98 == 95);
    }

    @Test
    public void test03779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03779");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: L(SC)L(C)LC;;;");
    }

    @Test
    public void test03780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03780");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type2 = type1.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test03781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03781");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.tree.analysis.Value value8 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type7, value8);
        java.lang.String str10 = type7.getInternalName();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getReturnType("LC;");
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        int int28 = type13.getSize();
        java.lang.String str29 = type13.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type13, false);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass34 = type33.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        java.lang.String str36 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        int int46 = type44.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, false);
        java.lang.String str49 = type42.toString();
        org.mockito.asm.Type[] typeArray51 = org.mockito.asm.Type.getArgumentTypes("(C)S");
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray51);
        java.lang.String str54 = type40.getInternalName();
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier31.newValue(type40);
        int int56 = value55.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected 0, but found I", (java.lang.Object) type7, value55);
        java.lang.Class<?> wildcardClass58 = type7.getClass();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/Type" + "'", str10, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str35, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str36, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org/mockito/asm/Type" + "'", str38, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LC;" + "'", str49, "LC;");
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)LC;" + "'", str52, "(C)LC;");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str53, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/asm/Type" + "'", str54, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test03782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03782");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, false);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str18 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier10.newValue(type17);
        org.mockito.asm.Type type21 = null;
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier10.newValue(type21);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        java.util.List list24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value25 = simpleVerifier10.naryOperation(abstractInsnNode23, list24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "S" + "'", str18, "S");
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(value22);
    }

    @Test
    public void test03783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03783");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        boolean boolean31 = type21.equals((java.lang.Object) '4');
        boolean boolean33 = type21.equals((java.lang.Object) 193);
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier19.newValue(type21);
        int int36 = type21.getOpcode(113);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type38, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str42 = type41.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray51);
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type41, list54, false);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        boolean boolean69 = type59.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray70);
        java.lang.String str72 = type57.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type74, type76, list77, true);
        java.lang.String str80 = type76.getDescriptor();
        int int82 = type76.getOpcode((int) (short) 0);
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type76, list83, true);
        int int86 = type57.getSort();
        java.util.List list87 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type57, list87, false);
        java.util.List list90 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier92 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type41, list90, false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str93 = type41.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 113 + "'", int36 == 113);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "boolean" + "'", str42, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)Z" + "'", str53, "(C)Z");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)S" + "'", str67, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(S)C" + "'", str71, "(S)C");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "C" + "'", str72, "C");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "C" + "'", str80, "C");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
    }

    @Test
    public void test03784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03784");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        java.lang.String str2 = type1.getDescriptor();
        java.lang.String str3 = type1.getInternalName();
        java.lang.String str4 = type1.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str2, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/tree/analysis/SimpleVerifier" + "'", str3, "org/mockito/asm/tree/analysis/SimpleVerifier");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str4, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
    }

    @Test
    public void test03785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03785");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, false);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str18 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier10.newValue(type17);
        int int21 = type17.getSize();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int24 = type23.getSort();
        int int26 = type23.getOpcode(113);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type23, false);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        int int45 = value44.getSize();
        org.mockito.asm.tree.analysis.Value value46 = simpleVerifier38.merge(value41, value44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value46);
        boolean boolean48 = type29.equals((java.lang.Object) analyzerException47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        boolean boolean61 = type51.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray62);
        java.lang.String str64 = type49.getDescriptor();
        int int65 = type49.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type49, true);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str69 = type68.getDescriptor();
        boolean boolean70 = type49.equals((java.lang.Object) type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type74, list75, true);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type78 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray79);
        int int82 = type72.getOpcode(136);
        java.lang.String str83 = type72.getClassName();
        java.lang.String str84 = type72.toString();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass87 = type86.getClass();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass87);
        int int91 = type90.getDimensions();
        org.mockito.asm.Type[] typeArray93 = org.mockito.asm.Type.getArgumentTypes("(C)C");
        java.lang.String str94 = org.mockito.asm.Type.getMethodDescriptor(type90, typeArray93);
        java.lang.String str95 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray93);
        java.lang.String str96 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray93);
        java.lang.String str97 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray93);
        java.lang.String str98 = type17.getDescriptor();
        int int99 = type17.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "S" + "'", str18, "S");
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 117 + "'", int26 == 117);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)S" + "'", str59, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(S)C" + "'", str63, "(S)C");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "C" + "'", str64, "C");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "I" + "'", str69, "I");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(C)S" + "'", str80, "(C)S");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 136 + "'", int82 == 136);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "short" + "'", str83, "short");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "S" + "'", str84, "S");
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(typeArray93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str94, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "(C)S" + "'", str95, "(C)S");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "(C)I" + "'", str96, "(C)I");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "(C)S" + "'", str97, "(C)S");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "S" + "'", str98, "S");
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 1 + "'", int99 == 1);
    }

    @Test
    public void test03786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03786");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        int int17 = type3.getSize();
        java.lang.String str18 = type3.toString();
        boolean boolean20 = type3.equals((java.lang.Object) 3);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, false);
        boolean boolean28 = type21.equals((java.lang.Object) 89);
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type21, list29, false);
        int int32 = type21.getSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = type21.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test03787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03787");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str1 = type0.getClassName();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier11.merge(value14, value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value19);
        boolean boolean21 = type2.equals((java.lang.Object) analyzerException20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray35);
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray35);
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray35);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        int int44 = type42.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type42, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass52 = type51.getClass();
        java.lang.String str53 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass52);
        java.lang.String str54 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        org.mockito.asm.tree.analysis.Value value56 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type55, value56);
        boolean boolean59 = type55.equals((java.lang.Object) 188);
        org.mockito.asm.Type type60 = type55.getElementType();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier48.newValue(type55);
        int int62 = type55.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "double" + "'", str1, "double");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(S)C" + "'", str36, "(S)C");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(S)V" + "'", str37, "(S)V");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)D" + "'", str38, "(S)D");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str53, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str54, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
    }

    @Test
    public void test03788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03788");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        int int6 = type4.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, false);
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list9, false);
        java.lang.String str12 = type2.getInternalName();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        java.lang.String str28 = type13.getDescriptor();
        int int29 = type13.getSort();
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type13, list30, true);
        java.lang.Class<?> wildcardClass33 = simpleVerifier32.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        boolean boolean47 = type37.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray48);
        int int50 = type35.getSize();
        boolean boolean52 = type35.equals((java.lang.Object) 181);
        java.lang.String str53 = type35.getClassName();
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type35, list54, true);
        int int57 = type34.getSort();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType("(S)Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.mockito.asm.Type type60 = type59.getElementType();
        boolean boolean61 = type34.equals((java.lang.Object) type60);
        java.lang.String str62 = type34.getDescriptor();
        java.lang.String str63 = type34.getClassName();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "C" + "'", str12, "C");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "C" + "'", str28, "C");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)S" + "'", str45, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(S)C" + "'", str49, "(S)C");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "char" + "'", str53, "char");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str62, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.mockito.asm.tree.analysis.SimpleVerifier" + "'", str63, "org.mockito.asm.tree.analysis.SimpleVerifier");
    }

    @Test
    public void test03789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03789");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        int int12 = type11.getDimensions();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str14 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        boolean boolean18 = type13.equals((java.lang.Object) basicVerifier15);
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list19, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode22 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        boolean boolean35 = type25.equals((java.lang.Object) '4');
        int int36 = type25.getSort();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str39 = type38.getClassName();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass42 = type41.getClass();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, false);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str55 = type54.getDescriptor();
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier47.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Z", (java.lang.Object) type25, value57);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value59 = simpleVerifier21.copyOperation(abstractInsnNode22, value57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/Type" + "'", str9, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "S" + "'", str14, "S");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)S" + "'", str33, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 4 + "'", int36 == 4);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "S" + "'", str39, "S");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "S" + "'", str55, "S");
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(value57);
    }

    @Test
    public void test03790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03790");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        int int18 = type0.getSize();
        java.lang.String str19 = type0.toString();
        int int20 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        java.lang.String str29 = type22.toString();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type30, list31, false);
        boolean boolean35 = type30.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type30, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        boolean boolean49 = type39.equals((java.lang.Object) '4');
        org.mockito.asm.Type type50 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type50, list51, false);
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type50, list54, false);
        java.lang.Class<?> wildcardClass57 = type0.getClass();
        java.lang.String str58 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass57);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "S" + "'", str29, "S");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)S" + "'", str47, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org/mockito/asm/Type" + "'", str58, "org/mockito/asm/Type");
    }

    @Test
    public void test03791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03791");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str1 = type0.getClassName();
        java.lang.String str2 = type0.getDescriptor();
        java.lang.String str3 = type0.getClassName();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "long" + "'", str1, "long");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "J" + "'", str2, "J");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "long" + "'", str3, "long");
    }

    @Test
    public void test03792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03792");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = type9.getClass();
        java.lang.String str11 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass10);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org/mockito/asm/Type" + "'", str11, "org/mockito/asm/Type");
    }

    @Test
    public void test03793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03793");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        int int17 = type2.getSize();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type19, false);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str27 = type26.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray36);
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type26, list39, false);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        boolean boolean54 = type44.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray55);
        java.lang.String str57 = type42.getDescriptor();
        int int58 = type42.getSort();
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type42, list59, true);
        boolean boolean62 = type19.equals((java.lang.Object) type23);
        int int63 = type19.getSize();
        java.lang.String str64 = type19.getClassName();
        int int66 = type19.getOpcode(0);
        java.lang.String str67 = type19.toString();
        int int68 = type19.getSort();
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type19, list69, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value73 = simpleVerifier71.newOperation(abstractInsnNode72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "boolean" + "'", str27, "boolean");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)Z" + "'", str38, "(C)Z");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(S)C" + "'", str56, "(S)C");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "C" + "'", str57, "C");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "char" + "'", str64, "char");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "C" + "'", str67, "C");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
    }

    @Test
    public void test03794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03794");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int3 = type1.getOpcode((int) (byte) 10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        int int12 = type5.getSize();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int15 = type14.getSort();
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type14, list16, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type14, true);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str23 = type22.getClassName();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass26 = type25.getClass();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type28, list29, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, false);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str39 = type38.getDescriptor();
        org.mockito.asm.tree.analysis.Value value40 = simpleVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier31.newValue(type38);
        int int42 = type38.getSize();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getObjectType("boolean");
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        boolean boolean50 = type38.equals((java.lang.Object) type46);
        org.mockito.asm.tree.analysis.Value value51 = simpleVerifier20.newValue(type46);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode52 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value56 = simpleVerifier20.copyOperation(abstractInsnNode52, value55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 14 + "'", int3 == 14);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "S" + "'", str23, "S");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "S" + "'", str39, "S");
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
    }

    @Test
    public void test03795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03795");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test03796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03796");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int4 = type3.getSort();
        java.lang.String str5 = type3.toString();
        org.mockito.asm.Type type6 = type3.getElementType();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        int int17 = type11.getSort();
        boolean boolean19 = type11.equals((java.lang.Object) 192);
        int int20 = type11.getSort();
        java.lang.String str21 = type11.toString();
        java.lang.String str22 = type11.getDescriptor();
        int int23 = type11.getSize();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass26 = type25.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        boolean boolean29 = type11.equals((java.lang.Object) type28);
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type28, list30, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("LC;");
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        boolean boolean48 = type38.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray49);
        int int51 = type36.getSize();
        java.lang.String str52 = type36.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type36, false);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass57 = type56.getClass();
        java.lang.String str58 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass57);
        java.lang.String str59 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass57);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        java.lang.String str61 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass57);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        int int69 = type67.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, false);
        java.lang.String str72 = type65.toString();
        org.mockito.asm.Type[] typeArray74 = org.mockito.asm.Type.getArgumentTypes("(C)S");
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray74);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray74);
        java.lang.String str77 = type63.getInternalName();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier54.newValue(type63);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value79 = simpleVerifier32.copyOperation(abstractInsnNode33, value78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "S" + "'", str21, "S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "S" + "'", str22, "S");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/Type" + "'", str27, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(C)S" + "'", str46, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(S)C" + "'", str50, "(S)C");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str58, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str59, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/Type" + "'", str61, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 4 + "'", int69 == 4);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "LC;" + "'", str72, "LC;");
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(C)LC;" + "'", str75, "(C)LC;");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str76, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org/mockito/asm/Type" + "'", str77, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value78);
    }

    @Test
    public void test03797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03797");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str3 = type2.getClassName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass6 = type5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, false);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str19 = type18.getDescriptor();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier11.newValue(type18);
        java.lang.Class<?> wildcardClass22 = value21.getClass();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        int int29 = type27.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        int int45 = value44.getSize();
        org.mockito.asm.tree.analysis.Value value46 = simpleVerifier38.merge(value41, value44);
        int int47 = value44.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Object) type27, value44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)LC;", (java.lang.Object) wildcardClass22, value44);
        int int50 = value44.getSize();
        int int51 = value44.getSize();
        int int52 = value44.getSize();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "S" + "'", str3, "S");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "S" + "'", str19, "S");
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test03798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03798");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        java.lang.String str10 = type9.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03799");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass3 = type2.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.tree.analysis.Value value7 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type6, value7);
        boolean boolean10 = type6.equals((java.lang.Object) 188);
        int int11 = type6.getSort();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        boolean boolean24 = type14.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray25);
        int int27 = type12.getSize();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type29, false);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str37 = type36.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray46);
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type36, list49, false);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type60 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray61);
        boolean boolean64 = type54.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray65);
        java.lang.String str67 = type52.getDescriptor();
        int int68 = type52.getSort();
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type52, list69, true);
        boolean boolean72 = type29.equals((java.lang.Object) type33);
        int int73 = type29.getSize();
        java.lang.String str74 = type29.getClassName();
        boolean boolean76 = type29.equals((java.lang.Object) 196653);
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type29, list77, false);
        java.lang.Class<?> wildcardClass80 = type6.getClass();
        java.lang.String str81 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass80);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)S" + "'", str22, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(S)C" + "'", str26, "(S)C");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "boolean" + "'", str37, "boolean");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)S" + "'", str47, "(C)S");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)Z" + "'", str48, "(C)Z");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(C)S" + "'", str62, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(S)C" + "'", str66, "(S)C");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "C" + "'", str67, "C");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "char" + "'", str74, "char");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "org/mockito/asm/Type" + "'", str81, "org/mockito/asm/Type");
    }

    @Test
    public void test03800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03800");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list37, false);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        boolean boolean52 = type42.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray53);
        java.lang.String str55 = type40.getDescriptor();
        int int56 = type40.getSort();
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type40, list57, true);
        boolean boolean60 = type17.equals((java.lang.Object) type21);
        int int61 = type17.getSize();
        java.lang.String str62 = type17.getClassName();
        int int64 = type17.getOpcode(0);
        int int65 = type17.getSort();
        int int66 = type17.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)S" + "'", str50, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(S)C" + "'", str54, "(S)C");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "char" + "'", str62, "char");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
    }

    @Test
    public void test03801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03801");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        int int18 = type0.getSize();
        java.lang.String str19 = type0.toString();
        int int20 = type0.getSort();
        int int22 = type0.getOpcode(113);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, false);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str31 = type30.getDescriptor();
        org.mockito.asm.tree.analysis.Value value32 = simpleVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        boolean boolean51 = type41.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type41, true);
        boolean boolean55 = type41.equals((java.lang.Object) 158);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType("S");
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type57, list58, false);
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier29.newValue(type41);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter62 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode63 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter62.copyOperation(abstractInsnNode63, value76);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode80 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type84, list85, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier88 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value90 = basicVerifier88.newValue(type89);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier91 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type92 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value93 = basicVerifier91.newValue(type92);
        int int94 = value93.getSize();
        org.mockito.asm.tree.analysis.Value value95 = simpleVerifier87.merge(value90, value93);
        int int96 = value93.getSize();
        org.mockito.asm.tree.analysis.Value value97 = basicInterpreter62.copyOperation(abstractInsnNode80, value93);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException98 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Z", (java.lang.Object) simpleVerifier29, value93);
        boolean boolean99 = type0.equals((java.lang.Object) "(C)Z");
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 113 + "'", int22 == 113);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "S" + "'", str31, "S");
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(C)S" + "'", str49, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
        org.junit.Assert.assertNotNull(value97);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test03802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03802");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: B", (java.lang.Throwable) analyzerException4);
        java.lang.String str6 = analyzerException4.toString();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I" + "'", str6, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
    }

    @Test
    public void test03803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03803");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier6.merge(value27, value44);
        int int46 = value45.getSize();
        int int47 = value45.getSize();
        java.lang.Class<?> wildcardClass48 = value45.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test03804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03804");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        java.lang.String str2 = type1.toString();
        java.lang.String str3 = type1.getInternalName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(S)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, false);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException12);
        java.lang.Throwable[] throwableArray14 = analyzerException12.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("Lg/mockito/asm/Type;", (java.lang.Throwable) analyzerException12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException20);
        analyzerException12.addSuppressed((java.lang.Throwable) analyzerException20);
        java.lang.Object obj24 = null;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass27 = type26.getClass();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        java.lang.String str36 = type32.getDescriptor();
        int int38 = type32.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        int int53 = type47.getSort();
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray54);
        java.lang.String str56 = type42.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type42, false);
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type32, list59, true);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        int int70 = type64.getSort();
        java.lang.String str71 = type64.toString();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type72, list73, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list80 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type79, list80, true);
        int int83 = type77.getSort();
        java.lang.String str84 = type77.getClassName();
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier75.newValue(type77);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type77, true);
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier61.newValue(type77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException", obj24, value88);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException90 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S", (java.lang.Object) analyzerException20, value88);
        org.mockito.asm.tree.analysis.Value value91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value92 = simpleVerifier7.merge(value88, value91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str2, "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str3, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "C" + "'", str36, "C");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(S)C" + "'", str55, "(S)C");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "C" + "'", str56, "C");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 4 + "'", int70 == 4);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "S" + "'", str71, "S");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 4 + "'", int83 == 4);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "short" + "'", str84, "short");
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(value88);
    }

    @Test
    public void test03805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03805");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray20);
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type10, list23, false);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray39);
        java.lang.String str41 = type26.getDescriptor();
        int int42 = type26.getSort();
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type26, list43, true);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter5.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) analyzerException4, value46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S", (java.lang.Object) 176, value46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V");
        analyzerException48.addSuppressed((java.lang.Throwable) analyzerException50);
        java.lang.String str52 = analyzerException48.toString();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean" + "'", str11, "boolean");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)Z" + "'", str22, "(C)Z");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 176, but found I" + "'", str52, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 176, but found I");
    }

    @Test
    public void test03806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03806");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)S: expected 175, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("F", (java.lang.Throwable) analyzerException2);
        java.lang.String str4 = analyzerException2.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (S)S: expected 175, but found I" + "'", str4, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (S)S: expected 175, but found I");
    }

    @Test
    public void test03807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03807");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier36.merge(value57, value74);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier6.merge(value29, value74);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode77 = null;
        java.util.List list78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value79 = simpleVerifier6.naryOperation(abstractInsnNode77, list78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
    }

    @Test
    public void test03808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03808");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        java.lang.Throwable throwable6 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = value25.getSize();
        org.mockito.asm.tree.analysis.Value value27 = simpleVerifier19.merge(value22, value25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        int int42 = value41.getSize();
        org.mockito.asm.tree.analysis.Value value43 = simpleVerifier35.merge(value38, value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        int int57 = value56.getSize();
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier50.merge(value53, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        int int72 = value71.getSize();
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier65.merge(value68, value71);
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier35.merge(value56, value73);
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier8.merge(value27, value74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException7, value75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type78, true);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str82 = type81.getDescriptor();
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier80.newValue(type81);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier3.merge(value75, value83);
        int int85 = value84.getSize();
        int int86 = value84.getSize();
        java.lang.Class<?> wildcardClass87 = value84.getClass();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "I" + "'", str82, "I");
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test03809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03809");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        boolean boolean31 = type21.equals((java.lang.Object) '4');
        boolean boolean33 = type21.equals((java.lang.Object) 193);
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier19.newValue(type21);
        int int36 = type21.getOpcode(113);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type38, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str42 = type41.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray51);
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type41, list54, false);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        boolean boolean69 = type59.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray70);
        java.lang.String str72 = type57.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type74, type76, list77, true);
        java.lang.String str80 = type76.getDescriptor();
        int int82 = type76.getOpcode((int) (short) 0);
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type76, list83, true);
        int int86 = type57.getSort();
        java.util.List list87 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type57, list87, false);
        java.util.List list90 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier92 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type41, list90, false);
        java.lang.String str93 = type41.toString();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 113 + "'", int36 == 113);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "boolean" + "'", str42, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)Z" + "'", str53, "(C)Z");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)S" + "'", str67, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(S)C" + "'", str71, "(S)C");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "C" + "'", str72, "C");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "C" + "'", str80, "C");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Z" + "'", str93, "Z");
    }

    @Test
    public void test03810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03810");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str6 = type5.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray15);
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type5, list18, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        boolean boolean33 = type23.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray34);
        java.lang.String str36 = type21.getDescriptor();
        int int37 = type21.getSort();
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type21, list38, true);
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter0.newValue(type21);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type[] typeArray44 = org.mockito.asm.Type.getArgumentTypes("(S)C");
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray44);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type42, true);
        org.mockito.asm.Type type48 = null;
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier47.newValue(type48);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode50 = null;
        java.util.List list51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value52 = simpleVerifier47.naryOperation(abstractInsnNode50, list51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "boolean" + "'", str6, "boolean");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)Z" + "'", str17, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)C" + "'", str35, "(S)C");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "C" + "'", str36, "C");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(S)F" + "'", str45, "(S)F");
        org.junit.Assert.assertNotNull(value49);
    }

    @Test
    public void test03811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03811");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        int int17 = type3.getSize();
        java.lang.String str18 = type3.toString();
        boolean boolean20 = type3.equals((java.lang.Object) 3);
        java.lang.String str21 = type3.getClassName();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray35);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, list37, true);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = type22.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "char" + "'", str21, "char");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(S)C" + "'", str36, "(S)C");
    }

    @Test
    public void test03812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03812");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type12, list13, false);
        java.lang.String str16 = type12.getClassName();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type18, false);
        java.lang.String str21 = type18.getDescriptor();
        int int23 = type18.getOpcode(116);
        java.lang.Class<?> wildcardClass24 = type18.getClass();
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass24);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "int" + "'", str16, "int");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str21, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 120 + "'", int23 == 120);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str25, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03813");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        java.lang.String str23 = type19.getDescriptor();
        int int25 = type19.getOpcode((int) (short) 0);
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list26, true);
        java.lang.String str29 = type0.toString();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int32 = type31.getSort();
        java.lang.String str33 = type31.toString();
        org.mockito.asm.Type type34 = type31.getElementType();
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type34, list35, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        org.mockito.asm.Type type39 = null;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        int int45 = type43.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, false);
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list48, false);
        java.lang.String str51 = type41.getInternalName();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type60 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray61);
        boolean boolean64 = type54.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray65);
        java.lang.String str67 = type52.getDescriptor();
        int int68 = type52.getSort();
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type52, list69, true);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type74, type76, list77, true);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type80 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray81);
        boolean boolean84 = type74.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray85 = new org.mockito.asm.Type[] { type74 };
        java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray85);
        int int87 = type72.getSize();
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier71.newValue(type72);
        int int89 = value88.getSize();
        int int90 = value88.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value91 = simpleVerifier37.unaryOperation(abstractInsnNode38, value88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str33, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(C)S" + "'", str62, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(S)C" + "'", str66, "(S)C");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "C" + "'", str67, "C");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(C)S" + "'", str82, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(S)C" + "'", str86, "(S)C");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
    }

    @Test
    public void test03814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03814");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.Class<?> wildcardClass9 = type8.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/Type" + "'", str6, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test03815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03815");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str21 = type20.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray30);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type34, true);
        boolean boolean37 = type20.equals((java.lang.Object) simpleVerifier36);
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type20, list38, false);
        java.lang.Class<?> wildcardClass41 = type0.getClass();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass41);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "boolean" + "'", str21, "boolean");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)Z" + "'", str32, "(C)Z");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str43, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03816");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type10 = type9.getElementType();
        org.mockito.asm.Type type11 = type10.getElementType();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type13, true);
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type12, list16, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode19 = null;
        java.util.List list20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value21 = simpleVerifier18.naryOperation(abstractInsnNode19, list20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
    }

    @Test
    public void test03817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03817");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(C)LLdouble;;");
        org.mockito.asm.Type[] typeArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test03818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03818");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list37, false);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        boolean boolean52 = type42.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray53);
        java.lang.String str55 = type40.getDescriptor();
        int int56 = type40.getSort();
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type40, list57, true);
        boolean boolean60 = type17.equals((java.lang.Object) type21);
        int int61 = type17.getSize();
        java.lang.String str62 = type17.getClassName();
        boolean boolean64 = type17.equals((java.lang.Object) 196653);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        int int72 = type66.getSort();
        int int73 = type66.getSize();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int76 = type75.getSort();
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type75, list77, true);
        int int80 = type75.getDimensions();
        int int82 = type75.getOpcode(79);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type75, false);
        org.mockito.asm.Type[] typeArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)S" + "'", str50, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(S)C" + "'", str54, "(S)C");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "char" + "'", str62, "char");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 4 + "'", int72 == 4);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 83 + "'", int82 == 83);
    }

    @Test
    public void test03819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03819");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        int int1 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        int int36 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter2.copyOperation(abstractInsnNode20, value33);
        boolean boolean38 = type0.equals((java.lang.Object) basicInterpreter2);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        int int40 = type39.getSort();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type39, list41, false);
        java.lang.Class<?> wildcardClass44 = simpleVerifier43.getClass();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass44);
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass44);
        java.lang.String str48 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type50 = type49.getElementType();
        int int51 = type49.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7 + "'", int1 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str46, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str47, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str48, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
    }

    @Test
    public void test03820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03820");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        java.lang.String str12 = type1.toString();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        int int28 = type13.getSize();
        boolean boolean30 = type13.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type13, false);
        org.mockito.asm.Type type33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type33, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode36 = null;
        org.mockito.asm.tree.analysis.Value value37 = null;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getObjectType("LLS;;");
        int int41 = type40.getSort();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getReturnType("Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type43, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type60 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray61);
        boolean boolean64 = type54.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type54, true);
        org.mockito.asm.Type type67 = null;
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("float", (java.lang.Object) simpleVerifier45, value68);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        int int75 = type73.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type73, false);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        java.lang.String str80 = type79.getClassName();
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier77.newValue(type79);
        int int82 = value81.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value83 = simpleVerifier35.ternaryOperation(abstractInsnNode36, value37, value68, value81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "S" + "'", str12, "S");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(C)S" + "'", str62, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 4 + "'", int75 == 4);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException;" + "'", str80, "Lorg.mockito.asm.tree.analysis.AnalyzerException;");
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
    }

    @Test
    public void test03821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03821");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.getClassName();
        java.lang.String str9 = type1.getDescriptor();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        int int18 = type12.getSort();
        java.lang.String str19 = type12.toString();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type20, list21, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        int int31 = type25.getSort();
        java.lang.String str32 = type25.getClassName();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier23.newValue(type25);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type25, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, false);
        int int39 = type1.getOpcode(5);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "short" + "'", str8, "short");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "S" + "'", str9, "S");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "S" + "'", str19, "S");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "short" + "'", str32, "short");
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
    }

    @Test
    public void test03822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03822");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        int int17 = type11.getSort();
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray18);
        int int20 = type6.getSize();
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type6, list21, false);
        org.mockito.asm.tree.analysis.Value value24 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException", (java.lang.Object) simpleVerifier23, value24);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getType("(S)Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        int int28 = type27.getDimensions();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier23.newValue(type27);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getObjectType("(S)F");
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean35 = type33.equals((java.lang.Object) (short) 1);
        int int36 = type33.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        int int44 = type38.getSort();
        java.lang.String str45 = type38.toString();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type46, list47, false);
        boolean boolean51 = type46.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        int int66 = type60.getSort();
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type60 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray67);
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray67);
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray67);
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list71, true);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("S");
        boolean boolean78 = type75.equals((java.lang.Object) analyzerException77);
        int int79 = type75.getSize();
        int int80 = type75.getSize();
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type75, list81, false);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier23.newValue(type33);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getObjectType("[Ljava/lang/Throwable;");
        java.lang.String str87 = type86.getDescriptor();
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier23.newValue(type86);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode89 = null;
        java.util.List list90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value91 = simpleVerifier23.naryOperation(abstractInsnNode89, list90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(S)C" + "'", str19, "(S)C");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "S" + "'", str45, "S");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(S)C" + "'", str68, "(S)C");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(S)S" + "'", str69, "(S)S");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(S)L(C)Z;" + "'", str70, "(S)L(C)Z;");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[Ljava/lang/Throwable;" + "'", str87, "[Ljava/lang/Throwable;");
        org.junit.Assert.assertNotNull(value88);
    }

    @Test
    public void test03823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03823");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Z", (java.lang.Throwable) analyzerException4);
        java.lang.Class<?> wildcardClass6 = analyzerException5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str12 = type11.toString();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str20 = type19.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray29);
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type19, list32, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        boolean boolean53 = type43.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type43, true);
        int int56 = type38.getSort();
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type38, list57, true);
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list60, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type14, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str66 = type65.toString();
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) str9, value67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)S: expected 175, but found I", (java.lang.Throwable) analyzerException68);
        java.lang.Throwable[] throwableArray70 = analyzerException69.getSuppressed();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str9, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "L(C)Z;" + "'", str12, "L(C)Z;");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "boolean" + "'", str20, "boolean");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)S" + "'", str30, "(C)S");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)Z" + "'", str31, "(C)Z");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)S" + "'", str51, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Z" + "'", str66, "Z");
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(throwableArray70);
    }

    @Test
    public void test03824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03824");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        int int20 = type14.getSort();
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray21);
        int int23 = type9.getSize();
        java.lang.String str24 = type9.toString();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = value58.getSize();
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier52.merge(value55, value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        int int74 = value73.getSize();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier67.merge(value70, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list80 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type79, list80, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier83 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier83.newValue(type84);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier86 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type87 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value88 = basicVerifier86.newValue(type87);
        int int89 = value88.getSize();
        org.mockito.asm.tree.analysis.Value value90 = simpleVerifier82.merge(value85, value88);
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier52.merge(value73, value90);
        org.mockito.asm.tree.analysis.Value value92 = basicVerifier25.merge(value44, value91);
        boolean boolean93 = type9.equals((java.lang.Object) basicVerifier25);
        java.util.List list94 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier96 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type9, list94, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode97 = null;
        java.util.List list98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier96.naryOperation(abstractInsnNode97, list98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(S)C" + "'", str22, "(S)C");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "C" + "'", str24, "C");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test03825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03825");
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type6 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray17);
        java.lang.String str19 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        java.lang.String str27 = type23.getDescriptor();
        int int29 = type23.getOpcode((int) (short) 0);
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type23, list30, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        boolean boolean51 = type41.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type41, true);
        org.mockito.asm.Type type54 = null;
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        int int72 = value71.getSize();
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier65.merge(value68, value71);
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier53.merge(value58, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type76, type78, list79, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier85 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier85.newValue(type86);
        int int88 = value87.getSize();
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier81.merge(value84, value87);
        org.mockito.asm.tree.analysis.Value value90 = simpleVerifier32.merge(value73, value89);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)D", (java.lang.Object) 10.0f, value90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null", (java.lang.Object) 124, value90);
        int int93 = value90.getSize();
        int int94 = value90.getSize();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(C)S" + "'", str49, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test03826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03826");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        int int21 = type3.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        int int29 = type23.getSort();
        java.lang.String str30 = type23.getClassName();
        java.lang.String str31 = type23.getDescriptor();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        int int40 = type34.getSort();
        java.lang.String str41 = type34.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type42, list43, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        int int53 = type47.getSort();
        java.lang.String str54 = type47.getClassName();
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier45.newValue(type47);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type47, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type32, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type23, true);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = type3.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "short" + "'", str30, "short");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "S" + "'", str31, "S");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 4 + "'", int40 == 4);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "S" + "'", str41, "S");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "short" + "'", str54, "short");
        org.junit.Assert.assertNotNull(value55);
    }

    @Test
    public void test03827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03827");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        int int1 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        int int36 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter2.copyOperation(abstractInsnNode20, value33);
        boolean boolean38 = type0.equals((java.lang.Object) basicInterpreter2);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        int int40 = type39.getSort();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type39, list41, false);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        int int47 = type44.getOpcode((-1));
        int int48 = type44.getSort();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        boolean boolean61 = type51.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray62);
        int int64 = type49.getSize();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type66, false);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str70 = type69.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type74, list75, true);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type78 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray79);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray79);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type83, true);
        boolean boolean86 = type69.equals((java.lang.Object) simpleVerifier85);
        java.util.List list87 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type69, list87, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier91 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type69, true);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = type69.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7 + "'", int1 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)S" + "'", str59, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(S)C" + "'", str63, "(S)C");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "boolean" + "'", str70, "boolean");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(C)S" + "'", str80, "(C)S");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)Z" + "'", str81, "(C)Z");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test03828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03828");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str1 = type0.getDescriptor();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str3 = type2.getClassName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int6 = type5.getSort();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        boolean boolean19 = type9.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray20);
        int int22 = type7.getSize();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type24, false);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str32 = type31.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray41);
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type31, list44, false);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray56);
        boolean boolean59 = type49.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray60);
        java.lang.String str62 = type47.getDescriptor();
        int int63 = type47.getSort();
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type47, list64, true);
        boolean boolean67 = type24.equals((java.lang.Object) type28);
        int int68 = type24.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type24, true);
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type5, list71, false);
        int int74 = type5.getSize();
        boolean boolean75 = type0.equals((java.lang.Object) type5);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int78 = type77.getSort();
        java.lang.String str79 = type77.toString();
        org.mockito.asm.Type type80 = type77.getElementType();
        int int81 = type80.getSize();
        int int82 = type80.getSize();
        org.mockito.asm.Type[] typeArray84 = org.mockito.asm.Type.getArgumentTypes("(C)Z");
        java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type80, typeArray84);
        java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray84);
        java.lang.Class<?> wildcardClass87 = type0.getClass();
        java.lang.String str88 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass87);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "S" + "'", str1, "S");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "double" + "'", str3, "double");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(S)C" + "'", str21, "(S)C");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "boolean" + "'", str32, "boolean");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)Z" + "'", str43, "(C)Z");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)S" + "'", str57, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(S)C" + "'", str61, "(S)C");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "C" + "'", str62, "C");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str79, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(C)Lg/mockito/asm/Type;" + "'", str85, "(C)Lg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(C)S" + "'", str86, "(C)S");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str88, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03829");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str21 = type20.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray30);
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray30);
        java.lang.String str34 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        boolean boolean46 = type36.equals((java.lang.Object) '4');
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type47, list48, false);
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type36, list51, true);
        int int54 = type36.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "boolean" + "'", str21, "boolean");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)Z" + "'", str32, "(C)Z");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)C" + "'", str33, "(C)C");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "char" + "'", str34, "char");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }

    @Test
    public void test03830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03830");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, false);
        java.lang.Class<?> wildcardClass14 = type5.getClass();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        java.lang.String str16 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass14);
        java.lang.String str17 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org/mockito/asm/Type" + "'", str16, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str17, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03831");
        java.lang.Object obj1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        int int15 = value14.getSize();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier8.merge(value11, value14);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", obj1, value16);
        java.lang.Class<?> wildcardClass19 = value16.getClass();
        java.lang.String str20 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass19);
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        int int37 = type31.getSort();
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray38);
        int int40 = type26.getSize();
        java.lang.String str41 = type26.toString();
        int int42 = type26.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type26, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        java.util.List list46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value47 = simpleVerifier44.naryOperation(abstractInsnNode45, list46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str20, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str21, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 4 + "'", int37 == 4);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)C" + "'", str39, "(S)C");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
    }

    @Test
    public void test03832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03832");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.tree.analysis.Value value8 = simpleVerifier5.newValue(type6);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass11 = type10.getClass();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        java.lang.String str15 = type14.getDescriptor();
        org.mockito.asm.Type type16 = type14.getElementType();
        java.lang.String str17 = type14.getDescriptor();
        org.mockito.asm.Type[] typeArray19 = org.mockito.asm.Type.getArgumentTypes("(SC)S");
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray19);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type14, true);
        java.lang.String str23 = type14.getDescriptor();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        int int31 = type29.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, false);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        boolean boolean46 = type36.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray47);
        java.lang.String str49 = type34.getDescriptor();
        int int50 = type34.getSort();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        boolean boolean63 = type53.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray64);
        int int66 = type51.getSize();
        boolean boolean68 = type51.equals((java.lang.Object) 181);
        int int69 = type51.getSize();
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray70);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray70);
        boolean boolean73 = type25.equals((java.lang.Object) type27);
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type25, list74, false);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "S" + "'", str7, "S");
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str17, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(SC)Lorg/mockito/asm/Type;" + "'", str20, "(SC)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str23, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(S)C" + "'", str48, "(S)C");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "C" + "'", str49, "C");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)S" + "'", str61, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(S)C" + "'", str65, "(S)C");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)C" + "'", str71, "(C)C");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)LC;" + "'", str72, "(C)LC;");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test03833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03833");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType("[Ljava/lang/Throwable;");
        java.lang.String str6 = type5.toString();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, list7, false);
        java.lang.String str10 = type1.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "S" + "'", str3, "S");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[Ljava/lang/Throwable;" + "'", str6, "[Ljava/lang/Throwable;");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "short" + "'", str10, "short");
    }

    @Test
    public void test03834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03834");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I");
        java.lang.String str2 = type1.getInternalName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        java.lang.String str15 = type4.toString();
        java.lang.String str16 = type4.toString();
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str22 = type21.getClassName();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        int int39 = value38.getSize();
        org.mockito.asm.tree.analysis.Value value40 = simpleVerifier32.merge(value35, value38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value40);
        boolean boolean42 = type23.equals((java.lang.Object) analyzerException41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray52);
        boolean boolean55 = type45.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray56);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray56);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Object) type21, value69);
        org.mockito.asm.tree.analysis.Value value76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value77 = simpleVerifier19.merge(value69, value76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I" + "'", str2, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "S" + "'", str15, "S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "S" + "'", str16, "S");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "double" + "'", str22, "double");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)S" + "'", str53, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(S)C" + "'", str57, "(S)C");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(S)V" + "'", str58, "(S)V");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(S)D" + "'", str59, "(S)D");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
    }

    @Test
    public void test03835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03835");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(S)C");
        int int8 = type7.getSort();
        java.lang.String str9 = type7.getClassName();
        org.mockito.asm.Type type10 = type7.getElementType();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass13 = type12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass13);
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type19, true);
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type19, list24, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        java.lang.String str29 = type28.getDescriptor();
        int int30 = type28.getSize();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass33 = type32.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        java.lang.String str36 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass33);
        java.lang.String str37 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass33);
        java.lang.String str38 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type39, false);
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier26.newValue(type28);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode43 = null;
        java.util.List list44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value45 = simpleVerifier26.naryOperation(abstractInsnNode43, list44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(S)C" + "'", str9, "(S)C");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str14, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str29, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str36, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str37, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str38, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value42);
    }

    @Test
    public void test03836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03836");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.mockito.asm.Type type2 = type1.getElementType();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.Value value8 = simpleVerifier5.newValue(type7);
        int int9 = value8.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test03837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03837");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("LLS;;");
        int int2 = type1.getSort();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        int int11 = type9.getSort();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        int int23 = type17.getSort();
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier15.newValue(type17);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, false);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str32 = type31.getDescriptor();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier15.newValue(type31);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str38 = type37.getDescriptor();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str40 = type39.getClassName();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        int int57 = value56.getSize();
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier50.merge(value53, value56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value58);
        boolean boolean60 = type41.equals((java.lang.Object) analyzerException59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        boolean boolean73 = type63.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type63 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray74);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray74);
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray74);
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list78, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier83 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier83.newValue(type84);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("double", (java.lang.Object) 7, value85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;", (java.lang.Object) false, value85);
        int int88 = value85.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value89 = simpleVerifier6.binaryOperation(abstractInsnNode7, value34, value85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "S" + "'", str32, "S");
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "S" + "'", str38, "S");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "double" + "'", str40, "double");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)S" + "'", str71, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(S)C" + "'", str75, "(S)C");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(S)V" + "'", str76, "(S)V");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(S)D" + "'", str77, "(S)D");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
    }

    @Test
    public void test03838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03838");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        org.mockito.asm.Type type21 = null;
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        boolean boolean56 = type46.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type46, true);
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier58.merge(value63, value78);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier20.merge(value37, value78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type84, list85, true);
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier20.newValue(type82);
        java.lang.Class<?> wildcardClass89 = simpleVerifier20.getClass();
        java.lang.String str90 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass89);
        java.lang.String str91 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass89);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str90, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str91, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
    }

    @Test
    public void test03839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03839");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/Type" + "'", str6, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str9, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03840");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.tree.analysis.Value value8 = simpleVerifier5.newValue(type6);
        int int10 = type6.getOpcode(164);
        java.lang.String str11 = type6.getDescriptor();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str13 = type12.getClassName();
        java.lang.String str14 = type12.getDescriptor();
        int int15 = type12.getSize();
        java.lang.String str16 = type12.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type12, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getObjectType("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: D;");
        org.mockito.asm.Type type21 = type20.getElementType();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier18.newValue(type21);
        int int23 = value22.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "S" + "'", str7, "S");
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 164 + "'", int10 == 164);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "S" + "'", str11, "S");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "double" + "'", str13, "double");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "D" + "'", str14, "D");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test03841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03841");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("rg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.SimpleVerifier");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03842");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        boolean boolean22 = type8.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type31, true);
        org.mockito.asm.Type type44 = null;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier43.newValue(type46);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type46, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getObjectType("boolean");
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier49.newValue(type51);
        int int54 = type51.getOpcode(99);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 103 + "'", int54 == 103);
    }

    @Test
    public void test03843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03843");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value20);
        boolean boolean22 = type3.equals((java.lang.Object) analyzerException21);
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier0.newValue(type3);
        org.mockito.asm.Type type24 = null;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier0.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode26 = null;
        java.util.List list27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value28 = basicVerifier0.naryOperation(abstractInsnNode26, list27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(value23);
        org.junit.Assert.assertNotNull(value25);
    }

    @Test
    public void test03844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03844");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray20);
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type10, list23, false);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray39);
        java.lang.String str41 = type26.getDescriptor();
        int int42 = type26.getSort();
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type26, list43, true);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter5.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) analyzerException4, value46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S", (java.lang.Object) 176, value46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("V");
        analyzerException48.addSuppressed((java.lang.Throwable) analyzerException50);
        java.lang.Throwable[] throwableArray52 = analyzerException48.getSuppressed();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean" + "'", str11, "boolean");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)Z" + "'", str22, "(C)Z");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test03845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03845");
        java.lang.Object obj1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        int int15 = value14.getSize();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier8.merge(value11, value14);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", obj1, value16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value37);
        analyzerException20.addSuppressed((java.lang.Throwable) analyzerException38);
        analyzerException18.addSuppressed((java.lang.Throwable) analyzerException20);
        java.lang.Throwable[] throwableArray41 = analyzerException20.getSuppressed();
        java.lang.Class<?> wildcardClass42 = throwableArray41.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass42);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[Ljava/lang/Throwable;" + "'", str43, "[Ljava/lang/Throwable;");
    }

    @Test
    public void test03846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03846");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;");
        java.lang.Throwable[] throwableArray2 = analyzerException1.getSuppressed();
        java.lang.String str3 = analyzerException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;" + "'", str3, "org.mockito.asm.tree.analysis.AnalyzerException: (C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;");
    }

    @Test
    public void test03847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03847");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        int int20 = type14.getSort();
        java.lang.String str21 = type14.getClassName();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier12.newValue(type14);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected C, but found I");
        org.mockito.asm.tree.analysis.Value value25 = simpleVerifier12.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode26 = null;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type28, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType("B");
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier30.newValue(type32);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value34 = simpleVerifier12.unaryOperation(abstractInsnNode26, value33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "short" + "'", str21, "short");
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
    }

    @Test
    public void test03848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03848");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        int int6 = type4.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, false);
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list9, false);
        java.lang.String str12 = type2.getInternalName();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        java.lang.String str28 = type13.getDescriptor();
        int int29 = type13.getSort();
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type13, list30, true);
        java.lang.Class<?> wildcardClass33 = simpleVerifier32.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        boolean boolean47 = type37.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray48);
        int int50 = type35.getSize();
        boolean boolean52 = type35.equals((java.lang.Object) 181);
        java.lang.String str53 = type35.getClassName();
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type35, list54, true);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass59 = type58.getClass();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        java.lang.String str62 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass59);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type63, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode66 = null;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type69, list70, false);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str74 = type73.getDescriptor();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier72.newValue(type73);
        int int77 = type73.getOpcode(164);
        java.lang.String str78 = type73.getDescriptor();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str80 = type79.getClassName();
        java.lang.String str81 = type79.getDescriptor();
        int int82 = type79.getSize();
        java.lang.String str83 = type79.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type79, false);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getObjectType("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: D;");
        org.mockito.asm.Type type88 = type87.getElementType();
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier85.newValue(type88);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value90 = simpleVerifier65.unaryOperation(abstractInsnNode66, value89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "C" + "'", str12, "C");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "C" + "'", str28, "C");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)S" + "'", str45, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(S)C" + "'", str49, "(S)C");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "char" + "'", str53, "char");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str62, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "S" + "'", str74, "S");
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 164 + "'", int77 == 164);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "S" + "'", str78, "S");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "double" + "'", str80, "double");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "D" + "'", str81, "D");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "double" + "'", str83, "double");
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
    }

    @Test
    public void test03849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03849");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSort();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        int int15 = type9.getSort();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier7.newValue(type9);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        int int19 = type17.getOpcode(84);
        int int21 = type17.getOpcode(136);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type17, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode24 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter25 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode26 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        int int40 = value39.getSize();
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier33.merge(value36, value39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        int int55 = value54.getSize();
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier48.merge(value51, value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        int int70 = value69.getSize();
        org.mockito.asm.tree.analysis.Value value71 = simpleVerifier63.merge(value66, value69);
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier33.merge(value54, value71);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass75 = type74.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass75);
        java.lang.String str77 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type79 = type78.getElementType();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type80, type82, list83, false);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str87 = type86.getDescriptor();
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier85.newValue(type86);
        java.util.List list89 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier91 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type86, list89, true);
        org.mockito.asm.tree.analysis.Value value92 = simpleVerifier33.newValue(type79);
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter25.copyOperation(abstractInsnNode26, value92);
        org.mockito.asm.Type type94 = null;
        org.mockito.asm.tree.analysis.Value value95 = basicInterpreter25.newValue(type94);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value96 = simpleVerifier23.unaryOperation(abstractInsnNode24, value95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 84 + "'", int19 == 84);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 136 + "'", int21 == 136);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str76, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str77, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "S" + "'", str87, "S");
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertNotNull(value95);
    }

    @Test
    public void test03850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03850");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type7, false);
        int int10 = type6.getSort();
        java.lang.String str11 = type6.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str11, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03851");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: : expected org.mockito.asm.tree.analysis.AnalyzerException: Z, but found I");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03852");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        java.lang.String str2 = type1.toString();
        java.lang.String str3 = type1.getInternalName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(S)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        boolean boolean19 = type9.equals((java.lang.Object) '4');
        org.mockito.asm.Type type20 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type20, list21, false);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean27 = type25.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str30 = type29.getDescriptor();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str32 = type31.getClassName();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        int int49 = value48.getSize();
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier42.merge(value45, value48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value50);
        boolean boolean52 = type33.equals((java.lang.Object) analyzerException51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        boolean boolean65 = type55.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray66);
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray66);
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray66);
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list70, false);
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type29, list73, true);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier23.newValue(type25);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        int int79 = type77.getOpcode(84);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type77, true);
        boolean boolean82 = type5.equals((java.lang.Object) type25);
        java.lang.String str83 = type25.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str2, "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str3, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "S" + "'", str30, "S");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "double" + "'", str32, "double");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(C)S" + "'", str63, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(S)C" + "'", str67, "(S)C");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(S)V" + "'", str68, "(S)V");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(S)D" + "'", str69, "(S)D");
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 84 + "'", int79 == 84);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "L(C)Z;" + "'", str83, "L(C)Z;");
    }

    @Test
    public void test03853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03853");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        int int6 = type4.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, false);
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list9, false);
        java.lang.String str12 = type2.getInternalName();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        java.lang.String str28 = type13.getDescriptor();
        int int29 = type13.getSort();
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type13, list30, true);
        java.lang.Class<?> wildcardClass33 = simpleVerifier32.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        boolean boolean47 = type37.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray48);
        int int50 = type35.getSize();
        boolean boolean52 = type35.equals((java.lang.Object) 181);
        java.lang.String str53 = type35.getClassName();
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type35, list54, true);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass59 = type58.getClass();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        java.lang.String str62 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass59);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass59);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type63, true);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type74 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray75);
        boolean boolean78 = type68.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type68 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray79);
        java.lang.String str81 = type66.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list86 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type83, type85, list86, true);
        java.lang.String str89 = type85.getDescriptor();
        int int91 = type85.getOpcode((int) (short) 0);
        java.util.List list92 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type85, list92, true);
        java.lang.String str95 = type85.toString();
        org.mockito.asm.tree.analysis.Value value96 = simpleVerifier65.newValue(type85);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode97 = null;
        java.util.List list98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier65.naryOperation(abstractInsnNode97, list98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "C" + "'", str12, "C");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "C" + "'", str28, "C");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)S" + "'", str45, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(S)C" + "'", str49, "(S)C");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "char" + "'", str53, "char");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str62, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)S" + "'", str76, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(S)C" + "'", str80, "(S)C");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "C" + "'", str81, "C");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "C" + "'", str89, "C");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "C" + "'", str95, "C");
        org.junit.Assert.assertNotNull(value96);
    }

    @Test
    public void test03854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03854");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: (SC)C: expected Lorg/mockito/asm/Type;, but found I");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test03855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03855");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str1 = type0.getClassName();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str4 = type3.getInternalName();
        org.mockito.asm.Type type5 = type3.getElementType();
        boolean boolean6 = type0.equals((java.lang.Object) type5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int9 = type8.getSort();
        java.lang.String str10 = type8.toString();
        org.mockito.asm.Type type11 = type8.getElementType();
        int int12 = type11.getSort();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        int int29 = value28.getSize();
        org.mockito.asm.tree.analysis.Value value30 = simpleVerifier22.merge(value25, value28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value30);
        boolean boolean32 = type13.equals((java.lang.Object) analyzerException31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type41 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray42);
        boolean boolean45 = type35.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray46);
        java.lang.String str48 = type33.getDescriptor();
        int int49 = type33.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type33, true);
        java.lang.String str52 = type33.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type33, false);
        org.mockito.asm.Type[] typeArray56 = org.mockito.asm.Type.getArgumentTypes("(S)B");
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray56);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray56);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "long" + "'", str1, "long");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)S" + "'", str43, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(S)C" + "'", str47, "(S)C");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "C" + "'", str48, "C");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(S)C" + "'", str57, "(S)C");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(S)J" + "'", str58, "(S)J");
    }

    @Test
    public void test03856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03856");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        boolean boolean22 = type8.equals((java.lang.Object) 158);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass25 = type24.getClass();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass25);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass25);
        int int29 = type28.getDimensions();
        org.mockito.asm.Type type30 = type28.getElementType();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        boolean boolean43 = type33.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray44);
        int int46 = type31.getSize();
        java.lang.String str47 = type31.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type31, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getObjectType("(S)Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int54 = type53.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, true);
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier49.newValue(type53);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type53, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode60 = null;
        java.util.List list61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value62 = simpleVerifier59.naryOperation(abstractInsnNode60, list61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(S)C" + "'", str45, "(S)C");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "char" + "'", str47, "char");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertNotNull(value57);
    }

    @Test
    public void test03857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03857");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        java.lang.String str18 = type0.getClassName();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass21 = type20.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type25 = type24.getElementType();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, false);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str33 = type32.getDescriptor();
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier31.newValue(type32);
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type32, list35, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type41, true);
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type32, list47, false);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type51, true);
        int int54 = type50.getSize();
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier49.newValue(type50);
        // The following exception was thrown during execution in test generation
        try {
            int int56 = type50.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "char" + "'", str18, "char");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str23, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(value55);
    }

    @Test
    public void test03858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03858");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        boolean boolean14 = type9.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        int int29 = type23.getSort();
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray30);
        java.lang.String str33 = type9.toString();
        org.mockito.asm.Type type34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type34, false);
        org.mockito.asm.Type type37 = null;
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier36.newValue(type37);
        int int39 = value38.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)S" + "'", str32, "(S)S");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test03859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03859");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier19.newValue(type21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str25 = type24.toString();
        org.mockito.asm.Type type26 = type24.getElementType();
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type26, list27, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value31 = simpleVerifier29.newOperation(abstractInsnNode30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str25, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type26);
    }

    @Test
    public void test03860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03860");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass3 = type2.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.tree.analysis.Value value7 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type6, value7);
        java.lang.Throwable[] throwableArray9 = analyzerException8.getSuppressed();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test03861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03861");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str1 = type0.getDescriptor();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        java.lang.String str17 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        java.lang.String str25 = type21.getDescriptor();
        int int27 = type21.getOpcode((int) (short) 0);
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type21, list28, true);
        int int31 = type21.getSort();
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type21, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        boolean boolean47 = type37.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray48);
        java.lang.String str50 = type35.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        java.lang.String str58 = type54.getDescriptor();
        int int60 = type54.getOpcode((int) (short) 0);
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type54, list61, true);
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type54, list64, false);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type67 = type54.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "I" + "'", str1, "I");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)S" + "'", str45, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(S)C" + "'", str49, "(S)C");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "C" + "'", str50, "C");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test03862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03862");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        int int5 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        int int19 = type13.getSort();
        int int20 = type13.getSize();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int23 = type22.getSort();
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type22, list24, true);
        int int27 = type22.getDimensions();
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, list28, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray39);
        boolean boolean42 = type32.equals((java.lang.Object) '4');
        org.mockito.asm.Type type43 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type43, list44, false);
        java.lang.String str47 = type43.getClassName();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type49, false);
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier30.newValue(type43);
        org.mockito.asm.Type type53 = null;
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier30.newValue(type53);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value56 = simpleVerifier30.newOperation(abstractInsnNode55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(C)S" + "'", str40, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "int" + "'", str47, "int");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(value54);
    }

    @Test
    public void test03863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03863");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type4 = type1.getElementType();
        int int5 = type4.getSize();
        int int6 = type4.getSize();
        boolean boolean8 = type4.equals((java.lang.Object) "(S)L(C)Z;");
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int11 = type10.getSort();
        java.lang.String str12 = type10.toString();
        org.mockito.asm.Type type13 = type10.getElementType();
        int int14 = type13.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type13, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        int int25 = type19.getSort();
        java.lang.String str26 = type19.toString();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type27, list28, false);
        boolean boolean32 = type27.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        int int47 = type41.getSort();
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type41 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray48);
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray48);
        java.lang.String str51 = type27.toString();
        org.mockito.asm.Type type52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type52, false);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type63 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray64);
        boolean boolean67 = type57.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray68);
        java.lang.String str70 = type55.getDescriptor();
        int int71 = type55.getSort();
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier54.newValue(type55);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier54.newValue(type73);
        int int75 = value74.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value76 = simpleVerifier16.copyOperation(abstractInsnNode17, value74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str12, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "S" + "'", str26, "S");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(S)C" + "'", str49, "(S)C");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(S)S" + "'", str50, "(S)S");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "S" + "'", str51, "S");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(C)S" + "'", str65, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(S)C" + "'", str69, "(S)C");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "C" + "'", str70, "C");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
    }

    @Test
    public void test03864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03864");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (short) 0);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        int int15 = type13.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, false);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        int int29 = type23.getSort();
        int int30 = type23.getSize();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int33 = type32.getSort();
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type32, list34, true);
        int int37 = type32.getDimensions();
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type32, list38, true);
        int int42 = type32.getOpcode(122);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int45 = type44.getSort();
        java.lang.String str46 = type44.toString();
        org.mockito.asm.Type type47 = type44.getElementType();
        int int48 = type47.getSort();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        int int65 = value64.getSize();
        org.mockito.asm.tree.analysis.Value value66 = simpleVerifier58.merge(value61, value64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value66);
        boolean boolean68 = type49.equals((java.lang.Object) analyzerException67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type73, list74, true);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray78 = new org.mockito.asm.Type[] { type77 };
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray78);
        boolean boolean81 = type71.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray82 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray82);
        java.lang.String str84 = type69.getDescriptor();
        int int85 = type69.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type69, true);
        java.lang.String str88 = type69.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type69, false);
        org.mockito.asm.Type[] typeArray92 = org.mockito.asm.Type.getArgumentTypes("(S)B");
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray92);
        java.lang.String str94 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray92);
        java.lang.String str95 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray92);
        java.lang.Class<?> wildcardClass96 = typeArray92.getClass();
        org.mockito.asm.Type type97 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass96);
        org.mockito.asm.Type type98 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass96);
        java.lang.String str99 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass96);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 126 + "'", int42 == 126);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str46, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(C)S" + "'", str79, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(S)C" + "'", str83, "(S)C");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "C" + "'", str84, "C");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "C" + "'", str88, "C");
        org.junit.Assert.assertNotNull(typeArray92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(S)C" + "'", str93, "(S)C");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(S)Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str94, "(S)Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "(S)C" + "'", str95, "(S)C");
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertNotNull(type98);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str99, "[Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03865");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.Class<?> wildcardClass1 = type0.getClass();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test03866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03866");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException;");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 98");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03867");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int19 = type17.getOpcode(86);
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type35, list36, false);
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier22.newValue(type24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        int int53 = value52.getSize();
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier46.merge(value49, value52);
        org.mockito.asm.Type type55 = null;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str58 = type57.toString();
        int int59 = type57.getDimensions();
        org.mockito.asm.Type type60 = type57.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type60, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter66 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode67 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type71, list72, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        int int81 = value80.getSize();
        org.mockito.asm.tree.analysis.Value value82 = simpleVerifier74.merge(value77, value80);
        org.mockito.asm.tree.analysis.Value value83 = basicInterpreter66.copyOperation(abstractInsnNode67, value80);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier62.merge(value65, value80);
        int int85 = value65.getSize();
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier22.merge(value52, value65);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean90 = type88.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int93 = type92.getSort();
        java.util.List list94 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier96 = new org.mockito.asm.tree.analysis.SimpleVerifier(type88, type92, list94, false);
        org.mockito.asm.tree.analysis.Value value97 = simpleVerifier22.newValue(type88);
        java.lang.Class<?> wildcardClass98 = value97.getClass();
        org.mockito.asm.Type type99 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass98);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 86 + "'", int19 == 86);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str58, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 10 + "'", int93 == 10);
        org.junit.Assert.assertNotNull(value97);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(type99);
    }

    @Test
    public void test03868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03868");
        java.lang.Throwable throwable1 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/tree/analysis/AnalyzerException;", throwable1);
    }

    @Test
    public void test03869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03869");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        int int20 = type14.getSort();
        java.lang.String str21 = type14.getClassName();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier12.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        java.lang.String str30 = type24.toString();
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type24, list31, false);
        java.lang.String str34 = type14.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "short" + "'", str21, "short");
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "S" + "'", str30, "S");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "short" + "'", str34, "short");
    }

    @Test
    public void test03870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03870");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        boolean boolean15 = type5.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type5 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray16);
        java.lang.String str18 = type3.getDescriptor();
        int int19 = type3.getSort();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        boolean boolean32 = type22.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray33);
        int int35 = type20.getSize();
        boolean boolean37 = type20.equals((java.lang.Object) 181);
        int int38 = type20.getSize();
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray39);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "double" + "'", str2, "double");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)S" + "'", str13, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(S)C" + "'", str17, "(S)C");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)S" + "'", str30, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(C)C" + "'", str40, "(C)C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)D" + "'", str41, "(C)D");
    }

    @Test
    public void test03871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03871");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        int int6 = type4.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, false);
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list9, false);
        java.lang.String str12 = type2.getInternalName();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        java.lang.String str28 = type13.getDescriptor();
        int int29 = type13.getSort();
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type13, list30, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str40 = type39.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray49);
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type39, list52, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        boolean boolean73 = type63.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type63, true);
        int int76 = type58.getSort();
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type58, list77, true);
        java.util.List list80 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list80, false);
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier32.newValue(type36);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int86 = type85.getSort();
        java.lang.String str87 = type85.toString();
        org.mockito.asm.Type type88 = type85.getElementType();
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier32.newValue(type88);
        org.mockito.asm.Type type90 = null;
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier32.newValue(type90);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode92 = null;
        java.util.List list93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value94 = simpleVerifier32.naryOperation(abstractInsnNode92, list93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "C" + "'", str12, "C");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "C" + "'", str28, "C");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "boolean" + "'", str40, "boolean");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)S" + "'", str50, "(C)S");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)Z" + "'", str51, "(C)Z");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)S" + "'", str71, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 10 + "'", int86 == 10);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str87, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test03872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03872");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type12, list13, false);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str18 = type17.getClassName();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        int int35 = value34.getSize();
        org.mockito.asm.tree.analysis.Value value36 = simpleVerifier28.merge(value31, value34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value36);
        boolean boolean38 = type19.equals((java.lang.Object) analyzerException37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        boolean boolean51 = type41.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type41 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray52);
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray52);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        int int69 = value68.getSize();
        org.mockito.asm.tree.analysis.Value value70 = simpleVerifier62.merge(value65, value68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Object) type17, value65);
        org.mockito.asm.Type type72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type72, false);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier15.newValue(type72);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType("(C)LLorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier15.newValue(type77);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode79 = null;
        java.util.List list80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value81 = simpleVerifier15.naryOperation(abstractInsnNode79, list80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "double" + "'", str18, "double");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(C)S" + "'", str49, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(S)C" + "'", str53, "(S)C");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(S)V" + "'", str54, "(S)V");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(S)D" + "'", str55, "(S)D");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
    }

    @Test
    public void test03873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03873");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str2 = type1.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type5 = type1.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "I" + "'", str2, "I");
    }

    @Test
    public void test03874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03874");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str1 = type0.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        int int20 = type14.getSort();
        boolean boolean22 = type14.equals((java.lang.Object) 192);
        int int23 = type14.getSort();
        java.lang.String str24 = type14.toString();
        java.lang.String str25 = type14.getDescriptor();
        int int26 = type14.getSize();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass29 = type28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        boolean boolean32 = type14.equals((java.lang.Object) type31);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type14, false);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass38 = type37.getClass();
        java.lang.String str39 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass38);
        java.lang.String str40 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass38);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass38);
        org.mockito.asm.tree.analysis.Value value42 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type41, value42);
        org.mockito.asm.Type type44 = type41.getElementType();
        int int45 = type44.getSort();
        java.lang.String str46 = type44.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type44, false);
        java.lang.Class<?> wildcardClass49 = type14.getClass();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass49);
        int int51 = type50.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "boolean" + "'", str1, "boolean");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(C)S" + "'", str11, "(C)S");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)Z" + "'", str12, "(C)Z");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "S" + "'", str24, "S");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "S" + "'", str25, "S");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/Type" + "'", str30, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str39, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str40, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lg/mockito/asm/Type;" + "'", str46, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test03875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03875");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Z", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: g.mockito.asm.Type: expected true, but found I", (java.lang.Throwable) analyzerException4);
        java.lang.Throwable[] throwableArray6 = analyzerException5.getSuppressed();
        java.lang.String str7 = analyzerException5.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: g.mockito.asm.Type: expected true, but found I" + "'", str7, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: g.mockito.asm.Type: expected true, but found I");
    }

    @Test
    public void test03876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03876");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSize();
        org.mockito.asm.Type type4 = null;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list5, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        int int22 = value21.getSize();
        org.mockito.asm.tree.analysis.Value value23 = simpleVerifier15.merge(value18, value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        int int31 = type25.getSort();
        java.lang.String str32 = type25.toString();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type33, list34, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        boolean boolean48 = type38.equals((java.lang.Object) '4');
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type49, list50, false);
        java.lang.String str53 = type49.getClassName();
        int int54 = type49.getSort();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type63 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray64);
        boolean boolean67 = type57.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray68);
        int int70 = type55.getSize();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type72, false);
        boolean boolean76 = type72.equals((java.lang.Object) 23);
        java.lang.String str77 = type72.getClassName();
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type72, list78, true);
        java.lang.String str81 = type49.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type49, false);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getReturnType("B");
        java.lang.String str86 = type85.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type85, true);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier88.newValue(type90);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value92 = simpleVerifier7.binaryOperation(abstractInsnNode8, value23, value91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "S" + "'", str32, "S");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(C)S" + "'", str46, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "int" + "'", str53, "int");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 5 + "'", int54 == 5);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(C)S" + "'", str65, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(S)C" + "'", str69, "(S)C");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "char" + "'", str77, "char");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "I" + "'", str81, "I");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "B" + "'", str86, "B");
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test03877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03877");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier6.merge(value27, value44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass48 = type47.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type52 = type51.getElementType();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, false);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str60 = type59.getDescriptor();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier58.newValue(type59);
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type59, list62, true);
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier6.newValue(type52);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type74 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray75);
        boolean boolean78 = type68.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type68 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray79);
        int int81 = type66.getSize();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type83, false);
        boolean boolean87 = type83.equals((java.lang.Object) 115);
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        java.lang.String str90 = type89.getClassName();
        int int92 = type89.getOpcode(164);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type83, type89, true);
        org.mockito.asm.tree.analysis.Value value95 = simpleVerifier6.newValue(type83);
        int int97 = type83.getOpcode((int) (short) 0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str50, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "S" + "'", str60, "S");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)S" + "'", str76, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(S)C" + "'", str80, "(S)C");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Lorg.mockito.asm.tree.analysis.BasicValue;" + "'", str90, "Lorg.mockito.asm.tree.analysis.BasicValue;");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 168 + "'", int92 == 168);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test03878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03878");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int6 = type5.getDimensions();
        org.mockito.asm.Type type7 = type5.getElementType();
        int int8 = type7.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        boolean boolean27 = type17.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type17, true);
        boolean boolean31 = type17.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        boolean boolean50 = type40.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type40, true);
        org.mockito.asm.Type type53 = null;
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier52.newValue(type55);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type55, true);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("(C)LC;");
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier58.newValue(type60);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type60, true);
        java.lang.String str64 = type7.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(C)S" + "'", str25, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)S" + "'", str48, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNull(value56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Lg/mockito/asm/Type;" + "'", str64, "Lg/mockito/asm/Type;");
    }

    @Test
    public void test03879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03879");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        boolean boolean14 = type9.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        int int29 = type23.getSort();
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray30);
        java.lang.String str33 = type9.toString();
        java.lang.String str34 = type9.getClassName();
        int int35 = type9.getSort();
        int int36 = type9.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)S" + "'", str32, "(S)S");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "short" + "'", str34, "short");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 4 + "'", int36 == 4);
    }

    @Test
    public void test03880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03880");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int8 = type7.getSize();
        int int9 = type7.getSort();
        java.lang.String str10 = type7.getDescriptor();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        boolean boolean23 = type13.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray24);
        int int26 = type11.getSize();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type28, false);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str32 = type31.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type45, true);
        boolean boolean48 = type31.equals((java.lang.Object) simpleVerifier47);
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type31, list49, false);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.BYTE_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type52, list53, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type11, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode58 = null;
        java.util.List list59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value60 = simpleVerifier57.naryOperation(abstractInsnNode58, list59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(S)C" + "'", str25, "(S)C");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "boolean" + "'", str32, "boolean");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)Z" + "'", str43, "(C)Z");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type52);
    }

    @Test
    public void test03881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03881");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        int int5 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        int int31 = value30.getSize();
        org.mockito.asm.tree.analysis.Value value32 = simpleVerifier24.merge(value27, value30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value32);
        analyzerException15.addSuppressed((java.lang.Throwable) analyzerException33);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Throwable) analyzerException15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Throwable) analyzerException35);
        boolean boolean37 = type11.equals((java.lang.Object) analyzerException35);
        int int38 = type11.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str9, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
    }

    @Test
    public void test03882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03882");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("(S)C");
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list20, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass25 = type24.getClass();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass25);
        java.lang.String str27 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass25);
        java.lang.String str28 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass25);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass25);
        org.mockito.asm.tree.analysis.Value value30 = simpleVerifier22.newValue(type29);
        int int31 = type29.getDimensions();
        int int32 = type29.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str27, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org/mockito/asm/Type" + "'", str28, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test03883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03883");
        java.lang.Object obj1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        int int15 = value14.getSize();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier8.merge(value11, value14);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", obj1, value16);
        int int19 = value16.getSize();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test03884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03884");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        int int16 = type0.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        boolean boolean29 = type19.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray30);
        int int32 = type17.getSize();
        boolean boolean34 = type17.equals((java.lang.Object) 181);
        int int35 = type17.getSize();
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        boolean boolean49 = type39.equals((java.lang.Object) '4');
        java.lang.String str50 = type39.toString();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        boolean boolean63 = type53.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray64);
        int int66 = type51.getSize();
        boolean boolean68 = type51.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type51, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type51, true);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str75 = type74.getDescriptor();
        java.lang.String str76 = type74.toString();
        int int77 = type74.getSort();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean81 = type79.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int84 = type83.getSort();
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type83, list85, false);
        java.util.List list88 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type74, type83, list88, false);
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier72.newValue(type83);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode92 = null;
        java.util.List list93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value94 = simpleVerifier72.naryOperation(abstractInsnNode92, list93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(C)S" + "'", str27, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)C" + "'", str37, "(C)C");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)S" + "'", str47, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "S" + "'", str50, "S");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)S" + "'", str61, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(S)C" + "'", str65, "(S)C");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "S" + "'", str75, "S");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "S" + "'", str76, "S");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 4 + "'", int77 == 4);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 10 + "'", int84 == 10);
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test03885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03885");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        int int5 = type1.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value9 = simpleVerifier7.newOperation(abstractInsnNode8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test03886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03886");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z");
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass8 = type7.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str21 = type20.getDescriptor();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.Value value23 = simpleVerifier13.newValue(type20);
        int int24 = value23.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)LC;", (java.lang.Object) type2, value23);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type26 = type2.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "S" + "'", str5, "S");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "S" + "'", str21, "S");
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test03887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03887");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str1 = type0.getDescriptor();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        java.lang.String str17 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        java.lang.String str25 = type21.getDescriptor();
        int int27 = type21.getOpcode((int) (short) 0);
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type21, list28, true);
        int int31 = type21.getSort();
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type21, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str40 = type39.getDescriptor();
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier34.newValue(type39);
        int int43 = value42.getSize();
        java.lang.Class<?> wildcardClass44 = value42.getClass();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "I" + "'", str1, "I");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "I" + "'", str40, "I");
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test03888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03888");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int2 = type1.getSort();
        int int3 = type1.getDimensions();
        int int4 = type1.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier11.merge(value14, value17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        int int33 = value32.getSize();
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier26.merge(value29, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = value47.getSize();
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier41.merge(value44, value47);
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier11.merge(value32, value49);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass53 = type52.getClass();
        java.lang.String str54 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass53);
        java.lang.String str55 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass53);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass53);
        org.mockito.asm.Type type57 = type56.getElementType();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, false);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str65 = type64.getDescriptor();
        org.mockito.asm.tree.analysis.Value value66 = simpleVerifier63.newValue(type64);
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type64, list67, true);
        org.mockito.asm.tree.analysis.Value value70 = simpleVerifier11.newValue(type57);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type57, false);
        int int74 = type1.getOpcode(163);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str54, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str55, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "S" + "'", str65, "S");
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 167 + "'", int74 == 167);
    }

    @Test
    public void test03889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03889");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(SC)LC;");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str3 = type2.getClassName();
        java.lang.String str4 = type2.getDescriptor();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getReturnType("(S)C");
        int int7 = type6.getSize();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("(S)S");
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        boolean boolean22 = type12.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray23);
        java.lang.String str25 = type10.getDescriptor();
        int int26 = type10.getSort();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        boolean boolean39 = type29.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray40);
        int int42 = type27.getSize();
        boolean boolean44 = type27.equals((java.lang.Object) 181);
        int int45 = type27.getSize();
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray46);
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray46);
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray46);
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray46);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray46);
        java.lang.Class<?> wildcardClass52 = typeArray46.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "double" + "'", str3, "double");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "D" + "'", str4, "D");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(S)C" + "'", str24, "(S)C");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)C" + "'", str41, "(S)C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)C" + "'", str47, "(C)C");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)S" + "'", str48, "(C)S");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(C)C" + "'", str49, "(C)C");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)D" + "'", str50, "(C)D");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)LC;" + "'", str51, "(C)LC;");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test03890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03890");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier11.merge(value14, value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Z", (java.lang.Throwable) analyzerException21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        int int42 = value41.getSize();
        org.mockito.asm.tree.analysis.Value value43 = simpleVerifier35.merge(value38, value41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value43);
        analyzerException26.addSuppressed((java.lang.Throwable) analyzerException44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Throwable) analyzerException26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Throwable) analyzerException46);
        analyzerException22.addSuppressed((java.lang.Throwable) analyzerException47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray51 = analyzerException50.getSuppressed();
        java.lang.Throwable[] throwableArray52 = analyzerException50.getSuppressed();
        analyzerException22.addSuppressed((java.lang.Throwable) analyzerException50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("[Ljava/lang/Throwable;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/SimpleVerifier", (java.lang.Throwable) analyzerException57);
        java.lang.Throwable[] throwableArray59 = analyzerException58.getSuppressed();
        analyzerException54.addSuppressed((java.lang.Throwable) analyzerException58);
        java.lang.Throwable[] throwableArray61 = analyzerException58.getSuppressed();
        java.lang.String str62 = analyzerException58.toString();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/tree/analysis/SimpleVerifier" + "'", str62, "org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/tree/analysis/SimpleVerifier");
    }

    @Test
    public void test03891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03891");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I");
        java.lang.String str2 = type1.getDescriptor();
        java.lang.String str3 = type1.getDescriptor();
        java.lang.String str4 = type1.getDescriptor();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        int int12 = type10.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, false);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        boolean boolean27 = type17.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray28);
        java.lang.String str30 = type15.getDescriptor();
        int int31 = type15.getSort();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        boolean boolean44 = type34.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray45);
        int int47 = type32.getSize();
        boolean boolean49 = type32.equals((java.lang.Object) 181);
        int int50 = type32.getSize();
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray51);
        boolean boolean54 = type6.equals((java.lang.Object) type8);
        java.lang.Class<?> wildcardClass55 = type6.getClass();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        java.lang.String str57 = type56.getClassName();
        boolean boolean58 = type1.equals((java.lang.Object) type56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        java.lang.String str66 = type62.getDescriptor();
        java.lang.Class<?> wildcardClass67 = type62.getClass();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass67);
        org.mockito.asm.Type type69 = type68.getElementType();
        org.mockito.asm.Type type70 = type69.getElementType();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type[] typeArray73 = org.mockito.asm.Type.getArgumentTypes("(S)C");
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray73);
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray73);
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type69, list76, false);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;" + "'", str2, "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;" + "'", str3, "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;" + "'", str4, "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(C)S" + "'", str25, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(S)C" + "'", str29, "(S)C");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "C" + "'", str30, "C");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(S)C" + "'", str46, "(S)C");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)C" + "'", str52, "(C)C");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)LC;" + "'", str53, "(C)LC;");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.mockito.asm.Type" + "'", str57, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "C" + "'", str66, "C");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(S)F" + "'", str74, "(S)F");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(S)Lg/mockito/asm/Type;" + "'", str75, "(S)Lg/mockito/asm/Type;");
    }

    @Test
    public void test03892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03892");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: rg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg.mockito.asm.Type");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 149");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03893");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        boolean boolean22 = type8.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type31, true);
        org.mockito.asm.Type type44 = null;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier43.newValue(type46);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type46, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, false);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str57 = type56.getDescriptor();
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type69, list70, true);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray74);
        boolean boolean77 = type67.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type67, true);
        boolean boolean81 = type67.equals((java.lang.Object) 158);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType("S");
        java.util.List list84 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type83, list84, false);
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier55.newValue(type67);
        boolean boolean88 = type8.equals((java.lang.Object) type67);
        int int89 = type8.getSort();
        // The following exception was thrown during execution in test generation
        try {
            int int90 = type8.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "S" + "'", str57, "S");
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(C)S" + "'", str75, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 4 + "'", int89 == 4);
    }

    @Test
    public void test03894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03894");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test03895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03895");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;");
        int int2 = type1.getSize();
        int int3 = type1.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        java.lang.String str11 = type7.getDescriptor();
        java.lang.Class<?> wildcardClass12 = type7.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("S");
        boolean boolean19 = type16.equals((java.lang.Object) analyzerException18);
        java.lang.Throwable[] throwableArray20 = analyzerException18.getSuppressed();
        boolean boolean21 = type14.equals((java.lang.Object) throwableArray20);
        boolean boolean22 = type1.equals((java.lang.Object) throwableArray20);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "C" + "'", str11, "C");
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org/mockito/asm/Type" + "'", str13, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03896");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, false);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str18 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier10.newValue(type17);
        int int21 = type17.getSize();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int24 = type23.getSort();
        int int26 = type23.getOpcode(113);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type23, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode29 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        int int37 = type31.getSort();
        java.lang.String str38 = type31.toString();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type39, list40, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        int int50 = type44.getSort();
        java.lang.String str51 = type44.getClassName();
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier42.newValue(type44);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected C, but found I");
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier42.newValue(type54);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value56 = simpleVerifier28.copyOperation(abstractInsnNode29, value55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "S" + "'", str18, "S");
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 117 + "'", int26 == 117);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 4 + "'", int37 == 4);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "S" + "'", str38, "S");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 4 + "'", int50 == 4);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "short" + "'", str51, "short");
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
    }

    @Test
    public void test03897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03897");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected I, but found I;");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 128");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03898");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        int int24 = type18.getSort();
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray25);
        java.lang.String str27 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type13, false);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = value47.getSize();
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier41.merge(value44, value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value49);
        analyzerException32.addSuppressed((java.lang.Throwable) analyzerException50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException32);
        java.lang.Throwable[] throwableArray53 = analyzerException32.getSuppressed();
        boolean boolean54 = type3.equals((java.lang.Object) analyzerException32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = type3.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(S)C" + "'", str26, "(S)C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test03899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03899");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;: expected I, but found I");
        java.lang.String str2 = type1.toString();
        java.lang.String str3 = type1.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str2, "Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str3, "Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
    }

    @Test
    public void test03900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03900");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Lg/mockito/asm/Type;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        int int10 = type9.getSize();
        int int11 = type9.getSort();
        java.lang.String str12 = type9.getDescriptor();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        int int28 = type13.getSize();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type30, false);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str34 = type33.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray43);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type47, true);
        boolean boolean50 = type33.equals((java.lang.Object) simpleVerifier49);
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type33, list51, false);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.BYTE_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type54, list55, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type13, false);
        boolean boolean60 = type1.equals((java.lang.Object) simpleVerifier59);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getObjectType("(S)C");
        int int63 = type62.getSort();
        int int64 = type62.getSort();
        int int65 = type62.getSort();
        org.mockito.asm.tree.analysis.Value value66 = simpleVerifier59.newValue(type62);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode67 = null;
        java.util.List list68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value69 = simpleVerifier59.naryOperation(abstractInsnNode67, list68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str12, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "boolean" + "'", str34, "boolean");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)Z" + "'", str45, "(C)Z");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertNotNull(value66);
    }

    @Test
    public void test03901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03901");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str4 = type3.getClassName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value22);
        boolean boolean24 = type5.equals((java.lang.Object) analyzerException23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        boolean boolean37 = type27.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray38);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray38);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray38);
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list42, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        int int52 = type46.getSort();
        int int53 = type46.getSize();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int56 = type55.getSort();
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type55, list57, true);
        java.lang.String str60 = type55.toString();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier44.newValue(type55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier44.newValue(type63);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = type63.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "double" + "'", str4, "double");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)C" + "'", str39, "(S)C");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)V" + "'", str40, "(S)V");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)D" + "'", str41, "(S)D");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str60, "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(value65);
    }

    @Test
    public void test03902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03902");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        int int24 = type22.getOpcode(8192);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, true);
        java.lang.String str27 = type20.getDescriptor();
        org.mockito.asm.Type type28 = null;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = type32.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, false);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list37, false);
        java.lang.String str40 = type30.getInternalName();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        boolean boolean53 = type43.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray54);
        java.lang.String str56 = type41.getDescriptor();
        int int57 = type41.getSort();
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type41, list58, true);
        java.lang.Class<?> wildcardClass61 = simpleVerifier60.getClass();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type63, list64, true);
        int int67 = type63.getDimensions();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier19.newValue(type63);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode69 = null;
        org.mockito.asm.tree.analysis.Value value70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value71 = simpleVerifier19.unaryOperation(abstractInsnNode69, value70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8196 + "'", int24 == 8196);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "D" + "'", str27, "D");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)S" + "'", str51, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(S)C" + "'", str55, "(S)C");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "C" + "'", str56, "C");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(value68);
    }

    @Test
    public void test03903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03903");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.Type type7 = type5.getElementType();
        java.lang.String str8 = type7.getDescriptor();
        java.lang.String str9 = type7.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lg/mockito/asm/Type;" + "'", str8, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "g.mockito.asm.Type" + "'", str9, "g.mockito.asm.Type");
    }

    @Test
    public void test03904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03904");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        int int8 = type2.getSort();
        java.lang.String str9 = type2.toString();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type10, list11, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        int int21 = type15.getSort();
        java.lang.String str22 = type15.getClassName();
        org.mockito.asm.tree.analysis.Value value23 = simpleVerifier13.newValue(type15);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type15, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray39);
        int int41 = type26.getSize();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type43, false);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str47 = type46.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray56);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type60, true);
        boolean boolean63 = type46.equals((java.lang.Object) simpleVerifier62);
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type46, list64, false);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BYTE_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type67, list68, true);
        org.mockito.asm.tree.analysis.Value value71 = simpleVerifier25.newValue(type67);
        java.lang.String str72 = type67.getClassName();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "S" + "'", str9, "S");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "short" + "'", str22, "short");
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "boolean" + "'", str47, "boolean");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)S" + "'", str57, "(C)S");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(C)Z" + "'", str58, "(C)Z");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "byte" + "'", str72, "byte");
    }

    @Test
    public void test03905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03905");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("C");
        int int3 = type1.getOpcode(160);
        int int5 = type1.getOpcode(83);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: char");
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, false);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.LONG_TYPE;
        int int12 = type11.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter13 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode14 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.Value value30 = basicInterpreter13.copyOperation(abstractInsnNode14, value27);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode31 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        int int45 = value44.getSize();
        org.mockito.asm.tree.analysis.Value value46 = simpleVerifier38.merge(value41, value44);
        int int47 = value44.getSize();
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter13.copyOperation(abstractInsnNode31, value44);
        boolean boolean49 = type11.equals((java.lang.Object) basicInterpreter13);
        int int51 = type11.getOpcode(156);
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier10.newValue(type11);
        java.lang.Class<?> wildcardClass53 = simpleVerifier10.getClass();
        java.lang.String str54 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass53);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 160 + "'", int3 == 160);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 83 + "'", int5 == 83);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 157 + "'", int51 == 157);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/asm/tree/analysis/SimpleVerifier" + "'", str54, "org/mockito/asm/tree/analysis/SimpleVerifier");
    }

    @Test
    public void test03906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03906");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org/mockito/asm/Type");
        int int2 = type1.getSort();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type3 = type1.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
    }

    @Test
    public void test03907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03907");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        int int8 = type6.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        int int16 = type10.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type10, false);
        java.lang.Class<?> wildcardClass19 = type10.getClass();
        java.lang.String str20 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        java.lang.String str22 = type21.getInternalName();
        java.lang.String str23 = type21.toString();
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type21, list24, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        java.util.List list28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value29 = simpleVerifier26.naryOperation(abstractInsnNode27, list28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/Type" + "'", str3, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str20, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org/mockito/asm/Type" + "'", str22, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str23, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03908");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        org.mockito.asm.Type type21 = null;
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        boolean boolean56 = type46.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type46, true);
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier58.merge(value63, value78);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier20.merge(value37, value78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type84, list85, true);
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier20.newValue(type82);
        java.lang.Class<?> wildcardClass89 = simpleVerifier20.getClass();
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass89);
        org.mockito.asm.Type type91 = null;
        java.util.List list92 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type90, type91, list92, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode95 = null;
        java.util.List list96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value97 = simpleVerifier94.naryOperation(abstractInsnNode95, list96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(type90);
    }

    @Test
    public void test03909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03909");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type type15 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type15, list16, false);
        java.lang.String str19 = type15.getClassName();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type21, false);
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type21, list24, true);
        java.lang.String str27 = type21.getInternalName();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str30 = type29.getClassName();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getObjectType("boolean");
        int int34 = type32.getOpcode(82);
        java.lang.String str35 = type32.getClassName();
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type32, list36, true);
        java.lang.String str39 = type29.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        int int54 = type48.getSort();
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray55);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray55);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray55);
        java.lang.String str59 = type21.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "int" + "'", str19, "int");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/Type" + "'", str27, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "S" + "'", str30, "S");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 86 + "'", int34 == 86);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "boolean" + "'", str35, "boolean");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "S" + "'", str39, "S");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(S)C" + "'", str56, "(S)C");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(S)LS;" + "'", str57, "(S)LS;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(S)Lorg/mockito/asm/Type;" + "'", str58, "(S)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str59, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03910");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type4 = type1.getElementType();
        int int5 = type1.getDimensions();
        java.lang.String str6 = type1.getDescriptor();
        java.lang.String str7 = type1.getDescriptor();
        int int8 = type1.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    }

    @Test
    public void test03911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03911");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        int int16 = type0.getSort();
        java.lang.String str17 = type0.getClassName();
        boolean boolean19 = type0.equals((java.lang.Object) 131072);
        int int20 = type0.getSize();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int23 = type22.getSort();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        boolean boolean36 = type26.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray37);
        int int39 = type24.getSize();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type41, false);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str49 = type48.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray58);
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type48, list61, false);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type72 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray73);
        boolean boolean76 = type66.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type66 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray77);
        java.lang.String str79 = type64.getDescriptor();
        int int80 = type64.getSort();
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type64, list81, true);
        boolean boolean84 = type41.equals((java.lang.Object) type45);
        int int85 = type41.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type41, true);
        int int89 = type41.getOpcode(95);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier91 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type41, true);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type92 = type41.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "char" + "'", str17, "char");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)S" + "'", str34, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)C" + "'", str38, "(S)C");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "boolean" + "'", str49, "boolean");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)S" + "'", str59, "(C)S");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(C)Z" + "'", str60, "(C)Z");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(C)S" + "'", str74, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(S)C" + "'", str78, "(S)C");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "C" + "'", str79, "C");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 95 + "'", int89 == 95);
    }

    @Test
    public void test03912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03912");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        java.lang.String str16 = type0.toString();
        int int17 = type0.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass20 = type19.getClass();
        java.lang.String str21 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass20);
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass20);
        org.mockito.asm.Type type24 = type23.getElementType();
        org.mockito.asm.Type type25 = type23.getElementType();
        java.lang.String str26 = type23.getInternalName();
        org.mockito.asm.Type[] typeArray28 = org.mockito.asm.Type.getArgumentTypes("(C)Lorg/mockito/asm/Type;");
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray28);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray28);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "C" + "'", str16, "C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str21, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/Type" + "'", str26, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str29, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)C" + "'", str30, "(C)C");
    }

    @Test
    public void test03913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03913");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I", (java.lang.Throwable) analyzerException5);
        analyzerException2.addSuppressed((java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        int int25 = value24.getSize();
        org.mockito.asm.tree.analysis.Value value26 = simpleVerifier18.merge(value21, value24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier37.merge(value40, value43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) 0, value43);
        analyzerException27.addSuppressed((java.lang.Throwable) analyzerException46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: D", (java.lang.Throwable) analyzerException46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        int int66 = value65.getSize();
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier59.merge(value62, value65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier79.newValue(type80);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        int int85 = value84.getSize();
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier78.merge(value81, value84);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) 0, value84);
        analyzerException68.addSuppressed((java.lang.Throwable) analyzerException87);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException68);
        analyzerException48.addSuppressed((java.lang.Throwable) analyzerException68);
        analyzerException2.addSuppressed((java.lang.Throwable) analyzerException48);
        java.lang.Throwable[] throwableArray92 = analyzerException2.getSuppressed();
        org.mockito.asm.tree.analysis.Value value93 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) analyzerException2, value93);
        java.lang.String str95 = analyzerException2.toString();
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I" + "'", str95, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
    }

    @Test
    public void test03914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03914");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Z: expected S, but found I");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 124");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03915");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        int int16 = type10.getSort();
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray17);
        int int19 = type5.getSize();
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, list20, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        java.util.List list24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value25 = simpleVerifier22.naryOperation(abstractInsnNode23, list24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test03916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03916");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        int int18 = type0.getSize();
        java.lang.String str19 = type0.toString();
        int int20 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        java.lang.String str29 = type22.toString();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type30, list31, false);
        boolean boolean35 = type30.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type30, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        boolean boolean49 = type39.equals((java.lang.Object) '4');
        org.mockito.asm.Type type50 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type50, list51, false);
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type50, list54, false);
        int int57 = type50.getSort();
        int int58 = type50.getSize();
        java.lang.String str59 = type50.toString();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getReturnType("(S)V");
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type61, list62, false);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getType("(S)Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        int int67 = type66.getDimensions();
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type66, list68, false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = type50.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "S" + "'", str29, "S");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)S" + "'", str47, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 5 + "'", int57 == 5);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "I" + "'", str59, "I");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
    }

    @Test
    public void test03917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03917");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int2 = type1.getSort();
        java.lang.Class<?> wildcardClass3 = type1.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass3);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        java.lang.String str12 = type10.getDescriptor();
        int int13 = type10.getSize();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str19 = type18.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray28);
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type18, list31, false);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value36 = simpleVerifier33.newValue(type35);
        java.lang.String str37 = type35.toString();
        java.lang.String str38 = type35.toString();
        java.lang.String str39 = type35.getClassName();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, false);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        boolean boolean58 = type48.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray59);
        java.lang.String str61 = type46.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        java.lang.String str69 = type65.getDescriptor();
        int int71 = type65.getOpcode((int) (short) 0);
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type65, list72, true);
        int int75 = type46.getSort();
        java.lang.String str76 = type46.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type46, false);
        boolean boolean79 = type35.equals((java.lang.Object) type40);
        org.mockito.asm.Type[] typeArray81 = org.mockito.asm.Type.getArgumentTypes("(S)B");
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray81);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray81);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type10, false);
        int int86 = type9.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "D" + "'", str12, "D");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "boolean" + "'", str19, "boolean");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)Z" + "'", str30, "(C)Z");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "C" + "'", str37, "C");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "char" + "'", str39, "char");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)C" + "'", str60, "(S)C");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "C" + "'", str61, "C");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "C" + "'", str76, "C");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(S)Z" + "'", str82, "(S)Z");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(S)D" + "'", str83, "(S)D");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test03918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03918");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        int int9 = type3.getSort();
        java.lang.String str10 = type3.toString();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type11, list12, false);
        boolean boolean16 = type11.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        int int22 = type20.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, false);
        java.lang.String str25 = type18.toString();
        org.mockito.asm.Type[] typeArray27 = org.mockito.asm.Type.getArgumentTypes("(C)S");
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray27);
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray27);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray27);
        java.lang.String str31 = type1.getDescriptor();
        java.lang.String str32 = type1.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "S" + "'", str10, "S");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "LC;" + "'", str25, "LC;");
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)LC;" + "'", str28, "(C)LC;");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I;" + "'", str30, "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I;");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I;" + "'", str31, "Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I;");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I;" + "'", str32, "Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I;");
    }

    @Test
    public void test03919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03919");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(C)Z");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        int int12 = type3.getSort();
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list13, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode16 = null;
        org.mockito.asm.tree.analysis.Value value17 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        java.lang.String str25 = type21.getDescriptor();
        int int27 = type21.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        int int42 = type36.getSort();
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray43);
        java.lang.String str45 = type31.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type31, false);
        org.mockito.asm.Type type48 = null;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        int int55 = type53.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        int int63 = type57.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type57, false);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier65.newValue(type66);
        int int68 = value67.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier51.merge(value67, value71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value75 = simpleVerifier15.ternaryOperation(abstractInsnNode16, value17, value72, value74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(C)S" + "'", str11, "(C)S");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(S)C" + "'", str44, "(S)C");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
    }

    @Test
    public void test03920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03920");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass1);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "java/lang/Object" + "'", str3, "java/lang/Object");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Ljava/lang/Object;" + "'", str5, "Ljava/lang/Object;");
    }

    @Test
    public void test03921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03921");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)L(S)C;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("(S)D");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        int int12 = type10.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, false);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type16, true);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getObjectType("(S)L(C)Z;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        boolean boolean32 = type22.equals((java.lang.Object) '4');
        boolean boolean34 = type22.equals((java.lang.Object) 193);
        java.lang.String str35 = type22.getDescriptor();
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list36, false);
        org.mockito.asm.Type type39 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        int int47 = type41.getSort();
        java.lang.String str48 = type41.getClassName();
        java.lang.String str49 = type41.getDescriptor();
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list50, false);
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier38.newValue(type41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        int int67 = value66.getSize();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier60.merge(value63, value66);
        int int69 = value68.getSize();
        org.mockito.asm.tree.analysis.Value value70 = simpleVerifier18.merge(value53, value68);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value71 = simpleVerifier5.copyOperation(abstractInsnNode6, value53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)S" + "'", str30, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "S" + "'", str35, "S");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "short" + "'", str48, "short");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "S" + "'", str49, "S");
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(value70);
    }

    @Test
    public void test03922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03922");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSize();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        int int20 = type14.getSort();
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray21);
        int int23 = type9.getSize();
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type9, list24, false);
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list27, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value31 = simpleVerifier29.newOperation(abstractInsnNode30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(S)C" + "'", str22, "(S)C");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test03923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03923");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        boolean boolean14 = type9.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        int int29 = type23.getSort();
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray30);
        java.lang.String str33 = type9.toString();
        org.mockito.asm.Type[] typeArray35 = org.mockito.asm.Type.getArgumentTypes("(S)Lorg.mockito.asm.Type;");
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray35);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)S" + "'", str32, "(S)S");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(S)S" + "'", str36, "(S)S");
    }

    @Test
    public void test03924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03924");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(C)Z");
        int int2 = type1.getSort();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str6 = type5.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray15);
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray15);
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list19, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str24 = type23.getClassName();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass27 = type26.getClass();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, false);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str40 = type39.getDescriptor();
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier32.newValue(type39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        int int46 = type44.getSort();
        java.lang.Object obj47 = null;
        boolean boolean48 = type44.equals(obj47);
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier32.newValue(type44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        boolean boolean61 = type51.equals((java.lang.Object) '4');
        java.lang.String str62 = type51.toString();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        boolean boolean75 = type65.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray76);
        int int78 = type63.getSize();
        boolean boolean80 = type63.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type63, false);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier82.newValue(type84);
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier21.merge(value49, value85);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str88 = type87.getDescriptor();
        int int89 = type87.getSort();
        int int90 = type87.getSort();
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier21.newValue(type87);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode92 = null;
        java.util.List list93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value94 = simpleVerifier21.naryOperation(abstractInsnNode92, list93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "boolean" + "'", str6, "boolean");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)Z" + "'", str17, "(C)Z");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;" + "'", str18, "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "S" + "'", str24, "S");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "S" + "'", str40, "S");
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)S" + "'", str59, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "S" + "'", str62, "S");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(C)S" + "'", str73, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(S)C" + "'", str77, "(S)C");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "I" + "'", str88, "I");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 5 + "'", int89 == 5);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 5 + "'", int90 == 5);
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test03925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03925");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)F");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test03926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03926");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier9.merge(value12, value15);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter18 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode19 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        int int33 = value32.getSize();
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier26.merge(value29, value32);
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter18.copyOperation(abstractInsnNode19, value32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        int int49 = value48.getSize();
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier42.merge(value45, value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        boolean boolean69 = type59.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type59, true);
        org.mockito.asm.Type type72 = null;
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type78, type80, list81, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier87 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value89 = basicVerifier87.newValue(type88);
        int int90 = value89.getSize();
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier83.merge(value86, value89);
        org.mockito.asm.tree.analysis.Value value92 = simpleVerifier71.merge(value76, value91);
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter18.merge(value45, value76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)D", (java.lang.Object) value17, value93);
        java.lang.Throwable[] throwableArray95 = analyzerException94.getSuppressed();
        java.lang.Throwable[] throwableArray96 = analyzerException94.getSuppressed();
        java.lang.Throwable[] throwableArray97 = analyzerException94.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException98 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (S)V", (java.lang.Throwable) analyzerException94);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException99 = new org.mockito.asm.tree.analysis.AnalyzerException("Lshort;", (java.lang.Throwable) analyzerException94);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)S" + "'", str67, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertNotNull(throwableArray95);
        org.junit.Assert.assertNotNull(throwableArray96);
        org.junit.Assert.assertNotNull(throwableArray97);
    }

    @Test
    public void test03927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03927");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: ()Lorg/mockito/asm/Type;");
        java.lang.String str2 = type1.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str2, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03928");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        int int5 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        java.lang.String str12 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass8);
        java.lang.String str13 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        java.lang.String str14 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str9, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org/mockito/asm/Type" + "'", str12, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str13, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str14, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03929");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str3 = type2.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier13.merge(value16, value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value21);
        boolean boolean23 = type4.equals((java.lang.Object) analyzerException22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        boolean boolean36 = type26.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray37);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        int int54 = value53.getSize();
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier47.merge(value50, value53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Object) type2, value50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Throwable) analyzerException56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/Type;");
        analyzerException57.addSuppressed((java.lang.Throwable) analyzerException59);
        java.lang.Throwable[] throwableArray61 = analyzerException57.getSuppressed();
        java.lang.Class<?> wildcardClass62 = throwableArray61.getClass();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "double" + "'", str3, "double");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)S" + "'", str34, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)C" + "'", str38, "(S)C");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)V" + "'", str39, "(S)V");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)D" + "'", str40, "(S)D");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test03930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03930");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        int int5 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        java.lang.String str8 = type3.toString();
        org.mockito.asm.Type type9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        int int26 = type20.getSort();
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray27);
        int int29 = type15.getSize();
        java.lang.String str30 = type15.toString();
        boolean boolean32 = type15.equals((java.lang.Object) 3);
        java.lang.String str33 = type15.getClassName();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        boolean boolean46 = type36.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray47);
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type34, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        java.lang.String str59 = type55.getDescriptor();
        java.lang.Class<?> wildcardClass60 = type55.getClass();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass60);
        org.mockito.asm.Type type62 = type61.getElementType();
        boolean boolean64 = type62.equals((java.lang.Object) 197);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type62, true);
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier11.newValue(type34);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode68 = null;
        java.util.List list69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value70 = simpleVerifier11.naryOperation(abstractInsnNode68, list69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(S)C" + "'", str28, "(S)C");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "C" + "'", str30, "C");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "char" + "'", str33, "char");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(S)C" + "'", str48, "(S)C");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "C" + "'", str59, "C");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(value67);
    }

    @Test
    public void test03931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03931");
        java.lang.Object obj1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        int int15 = value14.getSize();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier8.merge(value11, value14);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", obj1, value16);
        java.lang.Class<?> wildcardClass19 = value16.getClass();
        java.lang.String str20 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass19);
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str20, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str21, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str23, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type24);
    }

    @Test
    public void test03932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03932");
        java.lang.Throwable throwable1 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException21);
        java.lang.Throwable[] throwableArray23 = analyzerException22.getSuppressed();
        analyzerException2.addSuppressed((java.lang.Throwable) analyzerException22);
        java.lang.Throwable[] throwableArray25 = analyzerException22.getSuppressed();
        java.lang.String str26 = analyzerException22.toString();
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (C)S" + "'", str26, "org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
    }

    @Test
    public void test03933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03933");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I", (java.lang.Throwable) analyzerException4);
        java.lang.Throwable[] throwableArray6 = analyzerException4.getSuppressed();
        java.lang.Throwable[] throwableArray7 = analyzerException4.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        int int25 = type19.getSort();
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray26);
        java.lang.String str28 = type14.getDescriptor();
        java.lang.String str29 = type14.getDescriptor();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int33 = type31.getOpcode((int) (byte) 10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        int int41 = type35.getSort();
        int int42 = type35.getSize();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int45 = type44.getSort();
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type44, list46, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type44, true);
        java.lang.String str51 = type31.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type31, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass56 = type55.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        java.lang.String str58 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass56);
        org.mockito.asm.Type type60 = type59.getElementType();
        org.mockito.asm.Type type61 = type59.getElementType();
        java.lang.String str62 = type61.getInternalName();
        int int63 = type61.getSort();
        org.mockito.asm.tree.analysis.Value value64 = simpleVerifier53.newValue(type61);
        org.mockito.asm.tree.analysis.Value value65 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) type61, value65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)B", (java.lang.Throwable) analyzerException66);
        analyzerException8.addSuppressed((java.lang.Throwable) analyzerException66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Lmockito/asm/Type;", (java.lang.Throwable) analyzerException66);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "C" + "'", str28, "C");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 14 + "'", int33 == 14);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str51, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str57, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str58, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "g/mockito/asm/Type" + "'", str62, "g/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertNotNull(value64);
    }

    @Test
    public void test03934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03934");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier36.merge(value57, value74);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier6.merge(value29, value74);
        java.lang.Class<?> wildcardClass77 = value74.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test03935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03935");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getObjectType("Z");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean14 = type12.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int17 = type16.getSort();
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type16, list18, false);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass23 = type22.getClass();
        java.lang.String str24 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type27, list28, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str33 = type32.toString();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str41 = type40.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray50);
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type40, list53, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        boolean boolean74 = type64.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type64, true);
        int int77 = type59.getSort();
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type59, list78, true);
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list81, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type35, true);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str87 = type86.toString();
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier85.newValue(type86);
        int int89 = type86.getSize();
        org.mockito.asm.tree.analysis.Value value90 = simpleVerifier30.newValue(type86);
        org.mockito.asm.tree.analysis.Value value91 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value92 = simpleVerifier10.merge(value90, value91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str24, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "L(C)Z;" + "'", str33, "L(C)Z;");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "boolean" + "'", str41, "boolean");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)S" + "'", str51, "(C)S");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)Z" + "'", str52, "(C)Z");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)S" + "'", str72, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Z" + "'", str87, "Z");
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(value90);
    }

    @Test
    public void test03936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03936");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type10 = type9.getElementType();
        java.lang.String str11 = type9.getDescriptor();
        int int13 = type9.getOpcode(194);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean17 = type15.equals((java.lang.Object) (short) 1);
        int int18 = type15.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        int int26 = type20.getSort();
        java.lang.String str27 = type20.toString();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type28, list29, false);
        boolean boolean33 = type28.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        int int48 = type42.getSort();
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray49);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray49);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray49);
        java.lang.String str53 = type15.getClassName();
        int int54 = type15.getSize();
        java.lang.String str55 = type15.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type15, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode58 = null;
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str62 = type61.toString();
        int int63 = type61.getDimensions();
        org.mockito.asm.Type type64 = type61.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type64, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter70 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier79.newValue(type80);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        int int85 = value84.getSize();
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier78.merge(value81, value84);
        org.mockito.asm.tree.analysis.Value value87 = basicInterpreter70.copyOperation(abstractInsnNode71, value84);
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier66.merge(value69, value84);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value89 = simpleVerifier57.copyOperation(abstractInsnNode58, value69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str11, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 198 + "'", int13 == 198);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "S" + "'", str27, "S");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(S)C" + "'", str50, "(S)C");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(S)S" + "'", str51, "(S)S");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(S)L(C)Z;" + "'", str52, "(S)L(C)Z;");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)Z" + "'", str53, "(C)Z");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L(C)Z;" + "'", str55, "L(C)Z;");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str62, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(value88);
    }

    @Test
    public void test03937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03937");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, false);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str18 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier10.newValue(type17);
        int int21 = type17.getSize();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int24 = type23.getSort();
        int int26 = type23.getOpcode(113);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type23, false);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, false);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        boolean boolean47 = type37.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray48);
        java.lang.String str50 = type35.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        java.lang.String str58 = type54.getDescriptor();
        int int60 = type54.getOpcode((int) (short) 0);
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type54, list61, true);
        int int64 = type35.getSort();
        java.lang.String str65 = type35.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type35, false);
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier28.newValue(type29);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode69 = null;
        java.util.List list70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value71 = simpleVerifier28.naryOperation(abstractInsnNode69, list70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "S" + "'", str18, "S");
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 117 + "'", int26 == 117);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)S" + "'", str45, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(S)C" + "'", str49, "(S)C");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "C" + "'", str50, "C");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "C" + "'", str65, "C");
        org.junit.Assert.assertNotNull(value68);
    }

    @Test
    public void test03938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03938");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I");
        java.lang.String str2 = type1.getInternalName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        java.lang.String str15 = type4.toString();
        java.lang.String str16 = type4.toString();
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass23 = type22.getClass();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        java.lang.String str27 = type26.getDescriptor();
        org.mockito.asm.Type type28 = type26.getElementType();
        java.lang.String str29 = type26.getClassName();
        int int30 = type26.getDimensions();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getObjectType("org/mockito/asm/Type");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type32, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str37 = type36.getDescriptor();
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier34.newValue(type36);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value39 = simpleVerifier19.unaryOperation(abstractInsnNode20, value38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I" + "'", str2, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "S" + "'", str15, "S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "S" + "'", str16, "S");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str27, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.mockito.asm.Type" + "'", str29, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "S" + "'", str37, "S");
        org.junit.Assert.assertNotNull(value38);
    }

    @Test
    public void test03939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03939");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        java.lang.String str3 = type1.toString();
        int int4 = type1.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean8 = type6.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type10, list12, false);
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list15, false);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType("B");
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier17.newValue(type19);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        int int36 = type30.getSort();
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray37);
        int int39 = type25.getSize();
        java.lang.String str40 = type25.toString();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass43 = type42.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        java.lang.String str45 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type46, list47, false);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type58 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray59);
        boolean boolean62 = type52.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray63);
        int int65 = type50.getSize();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type67, false);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str71 = type70.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray80);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type83, type84, true);
        boolean boolean87 = type70.equals((java.lang.Object) simpleVerifier86);
        java.util.List list88 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type70, list88, false);
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier49.newValue(type50);
        int int92 = value91.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value93 = simpleVerifier17.copyOperation(abstractInsnNode21, value91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "S" + "'", str3, "S");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 4 + "'", int36 == 4);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)C" + "'", str38, "(S)C");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str44, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str45, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(C)S" + "'", str60, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(S)C" + "'", str64, "(S)C");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "boolean" + "'", str71, "boolean");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)S" + "'", str81, "(C)S");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(C)Z" + "'", str82, "(C)Z");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
    }

    @Test
    public void test03940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03940");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str3 = type2.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier13.merge(value16, value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value21);
        boolean boolean23 = type4.equals((java.lang.Object) analyzerException22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        boolean boolean36 = type26.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray37);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        int int54 = value53.getSize();
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier47.merge(value50, value53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Object) type2, value50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Throwable) analyzerException56);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass61 = type60.getClass();
        java.lang.String str62 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass61);
        java.lang.String str63 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass61);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass61);
        org.mockito.asm.tree.analysis.Value value65 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type64, value65);
        analyzerException57.addSuppressed((java.lang.Throwable) analyzerException66);
        java.lang.Throwable[] throwableArray68 = analyzerException57.getSuppressed();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "double" + "'", str3, "double");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)S" + "'", str34, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)C" + "'", str38, "(S)C");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)V" + "'", str39, "(S)V");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)D" + "'", str40, "(S)D");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str62, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str63, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(throwableArray68);
    }

    @Test
    public void test03941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03941");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int3 = type1.getOpcode((int) (byte) 10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        int int12 = type5.getSize();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int15 = type14.getSort();
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type14, list16, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type14, true);
        int int21 = type1.getDimensions();
        org.mockito.asm.Type type22 = type1.getElementType();
        java.lang.String str23 = type1.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 14 + "'", int3 == 14);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str23, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test03942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03942");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        int int16 = type10.getSort();
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray17);
        int int19 = type5.getSize();
        java.lang.String str20 = type5.toString();
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, list21, false);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        boolean boolean36 = type26.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray37);
        java.lang.String str39 = type24.getDescriptor();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int43 = type41.getOpcode(86);
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type41, list44, true);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type48, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str52 = type51.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type60 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray61);
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray61);
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type51, list64, false);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str68 = type67.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type72, list73, true);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type76 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray77);
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray77);
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray77);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray77);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray77);
        int int83 = type1.getSize();
        java.lang.String str84 = type1.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "C" + "'", str20, "C");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)S" + "'", str34, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)C" + "'", str38, "(S)C");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "C" + "'", str39, "C");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 86 + "'", int43 == 86);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "boolean" + "'", str52, "boolean");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(C)S" + "'", str62, "(C)S");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(C)Z" + "'", str63, "(C)Z");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "boolean" + "'", str68, "boolean");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(C)S" + "'", str78, "(C)S");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(C)Z" + "'", str79, "(C)Z");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(C)C" + "'", str80, "(C)C");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)S" + "'", str81, "(C)S");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;" + "'", str82, "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (S)C" + "'", str84, "org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
    }

    @Test
    public void test03943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03943");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.mockito.asm.Type type2 = type1.getElementType();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.Value value8 = simpleVerifier5.newValue(type7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int11 = type10.getSort();
        java.lang.String str12 = type10.toString();
        org.mockito.asm.Type type13 = type10.getElementType();
        org.mockito.asm.Type type14 = type13.getElementType();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str16 = type15.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray25);
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray25);
        boolean boolean28 = type14.equals((java.lang.Object) type15);
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier5.newValue(type15);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type30 = type15.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str12, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "boolean" + "'", str16, "boolean");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(C)S" + "'", str26, "(C)S");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(C)Z" + "'", str27, "(C)Z");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(value29);
    }

    @Test
    public void test03944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03944");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        java.lang.String str17 = type3.getDescriptor();
        int int19 = type3.getOpcode(185);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list37, false);
        java.lang.String str40 = type24.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        boolean boolean54 = type44.equals((java.lang.Object) '4');
        org.mockito.asm.Type type55 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type55, list56, false);
        java.lang.String str59 = type55.getClassName();
        int int60 = type55.getSort();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        boolean boolean73 = type63.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type63 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray74);
        int int76 = type61.getSize();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type78, false);
        boolean boolean82 = type78.equals((java.lang.Object) 23);
        java.lang.String str83 = type78.getClassName();
        java.util.List list84 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type78, list84, true);
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier42.newValue(type55);
        int int88 = type55.getSort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = type55.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 185 + "'", int19 == 185);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "boolean" + "'", str40, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "int" + "'", str59, "int");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)S" + "'", str71, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(S)C" + "'", str75, "(S)C");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "char" + "'", str83, "char");
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 5 + "'", int88 == 5);
    }

    @Test
    public void test03945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03945");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("L(C)I;");
        java.lang.String str2 = type1.getInternalName();
        int int3 = type1.getSort();
        java.lang.Class<?> wildcardClass4 = type1.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L(C)I;" + "'", str2, "L(C)I;");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test03946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03946");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str3 = type2.toString();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray20);
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type10, list23, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        boolean boolean44 = type34.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type34, true);
        int int47 = type29.getSort();
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type29, list48, true);
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list51, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type5, true);
        java.lang.String str56 = type5.getInternalName();
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type5, list57, true);
        int int60 = type5.getDimensions();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L(C)Z;" + "'", str3, "L(C)Z;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean" + "'", str11, "boolean");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)Z" + "'", str22, "(C)Z");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str56, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test03947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03947");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str6 = type5.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray15);
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type5, list18, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        boolean boolean33 = type23.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray34);
        int int36 = type21.getSize();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type38, false);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str42 = type41.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray51);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type55, true);
        boolean boolean58 = type41.equals((java.lang.Object) simpleVerifier57);
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type41, list59, false);
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier20.newValue(type41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        boolean boolean74 = type64.equals((java.lang.Object) '4');
        java.lang.String str75 = type64.toString();
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type64, list76, true);
        java.lang.String str79 = type41.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type41, false);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException84);
        java.lang.Throwable[] throwableArray86 = analyzerException85.getSuppressed();
        boolean boolean87 = type0.equals((java.lang.Object) throwableArray86);
        int int89 = type0.getOpcode(192);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = type0.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "boolean" + "'", str6, "boolean");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)Z" + "'", str17, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)C" + "'", str35, "(S)C");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "boolean" + "'", str42, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)Z" + "'", str53, "(C)Z");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)S" + "'", str72, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "S" + "'", str75, "S");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "boolean" + "'", str79, "boolean");
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 193 + "'", int89 == 193);
    }

    @Test
    public void test03948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03948");
        java.lang.Throwable throwable2 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S", throwable2);
        java.lang.Object obj5 = null;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray19);
        java.lang.String str21 = type6.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        java.lang.String str29 = type25.getDescriptor();
        int int31 = type25.getOpcode((int) (short) 0);
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type25, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        int int51 = value50.getSize();
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier44.merge(value47, value50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value52);
        boolean boolean54 = type35.equals((java.lang.Object) analyzerException53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type63 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray64);
        boolean boolean67 = type57.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray68);
        java.lang.String str70 = type55.getDescriptor();
        int int71 = type55.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type55, true);
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier34.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException75 = new org.mockito.asm.tree.analysis.AnalyzerException("D", obj5, value74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) throwable2, value74);
        java.lang.Throwable[] throwableArray77 = analyzerException76.getSuppressed();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(S)C" + "'", str20, "(S)C");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "C" + "'", str21, "C");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(C)S" + "'", str65, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(S)C" + "'", str69, "(S)C");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "C" + "'", str70, "C");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(throwableArray77);
    }

    @Test
    public void test03949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03949");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException5);
        java.lang.Throwable[] throwableArray7 = analyzerException5.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("Lg/mockito/asm/Type;", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException13);
        analyzerException5.addSuppressed((java.lang.Throwable) analyzerException13);
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException5);
        java.lang.Object obj19 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        int int33 = value32.getSize();
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier26.merge(value29, value32);
        int int35 = value34.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", obj19, value34);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        int int54 = value53.getSize();
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier47.merge(value50, value53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value55);
        analyzerException38.addSuppressed((java.lang.Throwable) analyzerException56);
        analyzerException36.addSuppressed((java.lang.Throwable) analyzerException38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)D", (java.lang.Throwable) analyzerException38);
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException59);
        java.lang.Throwable[] throwableArray61 = analyzerException1.getSuppressed();
        java.lang.Class<?> wildcardClass62 = throwableArray61.getClass();
        java.lang.String str63 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass62);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[Ljava/lang/Throwable;" + "'", str63, "[Ljava/lang/Throwable;");
    }

    @Test
    public void test03950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03950");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str21 = type20.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray30);
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray30);
        int int34 = type1.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        int int42 = type36.getSort();
        java.lang.String str43 = type36.toString();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type44, list45, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        int int55 = type49.getSort();
        java.lang.String str56 = type49.getClassName();
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier47.newValue(type49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        java.lang.String str65 = type59.toString();
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type59, list66, false);
        int int70 = type59.getOpcode(113);
        int int72 = type59.getOpcode(170);
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type59, list73, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list80 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type79, list80, true);
        int int83 = type77.getSort();
        java.lang.String str84 = type77.toString();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list86 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type85, list86, false);
        boolean boolean90 = type85.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        int int92 = type85.getOpcode(127);
        int int94 = type85.getOpcode(50);
        int int96 = type85.getOpcode(15);
        org.mockito.asm.tree.analysis.Value value97 = simpleVerifier75.newValue(type85);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier75.newOperation(abstractInsnNode98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "boolean" + "'", str21, "boolean");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)Z" + "'", str32, "(C)Z");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)C" + "'", str33, "(C)C");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "S" + "'", str43, "S");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "short" + "'", str56, "short");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "S" + "'", str65, "S");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 113 + "'", int70 == 113);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 170 + "'", int72 == 170);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 4 + "'", int83 == 4);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "S" + "'", str84, "S");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 127 + "'", int92 == 127);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 50 + "'", int94 == 50);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 15 + "'", int96 == 15);
        org.junit.Assert.assertNotNull(value97);
    }

    @Test
    public void test03951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03951");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        java.lang.Class<?> wildcardClass4 = type0.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass4);
        java.lang.String str8 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass4);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org/mockito/asm/Type" + "'", str8, "org/mockito/asm/Type");
    }

    @Test
    public void test03952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03952");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type28, true);
        int int41 = type23.getSort();
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type23, list42, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getObjectType("Ldouble;");
        java.lang.String str47 = type46.getClassName();
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier44.newValue(type46);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        java.util.List list50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value51 = simpleVerifier44.naryOperation(abstractInsnNode49, list50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Ldouble;" + "'", str47, "Ldouble;");
        org.junit.Assert.assertNotNull(value48);
    }

    @Test
    public void test03953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03953");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        int int32 = value31.getSize();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier25.merge(value28, value31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        int int47 = value46.getSize();
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier40.merge(value43, value46);
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier10.merge(value31, value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        int int63 = value62.getSize();
        org.mockito.asm.tree.analysis.Value value64 = simpleVerifier56.merge(value59, value62);
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier3.merge(value49, value64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type74 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray75);
        boolean boolean78 = type68.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type68 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray79);
        java.lang.String str81 = type66.getDescriptor();
        int int82 = type66.getSort();
        java.lang.String str83 = type66.getClassName();
        boolean boolean85 = type66.equals((java.lang.Object) 131072);
        int int86 = type66.getSize();
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier3.newValue(type66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier90 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type91 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value92 = basicVerifier90.newValue(type91);
        int int93 = value92.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: S", (java.lang.Object) 192, value92);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException95 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Object) value87, value92);
        boolean boolean96 = type1.equals((java.lang.Object) "org/mockito/asm/Type");
        int int98 = type1.getOpcode(108);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)S" + "'", str76, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(S)C" + "'", str80, "(S)C");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "C" + "'", str81, "C");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "char" + "'", str83, "char");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 112 + "'", int98 == 112);
    }

    @Test
    public void test03954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03954");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type12, list13, false);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean19 = type17.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str22 = type21.getDescriptor();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str24 = type23.getClassName();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        int int41 = value40.getSize();
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier34.merge(value37, value40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value42);
        boolean boolean44 = type25.equals((java.lang.Object) analyzerException43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        boolean boolean57 = type47.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray58);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray58);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray58);
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list62, false);
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type21, list65, true);
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier15.newValue(type17);
        int int69 = type17.getSize();
        int int70 = type17.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "S" + "'", str22, "S");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "double" + "'", str24, "double");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(S)C" + "'", str59, "(S)C");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)V" + "'", str60, "(S)V");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(S)D" + "'", str61, "(S)D");
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
    }

    @Test
    public void test03955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03955");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        boolean boolean32 = type22.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray33);
        java.lang.String str35 = type20.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        java.lang.String str43 = type39.getDescriptor();
        int int45 = type39.getOpcode((int) (short) 0);
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type39, list46, true);
        int int49 = type20.getSort();
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type20, list50, false);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BYTE_TYPE;
        int int54 = type53.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type53, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode57 = null;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        java.lang.String str60 = type59.toString();
        java.lang.String str61 = type59.getInternalName();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass64 = type63.getClass();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        java.lang.String str67 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass64);
        java.lang.String str68 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass64);
        java.lang.String str69 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        int int75 = type73.getOpcode(107);
        int int76 = type73.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type73, false);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z");
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier78.newValue(type80);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value82 = simpleVerifier56.unaryOperation(abstractInsnNode57, value81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)S" + "'", str30, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "C" + "'", str43, "C");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!;" + "'", str60, "Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!;");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: hi!" + "'", str61, "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str67, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str68, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str69, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 111 + "'", int75 == 111);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
    }

    @Test
    public void test03956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03956");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("(S)L(C)Z;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        boolean boolean15 = type5.equals((java.lang.Object) '4');
        boolean boolean17 = type5.equals((java.lang.Object) 193);
        java.lang.String str18 = type5.getDescriptor();
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list19, false);
        org.mockito.asm.Type type22 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        int int30 = type24.getSort();
        java.lang.String str31 = type24.getClassName();
        java.lang.String str32 = type24.getDescriptor();
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list33, false);
        org.mockito.asm.tree.analysis.Value value36 = simpleVerifier21.newValue(type24);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(S)B");
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass41 = type40.getClass();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        java.lang.String str44 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass41);
        java.lang.String str45 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass41);
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        int int52 = type50.getOpcode(107);
        int int53 = type50.getSize();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getReturnType("(S)S");
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray65);
        boolean boolean68 = type58.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type58 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray69);
        java.lang.String str71 = type56.getDescriptor();
        int int72 = type56.getSort();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type75, type77, list78, true);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray82 = new org.mockito.asm.Type[] { type81 };
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type75, typeArray82);
        boolean boolean85 = type75.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray86 = new org.mockito.asm.Type[] { type75 };
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray86);
        int int88 = type73.getSize();
        boolean boolean90 = type73.equals((java.lang.Object) 181);
        int int91 = type73.getSize();
        org.mockito.asm.Type[] typeArray92 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray92);
        java.lang.String str94 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray92);
        java.lang.String str95 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray92);
        java.lang.String str96 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray92);
        org.mockito.asm.tree.analysis.Value value97 = simpleVerifier21.newValue(type38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException98 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Object) "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;: expected null, but found I;", value97);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)S" + "'", str13, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "S" + "'", str18, "S");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "short" + "'", str31, "short");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "S" + "'", str32, "S");
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str44, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str45, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str46, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 111 + "'", int52 == 111);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(C)S" + "'", str66, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(S)C" + "'", str70, "(S)C");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "C" + "'", str71, "C");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(C)S" + "'", str83, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(S)C" + "'", str87, "(S)C");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(typeArray92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(C)C" + "'", str93, "(C)C");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(C)S" + "'", str94, "(C)S");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str95, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "(C)B" + "'", str96, "(C)B");
        org.junit.Assert.assertNotNull(value97);
    }

    @Test
    public void test03957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03957");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: B");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 50");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03958");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        java.lang.String str23 = type19.getDescriptor();
        int int25 = type19.getOpcode((int) (short) 0);
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list26, true);
        int int29 = type19.getSort();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        int int37 = type35.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, false);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        boolean boolean52 = type42.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray53);
        java.lang.String str55 = type40.getDescriptor();
        int int56 = type40.getSort();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        boolean boolean69 = type59.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray70);
        int int72 = type57.getSize();
        boolean boolean74 = type57.equals((java.lang.Object) 181);
        int int75 = type57.getSize();
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray76);
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray76);
        boolean boolean79 = type31.equals((java.lang.Object) type33);
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass81);
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type82, list83, false);
        java.lang.String str86 = type82.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type82, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode89 = null;
        java.util.List list90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value91 = simpleVerifier88.naryOperation(abstractInsnNode89, list90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 4 + "'", int37 == 4);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)S" + "'", str50, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(S)C" + "'", str54, "(S)C");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)S" + "'", str67, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(S)C" + "'", str71, "(S)C");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(C)C" + "'", str77, "(C)C");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(C)LC;" + "'", str78, "(C)LC;");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Ljava/lang/Object;" + "'", str86, "Ljava/lang/Object;");
    }

    @Test
    public void test03959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03959");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        java.lang.String str11 = type7.getDescriptor();
        int int13 = type7.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray29);
        java.lang.String str31 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type17, false);
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier3.newValue(type7);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value36 = simpleVerifier3.newOperation(abstractInsnNode35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "C" + "'", str11, "C");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(S)C" + "'", str30, "(S)C");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "C" + "'", str31, "C");
        org.junit.Assert.assertNotNull(value34);
    }

    @Test
    public void test03960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03960");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 176, but found I");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 175");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03961");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: (S)S: expected 175, but found I");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03962");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        int int2 = type1.getSize();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)S");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        boolean boolean17 = type7.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray18);
        java.lang.String str20 = type5.getDescriptor();
        int int21 = type5.getSort();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray35);
        int int37 = type22.getSize();
        boolean boolean39 = type22.equals((java.lang.Object) 181);
        int int40 = type22.getSize();
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray41);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray41);
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray41);
        java.lang.String str45 = type1.getDescriptor();
        // The following exception was thrown during execution in test generation
        try {
            int int46 = type1.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(S)C" + "'", str19, "(S)C");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "C" + "'", str20, "C");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(S)C" + "'", str36, "(S)C");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)C" + "'", str42, "(C)C");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)S" + "'", str43, "(C)S");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)C" + "'", str44, "(C)C");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
    }

    @Test
    public void test03963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03963");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        java.lang.String str17 = type3.getDescriptor();
        int int19 = type3.getOpcode(185);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list37, false);
        java.lang.String str40 = type24.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        boolean boolean54 = type44.equals((java.lang.Object) '4');
        org.mockito.asm.Type type55 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type55, list56, false);
        java.lang.String str59 = type55.getClassName();
        int int60 = type55.getSort();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        boolean boolean73 = type63.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type63 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray74);
        int int76 = type61.getSize();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type78, false);
        boolean boolean82 = type78.equals((java.lang.Object) 23);
        java.lang.String str83 = type78.getClassName();
        java.util.List list84 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type78, list84, true);
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier42.newValue(type55);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode88 = null;
        java.util.List list89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value90 = simpleVerifier42.naryOperation(abstractInsnNode88, list89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 185 + "'", int19 == 185);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "boolean" + "'", str40, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "int" + "'", str59, "int");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)S" + "'", str71, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(S)C" + "'", str75, "(S)C");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "char" + "'", str83, "char");
        org.junit.Assert.assertNotNull(value87);
    }

    @Test
    public void test03964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03964");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        int int1 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        int int36 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter2.copyOperation(abstractInsnNode20, value33);
        boolean boolean38 = type0.equals((java.lang.Object) basicInterpreter2);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        int int40 = type39.getSort();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type39, list41, false);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type45, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type45, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type55, true);
        int int58 = type54.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier49.newValue(type54);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode61 = null;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type63, true);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier65.newValue(type67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type72, list73, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list80 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type79, list80, true);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray84 = new org.mockito.asm.Type[] { type83 };
        java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type77, typeArray84);
        boolean boolean87 = type77.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type77, true);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;: expected 183, but found I");
        org.mockito.asm.tree.analysis.Value value92 = simpleVerifier89.newValue(type91);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value93 = simpleVerifier49.binaryOperation(abstractInsnNode61, value68, value92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7 + "'", int1 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(C)S" + "'", str85, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(value92);
    }

    @Test
    public void test03965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03965");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("(SC)L(C)LC;;");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type3, true);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str7 = type6.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray16);
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type6, list19, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type30, true);
        int int43 = type25.getSort();
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type25, list44, true);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier46.newValue(type47);
        java.lang.String str49 = type47.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type47, true);
        // The following exception was thrown during execution in test generation
        try {
            int int52 = type47.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean" + "'", str7, "boolean");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)Z" + "'", str18, "(C)Z");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "I" + "'", str49, "I");
    }

    @Test
    public void test03966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03966");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str2 = type1.toString();
        int int3 = type1.getDimensions();
        org.mockito.asm.Type type4 = type1.getElementType();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type6, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.Value value11 = simpleVerifier8.newValue(type10);
        boolean boolean12 = type1.equals((java.lang.Object) value11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        int int20 = type14.getSort();
        java.lang.String str21 = type14.toString();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type22, list23, false);
        boolean boolean27 = type22.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        int int42 = type36.getSort();
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray43);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray43);
        java.lang.String str46 = type22.toString();
        int int48 = type22.getOpcode(9);
        java.lang.String str49 = type22.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type22, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode52 = null;
        java.util.List list53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value54 = simpleVerifier51.naryOperation(abstractInsnNode52, list53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str2, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "S" + "'", str21, "S");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(S)C" + "'", str44, "(S)C");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(S)S" + "'", str45, "(S)S");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "S" + "'", str46, "S");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 9 + "'", int48 == 9);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "S" + "'", str49, "S");
    }

    @Test
    public void test03967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03967");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        boolean boolean32 = type22.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray33);
        java.lang.String str35 = type20.getDescriptor();
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type20, list36, false);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str44 = type43.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray53);
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type43, list56, false);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type67 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray68);
        boolean boolean71 = type61.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray72);
        java.lang.String str74 = type59.getDescriptor();
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type59, list75, false);
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type43, list78, true);
        java.lang.String str81 = type20.getClassName();
        java.lang.String str82 = type20.getDescriptor();
        // The following exception was thrown during execution in test generation
        try {
            int int83 = type20.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)S" + "'", str30, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "boolean" + "'", str44, "boolean");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)Z" + "'", str55, "(C)Z");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(C)S" + "'", str69, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(S)C" + "'", str73, "(S)C");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "C" + "'", str74, "C");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "char" + "'", str81, "char");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "C" + "'", str82, "C");
    }

    @Test
    public void test03968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03968");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str4 = type3.getClassName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value22);
        boolean boolean24 = type5.equals((java.lang.Object) analyzerException23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        boolean boolean37 = type27.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray38);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray38);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray38);
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list42, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier44.newValue(type46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        boolean boolean61 = type51.equals((java.lang.Object) '4');
        java.lang.String str62 = type51.toString();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        boolean boolean75 = type65.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray76);
        int int78 = type63.getSize();
        boolean boolean80 = type63.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type63, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type51, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode85 = null;
        java.util.List list86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value87 = simpleVerifier84.naryOperation(abstractInsnNode85, list86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "double" + "'", str4, "double");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)C" + "'", str39, "(S)C");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)V" + "'", str40, "(S)V");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)D" + "'", str41, "(S)D");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)S" + "'", str59, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "S" + "'", str62, "S");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(C)S" + "'", str73, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(S)C" + "'", str77, "(S)C");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test03969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03969");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("LLorg.mockito.asm.tree.analysis.AnalyzerException: ;;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test03970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03970");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        int int11 = type1.getOpcode(136);
        java.lang.String str12 = type1.getClassName();
        java.lang.String str13 = type1.toString();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass16 = type15.getClass();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        java.lang.String str18 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass16);
        java.lang.String str19 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        java.lang.String str21 = type20.getDescriptor();
        java.lang.String str22 = type20.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type20, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode25 = null;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType("(C)L(S)C;");
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = type32.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, false);
        java.lang.Class<?> wildcardClass37 = type32.getClass();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] {};
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray39);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray39);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int44 = type43.getSort();
        java.lang.String str45 = type43.toString();
        org.mockito.asm.Type type46 = type43.getElementType();
        int int47 = type46.getSort();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        int int64 = value63.getSize();
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier57.merge(value60, value63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value65);
        boolean boolean67 = type48.equals((java.lang.Object) analyzerException66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type72, list73, true);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type76 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray77);
        boolean boolean80 = type70.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray81);
        java.lang.String str83 = type68.getDescriptor();
        int int84 = type68.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type68, true);
        java.lang.String str87 = type68.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type68, false);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getObjectType("I");
        org.mockito.asm.tree.analysis.Value value92 = simpleVerifier89.newValue(type91);
        int int93 = value92.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Object) type28, value92);
        org.mockito.asm.tree.analysis.Value value95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value96 = simpleVerifier24.binaryOperation(abstractInsnNode25, value92, value95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 136 + "'", int11 == 136);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "short" + "'", str12, "short");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "S" + "'", str13, "S");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str18, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str19, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str21, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "()Lorg/mockito/asm/Type;" + "'", str40, "()Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "()LC)L(S)C;" + "'", str41, "()LC)L(S)C;");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str45, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(C)S" + "'", str78, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(S)C" + "'", str82, "(S)C");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "C" + "'", str83, "C");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "C" + "'", str87, "C");
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test03971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03971");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        boolean boolean22 = type8.equals((java.lang.Object) 158);
        int int24 = type8.getOpcode(159);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type25 = type8.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 159 + "'", int24 == 159);
    }

    @Test
    public void test03972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03972");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = type3.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
    }

    @Test
    public void test03973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03973");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int3 = type1.getOpcode((int) (byte) 10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        boolean boolean22 = type12.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type12, true);
        boolean boolean26 = type12.equals((java.lang.Object) 158);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType("S");
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type28, list29, false);
        org.mockito.asm.Type type32 = null;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str35 = type34.toString();
        int int36 = type34.getDimensions();
        org.mockito.asm.Type type37 = type34.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type37, false);
        boolean boolean40 = type28.equals((java.lang.Object) simpleVerifier39);
        boolean boolean41 = type1.equals((java.lang.Object) simpleVerifier39);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg.mockito.asm.Type;");
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier39.newValue(type43);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value46 = simpleVerifier39.newOperation(abstractInsnNode45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 14 + "'", int3 == 14);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str35, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
    }

    @Test
    public void test03974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03974");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)C");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray19);
        java.lang.String str21 = type6.getDescriptor();
        int int22 = type6.getSort();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        boolean boolean35 = type25.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray36);
        int int38 = type23.getSize();
        boolean boolean40 = type23.equals((java.lang.Object) 181);
        int int41 = type23.getSize();
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray42);
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray42);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray42);
        org.mockito.asm.Type type46 = null;
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        int int52 = type50.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, false);
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list55, false);
        java.lang.String str58 = type48.getInternalName();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type67 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray68);
        boolean boolean71 = type61.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray72);
        java.lang.String str74 = type59.getDescriptor();
        int int75 = type59.getSort();
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type59, list76, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type48, false);
        org.mockito.asm.tree.analysis.Value value81 = null;
        org.mockito.asm.tree.analysis.Value value82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value83 = simpleVerifier80.merge(value81, value82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(S)C" + "'", str3, "(S)C");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "double" + "'", str5, "double");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(S)C" + "'", str20, "(S)C");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "C" + "'", str21, "C");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)S" + "'", str33, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(S)C" + "'", str37, "(S)C");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)C" + "'", str43, "(C)C");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)D" + "'", str44, "(C)D");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)L(S)C;" + "'", str45, "(C)L(S)C;");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(C)S" + "'", str69, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(S)C" + "'", str73, "(S)C");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "C" + "'", str74, "C");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
    }

    @Test
    public void test03975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03975");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type6 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray17);
        java.lang.String str19 = type4.getDescriptor();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int23 = type21.getOpcode(86);
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type21, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str32 = type31.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray41);
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type31, list44, false);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str48 = type47.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray57);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray57);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray57);
        java.lang.Class<?> wildcardClass62 = type21.getClass();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass62);
        java.lang.String str65 = type64.getInternalName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type64, false);
        int int69 = type3.getOpcode(125);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 86 + "'", int23 == 86);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "boolean" + "'", str32, "boolean");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)Z" + "'", str43, "(C)Z");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "boolean" + "'", str48, "boolean");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(C)S" + "'", str58, "(C)S");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)Z" + "'", str59, "(C)Z");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(C)C" + "'", str60, "(C)C");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)S" + "'", str61, "(C)S");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org/mockito/asm/Type" + "'", str65, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 129 + "'", int69 == 129);
    }

    @Test
    public void test03976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03976");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = type5.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        java.lang.String str19 = type8.toString();
        int int20 = type8.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type8, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType("(C)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value25 = simpleVerifier22.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str31 = type30.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray40);
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type30, list43, false);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        boolean boolean58 = type48.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray59);
        java.lang.String str61 = type46.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        java.lang.String str69 = type65.getDescriptor();
        int int71 = type65.getOpcode((int) (short) 0);
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type65, list72, true);
        int int75 = type46.getSort();
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type46, list76, false);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.BYTE_TYPE;
        int int80 = type79.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type79, false);
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier22.newValue(type30);
        int int84 = type30.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "S" + "'", str19, "S");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "boolean" + "'", str31, "boolean");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)Z" + "'", str42, "(C)Z");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)C" + "'", str60, "(S)C");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "C" + "'", str61, "C");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 3 + "'", int80 == 3);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }

    @Test
    public void test03977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03977");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
    }

    @Test
    public void test03978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03978");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int12 = type11.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/Type" + "'", str6, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str9, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test03979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03979");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str1 = type0.getClassName();
        java.lang.String str2 = type0.getDescriptor();
        java.lang.String str3 = type0.getDescriptor();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "long" + "'", str1, "long");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "J" + "'", str2, "J");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "J" + "'", str3, "J");
    }

    @Test
    public void test03980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03980");
        java.lang.Object obj2 = null;
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        java.lang.String str14 = type10.getDescriptor();
        int int16 = type10.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        int int31 = type25.getSort();
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray32);
        java.lang.String str34 = type20.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type20, false);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type10, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        int int48 = type42.getSort();
        java.lang.String str49 = type42.toString();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type50, list51, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        int int61 = type55.getSort();
        java.lang.String str62 = type55.getClassName();
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier53.newValue(type55);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type55, true);
        org.mockito.asm.tree.analysis.Value value66 = simpleVerifier39.newValue(type55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException", obj2, value66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Throwable) analyzerException67);
        java.lang.Throwable[] throwableArray69 = analyzerException68.getSuppressed();
        java.lang.Class<?> wildcardClass70 = throwableArray69.getClass();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "C" + "'", str14, "C");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(S)C" + "'", str33, "(S)C");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "S" + "'", str49, "S");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "short" + "'", str62, "short");
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test03981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03981");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int4 = type3.getSort();
        java.lang.String str5 = type3.toString();
        org.mockito.asm.Type type6 = type3.getElementType();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str15 = type14.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray24);
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type14, list27, false);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value32 = simpleVerifier29.newValue(type31);
        java.lang.String str33 = type31.toString();
        java.lang.String str34 = type31.toString();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str37 = type36.getDescriptor();
        java.lang.String str38 = type36.toString();
        java.lang.String str39 = type36.getClassName();
        boolean boolean40 = type31.equals((java.lang.Object) type36);
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier9.newValue(type31);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value43 = simpleVerifier9.newOperation(abstractInsnNode42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "boolean" + "'", str15, "boolean");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(C)S" + "'", str25, "(C)S");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(C)Z" + "'", str26, "(C)Z");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "S" + "'", str37, "S");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "S" + "'", str38, "S");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "short" + "'", str39, "short");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(value41);
    }

    @Test
    public void test03982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03982");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        int int27 = value26.getSize();
        org.mockito.asm.tree.analysis.Value value28 = simpleVerifier20.merge(value23, value26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value28);
        boolean boolean30 = type11.equals((java.lang.Object) analyzerException29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        boolean boolean43 = type33.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray44);
        java.lang.String str46 = type31.getDescriptor();
        int int47 = type31.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type31, true);
        java.lang.String str50 = type31.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type31, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value54 = simpleVerifier52.newOperation(abstractInsnNode53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(S)C" + "'", str45, "(S)C");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "C" + "'", str46, "C");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "C" + "'", str50, "C");
    }

    @Test
    public void test03983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03983");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        boolean boolean22 = type8.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type31, true);
        org.mockito.asm.Type type44 = null;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier43.newValue(type46);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type46, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getObjectType("boolean");
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier49.newValue(type51);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass56 = type55.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        java.lang.String str58 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass56);
        org.mockito.asm.tree.analysis.Value value60 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type59, value60);
        org.mockito.asm.Type type62 = type59.getElementType();
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier49.newValue(type62);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode64 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value65 = simpleVerifier49.newOperation(abstractInsnNode64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str57, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str58, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
    }

    @Test
    public void test03984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03984");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("C");
        java.lang.Class<?> wildcardClass2 = analyzerException1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getObjectType("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        java.lang.String str10 = type9.getDescriptor();
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list11, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode14 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("[Ljava/lang/Throwable;");
        java.lang.Throwable[] throwableArray18 = analyzerException17.getSuppressed();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass21 = type20.getClass();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        java.lang.String str25 = type24.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        boolean boolean37 = type27.equals((java.lang.Object) '4');
        java.lang.String str38 = type27.toString();
        int int39 = type27.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type27, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type42, list43, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        int int62 = value61.getSize();
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier55.merge(value58, value61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value63);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type73, list74, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        int int83 = value82.getSize();
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier76.merge(value79, value82);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value84);
        analyzerException67.addSuppressed((java.lang.Throwable) analyzerException85);
        analyzerException64.addSuppressed((java.lang.Throwable) analyzerException85);
        java.lang.Class<?> wildcardClass88 = analyzerException85.getClass();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        java.lang.String str90 = type89.getClassName();
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier45.newValue(type89);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: D;", (java.lang.Object) throwableArray18, value91);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value93 = simpleVerifier13.copyOperation(abstractInsnNode14, value91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str3, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str5, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str6, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;;" + "'", str10, "L(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;;");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str25, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "S" + "'", str38, "S");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException" + "'", str90, "org.mockito.asm.tree.analysis.AnalyzerException");
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test03985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03985");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        int int22 = type16.getSort();
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray23);
        int int25 = type11.getSize();
        java.lang.String str26 = type11.toString();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass29 = type28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type32, list33, false);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        boolean boolean48 = type38.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray49);
        int int51 = type36.getSize();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type53, false);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str57 = type56.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray66);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type70, true);
        boolean boolean73 = type56.equals((java.lang.Object) simpleVerifier72);
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type56, list74, false);
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I", (java.lang.Object) wildcardClass4, value77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException78);
        java.lang.String str80 = analyzerException79.toString();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(S)C" + "'", str24, "(S)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str30, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str31, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(C)S" + "'", str46, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(S)C" + "'", str50, "(S)C");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "boolean" + "'", str57, "boolean");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)S" + "'", str67, "(C)S");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(C)Z" + "'", str68, "(C)Z");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: " + "'", str80, "org.mockito.asm.tree.analysis.AnalyzerException: ");
    }

    @Test
    public void test03986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03986");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)D");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        int int16 = type10.getSort();
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray17);
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type20 = type1.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(S)D" + "'", str19, "(S)D");
    }

    @Test
    public void test03987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03987");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        boolean boolean9 = type1.equals((java.lang.Object) 192);
        int int10 = type1.getSort();
        java.lang.String str11 = type1.toString();
        java.lang.String str12 = type1.getDescriptor();
        int int13 = type1.getSize();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass16 = type15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        boolean boolean19 = type1.equals((java.lang.Object) type18);
        java.lang.String str20 = type18.getInternalName();
        int int21 = type18.getSort();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: L(C)Z;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type23, true);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type26 = type23.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "S" + "'", str11, "S");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "S" + "'", str12, "S");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/Type" + "'", str17, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org/mockito/asm/Type" + "'", str20, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(type23);
    }

    @Test
    public void test03988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03988");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("LJ;");
        java.lang.Throwable[] throwableArray2 = analyzerException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test03989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03989");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)J");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        java.lang.String str13 = type9.getDescriptor();
        int int15 = type9.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        int int30 = type24.getSort();
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray31);
        java.lang.String str33 = type19.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type19, false);
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type9, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        int int47 = type41.getSort();
        java.lang.String str48 = type41.toString();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type49, list50, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        int int60 = type54.getSort();
        java.lang.String str61 = type54.getClassName();
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier52.newValue(type54);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type54, true);
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier38.newValue(type54);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str71 = type70.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray80);
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type70, list83, false);
        java.util.List list86 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type67, list86, true);
        java.lang.String str89 = type67.getClassName();
        int int91 = type67.getOpcode((int) (byte) -1);
        java.util.List list92 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type67, list92, true);
        org.mockito.asm.Type type96 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.SimpleVerifier");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier98 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type96, false);
        java.lang.String str99 = type96.getInternalName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "C" + "'", str13, "C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "S" + "'", str48, "S");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "short" + "'", str61, "short");
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "boolean" + "'", str71, "boolean");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)S" + "'", str81, "(C)S");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(C)Z" + "'", str82, "(C)Z");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "char" + "'", str89, "char");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(type96);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "org.mockito.asm.tree.analysis.SimpleVerifier" + "'", str99, "org.mockito.asm.tree.analysis.SimpleVerifier");
    }

    @Test
    public void test03990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03990");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type type15 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type15, list16, false);
        java.lang.String str19 = type15.getClassName();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type21, false);
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type21, list24, true);
        java.lang.String str27 = type21.getDescriptor();
        int int29 = type21.getOpcode(138);
        int int30 = type21.getSize();
        int int31 = type21.getSize();
        org.mockito.asm.Type type32 = type21.getElementType();
        java.lang.String str33 = type21.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "int" + "'", str19, "int");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str27, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 142 + "'", int29 == 142);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str33, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test03991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03991");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int4 = type3.getSort();
        java.lang.String str5 = type3.toString();
        org.mockito.asm.Type type6 = type3.getElementType();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str11 = type10.getClassName();
        java.lang.String str12 = type10.getDescriptor();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str14 = type13.getClassName();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        int int31 = value30.getSize();
        org.mockito.asm.tree.analysis.Value value32 = simpleVerifier24.merge(value27, value30);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value32);
        boolean boolean34 = type15.equals((java.lang.Object) analyzerException33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        boolean boolean47 = type37.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray48);
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray48);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray48);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray48);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray48);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "double" + "'", str11, "double");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "D" + "'", str12, "D");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "double" + "'", str14, "double");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)S" + "'", str45, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(S)C" + "'", str49, "(S)C");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(S)V" + "'", str50, "(S)V");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(S)D" + "'", str51, "(S)D");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(S)D" + "'", str52, "(S)D");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(S)L(C)Z;" + "'", str53, "(S)L(C)Z;");
    }

    @Test
    public void test03992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03992");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        int int17 = type2.getSize();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type19, false);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str27 = type26.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray36);
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type26, list39, false);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        boolean boolean54 = type44.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray55);
        java.lang.String str57 = type42.getDescriptor();
        int int58 = type42.getSort();
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type42, list59, true);
        boolean boolean62 = type19.equals((java.lang.Object) type23);
        int int63 = type19.getSize();
        java.lang.String str64 = type19.getClassName();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        int int70 = type68.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, false);
        java.lang.Class<?> wildcardClass73 = type68.getClass();
        boolean boolean74 = type19.equals((java.lang.Object) wildcardClass73);
        java.lang.String str75 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass73);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass73);
        int int77 = type76.getSort();
        java.lang.String str78 = type76.getInternalName();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str81 = type80.getClassName();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getObjectType("boolean");
        int int85 = type83.getOpcode(82);
        java.lang.String str86 = type83.getClassName();
        java.util.List list87 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type80, type83, list87, true);
        java.lang.String str90 = type80.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier92 = new org.mockito.asm.tree.analysis.SimpleVerifier(type76, type80, false);
        int int94 = type80.getOpcode(92);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier96 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type80, false);
        org.mockito.asm.Type type97 = null;
        org.mockito.asm.tree.analysis.Value value98 = simpleVerifier96.newValue(type97);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "boolean" + "'", str27, "boolean");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)Z" + "'", str38, "(C)Z");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(S)C" + "'", str56, "(S)C");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "C" + "'", str57, "C");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "char" + "'", str64, "char");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 4 + "'", int70 == 4);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org/mockito/asm/Type" + "'", str75, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org/mockito/asm/Type" + "'", str78, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "S" + "'", str81, "S");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 86 + "'", int85 == 86);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "boolean" + "'", str86, "boolean");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "S" + "'", str90, "S");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 96 + "'", int94 == 96);
        org.junit.Assert.assertNotNull(value98);
    }

    @Test
    public void test03993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03993");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        java.lang.String str17 = type3.getDescriptor();
        int int19 = type3.getOpcode(185);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list37, false);
        java.lang.String str40 = type24.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type24, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass45 = type44.getClass();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        java.lang.String str48 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        boolean boolean53 = type3.equals((java.lang.Object) wildcardClass45);
        java.lang.String str54 = type3.getDescriptor();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type55 = type3.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 185 + "'", int19 == 185);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "boolean" + "'", str40, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str48, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str50, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/Type" + "'", str51, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "C" + "'", str54, "C");
    }

    @Test
    public void test03994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03994");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        java.lang.String str23 = type19.getDescriptor();
        int int25 = type19.getOpcode((int) (short) 0);
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list26, true);
        java.lang.String str29 = type0.toString();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int32 = type31.getSort();
        java.lang.String str33 = type31.toString();
        org.mockito.asm.Type type34 = type31.getElementType();
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type34, list35, false);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        boolean boolean50 = type40.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray51);
        java.lang.String str53 = type38.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        java.lang.String str61 = type57.getDescriptor();
        int int63 = type57.getOpcode((int) (short) 0);
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type57, list64, true);
        int int67 = type38.getSort();
        java.lang.String str68 = type38.toString();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str70 = type69.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type74, list75, true);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type78 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray79);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray79);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray79);
        java.lang.String str83 = type38.toString();
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier37.newValue(type38);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str87 = type86.getDescriptor();
        java.lang.String str88 = type86.toString();
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier37.newValue(type86);
        java.lang.String str90 = type86.getClassName();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str33, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)S" + "'", str48, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(S)C" + "'", str52, "(S)C");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "C" + "'", str53, "C");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "C" + "'", str61, "C");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "C" + "'", str68, "C");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "boolean" + "'", str70, "boolean");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(C)S" + "'", str80, "(C)S");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)Z" + "'", str81, "(C)Z");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(C)C" + "'", str82, "(C)C");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "C" + "'", str83, "C");
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "S" + "'", str87, "S");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "S" + "'", str88, "S");
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "short" + "'", str90, "short");
    }

    @Test
    public void test03995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03995");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        int int8 = type2.getSort();
        java.lang.String str9 = type2.toString();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type10, list11, false);
        boolean boolean15 = type10.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        int int30 = type24.getSort();
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray31);
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray31);
        java.lang.String str34 = type10.toString();
        org.mockito.asm.Type type35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type35, false);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        boolean boolean50 = type40.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray51);
        java.lang.String str53 = type38.getDescriptor();
        int int54 = type38.getSort();
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier37.newValue(type38);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier37.newValue(type56);
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type56, list58, false);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type61 = type56.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "S" + "'", str9, "S");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(S)S" + "'", str33, "(S)S");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "S" + "'", str34, "S");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)S" + "'", str48, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(S)C" + "'", str52, "(S)C");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "C" + "'", str53, "C");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
    }

    @Test
    public void test03996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03996");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier36.merge(value57, value74);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier6.merge(value29, value74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        int int78 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier6.newValue(type77);
        java.lang.Class<?> wildcardClass80 = value79.getClass();
        java.lang.String str81 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass80);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass80);
        java.lang.String str83 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass80);
        java.lang.String str84 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass80);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 7 + "'", int78 == 7);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str81, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str83, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str84, "org/mockito/asm/tree/analysis/BasicValue");
    }

    @Test
    public void test03997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03997");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected C, but found I");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03998");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("L(C)I;");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03999");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        int int5 = type3.getOpcode(8192);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, true);
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, list8, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.tree.analysis.Value value12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value13 = simpleVerifier10.unaryOperation(abstractInsnNode11, value12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8196 + "'", int5 == 8196);
    }

    @Test
    public void test04000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test04000");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str4 = type3.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray13);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "boolean" + "'", str4, "boolean");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)Z" + "'", str15, "(C)Z");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;" + "'", str16, "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
    }
}

