import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest12 {

    public static boolean debug = false;

    @Test
    public void test06001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06001");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier36.merge(value57, value74);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier6.merge(value29, value74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        int int78 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier6.newValue(type77);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list84 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type81, type83, list84, true);
        int int87 = type81.getSort();
        boolean boolean89 = type81.equals((java.lang.Object) 192);
        java.util.List list90 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier92 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type81, list90, true);
        int int93 = type81.getSort();
        java.lang.String str94 = type81.getClassName();
        int int95 = type81.getSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = type81.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 7 + "'", int78 == 7);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 4 + "'", int87 == 4);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 4 + "'", int93 == 4);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "short" + "'", str94, "short");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
    }

    @Test
    public void test06002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06002");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str4 = type3.getClassName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value22);
        boolean boolean24 = type5.equals((java.lang.Object) analyzerException23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        boolean boolean37 = type27.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray38);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray38);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray38);
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list42, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = type46.getSort();
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier44.newValue(type46);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type52 = type51.getElementType();
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier44.newValue(type51);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean57 = type55.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int60 = type59.getSort();
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type59, list61, false);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass66 = type65.getClass();
        java.lang.String str67 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass66);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass66);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass66);
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type70, list71, true);
        java.lang.String str74 = type59.toString();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier44.newValue(type59);
        org.mockito.asm.Type type76 = null;
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type78, true);
        int int81 = type77.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type76, type77, false);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier44.newValue(type76);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode85 = null;
        org.mockito.asm.Type type86 = null;
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str89 = type88.toString();
        int int90 = type88.getDimensions();
        org.mockito.asm.Type type91 = type88.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier93 = new org.mockito.asm.tree.analysis.SimpleVerifier(type86, type91, false);
        org.mockito.asm.Type type95 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int96 = type95.getSort();
        java.lang.String str97 = type95.toString();
        org.mockito.asm.tree.analysis.Value value98 = simpleVerifier93.newValue(type95);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier44.unaryOperation(abstractInsnNode85, value98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "double" + "'", str4, "double");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)C" + "'", str39, "(S)C");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)V" + "'", str40, "(S)V");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)D" + "'", str41, "(S)D");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str67, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str74, "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str89, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 10 + "'", int96 == 10);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str97, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value98);
    }

    @Test
    public void test06003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06003");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("L(C)B;");
        java.lang.String str2 = type1.getDescriptor();
        int int3 = type1.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LL(C)B;;" + "'", str2, "LL(C)B;;");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test06004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06004");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)Lrg.mockito.asm.tree.analysis.AnalyzerException: (C)L(C)Z;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06005");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier9.merge(value12, value15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value17);
        boolean boolean19 = type0.equals((java.lang.Object) analyzerException18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        boolean boolean32 = type22.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray33);
        java.lang.String str35 = type20.getDescriptor();
        int int36 = type20.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type20, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str40 = type39.getDescriptor();
        boolean boolean41 = type20.equals((java.lang.Object) type39);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass45 = type44.getClass();
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass45);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass45);
        org.mockito.asm.tree.analysis.Value value49 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type48, value49);
        java.lang.String str51 = type48.getInternalName();
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type48, list52, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode55 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = type57.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        int int67 = type61.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type61, false);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.getObjectType("(S)C");
        int int72 = type71.getSort();
        java.lang.String str73 = type71.getClassName();
        org.mockito.asm.Type type74 = type71.getElementType();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type77 = type76.getElementType();
        boolean boolean78 = type71.equals((java.lang.Object) type77);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type80, list81, false);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier69.newValue(type80);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value85 = simpleVerifier54.copyOperation(abstractInsnNode55, value84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)S" + "'", str30, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "I" + "'", str40, "I");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str46, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str47, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/Type" + "'", str51, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(S)C" + "'", str73, "(S)C");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value84);
    }

    @Test
    public void test06006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06006");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        int int24 = type18.getSort();
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray25);
        java.lang.String str27 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type13, false);
        java.lang.Class<?> wildcardClass30 = type3.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        java.lang.String str33 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass30);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        java.lang.String str35 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(S)C" + "'", str26, "(S)C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str31, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str33, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org/mockito/asm/Type" + "'", str35, "org/mockito/asm/Type");
    }

    @Test
    public void test06007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06007");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)C: expected C, but found null");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06008");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        boolean boolean14 = type9.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        int int29 = type23.getSort();
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray30);
        java.lang.String str33 = type9.toString();
        org.mockito.asm.Type type34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type34, false);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        boolean boolean49 = type39.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray50);
        java.lang.String str52 = type37.getDescriptor();
        int int53 = type37.getSort();
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier36.newValue(type37);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier36.newValue(type55);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getReturnType("()Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier36.newValue(type58);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode60 = null;
        java.lang.Object obj62 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        int int76 = value75.getSize();
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier69.merge(value72, value75);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg.mockito.asm.tree.analysis.SimpleVerifier;", obj62, value72);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value79 = simpleVerifier36.copyOperation(abstractInsnNode60, value72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)S" + "'", str32, "(S)S");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)S" + "'", str47, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(S)C" + "'", str51, "(S)C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(value77);
    }

    @Test
    public void test06009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06009");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int3 = type1.getOpcode(86);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type6 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray17);
        java.lang.String str19 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        java.lang.String str27 = type23.getDescriptor();
        int int29 = type23.getOpcode((int) (short) 0);
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type23, list30, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type23, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str40 = type39.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray49);
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type39, list52, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        boolean boolean73 = type63.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type63, true);
        int int76 = type58.getSort();
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type58, list77, true);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier79.newValue(type80);
        org.mockito.asm.tree.analysis.Value value82 = simpleVerifier34.newValue(type80);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode83 = null;
        java.util.List list84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value85 = simpleVerifier34.naryOperation(abstractInsnNode83, list84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 86 + "'", int3 == 86);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "boolean" + "'", str40, "boolean");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)S" + "'", str50, "(C)S");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)Z" + "'", str51, "(C)Z");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)S" + "'", str71, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(value82);
    }

    @Test
    public void test06010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06010");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        java.lang.String str6 = type0.toString();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Z" + "'", str6, "Z");
    }

    @Test
    public void test06011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06011");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("LLC;");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06012");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str2 = type1.getInternalName();
        org.mockito.asm.Type type3 = type1.getElementType();
        java.lang.String str4 = type1.getClassName();
        int int5 = type1.getDimensions();
        org.mockito.asm.Type type6 = type1.getElementType();
        int int7 = type1.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org/mockito/asm/Type" + "'", str2, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.mockito.asm.Type" + "'", str4, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test06013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06013");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("(S)C");
        int int4 = type3.getSort();
        java.lang.String str5 = type3.getClassName();
        org.mockito.asm.Type type6 = type3.getElementType();
        boolean boolean7 = type1.equals((java.lang.Object) type3);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(S)C" + "'", str5, "(S)C");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06014");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("Z");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        boolean boolean15 = type5.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type5 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray16);
        int int18 = type3.getSize();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type20, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str28 = type27.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray37);
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type27, list40, false);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray52);
        boolean boolean55 = type45.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray56);
        java.lang.String str58 = type43.getDescriptor();
        int int59 = type43.getSort();
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type43, list60, true);
        boolean boolean63 = type20.equals((java.lang.Object) type24);
        int int64 = type20.getSize();
        java.lang.String str65 = type20.getClassName();
        int int67 = type20.getOpcode(0);
        int int68 = type20.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type20, true);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType("LS)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("double", (java.lang.Object) 7, value79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.BasicValue", (java.lang.Throwable) analyzerException80);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException80);
        boolean boolean83 = type72.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier70.newValue(type72);
        org.mockito.asm.Type type85 = type72.getElementType();
        int int86 = type85.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Z" + "'", str2, "Z");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)S" + "'", str13, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(S)C" + "'", str17, "(S)C");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "boolean" + "'", str28, "boolean");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)Z" + "'", str39, "(C)Z");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)S" + "'", str53, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(S)C" + "'", str57, "(S)C");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "char" + "'", str65, "char");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 10 + "'", int86 == 10);
    }

    @Test
    public void test06015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06015");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.mockito.asm.Type[] typeArray3 = org.mockito.asm.Type.getArgumentTypes("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        java.lang.String str4 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray3);
        java.lang.String str5 = type1.getInternalName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str4, "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str5, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
    }

    @Test
    public void test06016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06016");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str2 = type1.getInternalName();
        org.mockito.asm.Type type3 = type1.getElementType();
        java.lang.String str4 = type1.getClassName();
        int int5 = type1.getDimensions();
        java.lang.String str6 = type1.getDescriptor();
        java.lang.String str7 = type1.getClassName();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        boolean boolean20 = type10.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray21);
        java.lang.String str23 = type8.getDescriptor();
        int int24 = type8.getSort();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        boolean boolean37 = type27.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray38);
        int int40 = type25.getSize();
        boolean boolean42 = type25.equals((java.lang.Object) 181);
        int int43 = type25.getSize();
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        boolean boolean57 = type47.equals((java.lang.Object) '4');
        java.lang.String str58 = type47.toString();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type67 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray68);
        boolean boolean71 = type61.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray72);
        int int74 = type59.getSize();
        boolean boolean76 = type59.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type59, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type59, true);
        java.lang.String str81 = type59.getDescriptor();
        java.lang.String str82 = type59.getDescriptor();
        java.lang.Class<?> wildcardClass83 = type59.getClass();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        java.lang.String str85 = type84.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type84, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode88 = null;
        org.mockito.asm.tree.analysis.Value value89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value90 = simpleVerifier87.unaryOperation(abstractInsnNode88, value89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org/mockito/asm/Type" + "'", str2, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.mockito.asm.Type" + "'", str4, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.mockito.asm.Type" + "'", str7, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)S" + "'", str18, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(S)C" + "'", str22, "(S)C");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)C" + "'", str39, "(S)C");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)C" + "'", str45, "(C)C");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "S" + "'", str58, "S");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(C)S" + "'", str69, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(S)C" + "'", str73, "(S)C");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "C" + "'", str81, "C");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "C" + "'", str82, "C");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str85, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06017");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        int int15 = value14.getSize();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier8.merge(value11, value14);
        org.mockito.asm.tree.analysis.Value value17 = basicInterpreter0.copyOperation(abstractInsnNode1, value14);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode18 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        int int32 = value31.getSize();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier25.merge(value28, value31);
        int int34 = value31.getSize();
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter0.copyOperation(abstractInsnNode18, value31);
        java.lang.Class<?> wildcardClass36 = basicInterpreter0.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass36);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicInterpreter;" + "'", str37, "Lorg/mockito/asm/tree/analysis/BasicInterpreter;");
    }

    @Test
    public void test06018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06018");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str3 = type2.toString();
        int int4 = type2.getDimensions();
        org.mockito.asm.Type type5 = type2.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type5, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        int int20 = type18.getOpcode(84);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        boolean boolean30 = type22.equals((java.lang.Object) 192);
        int int31 = type22.getSort();
        java.lang.String str32 = type22.toString();
        boolean boolean33 = type18.equals((java.lang.Object) str32);
        java.lang.Object obj34 = null;
        boolean boolean35 = type18.equals(obj34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        int int39 = type37.getSort();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type41, true);
        boolean boolean44 = type18.equals((java.lang.Object) type37);
        boolean boolean45 = type9.equals((java.lang.Object) type37);
        int int47 = type9.getOpcode(4100);
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier7.newValue(type9);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value50 = simpleVerifier7.newOperation(abstractInsnNode49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 84 + "'", int20 == 84);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "S" + "'", str32, "S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4100 + "'", int47 == 4100);
        org.junit.Assert.assertNotNull(value48);
    }

    @Test
    public void test06019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06019");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: D");
        java.lang.String str2 = type1.getDescriptor();
        int int3 = type1.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type4 = type1.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: D;" + "'", str2, "Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: D;");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test06020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06020");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int4 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I");
        java.lang.String str10 = type9.getDescriptor();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Z", (java.lang.Throwable) analyzerException13);
        java.lang.Class<?> wildcardClass15 = analyzerException14.getClass();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass15);
        int int17 = type16.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type16, false);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        java.lang.String str23 = type22.toString();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray39);
        boolean boolean42 = type32.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        int int52 = type46.getSort();
        java.lang.String str53 = type46.toString();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type54, list55, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        int int65 = type59.getSort();
        java.lang.String str66 = type59.getClassName();
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier57.newValue(type59);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type69, true);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str73 = type72.getDescriptor();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier44.merge(value67, value74);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I;", (java.lang.Object) type22, value67);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass79 = type78.getClass();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass79);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass79);
        java.lang.String str83 = type82.getDescriptor();
        org.mockito.asm.Type type84 = type82.getElementType();
        java.lang.String str85 = type82.getClassName();
        int int86 = type82.getDimensions();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getObjectType("org/mockito/asm/Type");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type88, true);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str93 = type92.getDescriptor();
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier90.newValue(type92);
        org.mockito.asm.tree.analysis.Value value95 = simpleVerifier19.merge(value67, value94);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value96 = simpleVerifier6.unaryOperation(abstractInsnNode7, value94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;" + "'", str10, "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;;" + "'", str23, "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;;");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(C)S" + "'", str40, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "S" + "'", str53, "S");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "short" + "'", str66, "short");
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "I" + "'", str73, "I");
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str83, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org.mockito.asm.Type" + "'", str85, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "S" + "'", str93, "S");
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertNotNull(value95);
    }

    @Test
    public void test06021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06021");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        int int8 = type2.getSort();
        java.lang.String str9 = type2.toString();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type10, list11, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        int int21 = type15.getSort();
        java.lang.String str22 = type15.getClassName();
        org.mockito.asm.tree.analysis.Value value23 = simpleVerifier13.newValue(type15);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type15, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass28 = type27.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass28);
        java.lang.String str30 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        java.lang.String str32 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        int int41 = type35.getSort();
        java.lang.String str42 = type35.toString();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type43, list44, false);
        boolean boolean48 = type43.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        int int63 = type57.getSort();
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray64);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray64);
        java.lang.String str67 = type43.toString();
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type43, list68, false);
        org.mockito.asm.tree.analysis.Value value71 = simpleVerifier25.newValue(type33);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getReturnType("Lorg.mockito.asm.tree.analysis.SimpleVerifier;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type73, true);
        java.lang.Class<?> wildcardClass76 = type33.getClass();
        java.lang.String str77 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass76);
        java.lang.String str78 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass76);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "S" + "'", str9, "S");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "short" + "'", str22, "short");
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str29, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str30, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org/mockito/asm/Type" + "'", str32, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "S" + "'", str42, "S");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(S)C" + "'", str65, "(S)C");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(S)S" + "'", str66, "(S)S");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "S" + "'", str67, "S");
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str77, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str78, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06022");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected 0, but found I");
        int int3 = type1.getOpcode(131);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 135 + "'", int3 == 135);
    }

    @Test
    public void test06023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06023");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("C");
        int int3 = type1.getOpcode(160);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type6 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray17);
        int int19 = type4.getSize();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type21, false);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type38, true);
        boolean boolean41 = type24.equals((java.lang.Object) simpleVerifier40);
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type24, list42, false);
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list45, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getObjectType("double");
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier47.newValue(type49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        int int66 = type60.getSort();
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type60 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray67);
        java.lang.String str69 = type55.getDescriptor();
        java.lang.String str70 = type55.getDescriptor();
        org.mockito.asm.tree.analysis.Value value71 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)C", (java.lang.Object) type55, value71);
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type55, list73, false);
        int int76 = type49.getDimensions();
        int int78 = type49.getOpcode(116);
        java.lang.String str79 = type49.toString();
        int int80 = type49.getSort();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int83 = type82.getSort();
        java.lang.String str84 = type82.toString();
        org.mockito.asm.Type type85 = type82.getElementType();
        int int86 = type85.getSize();
        int int87 = type85.getSize();
        org.mockito.asm.Type[] typeArray89 = org.mockito.asm.Type.getArgumentTypes("(C)Z");
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type85, typeArray89);
        boolean boolean91 = type49.equals((java.lang.Object) type85);
        org.mockito.asm.Type type92 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type85, type92, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode95 = null;
        java.util.List list96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value97 = simpleVerifier94.naryOperation(abstractInsnNode95, list96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 160 + "'", int3 == 160);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(S)C" + "'", str68, "(S)C");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "C" + "'", str70, "C");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 120 + "'", int78 == 120);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Ldouble;" + "'", str79, "Ldouble;");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 10 + "'", int80 == 10);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str84, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(C)Lg/mockito/asm/Type;" + "'", str90, "(C)Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test06024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06024");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("(SC)L(C)LC;;");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type3, true);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str7 = type6.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray16);
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type6, list19, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type30, true);
        int int43 = type25.getSort();
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type25, list44, true);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier46.newValue(type47);
        java.lang.String str49 = type47.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type47, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int55 = type53.getOpcode((int) (byte) 10);
        int int56 = type53.getSort();
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier51.newValue(type53);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.newOperation(abstractInsnNode58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean" + "'", str7, "boolean");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)Z" + "'", str18, "(C)Z");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "I" + "'", str49, "I");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 14 + "'", int55 == 14);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNotNull(value57);
    }

    @Test
    public void test06025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06025");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("(S)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06026");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        int int5 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        java.lang.String str8 = type1.getDescriptor();
        java.lang.String str9 = type1.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LC;" + "'", str8, "LC;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LC;" + "'", str9, "LC;");
    }

    @Test
    public void test06027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06027");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        int int1 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        int int36 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter2.copyOperation(abstractInsnNode20, value33);
        boolean boolean38 = type0.equals((java.lang.Object) basicInterpreter2);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        int int40 = type39.getSort();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type39, list41, false);
        java.lang.Class<?> wildcardClass44 = simpleVerifier43.getClass();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getObjectType("(S)V");
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str53 = type52.getClassName();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        int int70 = value69.getSize();
        org.mockito.asm.tree.analysis.Value value71 = simpleVerifier63.merge(value66, value69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value71);
        boolean boolean73 = type54.equals((java.lang.Object) analyzerException72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type76, type78, list79, true);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray83 = new org.mockito.asm.Type[] { type82 };
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type76, typeArray83);
        boolean boolean86 = type76.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray87 = new org.mockito.asm.Type[] { type76 };
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray87);
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray87);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray87);
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier51.newValue(type52);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type92 = type52.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7 + "'", int1 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "double" + "'", str53, "double");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(C)S" + "'", str84, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(S)C" + "'", str88, "(S)C");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(S)V" + "'", str89, "(S)V");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(S)D" + "'", str90, "(S)D");
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test06028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06028");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("(S)C");
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str24 = type23.getClassName();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        int int41 = value40.getSize();
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier34.merge(value37, value40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value42);
        boolean boolean44 = type25.equals((java.lang.Object) analyzerException43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        boolean boolean57 = type47.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray58);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray58);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray58);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray58);
        java.lang.Class<?> wildcardClass63 = typeArray58.getClass();
        java.lang.String str64 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass63);
        java.lang.String str65 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass63);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass63);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "double" + "'", str24, "double");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(S)C" + "'", str59, "(S)C");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)V" + "'", str60, "(S)V");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(S)D" + "'", str61, "(S)D");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(S)C" + "'", str62, "(S)C");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str64, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[Lorg/mockito/asm/Type;" + "'", str65, "[Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type66);
    }

    @Test
    public void test06029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06029");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        boolean boolean32 = type22.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray33);
        java.lang.String str35 = type20.getDescriptor();
        int int36 = type20.getSort();
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type20, list37, true);
        int int40 = type1.getSort();
        java.lang.String str41 = type1.getDescriptor();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int43 = type42.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type42, true);
        java.lang.String str46 = type42.getDescriptor();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)S" + "'", str30, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Z" + "'", str46, "Z");
    }

    @Test
    public void test06030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06030");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("L(S)L(C)Z;;");
        int int2 = type1.getSize();
        int int4 = type1.getOpcode(14);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType("(S)L(C)Z;");
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type6, list7, true);
        java.lang.Class<?> wildcardClass10 = type6.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 18 + "'", int4 == 18);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test06031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06031");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.SimpleVerifier");
        int int2 = type1.getSort();
        java.lang.Object obj3 = null;
        boolean boolean4 = type1.equals(obj3);
        int int5 = type1.getDimensions();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        boolean boolean20 = type10.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray21);
        java.lang.String str23 = type8.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        java.lang.String str31 = type27.getDescriptor();
        int int33 = type27.getOpcode((int) (short) 0);
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type27, list34, true);
        int int37 = type27.getSort();
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type27, list38, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str43 = type42.toString();
        int int44 = type42.getDimensions();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        boolean boolean57 = type47.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray58);
        java.lang.String str60 = type45.getDescriptor();
        int int61 = type45.getSort();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        boolean boolean74 = type64.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray75);
        int int77 = type62.getSize();
        boolean boolean79 = type62.equals((java.lang.Object) 181);
        int int80 = type62.getSize();
        org.mockito.asm.Type[] typeArray81 = new org.mockito.asm.Type[] { type62 };
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray81);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray81);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier40.newValue(type42);
        org.mockito.asm.Type type85 = type42.getElementType();
        java.lang.String str86 = type85.getInternalName();
        int int87 = type85.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type85, true);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "I" + "'", str7, "I");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)S" + "'", str18, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(S)C" + "'", str22, "(S)C");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "C" + "'", str31, "C");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str43, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(S)C" + "'", str59, "(S)C");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "C" + "'", str60, "C");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)S" + "'", str72, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(S)C" + "'", str76, "(S)C");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(C)C" + "'", str82, "(C)C");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str83, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "g/mockito/asm/Type" + "'", str86, "g/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test06032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06032");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type12, list13, false);
        java.lang.String str16 = type12.getClassName();
        int int17 = type12.getSort();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        boolean boolean30 = type20.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray31);
        int int33 = type18.getSize();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type35, false);
        boolean boolean39 = type35.equals((java.lang.Object) 23);
        java.lang.String str40 = type35.getClassName();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type35, list41, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newOperation(abstractInsnNode44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "int" + "'", str16, "int");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)S" + "'", str28, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "char" + "'", str40, "char");
    }

    @Test
    public void test06033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06033");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("C");
        int int3 = type1.getOpcode(160);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type6 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray17);
        int int19 = type4.getSize();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type21, false);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type38, true);
        boolean boolean41 = type24.equals((java.lang.Object) simpleVerifier40);
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type24, list42, false);
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list45, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getObjectType("double");
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier47.newValue(type49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        int int66 = type60.getSort();
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type60 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray67);
        java.lang.String str69 = type55.getDescriptor();
        java.lang.String str70 = type55.getDescriptor();
        org.mockito.asm.tree.analysis.Value value71 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)C", (java.lang.Object) type55, value71);
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type55, list73, false);
        int int76 = type49.getDimensions();
        int int78 = type49.getOpcode(116);
        java.lang.String str79 = type49.toString();
        int int80 = type49.getSort();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int83 = type82.getSort();
        java.lang.String str84 = type82.toString();
        org.mockito.asm.Type type85 = type82.getElementType();
        int int86 = type85.getSize();
        int int87 = type85.getSize();
        org.mockito.asm.Type[] typeArray89 = org.mockito.asm.Type.getArgumentTypes("(C)Z");
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type85, typeArray89);
        boolean boolean91 = type49.equals((java.lang.Object) type85);
        java.lang.Class<?> wildcardClass92 = type85.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 160 + "'", int3 == 160);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(S)C" + "'", str68, "(S)C");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "C" + "'", str70, "C");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 120 + "'", int78 == 120);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Ldouble;" + "'", str79, "Ldouble;");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 10 + "'", int80 == 10);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str84, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(C)Lg/mockito/asm/Type;" + "'", str90, "(C)Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test06034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06034");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("g/mockito/asm/Type");
        int int3 = type1.getOpcode(197);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type4 = type1.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 201 + "'", int3 == 201);
    }

    @Test
    public void test06035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06035");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        java.lang.String str23 = type19.getDescriptor();
        int int25 = type19.getOpcode((int) (short) 0);
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list26, true);
        int int29 = type19.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        int int37 = type31.getSort();
        java.lang.String str38 = type31.toString();
        java.lang.String str39 = type31.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type31, true);
        java.lang.String str42 = type19.getDescriptor();
        int int43 = type19.getSort();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type44 = type19.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 4 + "'", int37 == 4);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "S" + "'", str38, "S");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "S" + "'", str39, "S");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "C" + "'", str42, "C");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
    }

    @Test
    public void test06036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06036");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I", (java.lang.Throwable) analyzerException3);
        java.lang.Throwable[] throwableArray5 = analyzerException3.getSuppressed();
        java.lang.Throwable[] throwableArray6 = analyzerException3.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: D");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;: expected (C)S, but found null", (java.lang.Throwable) analyzerException11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z", (java.lang.Throwable) analyzerException11);
        analyzerException7.addSuppressed((java.lang.Throwable) analyzerException11);
        java.lang.Class<?> wildcardClass15 = analyzerException11.getClass();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test06037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06037");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("void");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06038");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException23);
        java.lang.Throwable[] throwableArray25 = analyzerException24.getSuppressed();
        java.lang.Throwable[] throwableArray26 = analyzerException24.getSuppressed();
        analyzerException4.addSuppressed((java.lang.Throwable) analyzerException24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Z", (java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("short");
        analyzerException4.addSuppressed((java.lang.Throwable) analyzerException30);
        java.lang.Throwable[] throwableArray32 = analyzerException30.getSuppressed();
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test06039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06039");
        java.lang.Object obj2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier9.merge(value12, value15);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", obj2, value17);
        java.lang.Throwable throwable22 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        int int42 = value41.getSize();
        org.mockito.asm.tree.analysis.Value value43 = simpleVerifier35.merge(value38, value41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type76, type78, list79, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier85 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier85.newValue(type86);
        int int88 = value87.getSize();
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier81.merge(value84, value87);
        org.mockito.asm.tree.analysis.Value value90 = simpleVerifier51.merge(value72, value89);
        org.mockito.asm.tree.analysis.Value value91 = basicVerifier24.merge(value43, value90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException23, value91);
        analyzerException19.addSuppressed((java.lang.Throwable) analyzerException92);
        java.lang.Throwable[] throwableArray94 = analyzerException19.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException95 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: java/lang/Object", (java.lang.Throwable) analyzerException19);
        java.lang.String str96 = analyzerException95.toString();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: java/lang/Object" + "'", str96, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: java/lang/Object");
    }

    @Test
    public void test06040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06040");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        int int17 = type3.getSize();
        java.lang.String str18 = type3.toString();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass21 = type20.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type24, list25, false);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray41);
        int int43 = type28.getSize();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type45, false);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str49 = type48.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray58);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type62, true);
        boolean boolean65 = type48.equals((java.lang.Object) simpleVerifier64);
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type48, list66, false);
        org.mockito.asm.tree.analysis.Value value69 = simpleVerifier27.newValue(type28);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode70 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        int int74 = type72.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type76, type78, list79, true);
        int int82 = type76.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type76, false);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier84.newValue(type85);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value87 = simpleVerifier27.unaryOperation(abstractInsnNode70, value86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str23, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(S)C" + "'", str42, "(S)C");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "boolean" + "'", str49, "boolean");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)S" + "'", str59, "(C)S");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(C)Z" + "'", str60, "(C)Z");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
    }

    @Test
    public void test06041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06041");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        int int5 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        int int19 = type13.getSort();
        int int20 = type13.getSize();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int23 = type22.getSort();
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type22, list24, true);
        int int27 = type22.getDimensions();
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, list28, true);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type31 = type22.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test06042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06042");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray11);
        java.lang.Throwable throwable16 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        int int52 = value51.getSize();
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier45.merge(value48, value51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        int int67 = value66.getSize();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier60.merge(value63, value66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type72, list73, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier79.newValue(type80);
        int int82 = value81.getSize();
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier75.merge(value78, value81);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier45.merge(value66, value83);
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier18.merge(value37, value84);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException17, value85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S", (java.lang.Object) typeArray11, value85);
        java.lang.Throwable[] throwableArray88 = analyzerException87.getSuppressed();
        java.lang.Throwable[] throwableArray89 = analyzerException87.getSuppressed();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "boolean" + "'", str2, "boolean");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)Z" + "'", str13, "(C)Z");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertNotNull(throwableArray89);
    }

    @Test
    public void test06043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06043");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("Ldouble;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        boolean boolean20 = type10.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type10, true);
        int int23 = type5.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        int int31 = type25.getSort();
        java.lang.String str32 = type25.getClassName();
        java.lang.String str33 = type25.getDescriptor();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        int int42 = type36.getSort();
        java.lang.String str43 = type36.toString();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type44, list45, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        int int55 = type49.getSort();
        java.lang.String str56 = type49.getClassName();
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier47.newValue(type49);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type49, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type34, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type25, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type25, true);
        int int67 = type1.getOpcode(112);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)S" + "'", str18, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "short" + "'", str32, "short");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "S" + "'", str43, "S");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "short" + "'", str56, "short");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 116 + "'", int67 == 116);
    }

    @Test
    public void test06044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06044");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier19.newValue(type21);
        java.lang.String str23 = type21.toString();
        java.lang.String str24 = type21.toString();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;: expected null, but found I;");
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type26, list27, false);
        int int30 = type21.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "C" + "'", str24, "C");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test06045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06045");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.tree.analysis.Value value8 = simpleVerifier5.newValue(type6);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass11 = type10.getClass();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        java.lang.String str15 = type14.getDescriptor();
        org.mockito.asm.Type type16 = type14.getElementType();
        java.lang.String str17 = type14.getDescriptor();
        org.mockito.asm.Type[] typeArray19 = org.mockito.asm.Type.getArgumentTypes("(SC)S");
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray19);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type14, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        java.util.List list24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value25 = simpleVerifier22.naryOperation(abstractInsnNode23, list24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "S" + "'", str7, "S");
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str17, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(SC)Lorg/mockito/asm/Type;" + "'", str20, "(SC)Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06046");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        int int16 = type0.getSize();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type24, false);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str28 = type27.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        boolean boolean32 = type27.equals((java.lang.Object) basicVerifier29);
        java.lang.String str33 = type27.getDescriptor();
        org.mockito.asm.Type[] typeArray35 = org.mockito.asm.Type.getArgumentTypes("(C)Lorg/mockito/asm/Type;");
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray35);
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier26.newValue(type27);
        boolean boolean38 = type0.equals((java.lang.Object) type27);
        int int39 = type0.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "S" + "'", str28, "S");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test06047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06047");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        int int16 = type0.getSort();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        boolean boolean29 = type19.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray30);
        int int32 = type17.getSize();
        boolean boolean34 = type17.equals((java.lang.Object) 181);
        int int35 = type17.getSize();
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        boolean boolean49 = type39.equals((java.lang.Object) '4');
        java.lang.String str50 = type39.toString();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        boolean boolean63 = type53.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray64);
        int int66 = type51.getSize();
        boolean boolean68 = type51.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type51, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type51, true);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;: expected I, but found I");
        int int75 = type74.getSort();
        boolean boolean76 = type0.equals((java.lang.Object) type74);
        java.lang.String str77 = type74.getClassName();
        org.mockito.asm.Type type78 = type74.getElementType();
        java.lang.String str79 = type74.getClassName();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(C)S" + "'", str27, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)C" + "'", str37, "(C)C");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)S" + "'", str47, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "S" + "'", str50, "S");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)S" + "'", str61, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(S)C" + "'", str65, "(S)C");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.SimpleVerifier;: expected I, but found I" + "'", str77, "org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.SimpleVerifier;: expected I, but found I");
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.SimpleVerifier;: expected I, but found I" + "'", str79, "org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.SimpleVerifier;: expected I, but found I");
    }

    @Test
    public void test06048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06048");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        int int3 = type1.getOpcode(155);
        org.mockito.asm.Type type4 = type1.getElementType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 159 + "'", int3 == 159);
        org.junit.Assert.assertNotNull(type4);
    }

    @Test
    public void test06049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06049");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.Type");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier11.merge(value14, value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        int int39 = value38.getSize();
        org.mockito.asm.tree.analysis.Value value40 = simpleVerifier32.merge(value35, value38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value40);
        analyzerException23.addSuppressed((java.lang.Throwable) analyzerException41);
        analyzerException20.addSuppressed((java.lang.Throwable) analyzerException41);
        java.lang.Class<?> wildcardClass44 = analyzerException41.getClass();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type47, list48, false);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type51 = type1.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
    }

    @Test
    public void test06050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06050");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("L(SC)S;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06051");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, false);
        java.lang.String str14 = type5.getClassName();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType("Z");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter17 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type19, true);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str23 = type22.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray32);
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type22, list35, false);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        boolean boolean50 = type40.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray51);
        java.lang.String str53 = type38.getDescriptor();
        int int54 = type38.getSort();
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type38, list55, true);
        org.mockito.asm.tree.analysis.Value value58 = basicInterpreter17.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type69, list70, true);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray74);
        boolean boolean77 = type67.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type67, true);
        boolean boolean81 = type67.equals((java.lang.Object) 158);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str83 = type82.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list88 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type85, type87, list88, true);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray92 = new org.mockito.asm.Type[] { type91 };
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type85, typeArray92);
        java.lang.String str94 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray92);
        java.lang.String str95 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray92);
        java.lang.String str96 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray92);
        java.lang.String str97 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray92);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier99 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type16, true);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "short" + "'", str14, "short");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "boolean" + "'", str23, "boolean");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)S" + "'", str33, "(C)S");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)Z" + "'", str34, "(C)Z");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)S" + "'", str48, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(S)C" + "'", str52, "(S)C");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "C" + "'", str53, "C");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(C)S" + "'", str75, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "boolean" + "'", str83, "boolean");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(typeArray92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(C)S" + "'", str93, "(C)S");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(C)Z" + "'", str94, "(C)Z");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "(C)S" + "'", str95, "(C)S");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "(C)C" + "'", str96, "(C)C");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "(C)Z" + "'", str97, "(C)Z");
    }

    @Test
    public void test06052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06052");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type3, true);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str7 = type6.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray16);
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type6, list19, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type30, true);
        int int43 = type25.getSort();
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type25, list44, true);
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list47, false);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str55 = type54.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type63 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray64);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray64);
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type54, list67, false);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str71 = type70.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray80);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray80);
        java.util.List list84 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type51, list84, true);
        int int87 = type1.getSort();
        int int88 = type1.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean" + "'", str7, "boolean");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)Z" + "'", str18, "(C)Z");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "boolean" + "'", str55, "boolean");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(C)S" + "'", str65, "(C)S");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(C)Z" + "'", str66, "(C)Z");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "boolean" + "'", str71, "boolean");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)S" + "'", str81, "(C)S");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(C)Z" + "'", str82, "(C)Z");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(C)C" + "'", str83, "(C)C");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 10 + "'", int87 == 10);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
    }

    @Test
    public void test06053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06053");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("double", (java.lang.Object) 7, value7);
        java.lang.Throwable[] throwableArray9 = analyzerException8.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("(SC)S", (java.lang.Throwable) analyzerException8);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;", (java.lang.Throwable) analyzerException10);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;", (java.lang.Throwable) analyzerException10);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test06054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06054");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value20);
        boolean boolean22 = type3.equals((java.lang.Object) analyzerException21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        boolean boolean35 = type25.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray36);
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray36);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray36);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type41, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str45 = type44.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray54);
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type44, list57, false);
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type41, list60, false);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z");
        java.lang.Throwable[] throwableArray65 = analyzerException64.getSuppressed();
        boolean boolean66 = type1.equals((java.lang.Object) analyzerException64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type74, list75, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        int int84 = value83.getSize();
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier77.merge(value80, value83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value85);
        analyzerException68.addSuppressed((java.lang.Throwable) analyzerException86);
        analyzerException64.addSuppressed((java.lang.Throwable) analyzerException86);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Lorg/mockito/asm/tree/analysis/SimpleVerifier;", (java.lang.Throwable) analyzerException86);
        java.lang.Throwable[] throwableArray90 = analyzerException89.getSuppressed();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "double" + "'", str2, "double");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)S" + "'", str33, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(S)C" + "'", str37, "(S)C");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)V" + "'", str38, "(S)V");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)D" + "'", str39, "(S)D");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "boolean" + "'", str45, "boolean");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)Z" + "'", str56, "(C)Z");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test06055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06055");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        int int1 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        int int36 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter2.copyOperation(abstractInsnNode20, value33);
        boolean boolean38 = type0.equals((java.lang.Object) basicInterpreter2);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        int int40 = type39.getSort();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type39, list41, false);
        java.lang.Class<?> wildcardClass44 = simpleVerifier43.getClass();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getObjectType("(S)V");
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        int int53 = type46.getOpcode(4);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        int int61 = type55.getSort();
        boolean boolean63 = type55.equals((java.lang.Object) 192);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type55, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode66 = null;
        java.util.List list67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value68 = simpleVerifier65.naryOperation(abstractInsnNode66, list67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7 + "'", int1 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test06056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06056");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("J");
        java.lang.String str2 = type1.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "long" + "'", str2, "long");
    }

    @Test
    public void test06057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06057");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected true, but found I");
        org.mockito.asm.Type[] typeArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06058");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        java.lang.String str2 = type1.getInternalName();
        int int3 = type1.getSize();
        org.mockito.asm.Type type4 = type1.getElementType();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I");
        java.lang.String str7 = type6.getDescriptor();
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list8, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode11 = null;
        org.mockito.asm.Type type12 = null;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        int int18 = type16.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, false);
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list21, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        java.lang.String str34 = type30.getDescriptor();
        int int36 = type30.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        int int51 = type45.getSort();
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray52);
        java.lang.String str54 = type40.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type40, false);
        org.mockito.asm.Type type57 = null;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type57, list58, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        int int64 = type62.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        int int72 = type66.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type66, false);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier60.merge(value76, value80);
        org.mockito.asm.tree.analysis.Value value82 = simpleVerifier23.merge(value26, value76);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value83 = simpleVerifier10.unaryOperation(abstractInsnNode11, value26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str2, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;" + "'", str7, "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 4 + "'", int51 == 4);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(S)C" + "'", str53, "(S)C");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "C" + "'", str54, "C");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 4 + "'", int72 == 4);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(value82);
    }

    @Test
    public void test06059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06059");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (S)B");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        java.lang.String str17 = type2.getDescriptor();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int21 = type19.getOpcode(86);
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type19, list22, true);
        int int25 = type19.getSort();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int28 = type27.getSort();
        java.lang.String str29 = type27.toString();
        org.mockito.asm.Type type30 = type27.getElementType();
        int int31 = type30.getSort();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = value47.getSize();
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier41.merge(value44, value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value49);
        boolean boolean51 = type32.equals((java.lang.Object) analyzerException50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type60 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray61);
        boolean boolean64 = type54.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray65);
        java.lang.String str67 = type52.getDescriptor();
        int int68 = type52.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type52, true);
        java.lang.String str71 = type52.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type52, false);
        org.mockito.asm.Type[] typeArray75 = org.mockito.asm.Type.getArgumentTypes("(C)D");
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray75);
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray75);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean81 = type79.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int84 = type83.getSort();
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type83, list85, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type83, true);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType("Z");
        org.mockito.asm.tree.analysis.Value value92 = simpleVerifier89.newValue(type91);
        java.util.List list93 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier95 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type91, list93, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode96 = null;
        java.util.List list97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value98 = simpleVerifier95.naryOperation(abstractInsnNode96, list97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 86 + "'", int21 == 86);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str29, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(C)S" + "'", str62, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(S)C" + "'", str66, "(S)C");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "C" + "'", str67, "C");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "C" + "'", str71, "C");
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)C" + "'", str76, "(C)C");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(C)S" + "'", str77, "(C)S");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 10 + "'", int84 == 10);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(value92);
    }

    @Test
    public void test06060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06060");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        java.lang.String str18 = type0.getClassName();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass21 = type20.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type25 = type24.getElementType();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, false);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str33 = type32.getDescriptor();
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier31.newValue(type32);
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type32, list35, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type41, true);
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type32, list47, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode50 = null;
        java.util.List list51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value52 = simpleVerifier49.naryOperation(abstractInsnNode50, list51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "char" + "'", str18, "char");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str23, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
    }

    @Test
    public void test06061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06061");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        int int4 = type2.getOpcode(8192);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, true);
        java.lang.String str7 = type0.getDescriptor();
        org.mockito.asm.Type type8 = null;
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = type12.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, false);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list17, false);
        java.lang.String str20 = type10.getInternalName();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        boolean boolean33 = type23.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray34);
        java.lang.String str36 = type21.getDescriptor();
        int int37 = type21.getSort();
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type21, list38, true);
        java.lang.Class<?> wildcardClass41 = simpleVerifier40.getClass();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type43, list44, true);
        int int47 = type43.getSize();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getObjectType("L(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;;");
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type49, list50, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        java.util.List list54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value55 = simpleVerifier52.naryOperation(abstractInsnNode53, list54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8196 + "'", int4 == 8196);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "D" + "'", str7, "D");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "C" + "'", str20, "C");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)C" + "'", str35, "(S)C");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "C" + "'", str36, "C");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(type49);
    }

    @Test
    public void test06062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06062");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type6 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray17);
        java.lang.String str19 = type4.getDescriptor();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int23 = type21.getOpcode(86);
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type21, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str32 = type31.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray41);
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type31, list44, false);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str48 = type47.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray57);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray57);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray57);
        java.lang.Class<?> wildcardClass62 = type21.getClass();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass62);
        java.lang.String str65 = type64.getInternalName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type64, false);
        int int68 = type3.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 86 + "'", int23 == 86);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "boolean" + "'", str32, "boolean");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)Z" + "'", str43, "(C)Z");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "boolean" + "'", str48, "boolean");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(C)S" + "'", str58, "(C)S");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)Z" + "'", str59, "(C)Z");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(C)C" + "'", str60, "(C)C");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)S" + "'", str61, "(C)S");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org/mockito/asm/Type" + "'", str65, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
    }

    @Test
    public void test06063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06063");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str3 = type2.toString();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray20);
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type10, list23, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        boolean boolean44 = type34.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type34, true);
        int int47 = type29.getSort();
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type29, list48, true);
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list51, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type5, true);
        java.lang.String str56 = type5.getInternalName();
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type5, list57, true);
        java.lang.Class<?> wildcardClass60 = type5.getClass();
        java.lang.String str61 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass60);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L(C)Z;" + "'", str3, "L(C)Z;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean" + "'", str11, "boolean");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)Z" + "'", str22, "(C)Z");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str56, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str61, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06064");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str1 = type0.getClassName();
        java.lang.String str2 = type0.getDescriptor();
        int int3 = type0.getSize();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType("C");
        int int7 = type5.getOpcode(160);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        boolean boolean20 = type10.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray21);
        int int23 = type8.getSize();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type25, false);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str29 = type28.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray38);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type42, true);
        boolean boolean45 = type28.equals((java.lang.Object) simpleVerifier44);
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type28, list46, false);
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type8, list49, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getObjectType("double");
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier51.newValue(type53);
        java.lang.Class<?> wildcardClass55 = simpleVerifier51.getClass();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass55);
        java.lang.String str58 = type57.toString();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getObjectType("B");
        boolean boolean61 = type57.equals((java.lang.Object) type60);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type60, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        java.lang.String str71 = type67.getDescriptor();
        java.lang.Class<?> wildcardClass72 = type67.getClass();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass72);
        org.mockito.asm.Type type74 = type73.getElementType();
        org.mockito.asm.Type type75 = type74.getElementType();
        java.lang.String str76 = type75.toString();
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier63.newValue(type75);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "double" + "'", str1, "double");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "D" + "'", str2, "D");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 160 + "'", int7 == 160);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)S" + "'", str18, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(S)C" + "'", str22, "(S)C");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "boolean" + "'", str29, "boolean");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(C)Z" + "'", str40, "(C)Z");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str58, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "C" + "'", str71, "C");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Lmockito/asm/Type;" + "'", str76, "Lmockito/asm/Type;");
        org.junit.Assert.assertNotNull(value77);
    }

    @Test
    public void test06065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06065");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        boolean boolean14 = type9.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        int int29 = type23.getSort();
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray30);
        java.lang.String str33 = type9.toString();
        org.mockito.asm.Type type34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type34, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        int int53 = value52.getSize();
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier46.merge(value49, value52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        int int74 = value73.getSize();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier67.merge(value70, value73);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value75);
        analyzerException58.addSuppressed((java.lang.Throwable) analyzerException76);
        analyzerException55.addSuppressed((java.lang.Throwable) analyzerException76);
        java.lang.Class<?> wildcardClass79 = analyzerException76.getClass();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass79);
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier36.newValue(type80);
        org.mockito.asm.Type[] typeArray83 = org.mockito.asm.Type.getArgumentTypes("(S)C");
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type80, typeArray83);
        int int85 = type80.getDimensions();
        int int87 = type80.getOpcode(119);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)S" + "'", str32, "(S)S");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(S)Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str84, "(S)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 123 + "'", int87 == 123);
    }

    @Test
    public void test06066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06066");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        java.lang.String str2 = type1.getClassName();
        java.lang.String str3 = type1.getClassName();
        int int4 = type1.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str2, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str3, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
    }

    @Test
    public void test06067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06067");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.Type[]");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
    }

    @Test
    public void test06068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06068");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        int int1 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        int int36 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter2.copyOperation(abstractInsnNode20, value33);
        boolean boolean38 = type0.equals((java.lang.Object) basicInterpreter2);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        int int40 = type39.getSort();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type39, list41, false);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        int int47 = type44.getOpcode((-1));
        int int48 = type44.getSort();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        boolean boolean61 = type51.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray62);
        int int64 = type49.getSize();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type66, false);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str70 = type69.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type74, list75, true);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type78 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray79);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray79);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type83, true);
        boolean boolean86 = type69.equals((java.lang.Object) simpleVerifier85);
        java.util.List list87 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type69, list87, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier91 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type69, true);
        org.mockito.asm.Type type93 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected 0, but found I");
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier91.newValue(type93);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7 + "'", int1 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)S" + "'", str59, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(S)C" + "'", str63, "(S)C");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "boolean" + "'", str70, "boolean");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(C)S" + "'", str80, "(C)S");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)Z" + "'", str81, "(C)Z");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertNotNull(value94);
    }

    @Test
    public void test06069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06069");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)LC;: expected boolean, but found I");
    }

    @Test
    public void test06070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06070");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        int int1 = type0.getSize();
        java.lang.String str2 = type0.toString();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass8 = type7.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str21 = type20.getDescriptor();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.Value value23 = simpleVerifier13.newValue(type20);
        java.lang.String str24 = type20.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type20, false);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str29 = type28.toString();
        int int30 = type28.getDimensions();
        org.mockito.asm.Type type31 = type28.getElementType();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type33, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier35.newValue(type37);
        boolean boolean39 = type28.equals((java.lang.Object) value38);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getReturnType("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type44, true);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str48 = type47.getDescriptor();
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("double", (java.lang.Object) 7, value54);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass58 = type57.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass58);
        java.lang.String str60 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getObjectType("Z");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        int int74 = type68.getSort();
        int int75 = type68.getSize();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int78 = type77.getSort();
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type77, list79, true);
        int int82 = type77.getDimensions();
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier66.newValue(type77);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier46.merge(value54, value83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: : expected L(S)F;, but found I", (java.lang.Object) "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;", value84);
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier26.merge(value38, value84);
        int int87 = value38.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "C" + "'", str2, "C");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "S" + "'", str5, "S");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "S" + "'", str21, "S");
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "S" + "'", str24, "S");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str29, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "I" + "'", str48, "I");
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str59, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str60, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 4 + "'", int74 == 4);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test06071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06071");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        boolean boolean32 = type22.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray33);
        int int35 = type20.getSize();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type37, false);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str41 = type40.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray50);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type54, true);
        boolean boolean57 = type40.equals((java.lang.Object) simpleVerifier56);
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type40, list58, false);
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier19.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        boolean boolean73 = type63.equals((java.lang.Object) '4');
        java.lang.String str74 = type63.toString();
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type63, list75, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        java.lang.String str80 = type79.getClassName();
        int int81 = type79.getSort();
        java.util.List list82 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type79, list82, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value86 = simpleVerifier84.newOperation(abstractInsnNode85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)S" + "'", str30, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "boolean" + "'", str41, "boolean");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)S" + "'", str51, "(C)S");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)Z" + "'", str52, "(C)Z");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)S" + "'", str71, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "S" + "'", str74, "S");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Lorg.mockito.asm.tree.analysis.BasicValue;" + "'", str80, "Lorg.mockito.asm.tree.analysis.BasicValue;");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
    }

    @Test
    public void test06072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06072");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, false);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str18 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier10.newValue(type17);
        int int21 = type17.getSize();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: boolean");
        java.lang.String str24 = type23.toString();
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type23, list25, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getObjectType("(S)Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type32 = null;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        int int38 = type36.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, false);
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list41, false);
        java.lang.String str44 = type34.getInternalName();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        boolean boolean57 = type47.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray58);
        java.lang.String str60 = type45.getDescriptor();
        int int61 = type45.getSort();
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type45, list62, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type69, list70, true);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray74);
        boolean boolean77 = type67.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray78 = new org.mockito.asm.Type[] { type67 };
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray78);
        int int80 = type65.getSize();
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("()Lorg/mockito/asm/Type;", (java.lang.Object) type31, value81);
        int int83 = value81.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value84 = simpleVerifier27.copyOperation(abstractInsnNode28, value81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "S" + "'", str18, "S");
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: boolean;" + "'", str24, "Lorg.mockito.asm.tree.analysis.AnalyzerException: boolean;");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 4 + "'", int38 == 4);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(S)C" + "'", str59, "(S)C");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "C" + "'", str60, "C");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(C)S" + "'", str75, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(S)C" + "'", str79, "(S)C");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    public void test06073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06073");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        java.lang.String str20 = type4.getClassName();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        java.lang.String str23 = type22.getClassName();
        int int24 = type22.getSort();
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type22, list25, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.Value value29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value30 = simpleVerifier27.copyOperation(abstractInsnNode28, value29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "boolean" + "'", str20, "boolean");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg.mockito.asm.tree.analysis.BasicValue;" + "'", str23, "Lorg.mockito.asm.tree.analysis.BasicValue;");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
    }

    @Test
    public void test06074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06074");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("[Ljava/lang/Throwable;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("boolean");
        java.lang.String str4 = type3.getClassName();
        java.lang.Class<?> wildcardClass5 = type3.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        boolean boolean7 = type1.equals((java.lang.Object) type6);
        java.lang.String str8 = type6.toString();
        int int9 = type6.getDimensions();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType("(S)Lorg.mockito.asm.Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type11, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode14 = null;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int18 = type17.getSort();
        java.lang.String str19 = type17.toString();
        org.mockito.asm.Type type20 = type17.getElementType();
        int int21 = type20.getSort();
        int int23 = type20.getOpcode(184);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type38, true);
        boolean boolean41 = type24.equals((java.lang.Object) simpleVerifier40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier40.newValue(type43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I: expected null, but found I", (java.lang.Object) type20, value44);
        org.mockito.asm.tree.analysis.Value value46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value47 = simpleVerifier13.binaryOperation(abstractInsnNode14, value44, value46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "boolean" + "'", str4, "boolean");
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str19, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 188 + "'", int23 == 188);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
    }

    @Test
    public void test06075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06075");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int3 = type1.getOpcode((int) (byte) 10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        int int12 = type5.getSize();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int15 = type14.getSort();
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type14, list16, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type14, true);
        java.lang.String str21 = type1.getDescriptor();
        org.mockito.asm.Type type22 = type1.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        int int34 = type28.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type28, false);
        java.lang.Class<?> wildcardClass37 = type28.getClass();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass37);
        int int40 = type38.getOpcode((int) (short) 0);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str43 = type42.getDescriptor();
        java.lang.String str44 = type42.toString();
        java.lang.String str45 = type42.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type42, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type38, false);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getReturnType("(S)V");
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type51, list52, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode55 = null;
        java.util.List list56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value57 = simpleVerifier54.naryOperation(abstractInsnNode55, list56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 14 + "'", int3 == 14);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str21, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 4 + "'", int40 == 4);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "S" + "'", str43, "S");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "S" + "'", str44, "S");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "short" + "'", str45, "short");
        org.junit.Assert.assertNotNull(type51);
    }

    @Test
    public void test06076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06076");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)F");
        int int2 = type1.getDimensions();
        java.lang.String str3 = type1.toString();
        int int4 = type1.getSize();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass7 = type6.getClass();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass7);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass7);
        java.lang.String str12 = type11.getDescriptor();
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type11, list13, true);
        int int16 = type1.getDimensions();
        org.mockito.asm.Type type17 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, true);
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type19, list30, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        boolean boolean46 = type36.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray47);
        java.lang.String str49 = type34.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        java.lang.String str57 = type53.getDescriptor();
        int int59 = type53.getOpcode((int) (short) 0);
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type53, list60, true);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getObjectType("(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int65 = type64.getDimensions();
        int int67 = type64.getOpcode(91);
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier62.newValue(type64);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value69 = simpleVerifier32.unaryOperation(abstractInsnNode33, value68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L(S)F;" + "'", str3, "L(S)F;");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str9, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str12, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(C)S" + "'", str27, "(C)S");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(S)C" + "'", str48, "(S)C");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "C" + "'", str49, "C");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "C" + "'", str57, "C");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 95 + "'", int67 == 95);
        org.junit.Assert.assertNotNull(value68);
    }

    @Test
    public void test06077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06077");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("B");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException6);
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException6);
        java.lang.Throwable[] throwableArray9 = analyzerException6.getSuppressed();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str15 = type14.getClassName();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        int int32 = value31.getSize();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier25.merge(value28, value31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value33);
        boolean boolean35 = type16.equals((java.lang.Object) analyzerException34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        boolean boolean48 = type38.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray49);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray49);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray49);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        int int66 = value65.getSize();
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier59.merge(value62, value65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Object) type14, value62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Throwable) analyzerException68);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass73 = type72.getClass();
        java.lang.String str74 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass73);
        java.lang.String str75 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass73);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass73);
        org.mockito.asm.tree.analysis.Value value77 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type76, value77);
        analyzerException69.addSuppressed((java.lang.Throwable) analyzerException78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("LLS;;", (java.lang.Throwable) analyzerException78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException81 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)D", (java.lang.Throwable) analyzerException78);
        analyzerException6.addSuppressed((java.lang.Throwable) analyzerException78);
        java.lang.String str83 = analyzerException78.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double" + "'", str15, "double");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(C)S" + "'", str46, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(S)C" + "'", str50, "(S)C");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(S)V" + "'", str51, "(S)V");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(S)D" + "'", str52, "(S)D");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str74, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str75, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null" + "'", str83, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null");
    }

    @Test
    public void test06078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06078");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str13 = type12.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray22);
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type12, list25, false);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray41);
        java.lang.String str43 = type28.getDescriptor();
        int int44 = type28.getSort();
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type28, list45, true);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter7.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) analyzerException6, value48);
        java.lang.Throwable[] throwableArray50 = analyzerException6.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I: expected org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I, but found I", (java.lang.Throwable) analyzerException6);
        java.lang.Throwable[] throwableArray52 = analyzerException6.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)F", (java.lang.Throwable) analyzerException6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected I, but found I", (java.lang.Throwable) analyzerException53);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException62);
        java.lang.Throwable[] throwableArray64 = analyzerException62.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("Lg/mockito/asm/Type;", (java.lang.Throwable) analyzerException62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException70);
        analyzerException62.addSuppressed((java.lang.Throwable) analyzerException70);
        analyzerException58.addSuppressed((java.lang.Throwable) analyzerException62);
        analyzerException56.addSuppressed((java.lang.Throwable) analyzerException58);
        analyzerException54.addSuppressed((java.lang.Throwable) analyzerException58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException76 = new org.mockito.asm.tree.analysis.AnalyzerException("mockito.asm.Type", (java.lang.Throwable) analyzerException54);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "boolean" + "'", str13, "boolean");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(C)Z" + "'", str24, "(C)Z");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(S)C" + "'", str42, "(S)C");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "C" + "'", str43, "C");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray64);
    }

    @Test
    public void test06079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06079");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value20);
        boolean boolean22 = type3.equals((java.lang.Object) analyzerException21);
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier0.newValue(type3);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str26 = type25.toString();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str34 = type33.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray43);
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type33, list46, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type63 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray64);
        boolean boolean67 = type57.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type57, true);
        int int70 = type52.getSort();
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type52, list71, true);
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list74, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type28, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str80 = type79.toString();
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier78.newValue(type79);
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier0.newValue(type79);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        java.lang.String str85 = type84.getClassName();
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier0.newValue(type84);
        int int87 = type84.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(value23);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "L(C)Z;" + "'", str26, "L(C)Z;");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "boolean" + "'", str34, "boolean");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)Z" + "'", str45, "(C)Z");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(C)S" + "'", str65, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Z" + "'", str80, "Z");
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException;" + "'", str85, "Lorg.mockito.asm.tree.analysis.AnalyzerException;");
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test06080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06080");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)LC;");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type3, true);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str7 = type6.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray16);
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type6, list19, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type30, true);
        int int43 = type25.getSort();
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type25, list44, true);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier46.newValue(type47);
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type47, list49, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value53 = simpleVerifier51.newOperation(abstractInsnNode52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean" + "'", str7, "boolean");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)Z" + "'", str18, "(C)Z");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
    }

    @Test
    public void test06081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06081");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        java.lang.String str14 = type10.getDescriptor();
        int int15 = type10.getSort();
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type10, list16, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode19 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter20 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        int int35 = value34.getSize();
        org.mockito.asm.tree.analysis.Value value36 = simpleVerifier28.merge(value31, value34);
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter20.copyOperation(abstractInsnNode21, value34);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode38 = null;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str41 = type40.getClassName();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass44 = type43.getClass();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, false);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str57 = type56.getDescriptor();
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier49.newValue(type56);
        org.mockito.asm.tree.analysis.Value value60 = basicInterpreter20.copyOperation(abstractInsnNode38, value59);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value61 = simpleVerifier18.copyOperation(abstractInsnNode19, value59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "C" + "'", str14, "C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "S" + "'", str41, "S");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "S" + "'", str57, "S");
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(value60);
    }

    @Test
    public void test06082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06082");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier0 = new org.mockito.asm.tree.analysis.SimpleVerifier();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = value13.getSize();
        org.mockito.asm.tree.analysis.Value value15 = simpleVerifier7.merge(value10, value13);
        int int16 = value13.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        boolean boolean35 = type25.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type25, true);
        org.mockito.asm.Type type38 = null;
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        int int56 = value55.getSize();
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier49.merge(value52, value55);
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier37.merge(value42, value57);
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier0.merge(value13, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        int int75 = value74.getSize();
        int int76 = value74.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type78, type80, list81, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier87 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value89 = basicVerifier87.newValue(type88);
        int int90 = value89.getSize();
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier83.merge(value86, value89);
        int int92 = value89.getSize();
        int int93 = value89.getSize();
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier0.merge(value74, value89);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value96 = simpleVerifier0.newOperation(abstractInsnNode95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)S" + "'", str33, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(value94);
    }

    @Test
    public void test06083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06083");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str1 = type0.getDescriptor();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        java.lang.String str17 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        java.lang.String str25 = type21.getDescriptor();
        int int27 = type21.getOpcode((int) (short) 0);
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type21, list28, true);
        int int31 = type21.getSort();
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type21, list32, true);
        org.mockito.asm.tree.analysis.Value value35 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter36 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type38, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str42 = type41.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray51);
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type41, list54, false);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        boolean boolean69 = type59.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray70);
        java.lang.String str72 = type57.getDescriptor();
        int int73 = type57.getSort();
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type57, list74, true);
        org.mockito.asm.tree.analysis.Value value77 = basicInterpreter36.newValue(type57);
        int int78 = value77.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value79 = simpleVerifier34.merge(value35, value77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "I" + "'", str1, "I");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "boolean" + "'", str42, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)Z" + "'", str53, "(C)Z");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)S" + "'", str67, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(S)C" + "'", str71, "(S)C");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "C" + "'", str72, "C");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test06084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06084");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getObjectType("Z");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        int int18 = type12.getSort();
        int int19 = type12.getSize();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int22 = type21.getSort();
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type21, list23, true);
        int int26 = type21.getDimensions();
        org.mockito.asm.tree.analysis.Value value27 = simpleVerifier10.newValue(type21);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        int int33 = type31.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, false);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        java.lang.String str38 = type37.getClassName();
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier35.newValue(type37);
        org.mockito.asm.Type type40 = type37.getElementType();
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier10.newValue(type40);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        org.mockito.asm.tree.analysis.Value value43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value44 = simpleVerifier10.copyOperation(abstractInsnNode42, value43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException;" + "'", str38, "Lorg.mockito.asm.tree.analysis.AnalyzerException;");
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
    }

    @Test
    public void test06085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06085");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        int int8 = type1.getSize();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list12, true);
        java.lang.String str15 = type10.toString();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int18 = type17.getSort();
        java.lang.String str19 = type17.toString();
        org.mockito.asm.Type type20 = type17.getElementType();
        int int21 = type20.getSort();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        int int38 = value37.getSize();
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier31.merge(value34, value37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value39);
        boolean boolean41 = type22.equals((java.lang.Object) analyzerException40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        boolean boolean54 = type44.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray55);
        java.lang.String str57 = type42.getDescriptor();
        int int58 = type42.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type42, true);
        java.lang.String str61 = type42.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type42, false);
        java.lang.String str64 = type42.toString();
        java.lang.String str65 = type42.getClassName();
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type42, list66, false);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        java.lang.String str71 = type70.getInternalName();
        java.lang.String str72 = type70.getDescriptor();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)LC;: expected boolean, but found I");
        java.lang.Throwable[] throwableArray75 = analyzerException74.getSuppressed();
        boolean boolean76 = type70.equals((java.lang.Object) analyzerException74);
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier68.newValue(type70);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode78 = null;
        java.util.List list79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value80 = simpleVerifier68.naryOperation(abstractInsnNode78, list79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str15, "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str19, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(S)C" + "'", str56, "(S)C");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "C" + "'", str57, "C");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "C" + "'", str61, "C");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "C" + "'", str64, "C");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "char" + "'", str65, "char");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str71, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "LLorg/mockito/asm/tree/analysis/BasicValue;;" + "'", str72, "LLorg/mockito/asm/tree/analysis/BasicValue;;");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(value77);
    }

    @Test
    public void test06086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06086");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type8 = type7.getElementType();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType("C");
        int int12 = type10.getOpcode(160);
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type10, list13, false);
        int int16 = type7.getSort();
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list17, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int24 = type23.getSort();
        java.lang.String str25 = type23.toString();
        org.mockito.asm.Type type26 = type23.getElementType();
        int int27 = type26.getSort();
        int int29 = type26.getOpcode(184);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str31 = type30.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type44, true);
        boolean boolean47 = type30.equals((java.lang.Object) simpleVerifier46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier46.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I: expected null, but found I", (java.lang.Object) type26, value50);
        int int52 = value50.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value53 = simpleVerifier19.copyOperation(abstractInsnNode20, value50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 160 + "'", int12 == 160);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str25, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 188 + "'", int29 == 188);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "boolean" + "'", str31, "boolean");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)Z" + "'", str42, "(C)Z");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test06087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06087");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        int int8 = type2.getSort();
        java.lang.String str9 = type2.getClassName();
        java.lang.String str10 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        boolean boolean29 = type19.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type19, true);
        boolean boolean33 = type19.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        boolean boolean52 = type42.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type42, true);
        org.mockito.asm.Type type55 = null;
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier54.newValue(type57);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type57, true);
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type57, list61, false);
        int int64 = type2.getSize();
        int int65 = type2.getSize();
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list66, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode69 = null;
        org.mockito.asm.Type type70 = null;
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type72, true);
        int int75 = type71.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type71, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        int int81 = type79.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list86 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type83, type85, list86, true);
        int int89 = type83.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier91 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type83, false);
        org.mockito.asm.tree.analysis.Value value92 = simpleVerifier77.newValue(type79);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value93 = simpleVerifier68.copyOperation(abstractInsnNode69, value92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "short" + "'", str9, "short");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "S" + "'", str10, "S");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(C)S" + "'", str27, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)S" + "'", str50, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNull(value58);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 4 + "'", int89 == 4);
        org.junit.Assert.assertNotNull(value92);
    }

    @Test
    public void test06088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06088");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        int int21 = type3.getSort();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type23, true);
        int int26 = type22.getSize();
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, list27, true);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type30 = type22.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test06089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06089");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("LLS;;", (java.lang.Throwable) analyzerException2);
        java.lang.Throwable[] throwableArray4 = analyzerException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test06090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06090");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (S)LS;: expected null, but found L(C)LC;;");
        java.lang.String str2 = type1.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)LS;: expected null, but found L(C)LC;;;" + "'", str2, "Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)LS;: expected null, but found L(C)LC;;;");
    }

    @Test
    public void test06091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06091");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray11);
        java.lang.Throwable throwable16 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        int int52 = value51.getSize();
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier45.merge(value48, value51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        int int67 = value66.getSize();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier60.merge(value63, value66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type72, list73, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier79.newValue(type80);
        int int82 = value81.getSize();
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier75.merge(value78, value81);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier45.merge(value66, value83);
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier18.merge(value37, value84);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException17, value85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S", (java.lang.Object) typeArray11, value85);
        java.lang.Class<?> wildcardClass88 = value85.getClass();
        java.lang.String str89 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass88);
        java.lang.String str90 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass88);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        java.lang.String str92 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass88);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "boolean" + "'", str2, "boolean");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)Z" + "'", str13, "(C)Z");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str89, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str90, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str92, "Lorg/mockito/asm/tree/analysis/BasicValue;");
    }

    @Test
    public void test06092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06092");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode8 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        int int22 = value21.getSize();
        org.mockito.asm.tree.analysis.Value value23 = simpleVerifier15.merge(value18, value21);
        org.mockito.asm.tree.analysis.Value value24 = basicInterpreter7.copyOperation(abstractInsnNode8, value21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        int int38 = value37.getSize();
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier31.merge(value34, value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        boolean boolean58 = type48.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type48, true);
        org.mockito.asm.Type type61 = null;
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type69, list70, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        int int79 = value78.getSize();
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier72.merge(value75, value78);
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier60.merge(value65, value80);
        org.mockito.asm.tree.analysis.Value value82 = basicInterpreter7.merge(value34, value65);
        boolean boolean83 = type5.equals((java.lang.Object) value65);
        int int85 = type5.getOpcode(92);
        java.lang.String str86 = type5.getClassName();
        java.lang.String str87 = type5.getInternalName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 96 + "'", int85 == 96);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.mockito.asm.Type" + "'", str86, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org/mockito/asm/Type" + "'", str87, "org/mockito/asm/Type");
    }

    @Test
    public void test06093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06093");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06094");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier19.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        int int25 = type23.getOpcode(84);
        int int26 = type23.getSize();
        org.mockito.asm.tree.analysis.Value value27 = simpleVerifier19.newValue(type23);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value29 = simpleVerifier19.newOperation(abstractInsnNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 84 + "'", int25 == 84);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(value27);
    }

    @Test
    public void test06095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06095");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        java.lang.String str29 = type22.toString();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type30, list31, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        int int41 = type35.getSort();
        java.lang.String str42 = type35.getClassName();
        org.mockito.asm.tree.analysis.Value value43 = simpleVerifier33.newValue(type35);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str49 = type48.getDescriptor();
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.Value value51 = simpleVerifier20.merge(value43, value50);
        java.lang.Class<?> wildcardClass52 = value51.getClass();
        java.lang.String str53 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass52);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "S" + "'", str29, "S");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "short" + "'", str42, "short");
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "I" + "'", str49, "I");
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str53, "Lorg/mockito/asm/tree/analysis/BasicValue;");
    }

    @Test
    public void test06096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06096");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type type15 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type15, list16, false);
        java.lang.String str19 = type15.getClassName();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type21, false);
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type21, list24, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        int int47 = value46.getSize();
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier40.merge(value43, value46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value48);
        boolean boolean50 = type31.equals((java.lang.Object) analyzerException49);
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier28.newValue(type31);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type53, true);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str57 = type56.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray66);
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type56, list69, false);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier71.newValue(type73);
        java.lang.String str75 = type73.toString();
        java.lang.String str76 = type73.toString();
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier28.newValue(type73);
        int int78 = value77.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value79 = simpleVerifier26.copyOperation(abstractInsnNode27, value77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "int" + "'", str19, "int");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "boolean" + "'", str57, "boolean");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)S" + "'", str67, "(C)S");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(C)Z" + "'", str68, "(C)Z");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "C" + "'", str75, "C");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "C" + "'", str76, "C");
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test06097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06097");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        java.lang.String str23 = type19.getDescriptor();
        int int25 = type19.getOpcode((int) (short) 0);
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list26, true);
        int int29 = type0.getSort();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, false);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        int int41 = type39.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, false);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        boolean boolean56 = type46.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray57);
        java.lang.String str59 = type44.getDescriptor();
        int int60 = type44.getSort();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        boolean boolean73 = type63.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type63 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray74);
        int int76 = type61.getSize();
        boolean boolean78 = type61.equals((java.lang.Object) 181);
        int int79 = type61.getSize();
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray80);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray80);
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray80);
        int int85 = type32.getOpcode(32);
        java.util.List list86 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type32, list86, false);
        java.lang.String str89 = type32.toString();
        java.lang.String str90 = type32.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            int int91 = type32.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(S)C" + "'", str58, "(S)C");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "C" + "'", str59, "C");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)S" + "'", str71, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(S)C" + "'", str75, "(S)C");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)C" + "'", str81, "(C)C");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(C)LC;" + "'", str82, "(C)LC;");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(C)C" + "'", str83, "(C)C");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 32 + "'", int85 == 32);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "C" + "'", str89, "C");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "char" + "'", str90, "char");
    }

    @Test
    public void test06098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06098");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        int int12 = type11.getDimensions();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str14 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        boolean boolean18 = type13.equals((java.lang.Object) basicVerifier15);
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list19, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode22 = null;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = type26.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, false);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        int int42 = type36.getSort();
        int int43 = type36.getSize();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int46 = type45.getSort();
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type45, list47, true);
        int int50 = type45.getDimensions();
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type45, list51, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        boolean boolean65 = type55.equals((java.lang.Object) '4');
        org.mockito.asm.Type type66 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type66, list67, false);
        java.lang.String str70 = type66.getClassName();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type72, false);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier53.newValue(type66);
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter76 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode77 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list82 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type81, list82, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier85 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier85.newValue(type86);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier88 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value90 = basicVerifier88.newValue(type89);
        int int91 = value90.getSize();
        org.mockito.asm.tree.analysis.Value value92 = simpleVerifier84.merge(value87, value90);
        org.mockito.asm.tree.analysis.Value value93 = basicInterpreter76.copyOperation(abstractInsnNode77, value90);
        int int94 = value90.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier95 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type96 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value97 = basicVerifier95.newValue(type96);
        org.mockito.asm.tree.analysis.Value value98 = simpleVerifier53.merge(value90, value97);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier21.copyOperation(abstractInsnNode22, value97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/Type" + "'", str9, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "S" + "'", str14, "S");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 4 + "'", int42 == 4);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(C)S" + "'", str63, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "int" + "'", str70, "int");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNotNull(type96);
        org.junit.Assert.assertNotNull(value97);
        org.junit.Assert.assertNotNull(value98);
    }

    @Test
    public void test06099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06099");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        java.lang.Class<?> wildcardClass3 = type1.getClass();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(type4);
    }

    @Test
    public void test06100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06100");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        int int3 = type1.getOpcode(49);
        java.lang.Class<?> wildcardClass4 = type1.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 53 + "'", int3 == 53);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test06101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06101");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I");
        int int2 = type1.getDimensions();
        int int3 = type1.getDimensions();
        java.lang.String str4 = type1.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I;" + "'", str4, "Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I;");
    }

    @Test
    public void test06102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06102");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str8 = type7.getDescriptor();
        int int9 = type7.getSize();
        java.lang.Class<?> wildcardClass10 = type7.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test06103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06103");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, false);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str14 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.Value value15 = simpleVerifier12.newValue(type13);
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type13, list16, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type22, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        java.util.List list29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value30 = simpleVerifier27.naryOperation(abstractInsnNode28, list29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "S" + "'", str14, "S");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
    }

    @Test
    public void test06104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06104");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z");
        java.lang.String str2 = type1.getInternalName();
        java.lang.Class<?> wildcardClass3 = type1.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (C)Z" + "'", str2, "org.mockito.asm.tree.analysis.AnalyzerException: (C)Z");
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test06105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06105");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass1);
        int int3 = type2.getSize();
        java.lang.String str4 = type2.getClassName();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "java.lang.Object" + "'", str4, "java.lang.Object");
    }

    @Test
    public void test06106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06106");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        java.lang.String str20 = type0.getClassName();
        int int21 = type0.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "char" + "'", str20, "char");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
    }

    @Test
    public void test06107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06107");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int6 = type5.getDimensions();
        org.mockito.asm.Type type7 = type5.getElementType();
        int int8 = type7.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str17 = type16.getDescriptor();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        boolean boolean30 = type20.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray31);
        java.lang.String str33 = type18.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        java.lang.String str41 = type37.getDescriptor();
        int int43 = type37.getOpcode((int) (short) 0);
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type37, list44, true);
        int int47 = type37.getSort();
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type37, list48, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str56 = type55.getDescriptor();
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier50.newValue(type55);
        int int59 = type55.getSort();
        java.lang.String str60 = type55.getDescriptor();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier15.newValue(type55);
        boolean boolean62 = type7.equals((java.lang.Object) type55);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getReturnType("(C)Z");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type64, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        java.lang.String str74 = type70.getDescriptor();
        java.lang.Class<?> wildcardClass75 = type70.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass75);
        org.mockito.asm.Type type78 = type77.getElementType();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier66.newValue(type78);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type81 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type80, type81, true);
        java.lang.Class<?> wildcardClass84 = type80.getClass();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass84);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass84);
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier66.newValue(type86);
        int int88 = value87.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "I" + "'", str17, "I");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)S" + "'", str28, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "I" + "'", str56, "I");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "I" + "'", str60, "I");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "C" + "'", str74, "C");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org/mockito/asm/Type" + "'", str76, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
    }

    @Test
    public void test06108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06108");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list37, false);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        boolean boolean52 = type42.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray53);
        java.lang.String str55 = type40.getDescriptor();
        int int56 = type40.getSort();
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type40, list57, true);
        boolean boolean60 = type17.equals((java.lang.Object) type21);
        int int61 = type17.getSize();
        java.lang.String str62 = type17.getClassName();
        boolean boolean64 = type17.equals((java.lang.Object) 196653);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        int int72 = type66.getSort();
        int int73 = type66.getSize();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int76 = type75.getSort();
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type75, list77, true);
        int int80 = type75.getDimensions();
        int int82 = type75.getOpcode(79);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type75, false);
        org.mockito.asm.Type type85 = null;
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getType("(C)Lmockito/asm/Type;");
        java.util.List list88 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type85, type87, list88, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier92 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type87, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value94 = simpleVerifier92.newOperation(abstractInsnNode93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)S" + "'", str50, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(S)C" + "'", str54, "(S)C");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "char" + "'", str62, "char");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 4 + "'", int72 == 4);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 83 + "'", int82 == 83);
        org.junit.Assert.assertNotNull(type87);
    }

    @Test
    public void test06109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06109");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException5);
        java.lang.Throwable[] throwableArray7 = analyzerException5.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("Lg/mockito/asm/Type;", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException13);
        analyzerException5.addSuppressed((java.lang.Throwable) analyzerException13);
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException5);
        java.lang.Throwable[] throwableArray17 = analyzerException1.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray22 = analyzerException21.getSuppressed();
        java.lang.Throwable[] throwableArray23 = analyzerException21.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value44);
        analyzerException27.addSuppressed((java.lang.Throwable) analyzerException45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException27);
        java.lang.Throwable[] throwableArray48 = analyzerException27.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)V", (java.lang.Throwable) analyzerException27);
        analyzerException21.addSuppressed((java.lang.Throwable) analyzerException27);
        analyzerException19.addSuppressed((java.lang.Throwable) analyzerException21);
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException19);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test06110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06110");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        int int6 = type4.getSort();
        java.lang.Object obj7 = null;
        boolean boolean8 = type4.equals(obj7);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        boolean boolean27 = type17.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type17, true);
        org.mockito.asm.Type type30 = null;
        org.mockito.asm.tree.analysis.Value value31 = simpleVerifier29.newValue(type30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = value47.getSize();
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier41.merge(value44, value47);
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier29.merge(value34, value49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Z", (java.lang.Object) type4, value50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: C", (java.lang.Object) 72, value50);
        java.lang.Throwable[] throwableArray53 = analyzerException52.getSuppressed();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(C)S" + "'", str25, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(throwableArray53);
    }

    @Test
    public void test06111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06111");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray18);
        boolean boolean21 = type11.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray22);
        java.lang.String str24 = type9.getDescriptor();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int28 = type26.getOpcode(86);
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type26, list29, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type9, false);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean37 = type35.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int40 = type39.getSort();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type39, list41, false);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass46 = type45.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type50, list51, true);
        int int54 = type50.getSize();
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier33.newValue(type50);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode56 = null;
        java.util.List list57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value58 = simpleVerifier33.naryOperation(abstractInsnNode56, list57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(C)S" + "'", str19, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(S)C" + "'", str23, "(S)C");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "C" + "'", str24, "C");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 86 + "'", int28 == 86);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str47, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(value55);
    }

    @Test
    public void test06112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06112");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Z", (java.lang.Throwable) analyzerException2);
        java.lang.Class<?> wildcardClass4 = analyzerException3.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType("(SC)L(C)LC;;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        java.util.List list11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value12 = simpleVerifier9.naryOperation(abstractInsnNode10, list11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
    }

    @Test
    public void test06113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06113");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)J");
        java.lang.Throwable[] throwableArray2 = analyzerException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test06114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06114");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        java.lang.String str15 = type11.getDescriptor();
        int int17 = type11.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        int int32 = type26.getSort();
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray33);
        java.lang.String str35 = type21.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type21, false);
        org.mockito.asm.Type type38 = null;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type38, list39, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type58 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray59);
        boolean boolean62 = type52.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type52, true);
        boolean boolean66 = type52.equals((java.lang.Object) 158);
        int int68 = type52.getOpcode(159);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type70, list71, false);
        org.mockito.asm.Type type74 = type70.getElementType();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier43.newValue(type70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list80 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type79, list80, true);
        java.lang.String str83 = type79.getDescriptor();
        int int85 = type79.getOpcode((int) (short) 0);
        java.lang.String str86 = type79.getClassName();
        org.mockito.asm.Type type87 = null;
        java.util.List list88 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type87, list88, true);
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier43.newValue(type79);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(C)S" + "'", str60, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 159 + "'", int68 == 159);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "C" + "'", str83, "C");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "char" + "'", str86, "char");
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test06115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06115");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("Lorg.mockito.asm.Type;");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 22");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06116");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str2 = type1.toString();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str10 = type9.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray19);
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type9, list22, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        boolean boolean43 = type33.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type33, true);
        int int46 = type28.getSort();
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type28, list47, true);
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list50, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, true);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        int int71 = type65.getSort();
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray72);
        int int74 = type60.getSize();
        java.lang.String str75 = type60.toString();
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type60, list76, false);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier54.newValue(type56);
        java.lang.String str80 = type56.toString();
        java.lang.Class<?> wildcardClass81 = type56.getClass();
        java.lang.String str82 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass81);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass81);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass81);
        java.lang.String str85 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass81);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L(C)Z;" + "'", str2, "L(C)Z;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "boolean" + "'", str10, "boolean");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)Z" + "'", str21, "(C)Z");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 4 + "'", int71 == 4);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(S)C" + "'", str73, "(S)C");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "C" + "'", str75, "C");
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;" + "'", str80, "Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;");
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org/mockito/asm/Type" + "'", str82, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str85, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06117");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: D");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;: expected (C)S, but found null", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray23);
        boolean boolean26 = type16.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type16, true);
        boolean boolean30 = type16.equals((java.lang.Object) 158);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType("S");
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type32, list33, false);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, false);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str43 = type42.getDescriptor();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) simpleVerifier35, value44);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException45);
        analyzerException5.addSuppressed((java.lang.Throwable) analyzerException45);
        java.lang.Throwable[] throwableArray48 = analyzerException45.getSuppressed();
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(C)S" + "'", str24, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "S" + "'", str43, "S");
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test06118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06118");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.SimpleVerifier");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06119");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I", (java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("B", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.SimpleVerifier;", (java.lang.Throwable) analyzerException6);
    }

    @Test
    public void test06120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06120");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)L(C)Z;");
        java.lang.String str2 = type1.toString();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type4 = type1.getElementType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L(S)L(C)Z;;" + "'", str2, "L(S)L(C)Z;;");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L(S)L(C)Z;;" + "'", str3, "L(S)L(C)Z;;");
        org.junit.Assert.assertNotNull(type4);
    }

    @Test
    public void test06121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06121");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)C");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type4 = type1.getElementType();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type7 = type6.getElementType();
        boolean boolean8 = type1.equals((java.lang.Object) type7);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type10, list11, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode14 = null;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getReturnType("LC;");
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        boolean boolean29 = type19.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray30);
        int int32 = type17.getSize();
        java.lang.String str33 = type17.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type17, false);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getReturnType("(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier35.newValue(type37);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value39 = simpleVerifier13.copyOperation(abstractInsnNode14, value38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(S)C" + "'", str3, "(S)C");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(C)S" + "'", str27, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
    }

    @Test
    public void test06122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06122");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        int int2 = type1.getSize();
        java.lang.String str3 = type1.getClassName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass6 = type5.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type10 = type9.getElementType();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter11 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode12 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = value25.getSize();
        org.mockito.asm.tree.analysis.Value value27 = simpleVerifier19.merge(value22, value25);
        org.mockito.asm.tree.analysis.Value value28 = basicInterpreter11.copyOperation(abstractInsnNode12, value25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        int int42 = value41.getSize();
        org.mockito.asm.tree.analysis.Value value43 = simpleVerifier35.merge(value38, value41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type58 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray59);
        boolean boolean62 = type52.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type52, true);
        org.mockito.asm.Type type65 = null;
        org.mockito.asm.tree.analysis.Value value66 = simpleVerifier64.newValue(type65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type73, list74, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        int int83 = value82.getSize();
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier76.merge(value79, value82);
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier64.merge(value69, value84);
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter11.merge(value38, value69);
        boolean boolean87 = type9.equals((java.lang.Object) value69);
        int int89 = type9.getOpcode(92);
        java.util.List list90 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier92 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list90, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode93 = null;
        java.util.List list94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value95 = simpleVerifier92.naryOperation(abstractInsnNode93, list94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I" + "'", str3, "org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(C)S" + "'", str60, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 96 + "'", int89 == 96);
    }

    @Test
    public void test06123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06123");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("L(C)Z;");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        int int17 = type2.getSize();
        boolean boolean19 = type2.equals((java.lang.Object) 181);
        int int20 = type2.getSize();
        java.lang.String str21 = type2.toString();
        int int22 = type2.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        int int30 = type24.getSort();
        java.lang.String str31 = type24.toString();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type32, list33, false);
        boolean boolean37 = type32.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        boolean boolean51 = type41.equals((java.lang.Object) '4');
        org.mockito.asm.Type type52 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type52, list53, false);
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type52, list56, false);
        int int59 = type52.getSort();
        int int60 = type52.getSize();
        java.lang.String str61 = type52.toString();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getReturnType("(S)V");
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type63, list64, false);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getType("(S)Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        int int69 = type68.getDimensions();
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type68, list70, false);
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type68, list73, false);
        int int76 = type1.getDimensions();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)B");
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getObjectType("(SC)L(C)LC;;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type78, type80, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type78, true);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "C" + "'", str21, "C");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "S" + "'", str31, "S");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(C)S" + "'", str49, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "I" + "'", str61, "I");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type80);
    }

    @Test
    public void test06124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06124");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("LLorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: D;;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06125");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("()S");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06126");
        java.lang.Object obj3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;", obj3, value13);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)V", (java.lang.Throwable) analyzerException19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        int int38 = value37.getSize();
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier31.merge(value34, value37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value39);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        int int57 = value56.getSize();
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier50.merge(value53, value56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) 0, value56);
        analyzerException40.addSuppressed((java.lang.Throwable) analyzerException59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException40);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException65 = new org.mockito.asm.tree.analysis.AnalyzerException("S");
        boolean boolean66 = type63.equals((java.lang.Object) analyzerException65);
        analyzerException40.addSuppressed((java.lang.Throwable) analyzerException65);
        analyzerException19.addSuppressed((java.lang.Throwable) analyzerException65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("short", (java.lang.Throwable) analyzerException19);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test06127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06127");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str6 = type5.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray15);
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type5, list18, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        boolean boolean33 = type23.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray34);
        java.lang.String str36 = type21.getDescriptor();
        int int37 = type21.getSort();
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type21, list38, true);
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter0.newValue(type21);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type43, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type43, false);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        boolean boolean60 = type50.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray61);
        int int63 = type48.getSize();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type65, false);
        boolean boolean69 = type65.equals((java.lang.Object) 23);
        java.lang.String str70 = type65.getClassName();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass74 = type73.getClass();
        java.lang.String str75 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass74);
        java.lang.String str76 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass74);
        org.mockito.asm.tree.analysis.Value value78 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type77, value78);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type77, false);
        int int82 = type65.getSort();
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type65, list83, true);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass88 = type87.getClass();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        java.lang.String str90 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass88);
        java.lang.String str91 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass88);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type92, true);
        java.lang.String str95 = type43.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "boolean" + "'", str6, "boolean");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)Z" + "'", str17, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)C" + "'", str35, "(S)C");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "C" + "'", str36, "C");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(C)S" + "'", str58, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(S)C" + "'", str62, "(S)C");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "char" + "'", str70, "char");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str75, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str76, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str90, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org/mockito/asm/Type" + "'", str91, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "C" + "'", str95, "C");
    }

    @Test
    public void test06128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06128");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str11 = type10.getDescriptor();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type10, list12, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode15 = null;
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getObjectType("double");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        int int32 = type26.getSort();
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray33);
        int int35 = type21.getSize();
        java.lang.String str36 = type21.toString();
        boolean boolean38 = type21.equals((java.lang.Object) 3);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        int int44 = type42.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, false);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray56);
        boolean boolean59 = type49.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray60);
        java.lang.String str62 = type47.getDescriptor();
        int int63 = type47.getSort();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type72 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray73);
        boolean boolean76 = type66.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type66 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray77);
        int int79 = type64.getSize();
        boolean boolean81 = type64.equals((java.lang.Object) 181);
        int int82 = type64.getSize();
        org.mockito.asm.Type[] typeArray83 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray83);
        java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray83);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type40, false);
        boolean boolean88 = type17.equals((java.lang.Object) simpleVerifier87);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier89 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type90 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value91 = basicVerifier89.newValue(type90);
        int int92 = type90.getSort();
        org.mockito.asm.Type type94 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier96 = new org.mockito.asm.tree.analysis.SimpleVerifier(type90, type94, true);
        org.mockito.asm.tree.analysis.Value value97 = simpleVerifier87.newValue(type90);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value98 = simpleVerifier14.unaryOperation(abstractInsnNode15, value97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "B" + "'", str11, "B");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "C" + "'", str36, "C");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)S" + "'", str57, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(S)C" + "'", str61, "(S)C");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "C" + "'", str62, "C");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(C)S" + "'", str74, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(S)C" + "'", str78, "(S)C");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(C)C" + "'", str84, "(C)C");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(C)LC;" + "'", str85, "(C)LC;");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 4 + "'", int92 == 4);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertNotNull(value97);
    }

    @Test
    public void test06129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06129");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str21 = type20.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray30);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type34, true);
        boolean boolean37 = type20.equals((java.lang.Object) simpleVerifier36);
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type20, list38, false);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type42, list43, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str51 = type50.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray60);
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type50, list63, false);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier65.newValue(type67);
        java.lang.String str69 = type67.toString();
        org.mockito.asm.tree.analysis.Value value70 = simpleVerifier45.newValue(type67);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value72 = simpleVerifier45.newOperation(abstractInsnNode71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "boolean" + "'", str21, "boolean");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)Z" + "'", str32, "(C)Z");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "boolean" + "'", str51, "boolean");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)S" + "'", str61, "(C)S");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(C)Z" + "'", str62, "(C)Z");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertNotNull(value70);
    }

    @Test
    public void test06130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06130");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type3, true);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str7 = type6.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray16);
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type6, list19, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type30, true);
        int int43 = type25.getSort();
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type25, list44, true);
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list47, false);
        java.lang.String str50 = type1.getDescriptor();
        int int52 = type1.getOpcode(168);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean" + "'", str7, "boolean");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)Z" + "'", str18, "(C)Z");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str50, "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 172 + "'", int52 == 172);
    }

    @Test
    public void test06131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06131");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.tree.analysis.Value value8 = simpleVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        boolean boolean27 = type17.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type17, true);
        boolean boolean31 = type17.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.Value value32 = simpleVerifier5.newValue(type17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        boolean boolean44 = type34.equals((java.lang.Object) '4');
        org.mockito.asm.Type type45 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type45, list46, false);
        java.lang.String str49 = type45.getClassName();
        int int50 = type45.getSort();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        boolean boolean63 = type53.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray64);
        int int66 = type51.getSize();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type68, false);
        boolean boolean72 = type68.equals((java.lang.Object) 23);
        java.lang.String str73 = type68.getClassName();
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type68, list74, true);
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier5.newValue(type45);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list82 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type81, list82, true);
        java.lang.String str85 = type81.getDescriptor();
        java.lang.Class<?> wildcardClass86 = type81.getClass();
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass86);
        org.mockito.asm.Type type88 = type87.getElementType();
        java.lang.String str89 = type87.getDescriptor();
        org.mockito.asm.tree.analysis.Value value90 = simpleVerifier5.newValue(type87);
        java.lang.String str91 = type87.getDescriptor();
        org.mockito.asm.Type type92 = type87.getElementType();
        int int93 = type92.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "S" + "'", str7, "S");
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(C)S" + "'", str25, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "int" + "'", str49, "int");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)S" + "'", str61, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(S)C" + "'", str65, "(S)C");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "char" + "'", str73, "char");
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "C" + "'", str85, "C");
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str89, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str91, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test06132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06132");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 148");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06133");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        int int18 = type0.getSize();
        java.lang.String str19 = type0.toString();
        int int20 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        java.lang.String str29 = type22.toString();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type30, list31, false);
        boolean boolean35 = type30.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type30, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        boolean boolean49 = type39.equals((java.lang.Object) '4');
        org.mockito.asm.Type type50 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type50, list51, false);
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type50, list54, false);
        int int57 = type50.getSort();
        int int58 = type50.getSize();
        java.lang.String str59 = type50.toString();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getReturnType("(S)V");
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type61, list62, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value66 = simpleVerifier64.newOperation(abstractInsnNode65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "S" + "'", str29, "S");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)S" + "'", str47, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 5 + "'", int57 == 5);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "I" + "'", str59, "I");
        org.junit.Assert.assertNotNull(type61);
    }

    @Test
    public void test06134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06134");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        int int5 = type1.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, false);
        java.lang.String str8 = type1.getDescriptor();
        int int10 = type1.getOpcode(8);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8 + "'", int10 == 8);
    }

    @Test
    public void test06135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06135");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("()S");
        java.lang.String str2 = type1.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
    }

    @Test
    public void test06136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06136");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier9.merge(value12, value15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException18);
        java.lang.Throwable[] throwableArray20 = analyzerException19.getSuppressed();
        java.lang.Throwable[] throwableArray21 = analyzerException19.getSuppressed();
        java.lang.Class<?> wildcardClass22 = analyzerException19.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass22);
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass22);
        java.lang.String str26 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass22);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass22);
        java.lang.String str28 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass22);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str23, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str25, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str26, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str28, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test06137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06137");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int3 = type1.getOpcode((int) (byte) 10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        int int12 = type5.getSize();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int15 = type14.getSort();
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type14, list16, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type14, true);
        int int21 = type1.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type30, true);
        boolean boolean44 = type30.equals((java.lang.Object) 158);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str46 = type45.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray55);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray55);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray55);
        org.mockito.asm.Type type60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type60, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode63 = null;
        org.mockito.asm.Type type65 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str66 = type65.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        int int80 = value79.getSize();
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier73.merge(value76, value79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: hi!", (java.lang.Object) str66, value76);
        int int83 = value76.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value84 = simpleVerifier62.unaryOperation(abstractInsnNode63, value76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 14 + "'", int3 == 14);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "boolean" + "'", str46, "boolean");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)Z" + "'", str57, "(C)Z");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(C)S" + "'", str58, "(C)S");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str59, "(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "I" + "'", str66, "I");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
    }

    @Test
    public void test06138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06138");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        int int15 = type9.getSort();
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray16);
        java.lang.String str18 = type4.getDescriptor();
        java.lang.String str19 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.Value value20 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)C", (java.lang.Object) type4, value20);
        java.lang.Class<?> wildcardClass22 = type4.getClass();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass22);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(S)C" + "'", str17, "(S)C");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(type23);
    }

    @Test
    public void test06139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06139");
        java.lang.Object obj1 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        int int36 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter2.copyOperation(abstractInsnNode20, value33);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str40 = type39.getDescriptor();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str42 = type41.getClassName();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = value58.getSize();
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier52.merge(value55, value58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value60);
        boolean boolean62 = type43.equals((java.lang.Object) analyzerException61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        boolean boolean75 = type65.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray76);
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray76);
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray76);
        java.util.List list80 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list80, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier83 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier83.newValue(type84);
        int int86 = type84.getSort();
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier82.newValue(type84);
        org.mockito.asm.tree.analysis.Value value88 = basicInterpreter2.newValue(type84);
        int int89 = value88.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException90 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Z", obj1, value88);
        java.lang.String str91 = analyzerException90.toString();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "S" + "'", str40, "S");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "double" + "'", str42, "double");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(C)S" + "'", str73, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(S)C" + "'", str77, "(S)C");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(S)V" + "'", str78, "(S)V");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(S)D" + "'", str79, "(S)D");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 4 + "'", int86 == 4);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Z: expected null, but found I" + "'", str91, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Z: expected null, but found I");
    }

    @Test
    public void test06140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06140");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type type15 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type15, list16, false);
        java.lang.String str19 = type15.getClassName();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type21, false);
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type21, list24, true);
        java.lang.String str27 = type21.getInternalName();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str30 = type29.getClassName();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getObjectType("boolean");
        int int34 = type32.getOpcode(82);
        java.lang.String str35 = type32.getClassName();
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type32, list36, true);
        java.lang.String str39 = type29.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        int int54 = type48.getSort();
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray55);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray55);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray55);
        java.lang.String str59 = type21.getClassName();
        java.lang.String str60 = type21.getInternalName();
        java.lang.Class<?> wildcardClass61 = type21.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "int" + "'", str19, "int");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/Type" + "'", str27, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "S" + "'", str30, "S");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 86 + "'", int34 == 86);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "boolean" + "'", str35, "boolean");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "S" + "'", str39, "S");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(S)C" + "'", str56, "(S)C");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(S)LS;" + "'", str57, "(S)LS;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(S)Lorg/mockito/asm/Type;" + "'", str58, "(S)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.mockito.asm.Type" + "'", str59, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org/mockito/asm/Type" + "'", str60, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test06141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06141");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)F");
        java.lang.String str2 = analyzerException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (S)F" + "'", str2, "org.mockito.asm.tree.analysis.AnalyzerException: (S)F");
    }

    @Test
    public void test06142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06142");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: short");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str4 = type3.getDescriptor();
        java.lang.String str5 = type3.toString();
        int int6 = type3.getSort();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list7, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        int int23 = value22.getSize();
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier16.merge(value19, value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        int int38 = value37.getSize();
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier31.merge(value34, value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        int int53 = value52.getSize();
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier46.merge(value49, value52);
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier16.merge(value37, value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        java.lang.String str63 = type59.getDescriptor();
        java.lang.Class<?> wildcardClass64 = type59.getClass();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type66 = type65.getElementType();
        boolean boolean68 = type66.equals((java.lang.Object) 197);
        org.mockito.asm.tree.analysis.Value value69 = simpleVerifier16.newValue(type66);
        org.mockito.asm.tree.analysis.Value value70 = simpleVerifier9.newValue(type66);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value72 = simpleVerifier9.newOperation(abstractInsnNode71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "S" + "'", str4, "S");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "S" + "'", str5, "S");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "C" + "'", str63, "C");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(value70);
    }

    @Test
    public void test06143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06143");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, false);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str14 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.Value value15 = simpleVerifier12.newValue(type13);
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type13, list16, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type22, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        boolean boolean46 = type36.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type36, true);
        boolean boolean50 = type36.equals((java.lang.Object) 158);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType("S");
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type52, list53, false);
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier27.newValue(type36);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getObjectType("J");
        java.lang.String str60 = type59.toString();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("double", (java.lang.Object) 7, value65);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("L(S)C;", (java.lang.Object) type59, value65);
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier27.newValue(type59);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode69 = null;
        org.mockito.asm.tree.analysis.Value value70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value71 = simpleVerifier27.unaryOperation(abstractInsnNode69, value70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "S" + "'", str14, "S");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "LJ;" + "'", str60, "LJ;");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(value68);
    }

    @Test
    public void test06144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06144");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        boolean boolean32 = type22.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray33);
        java.lang.String str35 = type20.getDescriptor();
        int int36 = type20.getSort();
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type20, list37, true);
        int int40 = type1.getSort();
        java.lang.String str41 = type1.getDescriptor();
        int int43 = type1.getOpcode(8200);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)S" + "'", str30, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8200 + "'", int43 == 8200);
    }

    @Test
    public void test06145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06145");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)L(C)Z;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        boolean boolean13 = type3.equals((java.lang.Object) '4');
        boolean boolean15 = type3.equals((java.lang.Object) 193);
        java.lang.String str16 = type3.getDescriptor();
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list17, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str22 = type21.getDescriptor();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str24 = type23.getClassName();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        int int41 = value40.getSize();
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier34.merge(value37, value40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value42);
        boolean boolean44 = type25.equals((java.lang.Object) analyzerException43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        boolean boolean57 = type47.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray58);
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray58);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray58);
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list62, false);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str67 = type66.toString();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier64.newValue(type66);
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type66, list69, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode72 = null;
        java.util.List list73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value74 = simpleVerifier71.naryOperation(abstractInsnNode72, list73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(C)S" + "'", str11, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "S" + "'", str16, "S");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "S" + "'", str22, "S");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "double" + "'", str24, "double");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(S)C" + "'", str59, "(S)C");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)V" + "'", str60, "(S)V");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(S)D" + "'", str61, "(S)D");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "L(C)Z;" + "'", str67, "L(C)Z;");
        org.junit.Assert.assertNotNull(value68);
    }

    @Test
    public void test06146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06146");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        int int24 = type18.getSort();
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray25);
        java.lang.String str27 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type13, false);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray39);
        boolean boolean42 = type32.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray43);
        java.lang.String str45 = type30.getDescriptor();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int49 = type47.getOpcode(86);
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type47, list50, true);
        int int53 = type47.getSort();
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier29.newValue(type47);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode55 = null;
        java.util.List list56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value57 = simpleVerifier29.naryOperation(abstractInsnNode55, list56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(S)C" + "'", str26, "(S)C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(C)S" + "'", str40, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(S)C" + "'", str44, "(S)C");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 86 + "'", int49 == 86);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(value54);
    }

    @Test
    public void test06147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06147");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.Type[] typeArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
    }

    @Test
    public void test06148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06148");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("D");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        int int22 = value21.getSize();
        org.mockito.asm.tree.analysis.Value value23 = simpleVerifier15.merge(value18, value21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value23);
        analyzerException6.addSuppressed((java.lang.Throwable) analyzerException24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Throwable) analyzerException6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Throwable) analyzerException26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected I, but found I", (java.lang.Throwable) analyzerException27);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str32 = type31.getClassName();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        int int49 = value48.getSize();
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier42.merge(value45, value48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value50);
        boolean boolean52 = type33.equals((java.lang.Object) analyzerException51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        boolean boolean65 = type55.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray66);
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray66);
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type73, list74, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        int int83 = value82.getSize();
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier76.merge(value79, value82);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Object) type31, value79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Throwable) analyzerException85);
        java.lang.Throwable[] throwableArray87 = analyzerException86.getSuppressed();
        analyzerException27.addSuppressed((java.lang.Throwable) analyzerException86);
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException27);
        java.lang.String str90 = analyzerException1.toString();
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "double" + "'", str32, "double");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(C)S" + "'", str63, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(S)C" + "'", str67, "(S)C");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(S)V" + "'", str68, "(S)V");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(S)D" + "'", str69, "(S)D");
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: D" + "'", str90, "org.mockito.asm.tree.analysis.AnalyzerException: D");
    }

    @Test
    public void test06149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06149");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06150");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        int int8 = type1.getSize();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list12, true);
        int int15 = type10.getDimensions();
        int int17 = type10.getOpcode(79);
        java.lang.String str18 = type10.getInternalName();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        int int22 = type20.getOpcode(8192);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type20, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getObjectType("(C)Lmockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value27 = simpleVerifier24.newValue(type26);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        java.util.List list29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value30 = simpleVerifier24.naryOperation(abstractInsnNode28, list29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 83 + "'", int17 == 83);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str18, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8196 + "'", int22 == 8196);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
    }

    @Test
    public void test06151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06151");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("C)Lorg.mockito.asm.Type");
    }

    @Test
    public void test06152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06152");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        int int15 = value14.getSize();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier8.merge(value11, value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        int int30 = value29.getSize();
        org.mockito.asm.tree.analysis.Value value31 = simpleVerifier23.merge(value26, value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        int int45 = value44.getSize();
        org.mockito.asm.tree.analysis.Value value46 = simpleVerifier38.merge(value41, value44);
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier8.merge(value29, value46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass50 = type49.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass50);
        java.lang.String str52 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type54 = type53.getElementType();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, false);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str62 = type61.getDescriptor();
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier60.newValue(type61);
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type61, list64, true);
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier8.newValue(type54);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str70 = type69.getClassName();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getObjectType("boolean");
        int int74 = type72.getOpcode(82);
        java.lang.String str75 = type72.getClassName();
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type72, list76, true);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier8.newValue(type69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Z", (java.lang.Object) "(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;", value79);
        int int81 = value79.getSize();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str51, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str52, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "S" + "'", str62, "S");
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "S" + "'", str70, "S");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 86 + "'", int74 == 86);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "boolean" + "'", str75, "boolean");
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
    }

    @Test
    public void test06153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06153");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int2 = type1.getSort();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;: expected null, but found I;");
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        int int12 = type10.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, false);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        boolean boolean27 = type17.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray28);
        java.lang.String str30 = type15.getDescriptor();
        int int31 = type15.getSort();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        boolean boolean44 = type34.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray45);
        int int47 = type32.getSize();
        boolean boolean49 = type32.equals((java.lang.Object) 181);
        int int50 = type32.getSize();
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray51);
        boolean boolean54 = type6.equals((java.lang.Object) type8);
        org.mockito.asm.Type type55 = type6.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        int int63 = type57.getSort();
        java.lang.String str64 = type57.toString();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type65, list66, false);
        boolean boolean70 = type65.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type74, list75, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list82 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type81, list82, true);
        int int85 = type79.getSort();
        org.mockito.asm.Type[] typeArray86 = new org.mockito.asm.Type[] { type79 };
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray86);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray86);
        boolean boolean89 = type6.equals((java.lang.Object) type65);
        java.lang.String str90 = type6.getDescriptor();
        java.util.List list91 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier93 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list91, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier95 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type6, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value97 = simpleVerifier95.newOperation(abstractInsnNode96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(C)S" + "'", str25, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(S)C" + "'", str29, "(S)C");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "C" + "'", str30, "C");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(S)C" + "'", str46, "(S)C");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)C" + "'", str52, "(C)C");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)LC;" + "'", str53, "(C)LC;");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "S" + "'", str64, "S");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 4 + "'", int85 == 4);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(S)C" + "'", str87, "(S)C");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(S)S" + "'", str88, "(S)S");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str90, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06154");
        org.mockito.asm.Type type1 = null;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        int int7 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, false);
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list10, false);
        java.lang.String str13 = type3.getInternalName();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray23);
        boolean boolean26 = type16.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray27);
        java.lang.String str29 = type14.getDescriptor();
        int int30 = type14.getSort();
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type14, list31, true);
        java.lang.Class<?> wildcardClass34 = simpleVerifier33.getClass();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        boolean boolean48 = type38.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray49);
        int int51 = type36.getSize();
        boolean boolean53 = type36.equals((java.lang.Object) 181);
        java.lang.String str54 = type36.getClassName();
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type36, list55, true);
        java.lang.String str58 = type36.getClassName();
        int int59 = type36.getSize();
        int int60 = type36.getSort();
        org.mockito.asm.tree.analysis.Value value61 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException", (java.lang.Object) type36, value61);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = type36.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "C" + "'", str13, "C");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(C)S" + "'", str24, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(S)C" + "'", str28, "(S)C");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(C)S" + "'", str46, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(S)C" + "'", str50, "(S)C");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "char" + "'", str54, "char");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "char" + "'", str58, "char");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
    }

    @Test
    public void test06155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06155");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int8 = type3.getSort();
        java.lang.Class<?> wildcardClass9 = type3.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass9);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/Type" + "'", str10, "org/mockito/asm/Type");
    }

    @Test
    public void test06156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06156");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str6 = type5.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray15);
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type5, list18, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        boolean boolean33 = type23.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray34);
        int int36 = type21.getSize();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type38, false);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str42 = type41.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray51);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type55, true);
        boolean boolean58 = type41.equals((java.lang.Object) simpleVerifier57);
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type41, list59, false);
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier20.newValue(type41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        boolean boolean74 = type64.equals((java.lang.Object) '4');
        java.lang.String str75 = type64.toString();
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type64, list76, true);
        java.lang.String str79 = type41.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type41, false);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException84);
        java.lang.Throwable[] throwableArray86 = analyzerException85.getSuppressed();
        boolean boolean87 = type0.equals((java.lang.Object) throwableArray86);
        java.lang.Class<?> wildcardClass88 = throwableArray86.getClass();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        java.lang.String str90 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass88);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "boolean" + "'", str6, "boolean");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)Z" + "'", str17, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)C" + "'", str35, "(S)C");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "boolean" + "'", str42, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)Z" + "'", str53, "(C)Z");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)S" + "'", str72, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "S" + "'", str75, "S");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "boolean" + "'", str79, "boolean");
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[Ljava/lang/Throwable;" + "'", str90, "[Ljava/lang/Throwable;");
    }

    @Test
    public void test06157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06157");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int19 = type17.getOpcode(86);
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str28 = type27.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray37);
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type27, list40, false);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str44 = type43.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray53);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray53);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray53);
        java.lang.Class<?> wildcardClass58 = type17.getClass();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        java.lang.String str61 = type60.getInternalName();
        org.mockito.asm.Type type62 = type60.getElementType();
        org.mockito.asm.Type type63 = null;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type63, list64, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode67 = null;
        java.util.List list68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value69 = simpleVerifier66.naryOperation(abstractInsnNode67, list68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 86 + "'", int19 == 86);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "boolean" + "'", str28, "boolean");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)Z" + "'", str39, "(C)Z");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "boolean" + "'", str44, "boolean");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)Z" + "'", str55, "(C)Z");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)C" + "'", str56, "(C)C");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)S" + "'", str57, "(C)S");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/Type" + "'", str61, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type62);
    }

    @Test
    public void test06158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06158");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        boolean boolean32 = type22.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray33);
        java.lang.String str35 = type20.getDescriptor();
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type20, list36, false);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str44 = type43.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray53);
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type43, list56, false);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type67 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray68);
        boolean boolean71 = type61.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray72);
        java.lang.String str74 = type59.getDescriptor();
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type59, list75, false);
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type43, list78, true);
        java.lang.String str81 = type20.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = type20.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)S" + "'", str30, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "boolean" + "'", str44, "boolean");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)Z" + "'", str55, "(C)Z");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(C)S" + "'", str69, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(S)C" + "'", str73, "(S)C");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "C" + "'", str74, "C");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "char" + "'", str81, "char");
    }

    @Test
    public void test06159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06159");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("(S)C");
        int int8 = type7.getSort();
        java.lang.String str9 = type7.getClassName();
        org.mockito.asm.Type type10 = type7.getElementType();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass13 = type12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass13);
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type19, true);
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type19, list24, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode27 = null;
        java.util.List list28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value29 = simpleVerifier26.naryOperation(abstractInsnNode27, list28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(S)C" + "'", str9, "(S)C");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str14, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
    }

    @Test
    public void test06160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06160");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, false);
        java.lang.String str14 = type5.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type15 = type5.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "short" + "'", str14, "short");
    }

    @Test
    public void test06161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06161");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        org.mockito.asm.Type type21 = null;
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        boolean boolean56 = type46.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type46, true);
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier58.merge(value63, value78);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier20.merge(value37, value78);
        java.lang.Class<?> wildcardClass81 = simpleVerifier20.getClass();
        java.lang.String str82 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass81);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass81);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str82, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertNotNull(type83);
    }

    @Test
    public void test06162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06162");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        int int29 = value28.getSize();
        org.mockito.asm.tree.analysis.Value value30 = simpleVerifier22.merge(value25, value28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value30);
        boolean boolean32 = type13.equals((java.lang.Object) analyzerException31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type41 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray42);
        boolean boolean45 = type35.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray46);
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray46);
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray46);
        int int50 = type9.getSort();
        java.lang.String str51 = type9.getDescriptor();
        int int52 = type9.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)S" + "'", str43, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(S)C" + "'", str47, "(S)C");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(S)V" + "'", str48, "(S)V");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(S)S" + "'", str49, "(S)S");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 4 + "'", int50 == 4);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "S" + "'", str51, "S");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test06163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06163");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type4, true);
        java.lang.Throwable throwable9 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        int int29 = value28.getSize();
        org.mockito.asm.tree.analysis.Value value30 = simpleVerifier22.merge(value25, value28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException31 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        int int45 = value44.getSize();
        org.mockito.asm.tree.analysis.Value value46 = simpleVerifier38.merge(value41, value44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        int int60 = value59.getSize();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier53.merge(value56, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        int int75 = value74.getSize();
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier68.merge(value71, value74);
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier38.merge(value59, value76);
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier11.merge(value30, value77);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException10, value78);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type81 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type80, type81, true);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str85 = type84.getDescriptor();
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier83.newValue(type84);
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier6.merge(value78, value86);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str89 = type88.getClassName();
        int int91 = type88.getOpcode(0);
        org.mockito.asm.tree.analysis.Value value92 = simpleVerifier6.newValue(type88);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException93 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) analyzerException2, value92);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException95 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: S");
        analyzerException93.addSuppressed((java.lang.Throwable) analyzerException95);
        java.lang.Throwable[] throwableArray97 = analyzerException95.getSuppressed();
        java.lang.String str98 = analyzerException95.toString();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "I" + "'", str85, "I");
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "double" + "'", str89, "double");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 3 + "'", int91 == 3);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertNotNull(throwableArray97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S" + "'", str98, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S");
    }

    @Test
    public void test06164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06164");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type12, list13, false);
        java.lang.String str16 = type12.getClassName();
        int int17 = type12.getSort();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        boolean boolean30 = type20.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray31);
        int int33 = type18.getSize();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type35, false);
        boolean boolean39 = type35.equals((java.lang.Object) 23);
        java.lang.String str40 = type35.getClassName();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type35, list41, true);
        java.lang.String str44 = type12.toString();
        int int45 = type12.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "int" + "'", str16, "int");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)S" + "'", str28, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "char" + "'", str40, "char");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "I" + "'", str44, "I");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 5 + "'", int45 == 5);
    }

    @Test
    public void test06165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06165");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        boolean boolean22 = type8.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type31, true);
        org.mockito.asm.Type type44 = null;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier43.newValue(type46);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type46, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getObjectType("boolean");
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier49.newValue(type51);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass56 = type55.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        java.lang.String str58 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass56);
        org.mockito.asm.tree.analysis.Value value60 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type59, value60);
        org.mockito.asm.Type type62 = type59.getElementType();
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier49.newValue(type62);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode64 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        int int72 = type66.getSort();
        int int73 = type66.getSize();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int76 = type75.getSort();
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type75, list77, true);
        int int80 = type75.getDimensions();
        int int82 = type75.getOpcode(79);
        java.lang.String str83 = type75.getInternalName();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        int int87 = type85.getOpcode(8192);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type75, type85, true);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getObjectType("(C)Lmockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value92 = simpleVerifier89.newValue(type91);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value93 = simpleVerifier49.unaryOperation(abstractInsnNode64, value92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str57, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str58, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 4 + "'", int72 == 4);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 83 + "'", int82 == 83);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str83, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 8196 + "'", int87 == 8196);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(value92);
    }

    @Test
    public void test06166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06166");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: ");
        java.lang.Class<?> wildcardClass2 = analyzerException1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str3, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str5, "org/mockito/asm/tree/analysis/AnalyzerException");
    }

    @Test
    public void test06167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06167");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("LLorg/mockito/asm/tree/analysis/AnalyzerException;;");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, true);
        java.lang.Class<?> wildcardClass6 = type1.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass6);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LLorg.mockito.asm.tree.analysis.AnalyzerException;;" + "'", str2, "LLorg.mockito.asm.tree.analysis.AnalyzerException;;");
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
    }

    @Test
    public void test06168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06168");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        boolean boolean29 = type19.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray30);
        int int32 = type17.getSize();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type34, false);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type38, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str42 = type41.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray51);
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type41, list54, false);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray66);
        boolean boolean69 = type59.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray70);
        java.lang.String str72 = type57.getDescriptor();
        int int73 = type57.getSort();
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type57, list74, true);
        boolean boolean77 = type34.equals((java.lang.Object) type38);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type38, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode80 = null;
        java.lang.Object obj82 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier83 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier83.newValue(type84);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list87 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type84, type86, list87, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier90 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type91 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value92 = basicVerifier90.newValue(type91);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier93 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type94 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value95 = basicVerifier93.newValue(type94);
        int int96 = value95.getSize();
        org.mockito.asm.tree.analysis.Value value97 = simpleVerifier89.merge(value92, value95);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException98 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg.mockito.asm.tree.analysis.SimpleVerifier;", obj82, value92);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier79.unaryOperation(abstractInsnNode80, value92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(C)S" + "'", str27, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "boolean" + "'", str42, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)Z" + "'", str53, "(C)Z");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)S" + "'", str67, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(S)C" + "'", str71, "(S)C");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "C" + "'", str72, "C");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
        org.junit.Assert.assertNotNull(value97);
    }

    @Test
    public void test06169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06169");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        boolean boolean14 = type9.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        int int29 = type23.getSort();
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray30);
        java.lang.String str33 = type9.toString();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType("Ljava/lang/Object;");
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int38 = type37.getSort();
        java.lang.String str39 = type37.toString();
        org.mockito.asm.Type type40 = type37.getElementType();
        int int41 = type40.getSort();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value59);
        boolean boolean61 = type42.equals((java.lang.Object) analyzerException60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        boolean boolean74 = type64.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray75);
        java.lang.String str77 = type62.getDescriptor();
        int int78 = type62.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type62, true);
        java.lang.String str81 = type62.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type62, false);
        java.lang.String str84 = type62.toString();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getObjectType("(C)LC;");
        org.mockito.asm.Type[] typeArray88 = org.mockito.asm.Type.getArgumentTypes("(SC)S");
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type86, typeArray88);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray88);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray88);
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray88);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)S" + "'", str32, "(S)S");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str39, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)S" + "'", str72, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(S)C" + "'", str76, "(S)C");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "C" + "'", str77, "C");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "C" + "'", str81, "C");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "C" + "'", str84, "C");
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(SC)L(C)LC;;" + "'", str89, "(SC)L(C)LC;;");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(SC)C" + "'", str90, "(SC)C");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(SC)Ljava/lang/Object;" + "'", str91, "(SC)Ljava/lang/Object;");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(SC)S" + "'", str92, "(SC)S");
    }

    @Test
    public void test06170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06170");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        java.lang.String str21 = type8.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "S" + "'", str21, "S");
    }

    @Test
    public void test06171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06171");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        org.mockito.asm.Type type21 = null;
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        boolean boolean56 = type46.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type46, true);
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier58.merge(value63, value78);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier20.merge(value37, value78);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type84, list85, true);
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier20.newValue(type82);
        java.lang.Class<?> wildcardClass89 = simpleVerifier20.getClass();
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass89);
        int int92 = type90.getOpcode(0);
        java.lang.String str93 = type90.toString();
        int int95 = type90.getOpcode(132);
        org.mockito.asm.Type type96 = type90.getElementType();
        java.lang.String str97 = type90.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 4 + "'", int92 == 4);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str93, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 136 + "'", int95 == 136);
        org.junit.Assert.assertNotNull(type96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "org.mockito.asm.tree.analysis.SimpleVerifier" + "'", str97, "org.mockito.asm.tree.analysis.SimpleVerifier");
    }

    @Test
    public void test06172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06172");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06173");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier36.merge(value57, value74);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier6.merge(value29, value74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        int int78 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier6.newValue(type77);
        java.lang.Class<?> wildcardClass80 = value79.getClass();
        java.lang.String str81 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass80);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass80);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass80);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 7 + "'", int78 == 7);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str81, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(type83);
    }

    @Test
    public void test06174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06174");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        java.lang.String str23 = type19.getDescriptor();
        int int25 = type19.getOpcode((int) (short) 0);
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list26, true);
        int int29 = type0.getSort();
        java.lang.String str30 = type0.toString();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str32 = type31.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray41);
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray41);
        java.lang.String str45 = type0.getDescriptor();
        int int47 = type0.getOpcode(260);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "C" + "'", str30, "C");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "boolean" + "'", str32, "boolean");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)Z" + "'", str43, "(C)Z");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)C" + "'", str44, "(C)C");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 260 + "'", int47 == 260);
    }

    @Test
    public void test06175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06175");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        java.lang.String str11 = type7.getDescriptor();
        int int13 = type7.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray29);
        java.lang.String str31 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type17, false);
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type7, list34, true);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass39 = type38.getClass();
        java.lang.String str40 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass39);
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        java.lang.String str47 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        java.lang.String str50 = type49.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type49, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        org.mockito.asm.tree.analysis.Value value54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value55 = simpleVerifier52.copyOperation(abstractInsnNode53, value54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "C" + "'", str11, "C");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(S)C" + "'", str30, "(S)C");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "C" + "'", str31, "C");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str40, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str41, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/asm/Type" + "'", str43, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/asm/Type" + "'", str47, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/Type" + "'", str48, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.mockito.asm.Type" + "'", str50, "org.mockito.asm.Type");
    }

    @Test
    public void test06176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06176");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str8 = type7.toString();
        int int9 = type7.getDimensions();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str11 = type10.getDescriptor();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        boolean boolean24 = type14.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray25);
        java.lang.String str27 = type12.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        java.lang.String str35 = type31.getDescriptor();
        int int37 = type31.getOpcode((int) (short) 0);
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type31, list38, true);
        int int41 = type31.getSort();
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type31, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type46, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str50 = type49.getDescriptor();
        org.mockito.asm.tree.analysis.Value value51 = simpleVerifier48.newValue(type49);
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier44.newValue(type49);
        int int53 = type49.getSort();
        java.lang.String str54 = type49.getDescriptor();
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type49, list55, true);
        java.lang.String str58 = type7.getDescriptor();
        int int59 = type7.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str8, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "I" + "'", str11, "I");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)S" + "'", str22, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(S)C" + "'", str26, "(S)C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "I" + "'", str50, "I");
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "I" + "'", str54, "I");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str58, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
    }

    @Test
    public void test06177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06177");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)LC;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;", (java.lang.Throwable) analyzerException2);
        java.lang.Throwable[] throwableArray4 = analyzerException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test06178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06178");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("short");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        java.lang.String str9 = type5.getDescriptor();
        int int11 = type5.getOpcode((int) (short) 0);
        java.lang.String str12 = type5.getClassName();
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, list13, true);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = type5.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "char" + "'", str12, "char");
    }

    @Test
    public void test06179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06179");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str4 = type3.getClassName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value22);
        boolean boolean24 = type5.equals((java.lang.Object) analyzerException23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        boolean boolean37 = type27.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray38);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray38);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray38);
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list42, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        int int52 = type46.getSort();
        int int53 = type46.getSize();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int56 = type55.getSort();
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type55, list57, true);
        java.lang.String str60 = type55.toString();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier44.newValue(type55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier44.newValue(type63);
        java.lang.Class<?> wildcardClass66 = value65.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "double" + "'", str4, "double");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)C" + "'", str39, "(S)C");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)V" + "'", str40, "(S)V");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)D" + "'", str41, "(S)D");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str60, "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test06180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06180");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        int int18 = type0.getSize();
        java.lang.String str19 = type0.toString();
        int int20 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        java.lang.String str29 = type22.toString();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type30, list31, false);
        boolean boolean35 = type30.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type30, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        boolean boolean49 = type39.equals((java.lang.Object) '4');
        org.mockito.asm.Type type50 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type50, list51, false);
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type50, list54, false);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.FLOAT_TYPE;
        int int58 = type57.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type57, false);
        int int61 = type0.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "S" + "'", str29, "S");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)S" + "'", str47, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
    }

    @Test
    public void test06181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06181");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSort();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        int int15 = type9.getSort();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier7.newValue(type9);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        int int19 = type17.getOpcode(84);
        int int21 = type17.getOpcode(136);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type17, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str32 = type31.getDescriptor();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type41 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray42);
        boolean boolean45 = type35.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray46);
        java.lang.String str48 = type33.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        java.lang.String str56 = type52.getDescriptor();
        int int58 = type52.getOpcode((int) (short) 0);
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type52, list59, true);
        int int62 = type52.getSort();
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type52, list63, true);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str71 = type70.getDescriptor();
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier69.newValue(type70);
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier65.newValue(type70);
        int int74 = type70.getSort();
        java.lang.String str75 = type70.getDescriptor();
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier30.newValue(type70);
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier23.newValue(type70);
        int int78 = value77.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 84 + "'", int19 == 84);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 136 + "'", int21 == 136);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "I" + "'", str32, "I");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)S" + "'", str43, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(S)C" + "'", str47, "(S)C");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "C" + "'", str48, "C");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "C" + "'", str56, "C");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "I" + "'", str71, "I");
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "I" + "'", str75, "I");
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test06182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06182");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str2 = type1.toString();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str10 = type9.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray19);
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type9, list22, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        boolean boolean43 = type33.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type33, true);
        int int46 = type28.getSort();
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type28, list47, true);
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list50, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, true);
        java.lang.String str55 = type4.getInternalName();
        int int56 = type4.getSort();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected true, but found I");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type58, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value62 = simpleVerifier60.newOperation(abstractInsnNode61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L(C)Z;" + "'", str2, "L(C)Z;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "boolean" + "'", str10, "boolean");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)Z" + "'", str21, "(C)Z");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str55, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNotNull(type58);
    }

    @Test
    public void test06183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06183");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        boolean boolean21 = type17.equals((java.lang.Object) 115);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        java.lang.String str24 = type23.getClassName();
        int int26 = type23.getOpcode(164);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type23, true);
        java.lang.Class<?> wildcardClass29 = simpleVerifier28.getClass();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        java.lang.String str31 = type30.getClassName();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Lorg.mockito.asm.tree.analysis.BasicValue;" + "'", str24, "Lorg.mockito.asm.tree.analysis.BasicValue;");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 168 + "'", int26 == 168);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.mockito.asm.tree.analysis.SimpleVerifier" + "'", str31, "org.mockito.asm.tree.analysis.SimpleVerifier");
    }

    @Test
    public void test06184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06184");
        java.lang.Object obj1 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        java.lang.String str17 = type2.getDescriptor();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int21 = type19.getOpcode(86);
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type19, list22, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        boolean boolean36 = type26.equals((java.lang.Object) '4');
        org.mockito.asm.Type type37 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type37, list38, false);
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier24.newValue(type26);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass44 = type43.getClass();
        java.lang.String str45 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        java.lang.String str47 = type46.getClassName();
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier24.newValue(type46);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str50 = type49.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type58 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray59);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray59);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type63, true);
        boolean boolean66 = type49.equals((java.lang.Object) simpleVerifier65);
        java.lang.String str67 = type49.toString();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier24.newValue(type49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;", obj1, value68);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 86 + "'", int21 == 86);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)S" + "'", str34, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org/mockito/asm/Type" + "'", str45, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.mockito.asm.Type" + "'", str47, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "boolean" + "'", str50, "boolean");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(C)S" + "'", str60, "(C)S");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)Z" + "'", str61, "(C)Z");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Z" + "'", str67, "Z");
        org.junit.Assert.assertNotNull(value68);
    }

    @Test
    public void test06185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06185");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        boolean boolean32 = type22.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray33);
        int int35 = type20.getSize();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type37, false);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str41 = type40.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray50);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type54, true);
        boolean boolean57 = type40.equals((java.lang.Object) simpleVerifier56);
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type40, list58, false);
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier19.newValue(type40);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int65 = type63.getOpcode(86);
        java.lang.String str66 = type63.getDescriptor();
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type63, list67, true);
        java.lang.String str70 = type63.toString();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)S" + "'", str30, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "boolean" + "'", str41, "boolean");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)S" + "'", str51, "(C)S");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)Z" + "'", str52, "(C)Z");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 86 + "'", int65 == 86);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "S" + "'", str66, "S");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "S" + "'", str70, "S");
    }

    @Test
    public void test06186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06186");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: short");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str4 = type3.getDescriptor();
        java.lang.String str5 = type3.toString();
        int int6 = type3.getSort();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list7, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        int int23 = value22.getSize();
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier16.merge(value19, value22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        int int38 = value37.getSize();
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier31.merge(value34, value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        int int53 = value52.getSize();
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier46.merge(value49, value52);
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier16.merge(value37, value54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        java.lang.String str63 = type59.getDescriptor();
        java.lang.Class<?> wildcardClass64 = type59.getClass();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass64);
        org.mockito.asm.Type type66 = type65.getElementType();
        boolean boolean68 = type66.equals((java.lang.Object) 197);
        org.mockito.asm.tree.analysis.Value value69 = simpleVerifier16.newValue(type66);
        org.mockito.asm.tree.analysis.Value value70 = simpleVerifier9.newValue(type66);
        java.lang.String str71 = type66.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "S" + "'", str4, "S");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "S" + "'", str5, "S");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "C" + "'", str63, "C");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lg/mockito/asm/Type;" + "'", str71, "Lg/mockito/asm/Type;");
    }

    @Test
    public void test06187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06187");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06188");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        boolean boolean14 = type9.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        int int16 = type9.getOpcode(127);
        int int18 = type9.getOpcode(50);
        int int20 = type9.getOpcode(15);
        int int22 = type9.getOpcode(111);
        int int24 = type9.getOpcode(124);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 127 + "'", int16 == 127);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 15 + "'", int20 == 15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 111 + "'", int22 == 111);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 124 + "'", int24 == 124);
    }

    @Test
    public void test06189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06189");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        int int8 = type1.getSize();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list12, true);
        int int15 = type10.getDimensions();
        java.lang.String str16 = type10.getInternalName();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getReturnType("(C)LC;");
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type18, list19, true);
        int int22 = type10.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str16, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
    }

    @Test
    public void test06190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06190");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int2 = type1.getSort();
        int int4 = type1.getOpcode(113);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        java.lang.String str17 = type6.toString();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        boolean boolean30 = type20.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray31);
        int int33 = type18.getSize();
        boolean boolean35 = type18.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type18, false);
        java.lang.String str38 = type18.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type18, false);
        java.lang.String str41 = type18.getDescriptor();
        int int42 = type18.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = value58.getSize();
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier52.merge(value55, value58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException61);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        int int80 = value79.getSize();
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier73.merge(value76, value79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value81);
        analyzerException64.addSuppressed((java.lang.Throwable) analyzerException82);
        analyzerException61.addSuppressed((java.lang.Throwable) analyzerException82);
        java.lang.Class<?> wildcardClass85 = analyzerException82.getClass();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass85);
        java.lang.String str87 = type86.getClassName();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getObjectType("char");
        java.util.List list90 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier92 = new org.mockito.asm.tree.analysis.SimpleVerifier(type86, type89, list90, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type86, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode95 = null;
        java.util.List list96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value97 = simpleVerifier94.naryOperation(abstractInsnNode95, list96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 117 + "'", int4 == 117);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "S" + "'", str17, "S");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)S" + "'", str28, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException" + "'", str87, "org.mockito.asm.tree.analysis.AnalyzerException");
        org.junit.Assert.assertNotNull(type89);
    }

    @Test
    public void test06191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06191");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int3 = type1.getOpcode(86);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type6 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray17);
        java.lang.String str19 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        java.lang.String str27 = type23.getDescriptor();
        int int29 = type23.getOpcode((int) (short) 0);
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type23, list30, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type23, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str40 = type39.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray49);
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type39, list52, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        boolean boolean73 = type63.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type63, true);
        int int76 = type58.getSort();
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type58, list77, true);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier79.newValue(type80);
        org.mockito.asm.tree.analysis.Value value82 = simpleVerifier34.newValue(type80);
        int int83 = type80.getSize();
        int int85 = type80.getOpcode(128);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type86 = type80.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 86 + "'", int3 == 86);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(S)C" + "'", str18, "(S)C");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "boolean" + "'", str40, "boolean");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)S" + "'", str50, "(C)S");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)Z" + "'", str51, "(C)Z");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)S" + "'", str71, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 128 + "'", int85 == 128);
    }

    @Test
    public void test06192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06192");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        int int5 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        java.lang.String str8 = type3.toString();
        org.mockito.asm.Type type9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        int int26 = type20.getSort();
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray27);
        int int29 = type15.getSize();
        java.lang.String str30 = type15.toString();
        boolean boolean32 = type15.equals((java.lang.Object) 3);
        java.lang.String str33 = type15.getClassName();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        boolean boolean46 = type36.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray47);
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type34, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        java.lang.String str59 = type55.getDescriptor();
        java.lang.Class<?> wildcardClass60 = type55.getClass();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass60);
        org.mockito.asm.Type type62 = type61.getElementType();
        boolean boolean64 = type62.equals((java.lang.Object) 197);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type62, true);
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier11.newValue(type34);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getType("B");
        int int70 = type69.getSize();
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type69, list71, false);
        java.lang.String str74 = type34.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(S)C" + "'", str28, "(S)C");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "C" + "'", str30, "C");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "char" + "'", str33, "char");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(S)C" + "'", str48, "(S)C");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "C" + "'", str59, "C");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "C" + "'", str74, "C");
    }

    @Test
    public void test06193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06193");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int3 = type1.getOpcode((int) (byte) 10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        int int12 = type5.getSize();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int15 = type14.getSort();
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type14, list16, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type14, true);
        java.lang.String str21 = type1.getDescriptor();
        org.mockito.asm.Type type22 = type1.getElementType();
        java.lang.String str23 = type22.getInternalName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 14 + "'", int3 == 14);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str21, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "g/mockito/asm/tree/analysis/AnalyzerException" + "'", str23, "g/mockito/asm/tree/analysis/AnalyzerException");
    }

    @Test
    public void test06194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06194");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, false);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str18 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier10.newValue(type17);
        int int21 = type17.getSize();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getObjectType("boolean");
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        boolean boolean29 = type17.equals((java.lang.Object) type25);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray39);
        boolean boolean42 = type32.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray43);
        int int45 = type30.getSize();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type47, false);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str51 = type50.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray60);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type64, true);
        boolean boolean67 = type50.equals((java.lang.Object) simpleVerifier66);
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type50, list68, false);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int73 = type72.getSort();
        int int75 = type72.getOpcode(113);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type72, false);
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type72, list78, false);
        java.lang.String str81 = type17.getClassName();
        int int82 = type17.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "S" + "'", str18, "S");
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(C)S" + "'", str40, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(S)C" + "'", str44, "(S)C");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "boolean" + "'", str51, "boolean");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)S" + "'", str61, "(C)S");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(C)Z" + "'", str62, "(C)Z");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 117 + "'", int75 == 117);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "short" + "'", str81, "short");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
    }

    @Test
    public void test06195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06195");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.Type type2 = null;
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str15 = type14.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray24);
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type14, list27, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        boolean boolean48 = type38.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type38, true);
        int int51 = type33.getSort();
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type33, list52, true);
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier9.newValue(type11);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type57, true);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str61 = type60.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray70);
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type60, list73, false);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type78, type80, list81, true);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray85 = new org.mockito.asm.Type[] { type84 };
        java.lang.String str86 = org.mockito.asm.Type.getMethodDescriptor(type78, typeArray85);
        boolean boolean88 = type78.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray89 = new org.mockito.asm.Type[] { type78 };
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type76, typeArray89);
        java.lang.String str91 = type76.getDescriptor();
        java.util.List list92 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type76, list92, false);
        org.mockito.asm.tree.analysis.Value value95 = simpleVerifier9.newValue(type76);
        org.mockito.asm.tree.analysis.Value value96 = basicInterpreter0.copyOperation(abstractInsnNode1, value95);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value98 = basicInterpreter0.newOperation(abstractInsnNode97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "boolean" + "'", str15, "boolean");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(C)S" + "'", str25, "(C)S");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(C)Z" + "'", str26, "(C)Z");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(C)S" + "'", str46, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "boolean" + "'", str61, "boolean");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)S" + "'", str71, "(C)S");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)Z" + "'", str72, "(C)Z");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(C)S" + "'", str86, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(S)C" + "'", str90, "(S)C");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "C" + "'", str91, "C");
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertNotNull(value96);
    }

    @Test
    public void test06196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06196");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)L(C)Lorg/mockito/asm/Type;;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06197");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("(S)Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type3 = null;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        int int9 = type7.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, false);
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list12, false);
        java.lang.String str15 = type5.getInternalName();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray25);
        boolean boolean28 = type18.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray29);
        java.lang.String str31 = type16.getDescriptor();
        int int32 = type16.getSort();
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type16, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        boolean boolean48 = type38.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray49);
        int int51 = type36.getSize();
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("()Lorg/mockito/asm/Type;", (java.lang.Object) type2, value52);
        int int55 = type2.getOpcode(88);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: (C)LC;: expected class org.mockito.asm.tree.analysis.BasicValue, but found I");
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type57, list58, true);
        int int61 = type2.getSize();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(C)S" + "'", str26, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(S)C" + "'", str30, "(S)C");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "C" + "'", str31, "C");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(C)S" + "'", str46, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(S)C" + "'", str50, "(S)C");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 92 + "'", int55 == 92);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
    }

    @Test
    public void test06198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06198");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier13.merge(value16, value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value21);
        analyzerException4.addSuppressed((java.lang.Throwable) analyzerException22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Throwable) analyzerException24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I", (java.lang.Throwable) analyzerException24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier37.merge(value40, value43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException46);
        java.lang.Throwable[] throwableArray48 = analyzerException47.getSuppressed();
        java.lang.Throwable[] throwableArray49 = analyzerException47.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        int int67 = value66.getSize();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier60.merge(value63, value66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)S", (java.lang.Object) 175, value68);
        java.lang.Throwable[] throwableArray71 = analyzerException70.getSuppressed();
        java.lang.Throwable[] throwableArray72 = analyzerException70.getSuppressed();
        analyzerException47.addSuppressed((java.lang.Throwable) analyzerException70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)LLorg/mockito/asm/tree/analysis/SimpleVerifier;;", (java.lang.Throwable) analyzerException70);
        analyzerException24.addSuppressed((java.lang.Throwable) analyzerException74);
        java.lang.String str76 = analyzerException24.toString();
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: hi!" + "'", str76, "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
    }

    @Test
    public void test06199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06199");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        int int24 = type18.getSort();
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray25);
        java.lang.String str27 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type13, false);
        java.lang.Class<?> wildcardClass30 = type3.getClass();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        boolean boolean33 = type31.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: Z");
        org.mockito.asm.Type type34 = type31.getElementType();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        boolean boolean47 = type37.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray48);
        int int50 = type35.getSize();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type52, false);
        java.lang.String str55 = type52.toString();
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type52, list56, false);
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        int int65 = type63.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, false);
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list68, false);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type72, true);
        int int75 = type71.getSize();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass78 = type77.getClass();
        java.lang.String str79 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass78);
        java.lang.String str80 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass78);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass78);
        org.mockito.asm.Type type82 = type81.getElementType();
        org.mockito.asm.Type type83 = type81.getElementType();
        java.lang.String str84 = type81.getInternalName();
        org.mockito.asm.Type[] typeArray86 = org.mockito.asm.Type.getArgumentTypes("(C)Lorg/mockito/asm/Type;");
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type81, typeArray86);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray86);
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray86);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray86);
        org.mockito.asm.Type type91 = type34.getElementType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(S)C" + "'", str26, "(S)C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)S" + "'", str45, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(S)C" + "'", str49, "(S)C");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str79, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str80, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org/mockito/asm/Type" + "'", str84, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str87, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(C)S" + "'", str88, "(C)S");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(C)LC;" + "'", str89, "(C)LC;");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(C)Lg/mockito/asm/Type;" + "'", str90, "(C)Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type91);
    }

    @Test
    public void test06200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06200");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type28, true);
        int int41 = type23.getSort();
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type23, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = simpleVerifier44.newValue(type45);
        int int47 = type45.getSize();
        java.lang.String str48 = type45.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            int int49 = type45.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "short" + "'", str48, "short");
    }

    @Test
    public void test06201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06201");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("double");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter4 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str10 = type9.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray19);
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type9, list22, false);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        boolean boolean37 = type27.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray38);
        java.lang.String str40 = type25.getDescriptor();
        int int41 = type25.getSort();
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type25, list42, true);
        org.mockito.asm.tree.analysis.Value value45 = basicInterpreter4.newValue(type25);
        int int46 = value45.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.BasicValue;", (java.lang.Object) "double", value45);
        java.lang.Throwable[] throwableArray48 = analyzerException47.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        int int65 = value64.getSize();
        org.mockito.asm.tree.analysis.Value value66 = simpleVerifier58.merge(value61, value64);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException67 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type74, type76, list77, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier83 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier83.newValue(type84);
        int int86 = value85.getSize();
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier79.merge(value82, value85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException88 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value87);
        analyzerException70.addSuppressed((java.lang.Throwable) analyzerException88);
        analyzerException67.addSuppressed((java.lang.Throwable) analyzerException88);
        analyzerException47.addSuppressed((java.lang.Throwable) analyzerException67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I", (java.lang.Throwable) analyzerException67);
        java.lang.Throwable[] throwableArray93 = analyzerException92.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException96 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)B");
        java.lang.Throwable[] throwableArray97 = analyzerException96.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException98 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected I, but found I", (java.lang.Throwable) analyzerException96);
        analyzerException92.addSuppressed((java.lang.Throwable) analyzerException96);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "boolean" + "'", str10, "boolean");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)Z" + "'", str21, "(C)Z");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)C" + "'", str39, "(S)C");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertNotNull(throwableArray97);
    }

    @Test
    public void test06202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06202");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException10);
        java.lang.Throwable[] throwableArray12 = analyzerException10.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("Lg/mockito/asm/Type;", (java.lang.Throwable) analyzerException10);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException18);
        analyzerException10.addSuppressed((java.lang.Throwable) analyzerException18);
        analyzerException6.addSuppressed((java.lang.Throwable) analyzerException10);
        analyzerException4.addSuppressed((java.lang.Throwable) analyzerException6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)L(S)C;", (java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: char", (java.lang.Throwable) analyzerException23);
        org.mockito.asm.tree.analysis.Value value25 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("LLLLorg/mockito/asm/tree/analysis/AnalyzerException;;;;", (java.lang.Object) analyzerException24, value25);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test06203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06203");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: : expected class org.mockito.asm.Type, but found I");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06204");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray20);
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type10, list23, false);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray39);
        java.lang.String str41 = type26.getDescriptor();
        int int42 = type26.getSort();
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type26, list43, true);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter5.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) analyzerException4, value46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S", (java.lang.Object) 176, value46);
        int int49 = value46.getSize();
        int int50 = value46.getSize();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean" + "'", str11, "boolean");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)Z" + "'", str22, "(C)Z");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
    }

    @Test
    public void test06205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06205");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType("I");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, false);
        org.mockito.asm.tree.analysis.Value value5 = null;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type7, true);
        java.lang.Throwable throwable12 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        int int32 = value31.getSize();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier25.merge(value28, value31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = value47.getSize();
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier41.merge(value44, value47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        int int63 = value62.getSize();
        org.mockito.asm.tree.analysis.Value value64 = simpleVerifier56.merge(value59, value62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        int int78 = value77.getSize();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier71.merge(value74, value77);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier41.merge(value62, value79);
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier14.merge(value33, value80);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException13, value81);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type83, type84, true);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str88 = type87.getDescriptor();
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier86.newValue(type87);
        org.mockito.asm.tree.analysis.Value value90 = simpleVerifier9.merge(value81, value89);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value91 = simpleVerifier4.merge(value5, value81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "I" + "'", str88, "I");
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
    }

    @Test
    public void test06206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06206");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("V");
        int int3 = type1.getOpcode(50);
        int int4 = type1.getSort();
        int int6 = type1.getOpcode(80);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 55 + "'", int3 == 55);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 85 + "'", int6 == 85);
    }

    @Test
    public void test06207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06207");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.SimpleVerifier;: expected I, but found I");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        boolean boolean13 = type3.equals((java.lang.Object) '4');
        org.mockito.asm.Type type14 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type14, list15, false);
        java.lang.String str18 = type14.getClassName();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type20, false);
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type14, list23, true);
        java.lang.String str26 = type1.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(C)S" + "'", str11, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "int" + "'", str18, "int");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.SimpleVerifier;: expected I, but found I;" + "'", str26, "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.SimpleVerifier;: expected I, but found I;");
    }

    @Test
    public void test06208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06208");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("double");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type3, true);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str7 = type6.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray16);
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type6, list19, false);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray35);
        java.lang.String str37 = type22.getDescriptor();
        int int38 = type22.getSort();
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        java.lang.String str49 = type45.getDescriptor();
        java.lang.Class<?> wildcardClass50 = type45.getClass();
        java.lang.String str51 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("S");
        boolean boolean57 = type54.equals((java.lang.Object) analyzerException56);
        java.lang.Throwable[] throwableArray58 = analyzerException56.getSuppressed();
        boolean boolean59 = type52.equals((java.lang.Object) throwableArray58);
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier41.newValue(type52);
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type52, list61, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode64 = null;
        java.util.List list65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value66 = simpleVerifier63.naryOperation(abstractInsnNode64, list65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean" + "'", str7, "boolean");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)Z" + "'", str18, "(C)Z");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(S)C" + "'", str36, "(S)C");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "C" + "'", str37, "C");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "C" + "'", str49, "C");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org/mockito/asm/Type" + "'", str51, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(value60);
    }

    @Test
    public void test06209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06209");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        int int5 = type1.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        int int51 = value50.getSize();
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier44.merge(value47, value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        int int66 = value65.getSize();
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier59.merge(value62, value65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type71, list72, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        int int81 = value80.getSize();
        org.mockito.asm.tree.analysis.Value value82 = simpleVerifier74.merge(value77, value80);
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier44.merge(value65, value82);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier14.merge(value37, value82);
        java.lang.Class<?> wildcardClass85 = value84.getClass();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass85);
        int int87 = type86.getDimensions();
        java.lang.String str88 = type86.toString();
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier7.newValue(type86);
        java.lang.Class<?> wildcardClass90 = value89.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str88, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test06210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06210");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg.mockito.asm.tree.analysis.AnalyzerException: V: expected class org.mockito.asm.tree.analysis.SimpleVerifier, but found null;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06211");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier13.merge(value16, value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Z", (java.lang.Throwable) analyzerException23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier37.merge(value40, value43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value45);
        analyzerException28.addSuppressed((java.lang.Throwable) analyzerException46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Throwable) analyzerException28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Throwable) analyzerException48);
        analyzerException24.addSuppressed((java.lang.Throwable) analyzerException49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray53 = analyzerException52.getSuppressed();
        java.lang.Throwable[] throwableArray54 = analyzerException52.getSuppressed();
        analyzerException24.addSuppressed((java.lang.Throwable) analyzerException52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException56 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException52);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("LLS;;", (java.lang.Throwable) analyzerException56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException56);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("mockito/asm/Type");
        analyzerException60.addSuppressed((java.lang.Throwable) analyzerException62);
        analyzerException58.addSuppressed((java.lang.Throwable) analyzerException62);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray54);
    }

    @Test
    public void test06212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06212");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type12, list13, false);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass18 = type17.getClass();
        java.lang.String str19 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass18);
        java.lang.String str20 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass18);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass18);
        java.lang.String str22 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass18);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass18);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass18);
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass18);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass18);
        org.mockito.asm.tree.analysis.Value value27 = simpleVerifier15.newValue(type26);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        java.util.List list29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value30 = simpleVerifier15.naryOperation(abstractInsnNode28, list29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str19, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str20, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org/mockito/asm/Type" + "'", str22, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str25, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
    }

    @Test
    public void test06213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06213");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)LS;: expected null, but found L(C)LC;;;");
    }

    @Test
    public void test06214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06214");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean3 = type1.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int6 = type5.getSort();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, list7, false);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass12 = type11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type16, list17, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str22 = type21.toString();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str30 = type29.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray39);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray39);
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type29, list42, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        boolean boolean63 = type53.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type53, true);
        int int66 = type48.getSort();
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type48, list67, true);
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list70, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, true);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str76 = type75.toString();
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier74.newValue(type75);
        int int78 = type75.getSize();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier19.newValue(type75);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode80 = null;
        java.util.List list81 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value82 = simpleVerifier19.naryOperation(abstractInsnNode80, list81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str13, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L(C)Z;" + "'", str22, "L(C)Z;");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "boolean" + "'", str30, "boolean");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(C)S" + "'", str40, "(C)S");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)Z" + "'", str41, "(C)Z");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)S" + "'", str61, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Z" + "'", str76, "Z");
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(value79);
    }

    @Test
    public void test06215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06215");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg.mockito.asm.tree.analysis.SimpleVerifier;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException2);
        java.lang.Throwable[] throwableArray4 = analyzerException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test06216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06216");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        int int9 = type3.getSort();
        java.lang.String str10 = type3.toString();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type11, list12, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        int int22 = type16.getSort();
        java.lang.String str23 = type16.getClassName();
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier14.newValue(type16);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type16, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass29 = type28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        java.lang.String str31 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass29);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, false);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        int int44 = type42.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        int int60 = value59.getSize();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier53.merge(value56, value59);
        int int62 = value59.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/Type", (java.lang.Object) type42, value59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        int int79 = value78.getSize();
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier37.merge(value59, value78);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int83 = type82.getSort();
        java.lang.String str84 = type82.toString();
        org.mockito.asm.Type type85 = type82.getElementType();
        int int86 = type85.getSize();
        int int87 = type85.getSort();
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier37.newValue(type85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/tree/analysis/BasicVerifier;", (java.lang.Object) type16, value88);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str91 = type90.toString();
        int int92 = type90.getSize();
        boolean boolean93 = type16.equals((java.lang.Object) int92);
        org.mockito.asm.Type type95 = org.mockito.asm.Type.getType("Ljava/lang/Object;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier97 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type95, false);
        int int99 = type95.getOpcode(175);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "S" + "'", str10, "S");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "short" + "'", str23, "short");
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str30, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str31, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str84, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 10 + "'", int87 == 10);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Z" + "'", str91, "Z");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 179 + "'", int99 == 179);
    }

    @Test
    public void test06217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06217");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str5 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = simpleVerifier3.newValue(type4);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        java.util.List list8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value9 = simpleVerifier3.naryOperation(abstractInsnNode7, list8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "I" + "'", str5, "I");
        org.junit.Assert.assertNotNull(value6);
    }

    @Test
    public void test06218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06218");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        java.lang.String str3 = type1.toString();
        int int4 = type1.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean8 = type6.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type10, list12, false);
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list15, false);
        int int18 = type1.getSort();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getObjectType("(S)Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass23 = type22.getClass();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass23);
        java.lang.String str26 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass23);
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass23);
        boolean boolean28 = type20.equals((java.lang.Object) str27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type29, false);
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type29, list32, false);
        java.lang.String str35 = type29.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "S" + "'", str3, "S");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str25, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org/mockito/asm/Type" + "'", str26, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/Type" + "'", str27, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "S" + "'", str35, "S");
    }

    @Test
    public void test06219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06219");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier36.merge(value57, value74);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier6.merge(value29, value74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        int int78 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier6.newValue(type77);
        int int81 = type77.getOpcode(123);
        java.lang.String str82 = type77.toString();
        int int83 = type77.getSort();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type84 = type77.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 7 + "'", int78 == 7);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 124 + "'", int81 == 124);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "J" + "'", str82, "J");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 7 + "'", int83 == 7);
    }

    @Test
    public void test06220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06220");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier36.merge(value57, value74);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier6.merge(value29, value74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        int int78 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier6.newValue(type77);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getType("S");
        org.mockito.asm.tree.analysis.Value value82 = simpleVerifier6.newValue(type81);
        java.lang.String str83 = type81.getDescriptor();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str85 = type84.getClassName();
        java.util.List list86 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type81, type84, list86, true);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getObjectType("org/mockito/asm/Type");
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier88.newValue(type90);
        java.lang.Class<?> wildcardClass92 = simpleVerifier88.getClass();
        java.lang.String str93 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass92);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 7 + "'", int78 == 7);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "S" + "'", str83, "S");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "boolean" + "'", str85, "boolean");
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "org/mockito/asm/tree/analysis/SimpleVerifier" + "'", str93, "org/mockito/asm/tree/analysis/SimpleVerifier");
    }

    @Test
    public void test06221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06221");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)B");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str3 = type2.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray12);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type16, true);
        boolean boolean19 = type2.equals((java.lang.Object) simpleVerifier18);
        java.lang.String str20 = type2.toString();
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, list21, false);
        java.lang.String str24 = type1.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "boolean" + "'", str3, "boolean");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)S" + "'", str13, "(C)S");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)Z" + "'", str14, "(C)Z");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Z" + "'", str20, "Z");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(C)B" + "'", str24, "(C)B");
    }

    @Test
    public void test06222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06222");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType("C");
        int int10 = type8.getOpcode(160);
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type8, list11, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode14 = null;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type16, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        java.lang.String str26 = type22.getDescriptor();
        int int28 = type22.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        int int43 = type37.getSort();
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray44);
        java.lang.String str46 = type32.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type32, false);
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier18.newValue(type22);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getObjectType("Ldouble;");
        java.lang.String str52 = type51.getClassName();
        int int53 = type51.getSort();
        org.mockito.asm.Type type54 = type51.getElementType();
        int int56 = type51.getOpcode(152);
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier18.newValue(type51);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value58 = simpleVerifier13.copyOperation(abstractInsnNode14, value57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 160 + "'", int10 == 160);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(S)C" + "'", str45, "(S)C");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "C" + "'", str46, "C");
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Ldouble;" + "'", str52, "Ldouble;");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 156 + "'", int56 == 156);
        org.junit.Assert.assertNotNull(value57);
    }

    @Test
    public void test06223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06223");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.Type type7 = type5.getElementType();
        java.lang.String str8 = type5.getInternalName();
        int int9 = type5.getSize();
        org.mockito.asm.Type[] typeArray11 = org.mockito.asm.Type.getArgumentTypes("(C)LC)LC;");
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str14 = type13.getClassName();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int17 = type16.getSort();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        boolean boolean30 = type20.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray31);
        int int33 = type18.getSize();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type35, false);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str43 = type42.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray52);
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray52);
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type42, list55, false);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type66 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray67);
        boolean boolean70 = type60.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type60 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray71);
        java.lang.String str73 = type58.getDescriptor();
        int int74 = type58.getSort();
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type58, list75, true);
        boolean boolean78 = type35.equals((java.lang.Object) type39);
        int int79 = type35.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type35, true);
        java.util.List list82 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type16, list82, false);
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type13, list85, false);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org/mockito/asm/Type" + "'", str8, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str12, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "double" + "'", str14, "double");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)S" + "'", str28, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "boolean" + "'", str43, "boolean");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)S" + "'", str53, "(C)S");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)Z" + "'", str54, "(C)Z");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(C)S" + "'", str68, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(S)C" + "'", str72, "(S)C");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "C" + "'", str73, "C");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
    }

    @Test
    public void test06224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06224");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/Type" + "'", str9, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str11, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str12, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06225");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        boolean boolean21 = type17.equals((java.lang.Object) 115);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        java.lang.String str24 = type23.getClassName();
        int int26 = type23.getOpcode(164);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type23, true);
        java.lang.Class<?> wildcardClass29 = simpleVerifier28.getClass();
        java.lang.String str30 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass29);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Lorg.mockito.asm.tree.analysis.BasicValue;" + "'", str24, "Lorg.mockito.asm.tree.analysis.BasicValue;");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 168 + "'", int26 == 168);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str30, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
    }

    @Test
    public void test06226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06226");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        java.lang.String str11 = type7.getDescriptor();
        int int13 = type7.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray29);
        java.lang.String str31 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type17, false);
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type7, list34, true);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass39 = type38.getClass();
        java.lang.String str40 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass39);
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        java.lang.String str47 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        java.lang.String str48 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        java.lang.String str50 = type49.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type49, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        java.util.List list54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value55 = simpleVerifier52.naryOperation(abstractInsnNode53, list54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "C" + "'", str11, "C");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(S)C" + "'", str30, "(S)C");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "C" + "'", str31, "C");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str40, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str41, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/asm/Type" + "'", str43, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/asm/Type" + "'", str47, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org/mockito/asm/Type" + "'", str48, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.mockito.asm.Type" + "'", str50, "org.mockito.asm.Type");
    }

    @Test
    public void test06227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06227");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        boolean boolean14 = type9.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        int int29 = type23.getSort();
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray30);
        java.lang.String str33 = type9.toString();
        org.mockito.asm.Type type34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type34, false);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        boolean boolean49 = type39.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray50);
        java.lang.String str52 = type37.getDescriptor();
        int int53 = type37.getSort();
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier36.newValue(type37);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier36.newValue(type55);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getReturnType("()Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier36.newValue(type58);
        org.mockito.asm.tree.analysis.Value value60 = null;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type62, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str66 = type65.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type74 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray75);
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray75);
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type65, list78, false);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier80.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        int int86 = type84.getOpcode(84);
        int int87 = type84.getSize();
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier80.newValue(type84);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value89 = simpleVerifier36.merge(value60, value88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)S" + "'", str32, "(S)S");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)S" + "'", str47, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(S)C" + "'", str51, "(S)C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "boolean" + "'", str66, "boolean");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)S" + "'", str76, "(C)S");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(C)Z" + "'", str77, "(C)Z");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 84 + "'", int86 == 84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(value88);
    }

    @Test
    public void test06228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06228");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        java.lang.Throwable[] throwableArray5 = analyzerException4.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException4);
        java.lang.Throwable[] throwableArray7 = analyzerException6.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)C", (java.lang.Throwable) analyzerException6);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException6);
        java.lang.Class<?> wildcardClass10 = analyzerException9.getClass();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test06229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06229");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        java.util.List list7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value8 = simpleVerifier5.naryOperation(abstractInsnNode6, list7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
    }

    @Test
    public void test06230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06230");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        java.lang.String str17 = type3.getDescriptor();
        int int19 = type3.getOpcode(185);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list37, false);
        java.lang.String str40 = type24.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        boolean boolean54 = type44.equals((java.lang.Object) '4');
        org.mockito.asm.Type type55 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type55, list56, false);
        java.lang.String str59 = type55.getClassName();
        int int60 = type55.getSort();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray70 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray70);
        boolean boolean73 = type63.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type63 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray74);
        int int76 = type61.getSize();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type78, false);
        boolean boolean82 = type78.equals((java.lang.Object) 23);
        java.lang.String str83 = type78.getClassName();
        java.util.List list84 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type78, list84, true);
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier42.newValue(type55);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode88 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value89 = simpleVerifier42.newOperation(abstractInsnNode88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 185 + "'", int19 == 185);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "boolean" + "'", str40, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "int" + "'", str59, "int");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)S" + "'", str71, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(S)C" + "'", str75, "(S)C");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "char" + "'", str83, "char");
        org.junit.Assert.assertNotNull(value87);
    }

    @Test
    public void test06231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06231");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        int int17 = type2.getSize();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type19, false);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str23 = type22.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray32);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type36, true);
        boolean boolean39 = type22.equals((java.lang.Object) simpleVerifier38);
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type22, list40, false);
        boolean boolean43 = type1.equals((java.lang.Object) type22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        int int51 = type45.getSort();
        boolean boolean53 = type45.equals((java.lang.Object) "(S)V");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type45, false);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getObjectType("(C)Lg/mockito/asm/Type;");
        org.mockito.asm.Type type58 = type57.getElementType();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getObjectType("(C)Z");
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int63 = type62.getSort();
        java.lang.String str64 = type62.toString();
        org.mockito.asm.Type type65 = type62.getElementType();
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list66, true);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type73, list74, true);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray78 = new org.mockito.asm.Type[] { type77 };
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray78);
        boolean boolean81 = type71.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray82 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str83 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray82);
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray82);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type62, false);
        boolean boolean87 = type22.equals((java.lang.Object) simpleVerifier86);
        java.lang.Class<?> wildcardClass88 = type22.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "boolean" + "'", str23, "boolean");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)S" + "'", str33, "(C)S");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)Z" + "'", str34, "(C)Z");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 4 + "'", int51 == 4);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str64, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(C)S" + "'", str79, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(S)C" + "'", str83, "(S)C");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(S)Lorg/mockito/asm/Type;" + "'", str84, "(S)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test06232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06232");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("short");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        java.lang.String str9 = type5.getDescriptor();
        int int11 = type5.getOpcode((int) (short) 0);
        java.lang.String str12 = type5.getClassName();
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, list13, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode16 = null;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getObjectType("(S)L(C)Z;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        boolean boolean30 = type20.equals((java.lang.Object) '4');
        boolean boolean32 = type20.equals((java.lang.Object) 193);
        java.lang.String str33 = type20.getDescriptor();
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list34, false);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.LONG_TYPE;
        int int38 = type37.getSort();
        java.lang.String str39 = type37.getClassName();
        java.lang.String str40 = type37.getClassName();
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier36.newValue(type37);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value42 = simpleVerifier15.copyOperation(abstractInsnNode16, value41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "C" + "'", str9, "C");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "char" + "'", str12, "char");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)S" + "'", str28, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 7 + "'", int38 == 7);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "long" + "'", str39, "long");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "long" + "'", str40, "long");
        org.junit.Assert.assertNotNull(value41);
    }

    @Test
    public void test06233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06233");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("()L(C)LZ;;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06234");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;: expected (C)S, but found null");
    }

    @Test
    public void test06235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06235");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("LLorg/mockito/asm/tree/analysis/BasicValue;;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06236");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode13 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/tree/analysis/BasicValue");
        java.lang.Throwable[] throwableArray17 = analyzerException16.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type28, true);
        boolean boolean42 = type28.equals((java.lang.Object) 158);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType("S");
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type44, list45, false);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, false);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str55 = type54.getDescriptor();
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) simpleVerifier47, value56);
        java.lang.Throwable[] throwableArray58 = analyzerException57.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg.mockito.asm.Type;", (java.lang.Throwable) analyzerException57);
        analyzerException16.addSuppressed((java.lang.Throwable) analyzerException57);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        int int66 = type64.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, false);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.Type type71 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str72 = type71.getClassName();
        int int74 = type71.getOpcode(0);
        java.lang.String str75 = type71.getClassName();
        int int76 = type71.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type71, true);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier68.newValue(type70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;: expected null, but found I;", (java.lang.Object) analyzerException16, value79);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value81 = simpleVerifier12.unaryOperation(abstractInsnNode13, value79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "S" + "'", str55, "S");
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "double" + "'", str72, "double");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "double" + "'", str75, "double");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertNotNull(value79);
    }

    @Test
    public void test06237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06237");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type[] typeArray9 = org.mockito.asm.Type.getArgumentTypes("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray9);
        int int11 = type7.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/Type" + "'", str6, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str10, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test06238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06238");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("B");
        java.lang.String str2 = type1.toString();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str6 = type5.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray15);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type19, true);
        boolean boolean22 = type5.equals((java.lang.Object) simpleVerifier21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.tree.analysis.Value value25 = simpleVerifier21.newValue(type24);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass28 = type27.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass28);
        java.lang.String str30 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        java.lang.String str32 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        int int41 = type35.getSort();
        java.lang.String str42 = type35.toString();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type43, list44, false);
        boolean boolean48 = type43.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        int int63 = type57.getSort();
        org.mockito.asm.Type[] typeArray64 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray64);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray64);
        java.lang.String str67 = type43.toString();
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type43, list68, false);
        org.mockito.asm.tree.analysis.Value value71 = simpleVerifier21.newValue(type43);
        int int72 = type43.getSort();
        org.mockito.asm.Type[] typeArray74 = org.mockito.asm.Type.getArgumentTypes("(C)Lorg/mockito/asm/Type;");
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray74);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray74);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, false);
        java.lang.String str79 = type1.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LB;" + "'", str2, "LB;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "boolean" + "'", str6, "boolean");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)Z" + "'", str17, "(C)Z");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str29, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str30, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org/mockito/asm/Type" + "'", str32, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "S" + "'", str42, "S");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(S)C" + "'", str65, "(S)C");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(S)S" + "'", str66, "(S)S");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "S" + "'", str67, "S");
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 4 + "'", int72 == 4);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(C)S" + "'", str75, "(C)S");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)Z" + "'", str76, "(C)Z");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "LB;" + "'", str79, "LB;");
    }

    @Test
    public void test06239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06239");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int8 = type7.getSize();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass11 = type10.getClass();
        java.lang.String str12 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        java.lang.String str13 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type15 = type14.getElementType();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, false);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str23 = type22.getDescriptor();
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier21.newValue(type22);
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type22, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray41);
        java.lang.String str43 = type28.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        java.lang.String str51 = type47.getDescriptor();
        int int53 = type47.getOpcode((int) (short) 0);
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type47, list54, true);
        int int57 = type28.getSort();
        java.lang.String str58 = type28.toString();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str60 = type59.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type68 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray69);
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray69);
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray69);
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier27.newValue(type28);
        boolean boolean74 = type7.equals((java.lang.Object) simpleVerifier27);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode75 = null;
        java.util.List list76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value77 = simpleVerifier27.naryOperation(abstractInsnNode75, list76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str12, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str13, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "S" + "'", str23, "S");
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(S)C" + "'", str42, "(S)C");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "C" + "'", str43, "C");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "C" + "'", str51, "C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "boolean" + "'", str60, "boolean");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(C)S" + "'", str70, "(C)S");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)Z" + "'", str71, "(C)Z");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)C" + "'", str72, "(C)C");
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test06240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06240");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("mockito/asm/Type");
        analyzerException2.addSuppressed((java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("SC)L(C)LC", (java.lang.Throwable) analyzerException4);
        java.lang.String str7 = analyzerException6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: SC)L(C)LC" + "'", str7, "org.mockito.asm.tree.analysis.AnalyzerException: SC)L(C)LC");
    }

    @Test
    public void test06241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06241");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.Type");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier11.merge(value14, value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        int int39 = value38.getSize();
        org.mockito.asm.tree.analysis.Value value40 = simpleVerifier32.merge(value35, value38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value40);
        analyzerException23.addSuppressed((java.lang.Throwable) analyzerException41);
        analyzerException20.addSuppressed((java.lang.Throwable) analyzerException41);
        java.lang.Class<?> wildcardClass44 = analyzerException41.getClass();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type47, list48, false);
        int int51 = type47.getDimensions();
        java.lang.Class<?> wildcardClass52 = type47.getClass();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass52);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(type53);
    }

    @Test
    public void test06242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06242");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        int int8 = type1.getSize();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list12, true);
        int int15 = type10.getDimensions();
        int int17 = type10.getOpcode(79);
        java.lang.String str18 = type10.getInternalName();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        int int22 = type20.getOpcode(8192);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type20, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getObjectType("(C)Lmockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value27 = simpleVerifier24.newValue(type26);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value29 = simpleVerifier24.newOperation(abstractInsnNode28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 83 + "'", int17 == 83);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str18, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8196 + "'", int22 == 8196);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
    }

    @Test
    public void test06243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06243");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        boolean boolean22 = type8.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type31, true);
        org.mockito.asm.Type type44 = null;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier43.newValue(type46);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type46, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getReturnType("(C)LC;");
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier49.newValue(type51);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode53 = null;
        java.util.List list54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value55 = simpleVerifier49.naryOperation(abstractInsnNode53, list54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
    }

    @Test
    public void test06244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06244");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("LLg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06245");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        int int5 = type1.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        int int51 = value50.getSize();
        org.mockito.asm.tree.analysis.Value value52 = simpleVerifier44.merge(value47, value50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        int int66 = value65.getSize();
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier59.merge(value62, value65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type71, list72, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        int int81 = value80.getSize();
        org.mockito.asm.tree.analysis.Value value82 = simpleVerifier74.merge(value77, value80);
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier44.merge(value65, value82);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier14.merge(value37, value82);
        java.lang.Class<?> wildcardClass85 = value84.getClass();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass85);
        int int87 = type86.getDimensions();
        java.lang.String str88 = type86.toString();
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier7.newValue(type86);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getReturnType("S");
        int int93 = type91.getOpcode(0);
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier7.newValue(type91);
        int int96 = type91.getOpcode(166);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type97 = type91.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str88, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 166 + "'", int96 == 166);
    }

    @Test
    public void test06246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06246");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)C");
        java.lang.Class<?> wildcardClass2 = analyzerException1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str4, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test06247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06247");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("(SC)L(C)LC;;");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type3, true);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str7 = type6.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray16);
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type6, list19, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type30, true);
        int int43 = type25.getSort();
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type25, list44, true);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier46.newValue(type47);
        java.lang.String str49 = type47.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type47, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.FLOAT_TYPE;
        int int54 = type52.getOpcode(110);
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier51.newValue(type52);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode56 = null;
        java.util.List list57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value58 = simpleVerifier51.naryOperation(abstractInsnNode56, list57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean" + "'", str7, "boolean");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)Z" + "'", str18, "(C)Z");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "I" + "'", str49, "I");
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 112 + "'", int54 == 112);
        org.junit.Assert.assertNotNull(value55);
    }

    @Test
    public void test06248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06248");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)Lorg/mockito/asm/Type;");
        java.lang.String str2 = type1.getInternalName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org/mockito/asm/Type" + "'", str2, "org/mockito/asm/Type");
    }

    @Test
    public void test06249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06249");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("S");
        boolean boolean4 = type1.equals((java.lang.Object) analyzerException3);
        java.lang.Throwable[] throwableArray5 = analyzerException3.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        int int23 = type17.getSort();
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray24);
        java.lang.String str26 = type12.getDescriptor();
        java.lang.String str27 = type12.getDescriptor();
        org.mockito.asm.tree.analysis.Value value28 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)C", (java.lang.Object) type12, value28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)D", (java.lang.Throwable) analyzerException29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/BasicValue");
        java.lang.Throwable[] throwableArray34 = analyzerException33.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("J", (java.lang.Throwable) analyzerException33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        int int52 = value51.getSize();
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier45.merge(value48, value51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) 0, value51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Throwable) analyzerException54);
        analyzerException33.addSuppressed((java.lang.Throwable) analyzerException55);
        analyzerException29.addSuppressed((java.lang.Throwable) analyzerException33);
        java.lang.Throwable[] throwableArray58 = analyzerException33.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Throwable) analyzerException33);
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException59);
        java.lang.String str61 = analyzerException59.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(S)C" + "'", str25, "(S)C");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str61, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test06250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06250");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int2 = type1.getSort();
        int int4 = type1.getOpcode(113);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray13);
        boolean boolean16 = type6.equals((java.lang.Object) '4');
        java.lang.String str17 = type6.toString();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        boolean boolean30 = type20.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray31);
        int int33 = type18.getSize();
        boolean boolean35 = type18.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type18, false);
        java.lang.String str38 = type18.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type18, false);
        int int42 = type1.getOpcode(117);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type43 = type1.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 117 + "'", int4 == 117);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(C)S" + "'", str14, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "S" + "'", str17, "S");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)S" + "'", str28, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 121 + "'", int42 == 121);
    }

    @Test
    public void test06251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06251");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str6 = type5.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray15);
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type5, list18, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        boolean boolean33 = type23.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray34);
        java.lang.String str36 = type21.getDescriptor();
        int int37 = type21.getSort();
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type21, list38, true);
        org.mockito.asm.tree.analysis.Value value41 = basicInterpreter0.newValue(type21);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type[] typeArray44 = org.mockito.asm.Type.getArgumentTypes("(S)C");
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray44);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type42, true);
        java.lang.String str48 = type21.getDescriptor();
        int int49 = type21.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "boolean" + "'", str6, "boolean");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)Z" + "'", str17, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)C" + "'", str35, "(S)C");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "C" + "'", str36, "C");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(S)F" + "'", str45, "(S)F");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "C" + "'", str48, "C");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
    }

    @Test
    public void test06252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06252");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter7 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str13 = type12.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray22);
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type12, list25, false);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray41);
        java.lang.String str43 = type28.getDescriptor();
        int int44 = type28.getSort();
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type28, list45, true);
        org.mockito.asm.tree.analysis.Value value48 = basicInterpreter7.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) analyzerException6, value48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("double", (java.lang.Throwable) analyzerException6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        int int67 = value66.getSize();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier60.merge(value63, value66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value68);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException69);
        analyzerException50.addSuppressed((java.lang.Throwable) analyzerException69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: ;", (java.lang.Throwable) analyzerException50);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/AnalyzerException", (java.lang.Throwable) analyzerException50);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "boolean" + "'", str13, "boolean");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(C)Z" + "'", str24, "(C)Z");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(S)C" + "'", str42, "(S)C");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "C" + "'", str43, "C");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(value68);
    }

    @Test
    public void test06253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06253");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        int int15 = value14.getSize();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier8.merge(value11, value14);
        org.mockito.asm.tree.analysis.Value value17 = basicInterpreter0.copyOperation(abstractInsnNode1, value14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        int int31 = value30.getSize();
        org.mockito.asm.tree.analysis.Value value32 = simpleVerifier24.merge(value27, value30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        boolean boolean51 = type41.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type41, true);
        org.mockito.asm.Type type54 = null;
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        int int72 = value71.getSize();
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier65.merge(value68, value71);
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier53.merge(value58, value73);
        org.mockito.asm.tree.analysis.Value value75 = basicInterpreter0.merge(value27, value58);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType("LS;");
        java.lang.String str78 = type77.getDescriptor();
        org.mockito.asm.tree.analysis.Value value79 = basicInterpreter0.newValue(type77);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode80 = null;
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass83 = type82.getClass();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        java.lang.String str87 = type86.getDescriptor();
        org.mockito.asm.Type type88 = type86.getElementType();
        java.lang.String str89 = type86.getClassName();
        int int90 = type86.getDimensions();
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getObjectType("org/mockito/asm/Type");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type86, type92, true);
        org.mockito.asm.Type type96 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str97 = type96.getDescriptor();
        org.mockito.asm.tree.analysis.Value value98 = simpleVerifier94.newValue(type96);
        org.mockito.asm.tree.analysis.Value value99 = basicInterpreter0.copyOperation(abstractInsnNode80, value98);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(C)S" + "'", str49, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "LS;" + "'", str78, "LS;");
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str87, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "org.mockito.asm.Type" + "'", str89, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertNotNull(type96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "S" + "'", str97, "S");
        org.junit.Assert.assertNotNull(value98);
        org.junit.Assert.assertNotNull(value99);
    }

    @Test
    public void test06254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06254");
        java.lang.Object obj3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;", obj3, value13);
        java.lang.Throwable[] throwableArray20 = analyzerException19.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        analyzerException19.addSuppressed((java.lang.Throwable) analyzerException22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V", (java.lang.Throwable) analyzerException19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        int int46 = value45.getSize();
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier39.merge(value42, value45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException48);
        java.lang.Throwable[] throwableArray50 = analyzerException49.getSuppressed();
        java.lang.Throwable[] throwableArray51 = analyzerException49.getSuppressed();
        analyzerException29.addSuppressed((java.lang.Throwable) analyzerException49);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException53 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Z", (java.lang.Throwable) analyzerException29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("short");
        analyzerException29.addSuppressed((java.lang.Throwable) analyzerException55);
        analyzerException24.addSuppressed((java.lang.Throwable) analyzerException55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("()LC)L(S)C;", (java.lang.Throwable) analyzerException24);
        java.lang.String str59 = analyzerException58.toString();
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: ()LC)L(S)C;" + "'", str59, "org.mockito.asm.tree.analysis.AnalyzerException: ()LC)L(S)C;");
    }

    @Test
    public void test06255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06255");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        int int21 = value18.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type30, true);
        org.mockito.asm.Type type43 = null;
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        int int61 = value60.getSize();
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier54.merge(value57, value60);
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier42.merge(value47, value62);
        org.mockito.asm.tree.analysis.Value value64 = simpleVerifier5.merge(value18, value62);
        int int65 = value64.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;", (java.lang.Object) analyzerException4, value64);
        java.lang.Throwable[] throwableArray67 = analyzerException66.getSuppressed();
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(throwableArray67);
    }

    @Test
    public void test06256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06256");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("(S)Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        java.lang.String str8 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass5);
        boolean boolean10 = type2.equals((java.lang.Object) str9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type11, false);
        org.mockito.asm.Type type14 = type2.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type14, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value18 = simpleVerifier16.newOperation(abstractInsnNode17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org/mockito/asm/Type" + "'", str8, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/Type" + "'", str9, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type14);
    }

    @Test
    public void test06257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06257");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type15, true);
        boolean boolean18 = type1.equals((java.lang.Object) simpleVerifier17);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier17.newValue(type20);
        int int22 = type20.getDimensions();
        java.lang.String str23 = type20.getInternalName();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        boolean boolean37 = type27.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray38);
        java.lang.String str40 = type25.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        java.lang.String str48 = type44.getDescriptor();
        int int50 = type44.getOpcode((int) (short) 0);
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type44, list51, true);
        int int54 = type44.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        int int62 = type56.getSort();
        java.lang.String str63 = type56.toString();
        java.lang.String str64 = type56.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type56, true);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException68 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)C");
        java.lang.Class<?> wildcardClass69 = analyzerException68.getClass();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass69);
        int int71 = type70.getSize();
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type70, list72, false);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getReturnType("Lorg.mockito.asm.tree.analysis.BasicValue;");
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int81 = type80.getSort();
        java.lang.String str82 = type80.toString();
        org.mockito.asm.Type type83 = type80.getElementType();
        int int84 = type80.getDimensions();
        java.lang.String str85 = type80.getDescriptor();
        java.lang.String str86 = type80.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier87 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value89 = basicVerifier87.newValue(type88);
        int int90 = value89.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Lorg/mockito/asm/tree/analysis/BasicValue;", (java.lang.Object) str86, value89);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException", (java.lang.Object) "Lorg.mockito.asm.tree.analysis.BasicValue;", value89);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException93 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)L(S)Lorg/mockito/asm/Type;;", (java.lang.Object) type44, value89);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)LLdouble;;", (java.lang.Object) str23, value89);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "boolean" + "'", str2, "boolean");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)Z" + "'", str13, "(C)Z");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (C)S" + "'", str23, "org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)C" + "'", str39, "(S)C");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "C" + "'", str48, "C");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 4 + "'", int62 == 4);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "S" + "'", str63, "S");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "S" + "'", str64, "S");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str82, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str85, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str86, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
    }

    @Test
    public void test06258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06258");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(C)L(S)C;");
        java.lang.String str4 = type3.getInternalName();
        org.mockito.asm.Type[] typeArray6 = org.mockito.asm.Type.getArgumentTypes("(C)Lmockito/asm/Type;");
        java.lang.String str7 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray6);
        java.lang.String str8 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray6);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(S)C" + "'", str4, "(S)C");
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(C)L(S)C;" + "'", str7, "(C)L(S)C;");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(C)Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/Type;" + "'", str8, "(C)Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06259");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass3 = type2.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type7 = type6.getElementType();
        org.mockito.asm.Type type8 = type6.getElementType();
        java.lang.String str9 = type8.getInternalName();
        int int10 = type8.getSize();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass14 = type13.getClass();
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        java.lang.String str16 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass14);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        org.mockito.asm.tree.analysis.Value value18 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type17, value18);
        boolean boolean21 = type17.equals((java.lang.Object) 188);
        org.mockito.asm.Type type22 = type17.getElementType();
        int int23 = type17.getSort();
        boolean boolean24 = type8.equals((java.lang.Object) type17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        boolean boolean36 = type26.equals((java.lang.Object) '4');
        java.lang.String str37 = type26.toString();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        boolean boolean50 = type40.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray51);
        int int53 = type38.getSize();
        boolean boolean55 = type38.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type38, false);
        java.lang.String str58 = type38.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type60, list66, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass71 = type70.getClass();
        java.lang.String str72 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass71);
        java.lang.String str73 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass71);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass71);
        org.mockito.asm.Type type75 = type74.getElementType();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type76, type78, list79, false);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str83 = type82.getDescriptor();
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier81.newValue(type82);
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type75, type82, list85, true);
        java.lang.String str88 = type75.toString();
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier68.newValue(type75);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException90 = new org.mockito.asm.tree.analysis.AnalyzerException("V", (java.lang.Object) type17, value89);
        java.lang.String str91 = type17.getInternalName();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "g/mockito/asm/Type" + "'", str9, "g/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str16, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)S" + "'", str34, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "S" + "'", str37, "S");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)S" + "'", str48, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(S)C" + "'", str52, "(S)C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str72, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str73, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "S" + "'", str83, "S");
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Lg/mockito/asm/Type;" + "'", str88, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org/mockito/asm/Type" + "'", str91, "org/mockito/asm/Type");
    }

    @Test
    public void test06260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06260");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type4 = type1.getElementType();
        java.lang.String str5 = type1.getClassName();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        java.lang.String str8 = type7.getInternalName();
        org.mockito.asm.Type[] typeArray10 = org.mockito.asm.Type.getArgumentTypes("(C)Z");
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray10);
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        int int30 = value29.getSize();
        org.mockito.asm.tree.analysis.Value value31 = simpleVerifier23.merge(value26, value29);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException33 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)S", (java.lang.Object) 175, value31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        int int56 = value55.getSize();
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier49.merge(value52, value55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value57);
        analyzerException40.addSuppressed((java.lang.Throwable) analyzerException58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException40);
        java.lang.Throwable throwable62 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        int int80 = value79.getSize();
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier73.merge(value76, value79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException82 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value81);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException82);
        java.lang.Throwable[] throwableArray84 = analyzerException83.getSuppressed();
        analyzerException63.addSuppressed((java.lang.Throwable) analyzerException83);
        java.lang.Throwable[] throwableArray86 = analyzerException83.getSuppressed();
        java.lang.Throwable throwable88 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable88);
        analyzerException83.addSuppressed((java.lang.Throwable) analyzerException89);
        java.lang.Throwable[] throwableArray91 = analyzerException89.getSuppressed();
        analyzerException60.addSuppressed((java.lang.Throwable) analyzerException89);
        analyzerException36.addSuppressed((java.lang.Throwable) analyzerException60);
        java.lang.Throwable[] throwableArray94 = analyzerException60.getSuppressed();
        analyzerException33.addSuppressed((java.lang.Throwable) analyzerException60);
        boolean boolean96 = type1.equals((java.lang.Object) analyzerException60);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.mockito.asm.Type" + "'", str5, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str8, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(C)LLorg/mockito/asm/tree/analysis/SimpleVerifier;;" + "'", str11, "(C)LLorg/mockito/asm/tree/analysis/SimpleVerifier;;");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str12, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(throwableArray91);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test06261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06261");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        java.lang.String str14 = type10.getDescriptor();
        java.lang.Class<?> wildcardClass15 = type10.getClass();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass15);
        org.mockito.asm.Type type17 = type16.getElementType();
        org.mockito.asm.Type type18 = type17.getElementType();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type20, true);
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type19, list23, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type18, false);
        java.lang.String str28 = type18.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "C" + "'", str14, "C");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "mockito.asm.Type" + "'", str28, "mockito.asm.Type");
    }

    @Test
    public void test06262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06262");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("rg.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type");
    }

    @Test
    public void test06263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06263");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: (SC)S");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06264");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(SC)C");
        java.lang.String str2 = type1.getClassName();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(SC)LC;");
        org.mockito.asm.Type type6 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str7 = type6.getClassName();
        java.lang.String str8 = type6.getDescriptor();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("(S)C");
        int int11 = type10.getSize();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("(S)S");
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray23);
        boolean boolean26 = type16.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray27);
        java.lang.String str29 = type14.getDescriptor();
        int int30 = type14.getSort();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        boolean boolean43 = type33.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray44);
        int int46 = type31.getSize();
        boolean boolean48 = type31.equals((java.lang.Object) 181);
        int int49 = type31.getSize();
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray50);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray50);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray50);
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray50);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray50);
        boolean boolean56 = type1.equals((java.lang.Object) str55);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "(SC)C" + "'", str2, "(SC)C");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "L(SC)C;" + "'", str3, "L(SC)C;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "double" + "'", str7, "double");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "D" + "'", str8, "D");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(C)S" + "'", str24, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(S)C" + "'", str28, "(S)C");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(S)C" + "'", str45, "(S)C");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)C" + "'", str51, "(C)C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)C" + "'", str53, "(C)C");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)D" + "'", str54, "(C)D");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)LC;" + "'", str55, "(C)LC;");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test06265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06265");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        java.lang.String str18 = type14.getDescriptor();
        int int20 = type14.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        int int35 = type29.getSort();
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray36);
        java.lang.String str38 = type24.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type24, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type14, true);
        java.lang.Class<?> wildcardClass43 = type14.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/Type" + "'", str9, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(S)C" + "'", str37, "(S)C");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "C" + "'", str38, "C");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test06266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06266");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list37, false);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        boolean boolean52 = type42.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray53);
        java.lang.String str55 = type40.getDescriptor();
        int int56 = type40.getSort();
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type40, list57, true);
        boolean boolean60 = type17.equals((java.lang.Object) type21);
        int int61 = type17.getSize();
        java.lang.String str62 = type17.getClassName();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        int int68 = type66.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, false);
        java.lang.Class<?> wildcardClass71 = type66.getClass();
        boolean boolean72 = type17.equals((java.lang.Object) wildcardClass71);
        java.lang.String str73 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass71);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass71);
        java.lang.String str75 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass71);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass71);
        int int77 = type76.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)S" + "'", str50, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(S)C" + "'", str54, "(S)C");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "char" + "'", str62, "char");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "org/mockito/asm/Type" + "'", str73, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str75, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
    }

    @Test
    public void test06267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06267");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("C");
        java.lang.Class<?> wildcardClass2 = analyzerException1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str8 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str3, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str5, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str6, "org/mockito/asm/tree/analysis/AnalyzerException");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str8, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str9, "org/mockito/asm/tree/analysis/AnalyzerException");
    }

    @Test
    public void test06268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06268");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        int int21 = type3.getSort();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type23, true);
        int int26 = type22.getSize();
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.LONG_TYPE;
        int int31 = type30.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter32 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode33 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        int int47 = value46.getSize();
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier40.merge(value43, value46);
        org.mockito.asm.tree.analysis.Value value49 = basicInterpreter32.copyOperation(abstractInsnNode33, value46);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode50 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        int int64 = value63.getSize();
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier57.merge(value60, value63);
        int int66 = value63.getSize();
        org.mockito.asm.tree.analysis.Value value67 = basicInterpreter32.copyOperation(abstractInsnNode50, value63);
        boolean boolean68 = type30.equals((java.lang.Object) basicInterpreter32);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.LONG_TYPE;
        int int70 = type69.getSort();
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type69, list71, false);
        java.lang.Class<?> wildcardClass74 = simpleVerifier73.getClass();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass74);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getObjectType("(S)V");
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type76, type78, list79, true);
        int int82 = type76.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type76, true);
        int int85 = type76.getDimensions();
        java.lang.Class<?> wildcardClass86 = type76.getClass();
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass86);
        java.lang.String str88 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass86);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 7 + "'", int31 == 7);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 7 + "'", int70 == 7);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org/mockito/asm/Type" + "'", str88, "org/mockito/asm/Type");
    }

    @Test
    public void test06269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06269");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        int int17 = type3.getSize();
        java.lang.String str18 = type3.toString();
        boolean boolean20 = type3.equals((java.lang.Object) 3);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, false);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray42);
        java.lang.String str44 = type29.getDescriptor();
        int int45 = type29.getSort();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        boolean boolean58 = type48.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray59);
        int int61 = type46.getSize();
        boolean boolean63 = type46.equals((java.lang.Object) 181);
        int int64 = type46.getSize();
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray65);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray65);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type73, list74, true);
        java.lang.String str77 = type73.getDescriptor();
        java.lang.Class<?> wildcardClass78 = type73.getClass();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass78);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str81 = type80.getDescriptor();
        java.util.List list82 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type80, list82, false);
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier69.newValue(type79);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass88 = type87.getClass();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        int int92 = type91.getDimensions();
        java.lang.String str93 = type91.toString();
        java.util.List list94 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier96 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type91, list94, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode97 = null;
        java.util.List list98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier96.naryOperation(abstractInsnNode97, list98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(S)C" + "'", str43, "(S)C");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)C" + "'", str60, "(S)C");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(C)C" + "'", str66, "(C)C");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)LC;" + "'", str67, "(C)LC;");
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "C" + "'", str77, "C");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "B" + "'", str81, "B");
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str93, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06270");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("LJ;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        int int9 = type3.getSort();
        java.lang.String str10 = type3.toString();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type11, list12, false);
        boolean boolean16 = type11.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        int int31 = type25.getSort();
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray32);
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray32);
        java.lang.String str35 = type11.toString();
        org.mockito.asm.Type type36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type36, false);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray48);
        boolean boolean51 = type41.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type41 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray52);
        java.lang.String str54 = type39.getDescriptor();
        int int55 = type39.getSort();
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier38.newValue(type39);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier38.newValue(type57);
        java.lang.String str59 = type57.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type57, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value63 = simpleVerifier61.newOperation(abstractInsnNode62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "S" + "'", str10, "S");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(S)C" + "'", str33, "(S)C");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)S" + "'", str34, "(S)S");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "S" + "'", str35, "S");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(C)S" + "'", str49, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(S)C" + "'", str53, "(S)C");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "C" + "'", str54, "C");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Z" + "'", str59, "Z");
    }

    @Test
    public void test06271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06271");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        java.lang.String str28 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        java.lang.String str36 = type32.getDescriptor();
        int int38 = type32.getOpcode((int) (short) 0);
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type32, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        boolean boolean54 = type44.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray55);
        int int57 = type42.getSize();
        boolean boolean59 = type42.equals((java.lang.Object) 181);
        int int60 = type42.getSize();
        java.lang.String str61 = type42.toString();
        int int62 = type42.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        int int70 = type64.getSort();
        java.lang.String str71 = type64.toString();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type72, list73, false);
        boolean boolean77 = type72.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type72, true);
        boolean boolean80 = type32.equals((java.lang.Object) type72);
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier12.newValue(type32);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType("(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass86 = type85.getClass();
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass86);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass86);
        java.lang.String str89 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass86);
        java.lang.String str90 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass86);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass86);
        boolean boolean92 = type83.equals((java.lang.Object) wildcardClass86);
        org.mockito.asm.Type type93 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass86);
        int int94 = type93.getDimensions();
        org.mockito.asm.Type type95 = type93.getElementType();
        org.mockito.asm.Type type96 = type95.getElementType();
        org.mockito.asm.tree.analysis.Value value97 = simpleVerifier12.newValue(type95);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier12.newOperation(abstractInsnNode98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "C" + "'", str28, "C");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "C" + "'", str36, "C");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(S)C" + "'", str56, "(S)C");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "C" + "'", str61, "C");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 4 + "'", int70 == 4);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "S" + "'", str71, "S");
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str89, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str90, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertNotNull(type96);
        org.junit.Assert.assertNotNull(value97);
    }

    @Test
    public void test06272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06272");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str5 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.Value value6 = simpleVerifier3.newValue(type4);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("double", (java.lang.Object) 7, value11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass15 = type14.getClass();
        java.lang.String str16 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass15);
        java.lang.String str17 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass15);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass15);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass15);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getObjectType("Z");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        int int31 = type25.getSort();
        int int32 = type25.getSize();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int35 = type34.getSort();
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type34, list36, true);
        int int39 = type34.getDimensions();
        org.mockito.asm.tree.analysis.Value value40 = simpleVerifier23.newValue(type34);
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier3.merge(value11, value40);
        int int42 = value11.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "I" + "'", str5, "I");
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str16, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str17, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
    }

    @Test
    public void test06273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06273");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("V");
        java.lang.String str2 = type1.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "V" + "'", str2, "V");
    }

    @Test
    public void test06274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06274");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        java.lang.String str2 = analyzerException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str2, "org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
    }

    @Test
    public void test06275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06275");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray29);
        boolean boolean32 = type22.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray33);
        java.lang.String str35 = type20.getDescriptor();
        int int36 = type20.getSort();
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type20, list37, true);
        java.lang.Class<?> wildcardClass40 = simpleVerifier39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)S" + "'", str30, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "C" + "'", str35, "C");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str41, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertNotNull(type42);
    }

    @Test
    public void test06276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06276");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        org.mockito.asm.Type type21 = null;
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = simpleVerifier20.newValue(type23);
        org.mockito.asm.Type[] typeArray26 = org.mockito.asm.Type.getArgumentTypes("(S)S");
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray41);
        int int43 = type28.getSize();
        boolean boolean45 = type28.equals((java.lang.Object) 181);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getObjectType("(S)C");
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type47, list48, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass53 = type52.getClass();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass53);
        java.lang.String str55 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass53);
        java.lang.String str56 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass53);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass53);
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier50.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type60, true);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str64 = type63.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray73 = new org.mockito.asm.Type[] { type72 };
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray73);
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray73);
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type63, list76, false);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str80 = type79.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type84, list85, true);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray89 = new org.mockito.asm.Type[] { type88 };
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray89);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type79, typeArray89);
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray89);
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type57, typeArray89);
        java.lang.String str94 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray89);
        int int95 = type23.getSort();
        int int96 = type23.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNull(value24);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)V" + "'", str27, "(S)V");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(S)C" + "'", str42, "(S)C");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str55, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org/mockito/asm/Type" + "'", str56, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "boolean" + "'", str64, "boolean");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(C)S" + "'", str74, "(C)S");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(C)Z" + "'", str75, "(C)Z");
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "boolean" + "'", str80, "boolean");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(C)S" + "'", str90, "(C)S");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(C)Z" + "'", str91, "(C)Z");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(C)C" + "'", str92, "(C)C");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str93, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(C)V" + "'", str94, "(C)V");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test06277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06277");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("J");
        // The following exception was thrown during execution in test generation
        try {
            int int2 = type1.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06278");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        int int7 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, false);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        boolean boolean22 = type12.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray23);
        java.lang.String str25 = type10.getDescriptor();
        int int26 = type10.getSort();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        boolean boolean39 = type29.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray40);
        int int42 = type27.getSize();
        boolean boolean44 = type27.equals((java.lang.Object) 181);
        int int45 = type27.getSize();
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray46);
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray46);
        boolean boolean49 = type1.equals((java.lang.Object) type3);
        java.lang.String str50 = type1.getClassName();
        java.lang.Class<?> wildcardClass51 = type1.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(S)C" + "'", str24, "(S)C");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)C" + "'", str41, "(S)C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)C" + "'", str47, "(C)C");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)LC;" + "'", str48, "(C)LC;");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.mockito.asm.Type" + "'", str50, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test06279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06279");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: D;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("LLg/mockito/asm/Type;;");
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException3);
        java.lang.Throwable[] throwableArray5 = analyzerException3.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test06280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06280");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, list17, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier19.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        int int25 = type23.getOpcode(84);
        int int26 = type23.getSize();
        org.mockito.asm.tree.analysis.Value value27 = simpleVerifier19.newValue(type23);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        int int33 = type31.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, false);
        java.lang.Class<?> wildcardClass36 = type31.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass36);
        java.lang.String str38 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass36);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        org.mockito.asm.Type type40 = type39.getElementType();
        int int41 = type39.getSort();
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier19.newValue(type39);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode43 = null;
        java.util.List list44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value45 = simpleVerifier19.naryOperation(abstractInsnNode43, list44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "boolean" + "'", str5, "boolean");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)Z" + "'", str16, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 84 + "'", int25 == 84);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str37, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str38, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(value42);
    }

    @Test
    public void test06281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06281");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean3 = type1.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int6 = type5.getSort();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, list7, false);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass12 = type11.getClass();
        java.lang.String str13 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type16, list17, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException38);
        java.lang.Throwable[] throwableArray40 = analyzerException39.getSuppressed();
        java.lang.Throwable[] throwableArray41 = analyzerException39.getSuppressed();
        java.lang.Class<?> wildcardClass42 = analyzerException39.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        int int45 = type44.getDimensions();
        org.mockito.asm.tree.analysis.Value value46 = simpleVerifier19.newValue(type44);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value48 = simpleVerifier19.newOperation(abstractInsnNode47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str13, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str43, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(value46);
    }

    @Test
    public void test06282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06282");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass4);
        java.lang.String str8 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass4);
        boolean boolean9 = type1.equals((java.lang.Object) str8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, false);
        org.mockito.asm.Type type13 = type1.getElementType();
        int int15 = type1.getOpcode(9);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org/mockito/asm/Type" + "'", str8, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 13 + "'", int15 == 13);
    }

    @Test
    public void test06283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06283");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = type5.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        java.lang.String str19 = type8.toString();
        int int20 = type8.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type8, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType("(C)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value25 = simpleVerifier22.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str31 = type30.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray40);
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type30, list43, false);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        boolean boolean58 = type48.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray59);
        java.lang.String str61 = type46.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        java.lang.String str69 = type65.getDescriptor();
        int int71 = type65.getOpcode((int) (short) 0);
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type65, list72, true);
        int int75 = type46.getSort();
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type46, list76, false);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.BYTE_TYPE;
        int int80 = type79.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type79, false);
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier22.newValue(type30);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode84 = null;
        java.util.List list85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value86 = simpleVerifier22.naryOperation(abstractInsnNode84, list85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "S" + "'", str19, "S");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "boolean" + "'", str31, "boolean");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)Z" + "'", str42, "(C)Z");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)C" + "'", str60, "(S)C");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "C" + "'", str61, "C");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 3 + "'", int80 == 3);
        org.junit.Assert.assertNotNull(value83);
    }

    @Test
    public void test06284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06284");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.tree.analysis.Value value8 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type7, value8);
        java.lang.String str10 = type7.getInternalName();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getReturnType("LC;");
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        int int28 = type13.getSize();
        java.lang.String str29 = type13.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type13, false);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass34 = type33.getClass();
        java.lang.String str35 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        java.lang.String str36 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass34);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        int int46 = type44.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, false);
        java.lang.String str49 = type42.toString();
        org.mockito.asm.Type[] typeArray51 = org.mockito.asm.Type.getArgumentTypes("(C)S");
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray51);
        java.lang.String str54 = type40.getInternalName();
        org.mockito.asm.tree.analysis.Value value55 = simpleVerifier31.newValue(type40);
        int int56 = value55.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException57 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected 0, but found I", (java.lang.Object) type7, value55);
        java.lang.Throwable[] throwableArray58 = analyzerException57.getSuppressed();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org/mockito/asm/Type" + "'", str10, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str35, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str36, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org/mockito/asm/Type" + "'", str38, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LC;" + "'", str49, "LC;");
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)LC;" + "'", str52, "(C)LC;");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str53, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org/mockito/asm/Type" + "'", str54, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test06285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06285");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        boolean boolean22 = type8.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type31, true);
        org.mockito.asm.Type type44 = null;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier43.newValue(type46);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type46, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        java.lang.String str57 = type53.getDescriptor();
        java.lang.Class<?> wildcardClass58 = type53.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type61 = type60.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type61, true);
        int int65 = type61.getOpcode(187);
        org.mockito.asm.Type[] typeArray67 = org.mockito.asm.Type.getArgumentTypes("(S)B");
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray67);
        boolean boolean70 = type61.equals((java.lang.Object) "(C)LLorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        org.mockito.asm.Type type71 = type61.getElementType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "C" + "'", str57, "C");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/Type" + "'", str59, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 191 + "'", int65 == 191);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(S)Lg/mockito/asm/Type;" + "'", str68, "(S)Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
    }

    @Test
    public void test06286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06286");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("(C)LLorg/mockito/asm/tree/analysis/SimpleVerifier;;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06287");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean3 = type1.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str6 = type5.getDescriptor();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str8 = type7.getClassName();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        int int25 = value24.getSize();
        org.mockito.asm.tree.analysis.Value value26 = simpleVerifier18.merge(value21, value24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value26);
        boolean boolean28 = type9.equals((java.lang.Object) analyzerException27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray42);
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray42);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray42);
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list46, false);
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, list49, true);
        int int52 = type5.getSort();
        java.lang.String str53 = type5.getDescriptor();
        java.lang.Class<?> wildcardClass54 = type5.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "S" + "'", str6, "S");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "double" + "'", str8, "double");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(S)C" + "'", str43, "(S)C");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(S)V" + "'", str44, "(S)V");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(S)D" + "'", str45, "(S)D");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "S" + "'", str53, "S");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test06288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06288");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value18);
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException19);
        java.lang.Throwable[] throwableArray21 = analyzerException19.getSuppressed();
        java.lang.Class<?> wildcardClass22 = throwableArray21.getClass();
        java.lang.String str23 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass22);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[Ljava/lang/Throwable;" + "'", str23, "[Ljava/lang/Throwable;");
    }

    @Test
    public void test06289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06289");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        boolean boolean13 = type3.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type3 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray14);
        int int16 = type1.getSize();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type18, false);
        boolean boolean22 = type18.equals((java.lang.Object) 23);
        java.lang.String str23 = type18.getClassName();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass27 = type26.getClass();
        java.lang.String str28 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        java.lang.String str29 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass27);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass27);
        org.mockito.asm.tree.analysis.Value value31 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type30, value31);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type30, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type18, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass40 = type39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.asm.tree.analysis.Value value44 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type43, value44);
        boolean boolean47 = type43.equals((java.lang.Object) 188);
        int int48 = type43.getSort();
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type43, list49, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int54 = type53.getSort();
        java.lang.String str55 = type53.toString();
        org.mockito.asm.Type type56 = type53.getElementType();
        int int57 = type56.getSize();
        int int58 = type56.getSort();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        int int61 = type60.getSize();
        java.lang.String str62 = type60.getClassName();
        org.mockito.asm.Type type63 = type60.getElementType();
        java.lang.String str64 = type63.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type63, true);
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier51.newValue(type56);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode68 = null;
        java.util.List list69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value70 = simpleVerifier51.naryOperation(abstractInsnNode68, list69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(C)S" + "'", str11, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(S)C" + "'", str15, "(S)C");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "char" + "'", str23, "char");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str28, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str29, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str41, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str42, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str55, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I" + "'", str62, "org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Lg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;" + "'", str64, "Lg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        org.junit.Assert.assertNotNull(value67);
    }

    @Test
    public void test06290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06290");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("B");
        java.lang.String str2 = type1.getClassName();
        int int3 = type1.getSort();
        java.lang.String str4 = type1.getInternalName();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected 0, but found I");
        java.lang.String str7 = type6.getInternalName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type6, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str13 = type12.getDescriptor();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str15 = type14.getClassName();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        int int32 = value31.getSize();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier25.merge(value28, value31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value33);
        boolean boolean35 = type16.equals((java.lang.Object) analyzerException34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        boolean boolean48 = type38.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray49);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray49);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray49);
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list53, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = type57.getSort();
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier55.newValue(type57);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getType("LS;");
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier55.newValue(type62);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException");
        org.mockito.asm.tree.analysis.Value value66 = simpleVerifier55.newValue(type65);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value67 = simpleVerifier9.unaryOperation(abstractInsnNode10, value66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "B" + "'", str2, "B");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "B" + "'", str4, "B");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected 0, but found I" + "'", str7, "org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected 0, but found I");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "S" + "'", str13, "S");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double" + "'", str15, "double");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(C)S" + "'", str46, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(S)C" + "'", str50, "(S)C");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(S)V" + "'", str51, "(S)V");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(S)D" + "'", str52, "(S)D");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 4 + "'", int59 == 4);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
    }

    @Test
    public void test06291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06291");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        boolean boolean20 = type10.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray21);
        java.lang.String str23 = type8.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        java.lang.String str31 = type27.getDescriptor();
        int int33 = type27.getOpcode((int) (short) 0);
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type27, list34, true);
        int int37 = type27.getSort();
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type27, list38, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type6, false);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getReturnType("(S)D");
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type44, list45, false);
        int int48 = type44.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "I" + "'", str7, "I");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)S" + "'", str18, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(S)C" + "'", str22, "(S)C");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "C" + "'", str31, "C");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 8 + "'", int48 == 8);
    }

    @Test
    public void test06292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06292");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getObjectType("(S)F");
        int int15 = type14.getDimensions();
        java.lang.String str16 = type14.toString();
        int int17 = type14.getSize();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass20 = type19.getClass();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass20);
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass20);
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass20);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass20);
        java.lang.String str25 = type24.getDescriptor();
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type24, list26, true);
        int int29 = type14.getDimensions();
        org.mockito.asm.Type type30 = type14.getElementType();
        java.lang.String str31 = type14.getDescriptor();
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list32, true);
        org.mockito.asm.Type[] typeArray36 = org.mockito.asm.Type.getArgumentTypes("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray36);
        java.lang.String str38 = type12.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/Type" + "'", str9, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L(S)F;" + "'", str16, "L(S)F;");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str23, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str25, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "L(S)F;" + "'", str31, "L(S)F;");
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str37, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str38, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06293");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException9);
        java.lang.Throwable[] throwableArray11 = analyzerException9.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("Lg/mockito/asm/Type;", (java.lang.Throwable) analyzerException9);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException17);
        analyzerException9.addSuppressed((java.lang.Throwable) analyzerException17);
        analyzerException5.addSuppressed((java.lang.Throwable) analyzerException9);
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)L(S)C;", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: char", (java.lang.Throwable) analyzerException22);
        java.lang.Throwable[] throwableArray24 = analyzerException22.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test06294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06294");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier36.merge(value57, value74);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier6.merge(value29, value74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        int int78 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier6.newValue(type77);
        java.lang.Class<?> wildcardClass80 = value79.getClass();
        java.lang.String str81 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass80);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass80);
        java.lang.Class<?> wildcardClass83 = type82.getClass();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        java.lang.String str86 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass83);
        java.lang.String str87 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass83);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 7 + "'", int78 == 7);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str81, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org/mockito/asm/Type" + "'", str86, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org/mockito/asm/Type" + "'", str87, "org/mockito/asm/Type");
    }

    @Test
    public void test06295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06295");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value20);
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: D", (java.lang.Throwable) analyzerException3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
    }

    @Test
    public void test06296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06296");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.tree.analysis.Value value8 = simpleVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        boolean boolean27 = type17.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type17, true);
        boolean boolean31 = type17.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.Value value32 = simpleVerifier5.newValue(type17);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass35 = type34.getClass();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        java.lang.String str39 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass43 = type42.getClass();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        boolean boolean47 = type40.equals((java.lang.Object) str46);
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier5.newValue(type40);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getReturnType("(C)LC;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type50, true);
        int int54 = type50.getOpcode((int) (short) 1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        int int62 = type56.getSort();
        boolean boolean64 = type56.equals((java.lang.Object) 192);
        int int65 = type56.getSort();
        java.lang.String str66 = type56.toString();
        java.lang.String str67 = type56.getDescriptor();
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type56, list68, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        java.util.List list72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value73 = simpleVerifier70.naryOperation(abstractInsnNode71, list72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "S" + "'", str7, "S");
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(C)S" + "'", str25, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str39, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str46, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 5 + "'", int54 == 5);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 4 + "'", int62 == 4);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "S" + "'", str66, "S");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "S" + "'", str67, "S");
    }

    @Test
    public void test06297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06297");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        boolean boolean19 = type9.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type9, true);
        boolean boolean23 = type9.equals((java.lang.Object) 158);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType("S");
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type25, list26, false);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, false);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str36 = type35.getDescriptor();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) simpleVerifier28, value37);
        java.lang.Class<?> wildcardClass39 = simpleVerifier28.getClass();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass39);
        org.mockito.asm.Type type41 = type40.getElementType();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "S" + "'", str36, "S");
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
    }

    @Test
    public void test06298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06298");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier36.merge(value57, value74);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier6.merge(value29, value74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        int int78 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier6.newValue(type77);
        java.lang.Class<?> wildcardClass80 = value79.getClass();
        java.lang.String str81 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass80);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass80);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass80);
        int int84 = type83.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 7 + "'", int78 == 7);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str81, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }

    @Test
    public void test06299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06299");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.tree.analysis.Value value8 = simpleVerifier5.newValue(type6);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass14 = type13.getClass();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type16, list17, true);
        java.lang.String str20 = type10.getDescriptor();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier5.newValue(type10);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode22 = null;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass28 = type27.getClass();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type30, list31, true);
        java.lang.String str34 = type24.getDescriptor();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I");
        java.lang.String str37 = type36.getDescriptor();
        java.lang.String str38 = type36.getDescriptor();
        java.lang.String str39 = type36.getDescriptor();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        int int47 = type45.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, false);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type58 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray59);
        boolean boolean62 = type52.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray63);
        java.lang.String str65 = type50.getDescriptor();
        int int66 = type50.getSort();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type71, list72, true);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type75 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray76);
        boolean boolean79 = type69.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray80);
        int int82 = type67.getSize();
        boolean boolean84 = type67.equals((java.lang.Object) 181);
        int int85 = type67.getSize();
        org.mockito.asm.Type[] typeArray86 = new org.mockito.asm.Type[] { type67 };
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray86);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray86);
        boolean boolean89 = type41.equals((java.lang.Object) type43);
        java.lang.Class<?> wildcardClass90 = type41.getClass();
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass90);
        java.lang.String str92 = type91.getClassName();
        boolean boolean93 = type36.equals((java.lang.Object) type91);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier95 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type91, false);
        org.mockito.asm.Type type97 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I");
        org.mockito.asm.tree.analysis.Value value98 = simpleVerifier95.newValue(type97);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier5.unaryOperation(abstractInsnNode22, value98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "S" + "'", str7, "S");
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "S" + "'", str11, "S");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LS;" + "'", str20, "LS;");
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "S" + "'", str25, "S");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LS;" + "'", str34, "LS;");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;" + "'", str37, "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;" + "'", str38, "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;" + "'", str39, "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(C)S" + "'", str60, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(S)C" + "'", str64, "(S)C");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "C" + "'", str65, "C");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(C)S" + "'", str77, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(S)C" + "'", str81, "(S)C");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(C)C" + "'", str87, "(C)C");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(C)LC;" + "'", str88, "(C)LC;");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.mockito.asm.Type" + "'", str92, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertNotNull(value98);
    }

    @Test
    public void test06300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06300");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: V");
        java.lang.String str2 = analyzerException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V" + "'", str2, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: V");
    }

    @Test
    public void test06301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06301");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org/mockito/asm/Type" + "'", str3, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org/mockito/asm/Type" + "'", str4, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
    }

    @Test
    public void test06302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06302");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg.mockito.asm.Type;");
        java.lang.String str2 = type1.getInternalName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.mockito.asm.Type" + "'", str2, "org.mockito.asm.Type");
    }

    @Test
    public void test06303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06303");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        java.lang.String str2 = type1.getInternalName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        boolean boolean22 = type12.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray23);
        int int25 = type10.getSize();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type27, false);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str31 = type30.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type44, true);
        boolean boolean47 = type30.equals((java.lang.Object) simpleVerifier46);
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type30, list48, false);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.BYTE_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type51, list52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list62, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        int int71 = value70.getSize();
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier64.merge(value67, value70);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value72);
        boolean boolean74 = type55.equals((java.lang.Object) analyzerException73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list80 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type79, list80, true);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray84 = new org.mockito.asm.Type[] { type83 };
        java.lang.String str85 = org.mockito.asm.Type.getMethodDescriptor(type77, typeArray84);
        boolean boolean87 = type77.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray88 = new org.mockito.asm.Type[] { type77 };
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type75, typeArray88);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray88);
        java.lang.String str91 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray88);
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray88);
        java.lang.String str93 = type9.getClassName();
        java.util.List list94 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier96 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list94, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode97 = null;
        java.util.List list98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier96.naryOperation(abstractInsnNode97, list98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str2, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(S)C" + "'", str24, "(S)C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "boolean" + "'", str31, "boolean");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)Z" + "'", str42, "(C)Z");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(C)S" + "'", str85, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(S)C" + "'", str89, "(S)C");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(S)V" + "'", str90, "(S)V");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(S)B" + "'", str91, "(S)B");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(S)Lorg/mockito/asm/Type;" + "'", str92, "(S)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "org.mockito.asm.Type" + "'", str93, "org.mockito.asm.Type");
    }

    @Test
    public void test06304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06304");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter1 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier9.merge(value12, value15);
        org.mockito.asm.tree.analysis.Value value18 = basicInterpreter1.copyOperation(abstractInsnNode2, value15);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int21 = type20.getSort();
        java.lang.String str22 = type20.toString();
        org.mockito.asm.Type type23 = type20.getElementType();
        int int24 = type23.getSort();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        int int41 = value40.getSize();
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier34.merge(value37, value40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value42);
        boolean boolean44 = type25.equals((java.lang.Object) analyzerException43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        boolean boolean57 = type47.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type47 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray58);
        java.lang.String str60 = type45.getDescriptor();
        int int61 = type45.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type45, true);
        java.lang.String str64 = type45.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type45, false);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getObjectType("I");
        org.mockito.asm.tree.analysis.Value value69 = simpleVerifier66.newValue(type68);
        int int70 = value69.getSize();
        int int71 = value69.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException72 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;", (java.lang.Object) value18, value69);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(S)C" + "'", str59, "(S)C");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "C" + "'", str60, "C");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "C" + "'", str64, "C");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
    }

    @Test
    public void test06305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06305");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, false);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        boolean boolean19 = type9.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray20);
        java.lang.String str22 = type7.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        java.lang.String str30 = type26.getDescriptor();
        int int32 = type26.getOpcode((int) (short) 0);
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type26, list33, true);
        int int36 = type7.getSort();
        java.lang.String str37 = type7.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, false);
        java.lang.String str40 = type1.toString();
        int int41 = type1.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, false);
        int int44 = type1.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(S)C" + "'", str21, "(S)C");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "C" + "'", str22, "C");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "C" + "'", str30, "C");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "C" + "'", str37, "C");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Z" + "'", str40, "Z");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
    }

    @Test
    public void test06306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06306");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: C");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type2 = type1.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06307");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str25 = type24.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray34);
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type24, list37, false);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        boolean boolean52 = type42.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray53);
        java.lang.String str55 = type40.getDescriptor();
        int int56 = type40.getSort();
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type40, list57, true);
        boolean boolean60 = type17.equals((java.lang.Object) type21);
        int int61 = type17.getSize();
        java.lang.String str62 = type17.getClassName();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;: expected 183, but found I");
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type64, list65, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode68 = null;
        java.util.List list69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value70 = simpleVerifier67.naryOperation(abstractInsnNode68, list69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean" + "'", str25, "boolean");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)Z" + "'", str36, "(C)Z");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)S" + "'", str50, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(S)C" + "'", str54, "(S)C");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "char" + "'", str62, "char");
        org.junit.Assert.assertNotNull(type64);
    }

    @Test
    public void test06308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06308");
        org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("(SC)C");
        org.junit.Assert.assertNotNull(typeArray1);
    }

    @Test
    public void test06309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06309");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        int int7 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, false);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        boolean boolean22 = type12.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray23);
        java.lang.String str25 = type10.getDescriptor();
        int int26 = type10.getSort();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        boolean boolean39 = type29.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray40);
        int int42 = type27.getSize();
        boolean boolean44 = type27.equals((java.lang.Object) 181);
        int int45 = type27.getSize();
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray46);
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray46);
        boolean boolean49 = type1.equals((java.lang.Object) type3);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass51);
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type52, list53, false);
        int int56 = type52.getSize();
        java.lang.Class<?> wildcardClass57 = type52.getClass();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass57);
        int int59 = type58.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(S)C" + "'", str24, "(S)C");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)C" + "'", str41, "(S)C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)C" + "'", str47, "(C)C");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)LC;" + "'", str48, "(C)LC;");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
    }

    @Test
    public void test06310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06310");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int4 = type3.getSort();
        java.lang.String str5 = type3.toString();
        org.mockito.asm.Type type6 = type3.getElementType();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        int int17 = type11.getSort();
        boolean boolean19 = type11.equals((java.lang.Object) 192);
        int int20 = type11.getSort();
        java.lang.String str21 = type11.toString();
        java.lang.String str22 = type11.getDescriptor();
        int int23 = type11.getSize();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass26 = type25.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        boolean boolean29 = type11.equals((java.lang.Object) type28);
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type28, list30, false);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str38 = type37.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray47);
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type37, list50, false);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        boolean boolean65 = type55.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray66);
        java.lang.String str68 = type53.getDescriptor();
        int int69 = type53.getSort();
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type53, list70, true);
        int int73 = type34.getSort();
        java.lang.String str74 = type34.getDescriptor();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int76 = type75.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type75, true);
        int int79 = type34.getSort();
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier32.newValue(type34);
        java.lang.String str81 = type34.getClassName();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getReturnType("Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;");
        java.lang.String str84 = type83.getDescriptor();
        java.lang.String str85 = type83.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type83, false);
        int int89 = type83.getOpcode(0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "S" + "'", str21, "S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "S" + "'", str22, "S");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/Type" + "'", str27, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "boolean" + "'", str38, "boolean");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)S" + "'", str48, "(C)S");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(C)Z" + "'", str49, "(C)Z");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(C)S" + "'", str63, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(S)C" + "'", str67, "(S)C");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "C" + "'", str68, "C");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "C" + "'", str74, "C");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "char" + "'", str81, "char");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "C" + "'", str84, "C");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "C" + "'", str85, "C");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test06311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06311");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException;");
    }

    @Test
    public void test06312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06312");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.Class<?> wildcardClass6 = type5.getClass();
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str10 = type9.getClassName();
        int int12 = type9.getOpcode(0);
        java.lang.String str13 = type9.getClassName();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray23);
        boolean boolean26 = type16.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray27);
        int int29 = type14.getSize();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type31, false);
        boolean boolean35 = type31.equals((java.lang.Object) 23);
        java.lang.String str36 = type31.getClassName();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass40 = type39.getClass();
        java.lang.String str41 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass40);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass40);
        org.mockito.asm.tree.analysis.Value value44 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type43, value44);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type43, false);
        boolean boolean48 = type9.equals((java.lang.Object) type43);
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type43, list49, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        int int59 = type53.getSort();
        int int60 = type53.getSize();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int63 = type62.getSort();
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type62, list64, true);
        int int67 = type62.getDimensions();
        java.lang.String str68 = type62.getInternalName();
        java.lang.String str69 = type62.getInternalName();
        org.mockito.asm.tree.analysis.Value value70 = simpleVerifier51.newValue(type62);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value72 = simpleVerifier51.newOperation(abstractInsnNode71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "double" + "'", str10, "double");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "double" + "'", str13, "double");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(C)S" + "'", str24, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(S)C" + "'", str28, "(S)C");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "char" + "'", str36, "char");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str41, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str42, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 4 + "'", int59 == 4);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str68, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str69, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertNotNull(value70);
    }

    @Test
    public void test06313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06313");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier6.merge(value27, value44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass48 = type47.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type52 = type51.getElementType();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, false);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str60 = type59.getDescriptor();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier58.newValue(type59);
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type59, list62, true);
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier6.newValue(type52);
        java.lang.String str66 = type52.getDescriptor();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z");
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type68, list69, false);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass74 = type73.getClass();
        java.lang.String str75 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass74);
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type77, list78, true);
        int int81 = type68.getSize();
        java.lang.String str82 = type68.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str50, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "S" + "'", str60, "S");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Lg/mockito/asm/Type;" + "'", str66, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str75, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Z" + "'", str82, "Z");
    }

    @Test
    public void test06314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06314");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str21 = type20.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray30);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type34, true);
        boolean boolean37 = type20.equals((java.lang.Object) simpleVerifier36);
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type20, list38, false);
        java.lang.Class<?> wildcardClass41 = type0.getClass();
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass41);
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass41);
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass41);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "boolean" + "'", str21, "boolean");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)Z" + "'", str32, "(C)Z");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str42, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/asm/Type" + "'", str43, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/asm/Type" + "'", str44, "org/mockito/asm/Type");
    }

    @Test
    public void test06315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06315");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("double");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type3, true);
        java.lang.Throwable throwable8 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException9 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException30 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier37.merge(value40, value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = value58.getSize();
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier52.merge(value55, value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        int int74 = value73.getSize();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier67.merge(value70, value73);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier37.merge(value58, value75);
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier10.merge(value29, value76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException78 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException9, value77);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type80 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type80, true);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str84 = type83.getDescriptor();
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier82.newValue(type83);
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier5.merge(value77, value85);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str88 = type87.getClassName();
        int int90 = type87.getOpcode(0);
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier5.newValue(type87);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier93 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type87, false);
        int int94 = type87.getSort();
        java.lang.String str95 = type87.getDescriptor();
        java.lang.Class<?> wildcardClass96 = type87.getClass();
        java.lang.String str97 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass96);
        java.lang.String str98 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass96);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "I" + "'", str84, "I");
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "double" + "'", str88, "double");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 3 + "'", int90 == 3);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 8 + "'", int94 == 8);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "D" + "'", str95, "D");
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "org/mockito/asm/Type" + "'", str97, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str98, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06316");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/BasicValue");
        java.lang.Throwable[] throwableArray3 = analyzerException2.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("short", (java.lang.Throwable) analyzerException2);
        java.lang.String str5 = analyzerException4.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: short" + "'", str5, "org.mockito.asm.tree.analysis.AnalyzerException: short");
    }

    @Test
    public void test06317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06317");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier36.merge(value57, value74);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier6.merge(value29, value74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        int int78 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier6.newValue(type77);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list84 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type81, type83, list84, true);
        int int87 = type81.getSort();
        boolean boolean89 = type81.equals((java.lang.Object) 192);
        java.util.List list90 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier92 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type81, list90, true);
        int int93 = type81.getSort();
        java.lang.String str94 = type81.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            int int95 = type81.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 7 + "'", int78 == 7);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 4 + "'", int87 == 4);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 4 + "'", int93 == 4);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "short" + "'", str94, "short");
    }

    @Test
    public void test06318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06318");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("(C)Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        java.lang.String str2 = type1.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LC)Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str2, "LC)Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
    }

    @Test
    public void test06319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06319");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType("(C)L(S)C;");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        int int9 = type7.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, false);
        java.lang.Class<?> wildcardClass12 = type7.getClass();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] {};
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray14);
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray14);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int19 = type18.getSort();
        java.lang.String str20 = type18.toString();
        org.mockito.asm.Type type21 = type18.getElementType();
        int int22 = type21.getSort();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        int int39 = value38.getSize();
        org.mockito.asm.tree.analysis.Value value40 = simpleVerifier32.merge(value35, value38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value40);
        boolean boolean42 = type23.equals((java.lang.Object) analyzerException41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray52);
        boolean boolean55 = type45.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray56);
        java.lang.String str58 = type43.getDescriptor();
        int int59 = type43.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type43, true);
        java.lang.String str62 = type43.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type43, false);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getObjectType("I");
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier64.newValue(type66);
        int int68 = value67.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException69 = new org.mockito.asm.tree.analysis.AnalyzerException("Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Object) type3, value67);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type74, list75, true);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type78 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type72, typeArray79);
        boolean boolean82 = type72.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray83 = new org.mockito.asm.Type[] { type72 };
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray83);
        java.lang.String str85 = type70.getDescriptor();
        int int86 = type70.getSort();
        java.lang.String str87 = type70.getClassName();
        org.mockito.asm.Type type88 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type88, false);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getObjectType("(S)F");
        int int93 = type92.getDimensions();
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier90.newValue(type92);
        int int95 = value94.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException96 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Lmockito/asm/Type;", (java.lang.Object) type3, value94);
        java.lang.String str97 = analyzerException96.toString();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "()Lorg/mockito/asm/Type;" + "'", str15, "()Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "()LC)L(S)C;" + "'", str16, "()LC)L(S)C;");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str20, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)S" + "'", str53, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(S)C" + "'", str57, "(S)C");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "C" + "'", str62, "C");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(C)S" + "'", str80, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(S)C" + "'", str84, "(S)C");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "C" + "'", str85, "C");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "char" + "'", str87, "char");
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (C)Lmockito/asm/Type;: expected LC)L(S)C;, but found L(S)F;" + "'", str97, "org.mockito.asm.tree.analysis.AnalyzerException: (C)Lmockito/asm/Type;: expected LC)L(S)C;, but found L(S)F;");
    }

    @Test
    public void test06320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06320");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        int int21 = type3.getSort();
        java.lang.String str22 = type3.getClassName();
        org.mockito.asm.Type[] typeArray24 = org.mockito.asm.Type.getArgumentTypes("(S)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray24);
        java.lang.String str26 = type3.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "char" + "'", str22, "char");
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(S)C" + "'", str25, "(S)C");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "C" + "'", str26, "C");
    }

    @Test
    public void test06321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06321");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str1 = type0.getDescriptor();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        java.lang.String str17 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        java.lang.String str25 = type21.getDescriptor();
        int int27 = type21.getOpcode((int) (short) 0);
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type21, list28, true);
        int int31 = type21.getSort();
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type21, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str40 = type39.getDescriptor();
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier34.newValue(type39);
        java.lang.Class<?> wildcardClass43 = simpleVerifier34.getClass();
        java.lang.String str44 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        java.lang.String str45 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        java.lang.String str46 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass43);
        java.lang.String str47 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "I" + "'", str1, "I");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "I" + "'", str40, "I");
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org/mockito/asm/tree/analysis/SimpleVerifier" + "'", str44, "org/mockito/asm/tree/analysis/SimpleVerifier");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str45, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org/mockito/asm/tree/analysis/SimpleVerifier" + "'", str46, "org/mockito/asm/tree/analysis/SimpleVerifier");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str47, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
    }

    @Test
    public void test06322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06322");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        int int8 = type1.getSize();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list12, true);
        int int15 = type10.getDimensions();
        java.lang.String str16 = type10.getInternalName();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getReturnType("(C)LC;");
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type18, list19, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass24 = type23.getClass();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass24);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass24);
        int int28 = type27.getDimensions();
        org.mockito.asm.Type type29 = type27.getElementType();
        int int30 = type29.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str39 = type38.getDescriptor();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list45 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type44, list45, true);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray49);
        boolean boolean52 = type42.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray53);
        java.lang.String str55 = type40.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        java.lang.String str63 = type59.getDescriptor();
        int int65 = type59.getOpcode((int) (short) 0);
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type59, list66, true);
        int int69 = type59.getSort();
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type59, list70, true);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type74, true);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str78 = type77.getDescriptor();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier76.newValue(type77);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier72.newValue(type77);
        int int81 = type77.getSort();
        java.lang.String str82 = type77.getDescriptor();
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier37.newValue(type77);
        boolean boolean84 = type29.equals((java.lang.Object) type77);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.getReturnType("(C)Z");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type86, false);
        boolean boolean89 = type18.equals((java.lang.Object) type77);
        java.lang.String str90 = type77.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            int int91 = type77.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str16, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "I" + "'", str39, "I");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(C)S" + "'", str50, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(S)C" + "'", str54, "(S)C");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "C" + "'", str63, "C");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "I" + "'", str78, "I");
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 5 + "'", int81 == 5);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "I" + "'", str82, "I");
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "int" + "'", str90, "int");
    }

    @Test
    public void test06323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06323");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        java.lang.String str2 = type1.getDescriptor();
        int int3 = type1.getSize();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass6 = type5.getClass();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass6);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass6);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type12, false);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str16 = type15.getClassName();
        int int18 = type15.getOpcode(0);
        java.lang.String str19 = type15.getClassName();
        int int21 = type15.getOpcode(80);
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.newValue(type15);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.Value value24 = null;
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("LC;");
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        boolean boolean39 = type29.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray40);
        int int42 = type27.getSize();
        java.lang.String str43 = type27.toString();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type27, false);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass48 = type47.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        java.lang.String str52 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        int int60 = type58.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, false);
        java.lang.String str63 = type56.toString();
        org.mockito.asm.Type[] typeArray65 = org.mockito.asm.Type.getArgumentTypes("(C)S");
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray65);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray65);
        java.lang.String str68 = type54.getInternalName();
        org.mockito.asm.tree.analysis.Value value69 = simpleVerifier45.newValue(type54);
        int int70 = value69.getSize();
        int int71 = value69.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value72 = simpleVerifier14.binaryOperation(abstractInsnNode23, value24, value69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str2, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str9, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str11, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double" + "'", str16, "double");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "double" + "'", str19, "double");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 83 + "'", int21 == 83);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)C" + "'", str41, "(S)C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "C" + "'", str43, "C");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str50, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org/mockito/asm/Type" + "'", str52, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "LC;" + "'", str63, "LC;");
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(C)LC;" + "'", str66, "(C)LC;");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str67, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org/mockito/asm/Type" + "'", str68, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
    }

    @Test
    public void test06324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06324");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getObjectType("Z");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        int int18 = type12.getSort();
        int int19 = type12.getSize();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int22 = type21.getSort();
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type21, list23, true);
        int int26 = type21.getDimensions();
        org.mockito.asm.tree.analysis.Value value27 = simpleVerifier10.newValue(type21);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        int int33 = type31.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, false);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        java.lang.String str38 = type37.getClassName();
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier35.newValue(type37);
        org.mockito.asm.Type type40 = type37.getElementType();
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier10.newValue(type40);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode42 = null;
        java.lang.Object obj44 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter45 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str51 = type50.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, true);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type59 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray60);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray60);
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type50, list63, false);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type74 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray75);
        boolean boolean78 = type68.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray79 = new org.mockito.asm.Type[] { type68 };
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray79);
        java.lang.String str81 = type66.getDescriptor();
        int int82 = type66.getSort();
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type66, list83, true);
        org.mockito.asm.tree.analysis.Value value86 = basicInterpreter45.newValue(type66);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.Type[] typeArray89 = org.mockito.asm.Type.getArgumentTypes("(S)C");
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type87, typeArray89);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier92 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type87, true);
        org.mockito.asm.Type type93 = null;
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier92.newValue(type93);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException95 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: boolean: expected 121, but found D", obj44, value94);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value96 = simpleVerifier10.unaryOperation(abstractInsnNode42, value94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException;" + "'", str38, "Lorg.mockito.asm.tree.analysis.AnalyzerException;");
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "boolean" + "'", str51, "boolean");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(C)S" + "'", str61, "(C)S");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(C)Z" + "'", str62, "(C)Z");
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)S" + "'", str76, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(S)C" + "'", str80, "(S)C");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "C" + "'", str81, "C");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(S)F" + "'", str90, "(S)F");
        org.junit.Assert.assertNotNull(value94);
    }

    @Test
    public void test06325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06325");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str1 = type0.getClassName();
        int int3 = type0.getOpcode(0);
        java.lang.String str4 = type0.getClassName();
        int int5 = type0.getSize();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray20);
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type10, list23, false);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.tree.analysis.Value value28 = simpleVerifier25.newValue(type27);
        java.lang.String str29 = type27.toString();
        java.lang.String str30 = type27.toString();
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type27, list31, false);
        java.lang.String str34 = type27.getClassName();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "double" + "'", str1, "double");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "double" + "'", str4, "double");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean" + "'", str11, "boolean");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)Z" + "'", str22, "(C)Z");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "C" + "'", str30, "C");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "char" + "'", str34, "char");
    }

    @Test
    public void test06326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06326");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier11.merge(value14, value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        int int49 = value48.getSize();
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier42.merge(value45, value48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        int int64 = value63.getSize();
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier57.merge(value60, value63);
        org.mockito.asm.tree.analysis.Value value66 = simpleVerifier27.merge(value48, value65);
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier0.merge(value19, value66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type71, list72, true);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type75 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray76);
        boolean boolean79 = type69.equals((java.lang.Object) '4');
        java.lang.String str80 = type69.toString();
        int int81 = type69.getSize();
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier0.newValue(type69);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode83 = null;
        java.util.List list84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value85 = basicVerifier0.naryOperation(abstractInsnNode83, list84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(C)S" + "'", str77, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "S" + "'", str80, "S");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(value82);
    }

    @Test
    public void test06327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06327");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        boolean boolean22 = type8.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type31, true);
        org.mockito.asm.Type type44 = null;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier43.newValue(type46);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type46, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        java.lang.String str57 = type53.getDescriptor();
        java.lang.Class<?> wildcardClass58 = type53.getClass();
        java.lang.String str59 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type61 = type60.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type61, true);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass66 = type65.getClass();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass66);
        java.lang.String str68 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        java.lang.String str69 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass66);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass66);
        java.lang.String str71 = type70.getDescriptor();
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier63.newValue(type70);
        int int73 = type70.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNull(value47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "C" + "'", str57, "C");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org/mockito/asm/Type" + "'", str59, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str68, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str69, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str71, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
    }

    @Test
    public void test06328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06328");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg.mockito.asm.tree.analysis.AnalyzerException;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06329");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        java.lang.String str2 = type1.toString();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str10 = type9.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray19);
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type9, list22, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        boolean boolean43 = type33.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type33, true);
        int int46 = type28.getSort();
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type28, list47, true);
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list50, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, true);
        java.lang.String str55 = type1.getDescriptor();
        org.mockito.asm.Type type56 = type1.getElementType();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        int int59 = type57.getOpcode(2);
        boolean boolean60 = type1.equals((java.lang.Object) 2);
        int int61 = type1.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L(C)Z;" + "'", str2, "L(C)Z;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "boolean" + "'", str10, "boolean");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)Z" + "'", str21, "(C)Z");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L(C)Z;" + "'", str55, "L(C)Z;");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
    }

    @Test
    public void test06330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06330");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int6 = type5.getDimensions();
        org.mockito.asm.Type type7 = type5.getElementType();
        int int8 = type7.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str17 = type16.getDescriptor();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        boolean boolean30 = type20.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray31);
        java.lang.String str33 = type18.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        java.lang.String str41 = type37.getDescriptor();
        int int43 = type37.getOpcode((int) (short) 0);
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type37, list44, true);
        int int47 = type37.getSort();
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type37, list48, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str56 = type55.getDescriptor();
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier50.newValue(type55);
        int int59 = type55.getSort();
        java.lang.String str60 = type55.getDescriptor();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier15.newValue(type55);
        boolean boolean62 = type7.equals((java.lang.Object) type55);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getReturnType("(C)Z");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type64, false);
        int int68 = type55.getOpcode(1);
        java.lang.String str69 = type55.toString();
        int int70 = type55.getSize();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getObjectType("boolean");
        int int74 = type72.getOpcode(82);
        int int75 = type72.getDimensions();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type72, false);
        int int78 = type55.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "I" + "'", str17, "I");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)S" + "'", str28, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "I" + "'", str56, "I");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "I" + "'", str60, "I");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "I" + "'", str69, "I");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 86 + "'", int74 == 86);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test06331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06331");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        int int17 = type3.getSize();
        java.lang.String str18 = type3.toString();
        boolean boolean20 = type3.equals((java.lang.Object) 3);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        int int26 = type24.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, false);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray38);
        boolean boolean41 = type31.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray42);
        java.lang.String str44 = type29.getDescriptor();
        int int45 = type29.getSort();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        boolean boolean58 = type48.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray59);
        int int61 = type46.getSize();
        boolean boolean63 = type46.equals((java.lang.Object) 181);
        int int64 = type46.getSize();
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray65);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray65);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type73, list74, true);
        java.lang.String str77 = type73.getDescriptor();
        java.lang.Class<?> wildcardClass78 = type73.getClass();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass78);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str81 = type80.getDescriptor();
        java.util.List list82 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type80, list82, false);
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier69.newValue(type79);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass88 = type87.getClass();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        int int92 = type91.getDimensions();
        java.lang.String str93 = type91.toString();
        java.util.List list94 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier96 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type91, list94, true);
        java.lang.String str97 = type79.getInternalName();
        int int98 = type79.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)S" + "'", str39, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(S)C" + "'", str43, "(S)C");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)C" + "'", str60, "(S)C");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(C)C" + "'", str66, "(C)C");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)LC;" + "'", str67, "(C)LC;");
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "C" + "'", str77, "C");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "B" + "'", str81, "B");
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str93, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "org/mockito/asm/Type" + "'", str97, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 10 + "'", int98 == 10);
    }

    @Test
    public void test06332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06332");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter0 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        int int15 = value14.getSize();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier8.merge(value11, value14);
        org.mockito.asm.tree.analysis.Value value17 = basicInterpreter0.copyOperation(abstractInsnNode1, value14);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode18 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        int int32 = value31.getSize();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier25.merge(value28, value31);
        int int34 = value31.getSize();
        org.mockito.asm.tree.analysis.Value value35 = basicInterpreter0.copyOperation(abstractInsnNode18, value31);
        java.lang.Class<?> wildcardClass36 = value31.getClass();
        java.lang.String str37 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str37, "org/mockito/asm/tree/analysis/BasicValue");
    }

    @Test
    public void test06333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06333");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value22);
        analyzerException5.addSuppressed((java.lang.Throwable) analyzerException23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Throwable) analyzerException25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected I, but found I", (java.lang.Throwable) analyzerException26);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str31 = type30.getClassName();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = value47.getSize();
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier41.merge(value44, value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value49);
        boolean boolean51 = type32.equals((java.lang.Object) analyzerException50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type60 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray61);
        boolean boolean64 = type54.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray65);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray65);
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type72, list73, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier79.newValue(type80);
        int int82 = value81.getSize();
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier75.merge(value78, value81);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Object) type30, value78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Throwable) analyzerException84);
        java.lang.Throwable[] throwableArray86 = analyzerException85.getSuppressed();
        analyzerException26.addSuppressed((java.lang.Throwable) analyzerException85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException88 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Throwable) analyzerException26);
        java.lang.Class<?> wildcardClass89 = analyzerException88.getClass();
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass89);
        int int91 = type90.getDimensions();
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "double" + "'", str31, "double");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(C)S" + "'", str62, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(S)C" + "'", str66, "(S)C");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(S)V" + "'", str67, "(S)V");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(S)D" + "'", str68, "(S)D");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test06334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06334");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        java.lang.String str11 = type7.getDescriptor();
        int int13 = type7.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        org.mockito.asm.Type[] typeArray29 = new org.mockito.asm.Type[] { type22 };
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray29);
        java.lang.String str31 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type17, false);
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type7, list34, true);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException");
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier36.newValue(type38);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value41 = simpleVerifier36.newOperation(abstractInsnNode40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "C" + "'", str11, "C");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(S)C" + "'", str30, "(S)C");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "C" + "'", str31, "C");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
    }

    @Test
    public void test06335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06335");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int4 = type3.getSort();
        java.lang.String str5 = type3.toString();
        org.mockito.asm.Type type6 = type3.getElementType();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        int int17 = type11.getSort();
        boolean boolean19 = type11.equals((java.lang.Object) 192);
        int int20 = type11.getSort();
        java.lang.String str21 = type11.toString();
        java.lang.String str22 = type11.getDescriptor();
        int int23 = type11.getSize();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass26 = type25.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        boolean boolean29 = type11.equals((java.lang.Object) type28);
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type28, list30, false);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type34, true);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str38 = type37.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type46 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray47);
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray47);
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type37, list50, false);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray62);
        boolean boolean65 = type55.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray66 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type53, typeArray66);
        java.lang.String str68 = type53.getDescriptor();
        int int69 = type53.getSort();
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type53, list70, true);
        int int73 = type34.getSort();
        java.lang.String str74 = type34.getDescriptor();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.BOOLEAN_TYPE;
        int int76 = type75.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type75, true);
        int int79 = type34.getSort();
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier32.newValue(type34);
        java.lang.String str81 = type34.getClassName();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getReturnType("Lorg.mockito.asm.tree.analysis.AnalyzerException: (S)C;");
        java.lang.String str84 = type83.getDescriptor();
        java.lang.String str85 = type83.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type83, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode88 = null;
        java.util.List list89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value90 = simpleVerifier87.naryOperation(abstractInsnNode88, list89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "S" + "'", str21, "S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "S" + "'", str22, "S");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/Type" + "'", str27, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "boolean" + "'", str38, "boolean");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(C)S" + "'", str48, "(C)S");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(C)Z" + "'", str49, "(C)Z");
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(C)S" + "'", str63, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(S)C" + "'", str67, "(S)C");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "C" + "'", str68, "C");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "C" + "'", str74, "C");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "char" + "'", str81, "char");
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "C" + "'", str84, "C");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "C" + "'", str85, "C");
    }

    @Test
    public void test06336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06336");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        java.lang.String str23 = type19.getDescriptor();
        int int25 = type19.getOpcode((int) (short) 0);
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        boolean boolean47 = type37.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type37, true);
        org.mockito.asm.Type type50 = null;
        org.mockito.asm.tree.analysis.Value value51 = simpleVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        int int68 = value67.getSize();
        org.mockito.asm.tree.analysis.Value value69 = simpleVerifier61.merge(value64, value67);
        org.mockito.asm.tree.analysis.Value value70 = simpleVerifier49.merge(value54, value69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type72, type74, list75, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        int int84 = value83.getSize();
        org.mockito.asm.tree.analysis.Value value85 = simpleVerifier77.merge(value80, value83);
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier28.merge(value69, value85);
        int int87 = value85.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)S" + "'", str45, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test06337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06337");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass9 = type8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass9);
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass9);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass9);
        org.mockito.asm.tree.analysis.Value value13 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type12, value13);
        boolean boolean16 = type12.equals((java.lang.Object) 188);
        org.mockito.asm.Type type17 = type12.getElementType();
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        boolean boolean33 = type23.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray34);
        int int36 = type21.getSize();
        boolean boolean38 = type21.equals((java.lang.Object) 181);
        int int39 = type21.getSize();
        java.lang.String str40 = type21.toString();
        int int41 = type21.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        int int49 = type43.getSort();
        java.lang.String str50 = type43.toString();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type51, list52, false);
        boolean boolean56 = type51.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type51, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray67 = new org.mockito.asm.Type[] { type66 };
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray67);
        boolean boolean70 = type60.equals((java.lang.Object) '4');
        org.mockito.asm.Type type71 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type71, list72, false);
        java.util.List list75 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type71, list75, false);
        int int78 = type71.getSort();
        int int79 = type71.getSize();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.LONG_TYPE;
        java.lang.String str81 = type80.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type80, true);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier20.newValue(type71);
        int int85 = value84.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str11, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)C" + "'", str35, "(S)C");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "C" + "'", str40, "C");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4 + "'", int49 == 4);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "S" + "'", str50, "S");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(C)S" + "'", str68, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 5 + "'", int78 == 5);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "long" + "'", str81, "long");
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
    }

    @Test
    public void test06338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06338");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = type5.getDescriptor();
        org.mockito.asm.Type type7 = type5.getElementType();
        java.lang.String str8 = type7.getClassName();
        java.lang.String str9 = type7.getDescriptor();
        int int10 = type7.getSize();
        org.mockito.asm.Type type11 = type7.getElementType();
        int int13 = type11.getOpcode(55);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S");
        boolean boolean16 = type11.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: S");
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "g.mockito.asm.Type" + "'", str8, "g.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lg/mockito/asm/Type;" + "'", str9, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 59 + "'", int13 == 59);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06339");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        int int6 = type4.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, false);
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list9, false);
        java.lang.String str12 = type2.getInternalName();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        java.lang.String str28 = type13.getDescriptor();
        int int29 = type13.getSort();
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type13, list30, true);
        java.lang.Class<?> wildcardClass33 = simpleVerifier32.getClass();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        java.lang.String str36 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        java.lang.String str38 = type37.getInternalName();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "C" + "'", str12, "C");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "C" + "'", str28, "C");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org/mockito/asm/tree/analysis/SimpleVerifier" + "'", str36, "org/mockito/asm/tree/analysis/SimpleVerifier");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org/mockito/asm/tree/analysis/SimpleVerifier" + "'", str38, "org/mockito/asm/tree/analysis/SimpleVerifier");
    }

    @Test
    public void test06340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06340");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(SC)S");
        java.lang.String str2 = type1.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "(SC)S" + "'", str2, "(SC)S");
    }

    @Test
    public void test06341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06341");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: char");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        int int6 = type2.getDimensions();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test06342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06342");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str1 = type0.getClassName();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str4 = type3.getDescriptor();
        java.lang.String str5 = type3.toString();
        int int6 = type3.getSort();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean10 = type8.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int13 = type12.getSort();
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type12, list14, false);
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type12, list17, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType("B");
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier19.newValue(type21);
        int int24 = type21.getOpcode(181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type21, false);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = type0.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "double" + "'", str1, "double");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "S" + "'", str4, "S");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "S" + "'", str5, "S");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 181 + "'", int24 == 181);
    }

    @Test
    public void test06343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06343");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/BasicVerifier;: expected S, but found Lg/mockito/asm/Type;");
    }

    @Test
    public void test06344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06344");
        java.lang.Object obj1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        int int15 = value14.getSize();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier8.merge(value11, value14);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", obj1, value16);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value37);
        analyzerException20.addSuppressed((java.lang.Throwable) analyzerException38);
        analyzerException18.addSuppressed((java.lang.Throwable) analyzerException20);
        java.lang.Throwable[] throwableArray41 = analyzerException20.getSuppressed();
        java.lang.Throwable[] throwableArray42 = analyzerException20.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)Z");
        analyzerException20.addSuppressed((java.lang.Throwable) analyzerException44);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray42);
    }

    @Test
    public void test06345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06345");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier36.merge(value57, value74);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier6.merge(value29, value74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        int int78 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier6.newValue(type77);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list84 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type81, type83, list84, true);
        int int87 = type81.getSort();
        boolean boolean89 = type81.equals((java.lang.Object) 192);
        java.util.List list90 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier92 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type81, list90, true);
        int int93 = type81.getSort();
        java.lang.String str94 = type81.getClassName();
        int int95 = type81.getSize();
        org.mockito.asm.Type[] typeArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = org.mockito.asm.Type.getMethodDescriptor(type81, typeArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 7 + "'", int78 == 7);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 4 + "'", int87 == 4);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 4 + "'", int93 == 4);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "short" + "'", str94, "short");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
    }

    @Test
    public void test06346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06346");
        java.lang.Throwable throwable1 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: hi!", throwable1);
        java.lang.Throwable[] throwableArray3 = analyzerException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test06347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06347");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        java.lang.Throwable[] throwableArray4 = analyzerException3.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;: expected (C)S, but found null", (java.lang.Throwable) analyzerException3);
        java.lang.Throwable[] throwableArray6 = analyzerException5.getSuppressed();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass9 = type8.getClass();
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass9);
        java.lang.String str11 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass9);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass9);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass9);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getObjectType("Z");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        int int25 = type19.getSort();
        int int26 = type19.getSize();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int29 = type28.getSort();
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type28, list30, true);
        int int33 = type28.getDimensions();
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier17.newValue(type28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("LLorg.mockito.asm.tree.analysis.SimpleVerifier;;", (java.lang.Object) throwableArray6, value34);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str11, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(value34);
    }

    @Test
    public void test06348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06348");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray11);
        java.lang.Throwable throwable16 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        int int52 = value51.getSize();
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier45.merge(value48, value51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        int int67 = value66.getSize();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier60.merge(value63, value66);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type72, list73, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier79.newValue(type80);
        int int82 = value81.getSize();
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier75.merge(value78, value81);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier45.merge(value66, value83);
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier18.merge(value37, value84);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException17, value85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S", (java.lang.Object) typeArray11, value85);
        java.lang.Class<?> wildcardClass88 = value85.getClass();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        java.lang.String str91 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass88);
        java.lang.String str92 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass88);
        org.mockito.asm.Type type93 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        org.mockito.asm.Type type94 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass88);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "boolean" + "'", str2, "boolean");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)Z" + "'", str13, "(C)Z");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str91, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str92, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertNotNull(type94);
    }

    @Test
    public void test06349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06349");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("LC");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06350");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        int int1 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        int int36 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter2.copyOperation(abstractInsnNode20, value33);
        boolean boolean38 = type0.equals((java.lang.Object) basicInterpreter2);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        int int40 = type39.getSort();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type39, list41, false);
        int int44 = type0.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7 + "'", int1 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 7 + "'", int44 == 7);
    }

    @Test
    public void test06351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06351");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int2 = type1.getSort();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        boolean boolean15 = type5.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type5 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray16);
        int int18 = type3.getSize();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type20, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str28 = type27.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray37);
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type27, list40, false);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray52);
        boolean boolean55 = type45.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray56);
        java.lang.String str58 = type43.getDescriptor();
        int int59 = type43.getSort();
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type43, list60, true);
        boolean boolean63 = type20.equals((java.lang.Object) type24);
        int int64 = type20.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type20, true);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type68, true);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier70.newValue(type72);
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type72, list74, true);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)S" + "'", str13, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(S)C" + "'", str17, "(S)C");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "boolean" + "'", str28, "boolean");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)Z" + "'", str39, "(C)Z");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)S" + "'", str53, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(S)C" + "'", str57, "(S)C");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
    }

    @Test
    public void test06352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06352");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int19 = type17.getOpcode(86);
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type35, list36, false);
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier22.newValue(type24);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass42 = type41.getClass();
        java.lang.String str43 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        java.lang.String str45 = type44.getClassName();
        org.mockito.asm.tree.analysis.Value value46 = simpleVerifier22.newValue(type44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str48 = type47.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray57);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type61, true);
        boolean boolean64 = type47.equals((java.lang.Object) simpleVerifier63);
        java.lang.String str65 = type47.toString();
        org.mockito.asm.tree.analysis.Value value66 = simpleVerifier22.newValue(type47);
        java.lang.Class<?> wildcardClass67 = simpleVerifier22.getClass();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 86 + "'", int19 == 86);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org/mockito/asm/Type" + "'", str43, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.mockito.asm.Type" + "'", str45, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "boolean" + "'", str48, "boolean");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(C)S" + "'", str58, "(C)S");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)Z" + "'", str59, "(C)Z");
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Z" + "'", str65, "Z");
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test06353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06353");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        int int5 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        int int11 = type9.getOpcode(88);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        int int23 = type13.getOpcode(0);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type13, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode26 = null;
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter27 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode28 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        int int42 = value41.getSize();
        org.mockito.asm.tree.analysis.Value value43 = simpleVerifier35.merge(value38, value41);
        org.mockito.asm.tree.analysis.Value value44 = basicInterpreter27.copyOperation(abstractInsnNode28, value41);
        int int45 = value44.getSize();
        int int46 = value44.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value47 = simpleVerifier25.copyOperation(abstractInsnNode26, value44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 92 + "'", int11 == 92);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
    }

    @Test
    public void test06354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06354");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I", (java.lang.Throwable) analyzerException3);
        java.lang.Throwable[] throwableArray5 = analyzerException3.getSuppressed();
        java.lang.Throwable[] throwableArray6 = analyzerException3.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException11 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: D");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException12 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;: expected (C)S, but found null", (java.lang.Throwable) analyzerException11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException13 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z", (java.lang.Throwable) analyzerException11);
        analyzerException7.addSuppressed((java.lang.Throwable) analyzerException11);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException17 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/BasicValue");
        java.lang.Throwable[] throwableArray18 = analyzerException17.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("J", (java.lang.Throwable) analyzerException17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) 0, value35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Throwable) analyzerException38);
        analyzerException17.addSuppressed((java.lang.Throwable) analyzerException39);
        analyzerException7.addSuppressed((java.lang.Throwable) analyzerException39);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
    }

    @Test
    public void test06355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06355");
        java.lang.Object obj2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier9.merge(value12, value15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;", obj2, value12);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)V", (java.lang.Throwable) analyzerException18);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        int int37 = value36.getSize();
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier30.merge(value33, value36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        int int56 = value55.getSize();
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier49.merge(value52, value55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) 0, value55);
        analyzerException39.addSuppressed((java.lang.Throwable) analyzerException58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException39);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException64 = new org.mockito.asm.tree.analysis.AnalyzerException("S");
        boolean boolean65 = type62.equals((java.lang.Object) analyzerException64);
        analyzerException39.addSuppressed((java.lang.Throwable) analyzerException64);
        analyzerException18.addSuppressed((java.lang.Throwable) analyzerException64);
        java.lang.String str68 = analyzerException18.toString();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;: expected null, but found I" + "'", str68, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;: expected null, but found I");
    }

    @Test
    public void test06356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06356");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str3 = type2.toString();
        int int4 = type2.getDimensions();
        org.mockito.asm.Type type5 = type2.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type5, false);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int10 = type9.getSort();
        java.lang.String str11 = type9.toString();
        org.mockito.asm.tree.analysis.Value value12 = simpleVerifier7.newValue(type9);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        boolean boolean24 = type14.equals((java.lang.Object) '4');
        java.lang.String str25 = type14.toString();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray39);
        int int41 = type26.getSize();
        boolean boolean43 = type26.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type26, false);
        boolean boolean46 = type9.equals((java.lang.Object) false);
        java.lang.String str47 = type9.getClassName();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str49 = type48.getClassName();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type58 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray59);
        boolean boolean62 = type52.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray63);
        java.lang.String str65 = type50.getDescriptor();
        int int66 = type50.getSort();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type71, list72, true);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type75 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray76);
        boolean boolean79 = type69.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray80);
        int int82 = type67.getSize();
        boolean boolean84 = type67.equals((java.lang.Object) 181);
        int int85 = type67.getSize();
        org.mockito.asm.Type[] typeArray86 = new org.mockito.asm.Type[] { type67 };
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray86);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray86);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type48, false);
        org.mockito.asm.Type type92 = org.mockito.asm.Type.getObjectType("Lorg.mockito.asm.tree.analysis.AnalyzerException: ;");
        org.mockito.asm.tree.analysis.Value value93 = simpleVerifier90.newValue(type92);
        java.lang.String str94 = type92.getClassName();
        java.lang.String str95 = type92.getClassName();
        java.lang.String str96 = type92.getInternalName();
        int int97 = type92.getSize();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str11, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)S" + "'", str22, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "S" + "'", str25, "S");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.mockito.asm.Type" + "'", str47, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "double" + "'", str49, "double");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(C)S" + "'", str60, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(S)C" + "'", str64, "(S)C");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "C" + "'", str65, "C");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(C)S" + "'", str77, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(S)C" + "'", str81, "(S)C");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(C)C" + "'", str87, "(C)C");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(C)D" + "'", str88, "(C)D");
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: ;" + "'", str94, "Lorg.mockito.asm.tree.analysis.AnalyzerException: ;");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: ;" + "'", str95, "Lorg.mockito.asm.tree.analysis.AnalyzerException: ;");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: ;" + "'", str96, "Lorg.mockito.asm.tree.analysis.AnalyzerException: ;");
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1 + "'", int97 == 1);
    }

    @Test
    public void test06357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06357");
        java.lang.Throwable throwable2 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;: expected I, but found I", throwable2);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (SC)L(C)LC;;", throwable2);
        java.lang.Throwable[] throwableArray5 = analyzerException4.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test06358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06358");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: (S)D: expected I, but found I");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06359");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type[] typeArray2 = org.mockito.asm.Type.getArgumentTypes("(C)L(S)F;");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray2);
    }

    @Test
    public void test06360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06360");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.tree.analysis.Value value8 = simpleVerifier5.newValue(type6);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass11 = type10.getClass();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass11);
        java.lang.String str15 = type14.getDescriptor();
        org.mockito.asm.Type type16 = type14.getElementType();
        java.lang.String str17 = type14.getDescriptor();
        org.mockito.asm.Type[] typeArray19 = org.mockito.asm.Type.getArgumentTypes("(SC)S");
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray19);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type14, true);
        java.lang.String str23 = type14.getClassName();
        int int24 = type14.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "S" + "'", str7, "S");
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str17, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(SC)Lorg/mockito/asm/Type;" + "'", str20, "(SC)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.mockito.asm.Type" + "'", str23, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test06361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06361");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int4 = type3.getSort();
        java.lang.String str5 = type3.toString();
        org.mockito.asm.Type type6 = type3.getElementType();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        int int17 = type11.getSort();
        boolean boolean19 = type11.equals((java.lang.Object) 192);
        int int20 = type11.getSort();
        java.lang.String str21 = type11.toString();
        java.lang.String str22 = type11.getDescriptor();
        int int23 = type11.getSize();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass26 = type25.getClass();
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass26);
        boolean boolean29 = type11.equals((java.lang.Object) type28);
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type28, list30, false);
        java.lang.String str33 = type1.getInternalName();
        org.mockito.asm.Type type34 = type1.getElementType();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str41 = type40.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type40, typeArray50);
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type40, list53, false);
        java.lang.String str56 = type37.getDescriptor();
        org.mockito.asm.Type type57 = null;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type59, true);
        int int62 = type58.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type58, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        int int68 = type66.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type72, list73, true);
        int int76 = type70.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type70, false);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier64.newValue(type66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException80 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg.mockito.asm.tree.analysis.SimpleVerifier;", (java.lang.Object) str56, value79);
        boolean boolean81 = type1.equals((java.lang.Object) str56);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "S" + "'", str21, "S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "S" + "'", str22, "S");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/Type" + "'", str27, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)Z" + "'", str33, "(C)Z");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "boolean" + "'", str41, "boolean");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)S" + "'", str51, "(C)S");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)Z" + "'", str52, "(C)Z");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "C" + "'", str56, "C");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 4 + "'", int76 == 4);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test06362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06362");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode13 = null;
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = type17.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type23, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getObjectType("(S)L(C)Z;");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        boolean boolean39 = type29.equals((java.lang.Object) '4');
        boolean boolean41 = type29.equals((java.lang.Object) 193);
        java.lang.String str42 = type29.getDescriptor();
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list43, false);
        org.mockito.asm.Type type46 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        int int54 = type48.getSort();
        java.lang.String str55 = type48.getClassName();
        java.lang.String str56 = type48.getDescriptor();
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list57, false);
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier45.newValue(type48);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        int int74 = value73.getSize();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier67.merge(value70, value73);
        int int76 = value75.getSize();
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier25.merge(value60, value75);
        int int78 = value77.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value79 = simpleVerifier12.unaryOperation(abstractInsnNode13, value77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "S" + "'", str42, "S");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "short" + "'", str55, "short");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "S" + "'", str56, "S");
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test06363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06363");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass3 = type2.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        int int21 = type15.getSort();
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray22);
        int int24 = type10.getSize();
        java.lang.String str25 = type10.toString();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass28 = type27.getClass();
        java.lang.String str29 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass28);
        java.lang.String str30 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass28);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass28);
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type31, list32, false);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        boolean boolean47 = type37.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray48);
        int int50 = type35.getSize();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type52, false);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str56 = type55.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray65);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type55, typeArray65);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type69, true);
        boolean boolean72 = type55.equals((java.lang.Object) simpleVerifier71);
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type55, list73, false);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier34.newValue(type35);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected null, but found I", (java.lang.Object) wildcardClass3, value76);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(S)C" + "'", str23, "(S)C");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str29, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str30, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)S" + "'", str45, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(S)C" + "'", str49, "(S)C");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "boolean" + "'", str56, "boolean");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(C)S" + "'", str66, "(C)S");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(C)Z" + "'", str67, "(C)Z");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type80);
    }

    @Test
    public void test06364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06364");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        java.lang.String str2 = type1.getDescriptor();
        int int3 = type1.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str2, "Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test06365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06365");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: [Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06366");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BYTE_TYPE;
        java.lang.String str11 = type10.getDescriptor();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type10, list12, false);
        java.lang.String str15 = type9.getInternalName();
        org.mockito.asm.Type[] typeArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "B" + "'", str11, "B");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org/mockito/asm/Type" + "'", str15, "org/mockito/asm/Type");
    }

    @Test
    public void test06367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06367");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.tree.analysis.Value value8 = simpleVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        boolean boolean27 = type17.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type17, true);
        boolean boolean31 = type17.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.Value value32 = simpleVerifier5.newValue(type17);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass35 = type34.getClass();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        java.lang.String str39 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass43 = type42.getClass();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        boolean boolean47 = type40.equals((java.lang.Object) str46);
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier5.newValue(type40);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getReturnType("(C)LC;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type50, true);
        java.lang.Class<?> wildcardClass53 = type50.getClass();
        java.lang.String str54 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass53);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "S" + "'", str7, "S");
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(C)S" + "'", str25, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str39, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str46, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str54, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06368");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        int int4 = type2.getOpcode(8192);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray18);
        boolean boolean21 = type11.equals((java.lang.Object) '4');
        org.mockito.asm.Type type22 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type22, list23, false);
        java.lang.String str26 = type22.getClassName();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type28, false);
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type28, list31, true);
        java.lang.String str34 = type28.getInternalName();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str37 = type36.getClassName();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getObjectType("boolean");
        int int41 = type39.getOpcode(82);
        java.lang.String str42 = type39.getClassName();
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type39, list43, true);
        java.lang.String str46 = type36.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list58 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type57, list58, true);
        int int61 = type55.getSort();
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray62);
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray62);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray62);
        java.lang.String str66 = type28.getDescriptor();
        org.mockito.asm.Type type67 = type28.getElementType();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier6.newValue(type28);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value70 = simpleVerifier6.newOperation(abstractInsnNode69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8196 + "'", int4 == 8196);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(C)S" + "'", str19, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "int" + "'", str26, "int");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org/mockito/asm/Type" + "'", str34, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "S" + "'", str37, "S");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 86 + "'", int41 == 86);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "boolean" + "'", str42, "boolean");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "S" + "'", str46, "S");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(S)C" + "'", str63, "(S)C");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(S)LS;" + "'", str64, "(S)LS;");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(S)Lorg/mockito/asm/Type;" + "'", str65, "(S)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str66, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
    }

    @Test
    public void test06369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06369");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        boolean boolean9 = type1.equals((java.lang.Object) 192);
        int int10 = type1.getSort();
        java.lang.String str11 = type1.toString();
        java.lang.String str12 = type1.getDescriptor();
        int int13 = type1.getSize();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass16 = type15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        boolean boolean19 = type1.equals((java.lang.Object) type18);
        java.lang.String str20 = type18.getInternalName();
        int int21 = type18.getSort();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: L(C)Z;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type23, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode26 = null;
        java.util.List list27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value28 = simpleVerifier25.naryOperation(abstractInsnNode26, list27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "S" + "'", str11, "S");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "S" + "'", str12, "S");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org/mockito/asm/Type" + "'", str17, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org/mockito/asm/Type" + "'", str20, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(type23);
    }

    @Test
    public void test06370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06370");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier5 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value7 = basicVerifier5.newValue(type6);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type8, list9, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier11.merge(value14, value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException20 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)S", (java.lang.Object) 175, value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type34, list35, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier41 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value43 = basicVerifier41.newValue(type42);
        int int44 = value43.getSize();
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier37.merge(value40, value43);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException46 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value45);
        analyzerException28.addSuppressed((java.lang.Throwable) analyzerException46);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException28);
        java.lang.Throwable throwable50 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type58, list59, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        int int68 = value67.getSize();
        org.mockito.asm.tree.analysis.Value value69 = simpleVerifier61.merge(value64, value67);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException70 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value69);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException71 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException70);
        java.lang.Throwable[] throwableArray72 = analyzerException71.getSuppressed();
        analyzerException51.addSuppressed((java.lang.Throwable) analyzerException71);
        java.lang.Throwable[] throwableArray74 = analyzerException71.getSuppressed();
        java.lang.Throwable throwable76 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException77 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable76);
        analyzerException71.addSuppressed((java.lang.Throwable) analyzerException77);
        java.lang.Throwable[] throwableArray79 = analyzerException77.getSuppressed();
        analyzerException48.addSuppressed((java.lang.Throwable) analyzerException77);
        analyzerException24.addSuppressed((java.lang.Throwable) analyzerException48);
        java.lang.Throwable[] throwableArray82 = analyzerException48.getSuppressed();
        analyzerException21.addSuppressed((java.lang.Throwable) analyzerException48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException21);
        java.lang.String str85 = analyzerException84.toString();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(value7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;" + "'", str85, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06371");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.Type type7 = type5.getElementType();
        java.lang.String str8 = type7.getInternalName();
        int int9 = type7.getSize();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass13 = type12.getClass();
        java.lang.String str14 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass13);
        java.lang.String str15 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass13);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        org.mockito.asm.tree.analysis.Value value17 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type16, value17);
        boolean boolean20 = type16.equals((java.lang.Object) 188);
        org.mockito.asm.Type type21 = type16.getElementType();
        int int22 = type16.getSort();
        boolean boolean23 = type7.equals((java.lang.Object) type16);
        int int24 = type16.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "g/mockito/asm/Type" + "'", str8, "g/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str14, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test06372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06372");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier9.merge(value12, value15);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value17);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        int int37 = value36.getSize();
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier30.merge(value33, value36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException39 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value38);
        analyzerException21.addSuppressed((java.lang.Throwable) analyzerException39);
        analyzerException18.addSuppressed((java.lang.Throwable) analyzerException39);
        java.lang.Class<?> wildcardClass42 = analyzerException39.getClass();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass42);
        int int47 = type46.getSort();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass50 = type49.getClass();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass50);
        int int54 = type53.getDimensions();
        org.mockito.asm.Type type55 = type53.getElementType();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray65);
        boolean boolean68 = type58.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type58 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray69);
        int int71 = type56.getSize();
        java.lang.String str72 = type56.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type56, true);
        boolean boolean75 = type46.equals((java.lang.Object) true);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(C)S" + "'", str66, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(S)C" + "'", str70, "(S)C");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "char" + "'", str72, "char");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test06373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06373");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        int int24 = type18.getSort();
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray25);
        java.lang.String str27 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type13, false);
        java.lang.Class<?> wildcardClass30 = type3.getClass();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        int int32 = type31.getSize();
        int int33 = type31.getSize();
        java.lang.String str34 = type31.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(S)C" + "'", str26, "(S)C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str34, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06374");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)C");
        org.mockito.asm.Type type2 = type1.getElementType();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier13.merge(value16, value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        int int39 = value38.getSize();
        org.mockito.asm.tree.analysis.Value value40 = simpleVerifier32.merge(value35, value38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException41 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) 0, value38);
        analyzerException22.addSuppressed((java.lang.Throwable) analyzerException41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException22);
        java.lang.Class<?> wildcardClass44 = analyzerException22.getClass();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass44);
        boolean boolean46 = type2.equals((java.lang.Object) wildcardClass44);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test06375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06375");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int19 = type17.getOpcode(86);
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str28 = type27.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray37);
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type27, list40, false);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str44 = type43.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray53);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray53);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray53);
        java.lang.Class<?> wildcardClass58 = type17.getClass();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        java.lang.String str61 = type60.getInternalName();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray64 = analyzerException63.getSuppressed();
        java.lang.Throwable[] throwableArray65 = analyzerException63.getSuppressed();
        java.lang.Throwable[] throwableArray66 = analyzerException63.getSuppressed();
        java.lang.Throwable[] throwableArray67 = analyzerException63.getSuppressed();
        boolean boolean68 = type60.equals((java.lang.Object) throwableArray67);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 86 + "'", int19 == 86);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "boolean" + "'", str28, "boolean");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)Z" + "'", str39, "(C)Z");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "boolean" + "'", str44, "boolean");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)Z" + "'", str55, "(C)Z");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)C" + "'", str56, "(C)C");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)S" + "'", str57, "(C)S");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org/mockito/asm/Type" + "'", str61, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test06376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06376");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        int int1 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        int int36 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter2.copyOperation(abstractInsnNode20, value33);
        boolean boolean38 = type0.equals((java.lang.Object) basicInterpreter2);
        int int40 = type0.getOpcode(156);
        java.lang.String str41 = type0.getDescriptor();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.Type[] typeArray45 = org.mockito.asm.Type.getArgumentTypes("(C)LC;");
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray45);
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray45);
        org.mockito.asm.Type type48 = null;
        org.mockito.asm.Type type50 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        int int54 = type52.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, false);
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list57, false);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type61, true);
        int int64 = type60.getSize();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass67 = type66.getClass();
        java.lang.String str68 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass67);
        java.lang.String str69 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass67);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass67);
        org.mockito.asm.Type type71 = type70.getElementType();
        org.mockito.asm.Type type72 = type70.getElementType();
        java.lang.String str73 = type70.getInternalName();
        org.mockito.asm.Type[] typeArray75 = org.mockito.asm.Type.getArgumentTypes("(C)Lorg/mockito/asm/Type;");
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray75);
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray75);
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray75);
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray75);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7 + "'", int1 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 157 + "'", int40 == 157);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "J" + "'", str41, "J");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;" + "'", str46, "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)J" + "'", str47, "(C)J");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str68, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str69, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "org/mockito/asm/Type" + "'", str73, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str76, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(C)S" + "'", str77, "(C)S");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(C)LC;" + "'", str78, "(C)LC;");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(C)J" + "'", str79, "(C)J");
    }

    @Test
    public void test06377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06377");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        int int10 = type4.getSort();
        java.lang.String str11 = type4.toString();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type12, list13, false);
        boolean boolean17 = type12.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        int int32 = type26.getSort();
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray33);
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray33);
        java.lang.String str36 = type12.toString();
        org.mockito.asm.Type type37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type37, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        int int56 = value55.getSize();
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier49.merge(value52, value55);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value78);
        analyzerException61.addSuppressed((java.lang.Throwable) analyzerException79);
        analyzerException58.addSuppressed((java.lang.Throwable) analyzerException79);
        java.lang.Class<?> wildcardClass82 = analyzerException79.getClass();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass82);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier39.newValue(type83);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Object) "Ljava/lang/Object;", value84);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: I", (java.lang.Throwable) analyzerException85);
        java.lang.Throwable[] throwableArray87 = analyzerException86.getSuppressed();
        java.lang.Throwable[] throwableArray88 = analyzerException86.getSuppressed();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "S" + "'", str11, "S");
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(S)C" + "'", str34, "(S)C");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)S" + "'", str35, "(S)S");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "S" + "'", str36, "S");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(throwableArray88);
    }

    @Test
    public void test06378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06378");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int3 = type2.getSort();
        int int5 = type2.getOpcode(113);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        boolean boolean17 = type7.equals((java.lang.Object) '4');
        java.lang.String str18 = type7.toString();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        boolean boolean31 = type21.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray32);
        int int34 = type19.getSize();
        boolean boolean36 = type19.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type19, false);
        java.lang.String str39 = type19.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type19, false);
        int int43 = type2.getOpcode(117);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str45 = type44.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray54);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier60 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type58, true);
        boolean boolean61 = type44.equals((java.lang.Object) simpleVerifier60);
        java.lang.String str62 = type44.toString();
        java.lang.String str63 = type44.getClassName();
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type44, list64, true);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type71, list72, true);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type75 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray76);
        boolean boolean79 = type69.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type69 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray80);
        java.lang.String str82 = type67.getDescriptor();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int86 = type84.getOpcode(86);
        java.util.List list87 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type84, list87, true);
        java.lang.String str90 = type67.getDescriptor();
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier93 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type67, false);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 117 + "'", int5 == 117);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "S" + "'", str18, "S");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(S)C" + "'", str33, "(S)C");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "C" + "'", str39, "C");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 121 + "'", int43 == 121);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "boolean" + "'", str45, "boolean");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)Z" + "'", str56, "(C)Z");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Z" + "'", str62, "Z");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "boolean" + "'", str63, "boolean");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(C)S" + "'", str77, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(S)C" + "'", str81, "(S)C");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "C" + "'", str82, "C");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 86 + "'", int86 == 86);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "C" + "'", str90, "C");
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test06379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06379");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("(C)V");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06380");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.FLOAT_TYPE;
        int int2 = type0.getOpcode(110);
        int int4 = type0.getOpcode(156);
        int int6 = type0.getOpcode(85);
        java.lang.Class<?> wildcardClass7 = type0.getClass();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 112 + "'", int2 == 112);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 158 + "'", int4 == 158);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 87 + "'", int6 == 87);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test06381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06381");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("LLorg.mockito.asm.tree.analysis.SimpleVerifier;;", (java.lang.Throwable) analyzerException2);
        java.lang.String str4 = analyzerException3.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: LLorg.mockito.asm.tree.analysis.SimpleVerifier;;" + "'", str4, "org.mockito.asm.tree.analysis.AnalyzerException: LLorg.mockito.asm.tree.analysis.SimpleVerifier;;");
    }

    @Test
    public void test06382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06382");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str9 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org/mockito/asm/Type" + "'", str9, "org/mockito/asm/Type");
    }

    @Test
    public void test06383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06383");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        int int17 = type3.getSize();
        java.lang.String str18 = type3.toString();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass21 = type20.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type24, list25, false);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getObjectType("hi!");
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type");
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType("(C)L(C)LC;");
        org.mockito.asm.Type type34 = type33.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, true);
        int int39 = type31.getSize();
        org.mockito.asm.tree.analysis.Value value40 = simpleVerifier27.newValue(type31);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode41 = null;
        java.util.List list42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value43 = simpleVerifier27.naryOperation(abstractInsnNode41, list42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str23, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(value40);
    }

    @Test
    public void test06384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06384");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        java.lang.Throwable[] throwableArray4 = analyzerException3.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: ;", (java.lang.Throwable) analyzerException5);
        java.lang.String str7 = analyzerException5.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: " + "'", str7, "org.mockito.asm.tree.analysis.AnalyzerException: ");
    }

    @Test
    public void test06385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06385");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier6.merge(value27, value44);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass48 = type47.getClass();
        java.lang.String str49 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        java.lang.String str50 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass48);
        org.mockito.asm.Type type52 = type51.getElementType();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type53, type55, list56, false);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str60 = type59.getDescriptor();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier58.newValue(type59);
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type59, list62, true);
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier6.newValue(type52);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str68 = type67.getClassName();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getObjectType("boolean");
        int int72 = type70.getOpcode(82);
        java.lang.String str73 = type70.getClassName();
        java.util.List list74 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier76 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type70, list74, true);
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier6.newValue(type67);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value79 = simpleVerifier6.newOperation(abstractInsnNode78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str49, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str50, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "S" + "'", str60, "S");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "S" + "'", str68, "S");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 86 + "'", int72 == 86);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "boolean" + "'", str73, "boolean");
        org.junit.Assert.assertNotNull(value77);
    }

    @Test
    public void test06386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06386");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        int int24 = type18.getSort();
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray25);
        java.lang.String str27 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type13, false);
        java.lang.Class<?> wildcardClass30 = type3.getClass();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        boolean boolean33 = type31.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: Z");
        org.mockito.asm.Type type34 = type31.getElementType();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type39, list40, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray44);
        boolean boolean47 = type37.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray48 = new org.mockito.asm.Type[] { type37 };
        java.lang.String str49 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray48);
        int int50 = type35.getSize();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type52, false);
        java.lang.String str55 = type52.toString();
        java.util.List list56 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type52, list56, false);
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.Type type61 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        int int65 = type63.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, false);
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type61, list68, false);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type71, type72, true);
        int int75 = type71.getSize();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass78 = type77.getClass();
        java.lang.String str79 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass78);
        java.lang.String str80 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass78);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass78);
        org.mockito.asm.Type type82 = type81.getElementType();
        org.mockito.asm.Type type83 = type81.getElementType();
        java.lang.String str84 = type81.getInternalName();
        org.mockito.asm.Type[] typeArray86 = org.mockito.asm.Type.getArgumentTypes("(C)Lorg/mockito/asm/Type;");
        java.lang.String str87 = org.mockito.asm.Type.getMethodDescriptor(type81, typeArray86);
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type71, typeArray86);
        java.lang.String str89 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray86);
        java.lang.String str90 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray86);
        int int92 = type34.getOpcode(1032);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(S)C" + "'", str26, "(S)C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)S" + "'", str45, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(S)C" + "'", str49, "(S)C");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "C" + "'", str55, "C");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str79, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str80, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org/mockito/asm/Type" + "'", str84, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str87, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(C)S" + "'", str88, "(C)S");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(C)LC;" + "'", str89, "(C)LC;");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(C)Lg/mockito/asm/Type;" + "'", str90, "(C)Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1036 + "'", int92 == 1036);
    }

    @Test
    public void test06387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06387");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value22);
        analyzerException5.addSuppressed((java.lang.Throwable) analyzerException23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Throwable) analyzerException25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: hi!: expected I, but found I", (java.lang.Throwable) analyzerException26);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str31 = type30.getClassName();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = value47.getSize();
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier41.merge(value44, value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value49);
        boolean boolean51 = type32.equals((java.lang.Object) analyzerException50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type60 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray61);
        boolean boolean64 = type54.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray65);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray65);
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type72, list73, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier79.newValue(type80);
        int int82 = value81.getSize();
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier75.merge(value78, value81);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Object) type30, value78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Throwable) analyzerException84);
        java.lang.Throwable[] throwableArray86 = analyzerException85.getSuppressed();
        analyzerException26.addSuppressed((java.lang.Throwable) analyzerException85);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException88 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Throwable) analyzerException26);
        java.lang.Class<?> wildcardClass89 = analyzerException88.getClass();
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass89);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass89);
        int int92 = type91.getSort();
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "double" + "'", str31, "double");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(C)S" + "'", str62, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(S)C" + "'", str66, "(S)C");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(S)V" + "'", str67, "(S)V");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(S)D" + "'", str68, "(S)D");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 10 + "'", int92 == 10);
    }

    @Test
    public void test06388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06388");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        boolean boolean14 = type9.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        int int29 = type23.getSort();
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray30);
        java.lang.String str33 = type9.toString();
        org.mockito.asm.Type type34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type34, false);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type39, typeArray46);
        boolean boolean49 = type39.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type37, typeArray50);
        java.lang.String str52 = type37.getDescriptor();
        int int53 = type37.getSort();
        org.mockito.asm.tree.analysis.Value value54 = simpleVerifier36.newValue(type37);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier36.newValue(type55);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        boolean boolean75 = type65.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type65, true);
        boolean boolean79 = type65.equals((java.lang.Object) 158);
        int int81 = type65.getOpcode(159);
        org.mockito.asm.tree.analysis.Value value82 = simpleVerifier36.newValue(type65);
        java.lang.String str83 = type65.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)S" + "'", str32, "(S)S");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(C)S" + "'", str47, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(S)C" + "'", str51, "(S)C");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "C" + "'", str52, "C");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(C)S" + "'", str73, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 159 + "'", int81 == 159);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "short" + "'", str83, "short");
    }

    @Test
    public void test06389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06389");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int9 = type8.getSize();
        org.mockito.asm.Type type10 = type8.getElementType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(type10);
    }

    @Test
    public void test06390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06390");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type12, list13, false);
        java.lang.String str16 = type12.getClassName();
        int int17 = type12.getSort();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type19, list20, true);
        boolean boolean24 = type19.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "int" + "'", str16, "int");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06391");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.FLOAT_TYPE;
        int int2 = type0.getOpcode(110);
        int int4 = type0.getOpcode(156);
        int int6 = type0.getOpcode(85);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str8 = type7.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray17);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type21, true);
        boolean boolean24 = type7.equals((java.lang.Object) simpleVerifier23);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type7, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type41 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray42);
        boolean boolean45 = type35.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type35, true);
        boolean boolean49 = type35.equals((java.lang.Object) 158);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getType("S");
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type51, list52, false);
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type35, list55, true);
        int int59 = type0.getOpcode(132);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 112 + "'", int2 == 112);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 158 + "'", int4 == 158);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 87 + "'", int6 == 87);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean" + "'", str8, "boolean");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)S" + "'", str18, "(C)S");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(C)Z" + "'", str19, "(C)Z");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)S" + "'", str43, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 134 + "'", int59 == 134);
    }

    @Test
    public void test06392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06392");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        java.lang.String str7 = type3.getDescriptor();
        int int9 = type3.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type20, list21, true);
        int int24 = type18.getSort();
        org.mockito.asm.Type[] typeArray25 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str26 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray25);
        java.lang.String str27 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type13, false);
        org.mockito.asm.Type type30 = null;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type30, list31, true);
        java.lang.String str34 = type3.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "C" + "'", str7, "C");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(S)C" + "'", str26, "(S)C");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "C" + "'", str27, "C");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
    }

    @Test
    public void test06393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06393");
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I");
        java.lang.String str5 = type4.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: S: expected org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S, but found D", (java.lang.Object) str5, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)D");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("C");
        analyzerException23.addSuppressed((java.lang.Throwable) analyzerException25);
        analyzerException21.addSuppressed((java.lang.Throwable) analyzerException25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: hi!;", (java.lang.Throwable) analyzerException25);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("Lg.mockito.asm.tree.analysis.SimpleVerifier;", (java.lang.Throwable) analyzerException25);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;" + "'", str5, "Lorg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
    }

    @Test
    public void test06394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06394");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.getClassName();
        java.lang.String str9 = type1.getDescriptor();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        int int18 = type12.getSort();
        java.lang.String str19 = type12.toString();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list21 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type20, list21, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        int int31 = type25.getSort();
        java.lang.String str32 = type25.getClassName();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier23.newValue(type25);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type25, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, false);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getObjectType("Ldouble;");
        org.mockito.asm.Type type40 = type39.getElementType();
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier37.newValue(type40);
        java.lang.String str42 = type40.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "short" + "'", str8, "short");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "S" + "'", str9, "S");
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "S" + "'", str19, "S");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "short" + "'", str32, "short");
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Louble;" + "'", str42, "Louble;");
    }

    @Test
    public void test06395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06395");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type: expected Lorg/mockito/asm/Type;, but found null");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException7 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException7);
        java.lang.Throwable[] throwableArray9 = analyzerException7.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException10 = new org.mockito.asm.tree.analysis.AnalyzerException("Lg/mockito/asm/Type;", (java.lang.Throwable) analyzerException7);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException14 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException15 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException14);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException16 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException15);
        analyzerException7.addSuppressed((java.lang.Throwable) analyzerException15);
        analyzerException3.addSuppressed((java.lang.Throwable) analyzerException7);
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException3);
        java.lang.Throwable[] throwableArray20 = analyzerException3.getSuppressed();
        java.lang.Class<?> wildcardClass21 = analyzerException3.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass21);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org/mockito/asm/tree/analysis/AnalyzerException" + "'", str22, "org/mockito/asm/tree/analysis/AnalyzerException");
    }

    @Test
    public void test06396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06396");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        int int1 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        int int36 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter2.copyOperation(abstractInsnNode20, value33);
        boolean boolean38 = type0.equals((java.lang.Object) basicInterpreter2);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        int int40 = type39.getSort();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type39, list41, false);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier43.newValue(type44);
        int int47 = type44.getOpcode((-1));
        int int48 = type44.getSort();
        int int49 = type44.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7 + "'", int1 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNull(value45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test06397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06397");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Z;", (java.lang.Throwable) analyzerException2);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException6 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        int int22 = value21.getSize();
        org.mockito.asm.tree.analysis.Value value23 = simpleVerifier15.merge(value18, value21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value23);
        analyzerException6.addSuppressed((java.lang.Throwable) analyzerException24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException6);
        java.lang.Throwable throwable28 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable28);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        int int46 = value45.getSize();
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier39.merge(value42, value45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException48);
        java.lang.Throwable[] throwableArray50 = analyzerException49.getSuppressed();
        analyzerException29.addSuppressed((java.lang.Throwable) analyzerException49);
        java.lang.Throwable[] throwableArray52 = analyzerException49.getSuppressed();
        java.lang.Throwable throwable54 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable54);
        analyzerException49.addSuppressed((java.lang.Throwable) analyzerException55);
        java.lang.Throwable[] throwableArray57 = analyzerException55.getSuppressed();
        analyzerException26.addSuppressed((java.lang.Throwable) analyzerException55);
        analyzerException2.addSuppressed((java.lang.Throwable) analyzerException26);
        java.lang.String str60 = analyzerException2.toString();
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: hi!" + "'", str60, "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
    }

    @Test
    public void test06398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06398");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        int int6 = type4.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, false);
        java.util.List list9 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list9, false);
        java.lang.String str12 = type2.getInternalName();
        java.lang.Class<?> wildcardClass13 = type2.getClass();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass13);
        int int15 = type14.getSize();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "C" + "'", str12, "C");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test06399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06399");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("LLg/mockito/asm/Type;");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 21");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06400");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass5 = type4.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, false);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str18 = type17.getDescriptor();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier10.newValue(type17);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean24 = type22.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int27 = type26.getSort();
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type26, list28, false);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass33 = type32.getClass();
        java.lang.String str34 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass33);
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type37, list38, true);
        int int42 = type26.getOpcode(92);
        org.mockito.asm.tree.analysis.Value value43 = simpleVerifier10.newValue(type26);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode44 = null;
        java.util.List list45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value46 = simpleVerifier10.naryOperation(abstractInsnNode44, list45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "S" + "'", str18, "S");
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str34, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 96 + "'", int42 == 96);
        org.junit.Assert.assertNotNull(value43);
    }

    @Test
    public void test06401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06401");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int3 = type1.getOpcode((int) (byte) 10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        int int12 = type5.getSize();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int15 = type14.getSort();
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type14, list16, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type14, true);
        java.lang.String str21 = type1.getDescriptor();
        org.mockito.asm.Type type22 = type1.getElementType();
        org.mockito.asm.Type type23 = type22.getElementType();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I");
        java.lang.String str26 = type25.getInternalName();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value44);
        boolean boolean46 = type27.equals((java.lang.Object) analyzerException45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray56);
        boolean boolean59 = type49.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray60);
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray60);
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray60);
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray60);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 14 + "'", int3 == 14);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str21, "Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I" + "'", str26, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)S" + "'", str57, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(S)C" + "'", str61, "(S)C");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(S)V" + "'", str62, "(S)V");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(S)Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I;" + "'", str63, "(S)Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/AnalyzerException;: expected 5, but found I;");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(S)Lmockito/asm/tree/analysis/AnalyzerException;" + "'", str64, "(S)Lmockito/asm/tree/analysis/AnalyzerException;");
    }

    @Test
    public void test06402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06402");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        int int5 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        int int11 = type9.getOpcode(88);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getObjectType("J");
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type13, list14, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        org.mockito.asm.Type type18 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str19 = type18.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        java.lang.String str30 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray28);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type32, true);
        boolean boolean35 = type18.equals((java.lang.Object) simpleVerifier34);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier34.newValue(type37);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass41 = type40.getClass();
        java.lang.String str42 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass41);
        java.lang.String str43 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        java.lang.String str45 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass41);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        int int54 = type48.getSort();
        java.lang.String str55 = type48.toString();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type56, list57, false);
        boolean boolean61 = type56.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type72, list73, true);
        int int76 = type70.getSort();
        org.mockito.asm.Type[] typeArray77 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray77);
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray77);
        java.lang.String str80 = type56.toString();
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type56, list81, false);
        org.mockito.asm.tree.analysis.Value value84 = simpleVerifier34.newValue(type46);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value85 = simpleVerifier16.unaryOperation(abstractInsnNode17, value84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 92 + "'", int11 == 92);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "boolean" + "'", str19, "boolean");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(C)Z" + "'", str30, "(C)Z");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str42, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str43, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org/mockito/asm/Type" + "'", str45, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "S" + "'", str55, "S");
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 4 + "'", int76 == 4);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(S)C" + "'", str78, "(S)C");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(S)S" + "'", str79, "(S)S");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "S" + "'", str80, "S");
        org.junit.Assert.assertNotNull(value84);
    }

    @Test
    public void test06403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06403");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, false);
        java.lang.Class<?> wildcardClass14 = type5.getClass();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass14);
        int int17 = type15.getOpcode((int) (short) 0);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str20 = type19.getDescriptor();
        java.lang.String str21 = type19.toString();
        java.lang.String str22 = type19.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type19, true);
        java.lang.String str25 = type19.getClassName();
        java.lang.String str26 = type19.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 4 + "'", int17 == 4);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "S" + "'", str20, "S");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "S" + "'", str21, "S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "short" + "'", str22, "short");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "short" + "'", str25, "short");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "S" + "'", str26, "S");
    }

    @Test
    public void test06404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06404");
        java.lang.Object obj1 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        int int15 = value14.getSize();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier8.merge(value11, value14);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException18 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", obj1, value16);
        java.lang.Class<?> wildcardClass19 = value16.getClass();
        java.lang.String str20 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass19);
        java.lang.String str21 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        java.lang.String str23 = type22.getClassName();
        int int24 = type22.getSort();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str20, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str21, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.mockito.asm.tree.analysis.BasicValue" + "'", str23, "org.mockito.asm.tree.analysis.BasicValue");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
    }

    @Test
    public void test06405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06405");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        boolean boolean22 = type8.equals((java.lang.Object) 158);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getObjectType("(C)Z");
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int27 = type26.getSort();
        java.lang.String str28 = type26.toString();
        org.mockito.asm.Type type29 = type26.getElementType();
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list30, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        java.lang.String str35 = type34.getDescriptor();
        org.mockito.asm.tree.analysis.Value value36 = simpleVerifier32.newValue(type34);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getObjectType("(S)C");
        int int39 = type38.getSort();
        java.lang.String str40 = type38.getClassName();
        org.mockito.asm.Type type41 = type38.getElementType();
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier32.newValue(type41);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type41, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode45 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = value58.getSize();
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier52.merge(value55, value58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        int int74 = value73.getSize();
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier67.merge(value70, value73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list80 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type77, type79, list80, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier83 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier83.newValue(type84);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier86 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type87 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value88 = basicVerifier86.newValue(type87);
        int int89 = value88.getSize();
        org.mockito.asm.tree.analysis.Value value90 = simpleVerifier82.merge(value85, value88);
        org.mockito.asm.tree.analysis.Value value91 = simpleVerifier52.merge(value73, value90);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value92 = simpleVerifier44.unaryOperation(abstractInsnNode45, value90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str28, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str35, "Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(value91);
    }

    @Test
    public void test06406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06406");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSort();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        int int15 = type9.getSort();
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier7.newValue(type9);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str24 = type23.getDescriptor();
        org.mockito.asm.tree.analysis.Value value25 = simpleVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.Value value26 = simpleVerifier7.newValue(type23);
        int int28 = type23.getOpcode(129);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.getType("Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type30, list31, true);
        java.lang.String str34 = type30.getDescriptor();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getObjectType("(C)LC;");
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type37, type38, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str42 = type41.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray51);
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type41, list54, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        boolean boolean75 = type65.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier77 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type65, true);
        int int78 = type60.getSort();
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type60, list79, true);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier81.newValue(type82);
        java.util.List list84 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type82, list84, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type82, false);
        java.lang.String str89 = type30.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "S" + "'", str24, "S");
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 129 + "'", int28 == 129);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;" + "'", str34, "Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "boolean" + "'", str42, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)Z" + "'", str53, "(C)Z");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(C)S" + "'", str73, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I" + "'", str89, "org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
    }

    @Test
    public void test06407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06407");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("S");
        boolean boolean5 = type2.equals((java.lang.Object) analyzerException4);
        java.lang.Throwable[] throwableArray6 = analyzerException4.getSuppressed();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType("Ldouble;");
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str13 = type12.getDescriptor();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str15 = type14.getClassName();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        int int32 = value31.getSize();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier25.merge(value28, value31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException34 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value33);
        boolean boolean35 = type16.equals((java.lang.Object) analyzerException34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type40, list41, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray45 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str46 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray45);
        boolean boolean48 = type38.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray49 = new org.mockito.asm.Type[] { type38 };
        java.lang.String str50 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray49);
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray49);
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray49);
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list53, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type59, list60, true);
        int int63 = type57.getSort();
        int int64 = type57.getSize();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int67 = type66.getSort();
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type57, type66, list68, true);
        java.lang.String str71 = type66.toString();
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier55.newValue(type66);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException73 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: ()Lorg/mockito/asm/Type;", (java.lang.Object) "Ldouble;", value72);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException74 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Throwable) analyzerException73);
        java.lang.Throwable[] throwableArray75 = analyzerException74.getSuppressed();
        analyzerException4.addSuppressed((java.lang.Throwable) analyzerException74);
        java.lang.Throwable[] throwableArray77 = analyzerException4.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException79 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        java.lang.Throwable[] throwableArray80 = analyzerException79.getSuppressed();
        java.lang.Throwable[] throwableArray81 = analyzerException79.getSuppressed();
        analyzerException4.addSuppressed((java.lang.Throwable) analyzerException79);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException83 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: g.mockito.asm.Type: expected true, but found I", (java.lang.Throwable) analyzerException79);
        java.lang.String str84 = analyzerException79.toString();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "S" + "'", str13, "S");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double" + "'", str15, "double");
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(C)S" + "'", str46, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(S)C" + "'", str50, "(S)C");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(S)V" + "'", str51, "(S)V");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(S)D" + "'", str52, "(S)D");
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 4 + "'", int63 == 4);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str71, "Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str84, "org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
    }

    @Test
    public void test06408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06408");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;: expected I, but found I");
        int int3 = type1.getOpcode((int) (byte) 100);
        java.lang.String str4 = type1.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 104 + "'", int3 == 104);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.SimpleVerifier;: expected I, but found I" + "'", str4, "org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.SimpleVerifier;: expected I, but found I");
    }

    @Test
    public void test06409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06409");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str7 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int12 = type11.getDimensions();
        java.lang.Class<?> wildcardClass13 = type11.getClass();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str7, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06410");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        java.lang.String str2 = type1.getInternalName();
        int int4 = type1.getOpcode(195);
        org.mockito.asm.Type type5 = type1.getElementType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str2, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 199 + "'", int4 == 199);
        org.junit.Assert.assertNotNull(type5);
    }

    @Test
    public void test06411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06411");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("[Lorg/mockito/asm/Type;");
        int int2 = type1.getSort();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str4 = type3.getClassName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value22);
        boolean boolean24 = type5.equals((java.lang.Object) analyzerException23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        boolean boolean37 = type27.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray38);
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray38);
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray38);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type43, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str47 = type46.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray56);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray56);
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type46, list59, false);
        java.util.List list62 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type43, list62, false);
        java.lang.Class<?> wildcardClass65 = simpleVerifier64.getClass();
        java.lang.String str66 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass65);
        java.lang.String str67 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass65);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass65);
        java.lang.String str69 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass65);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass65);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type70, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode73 = null;
        java.util.List list74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value75 = simpleVerifier72.naryOperation(abstractInsnNode73, list74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 9 + "'", int2 == 9);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "double" + "'", str4, "double");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)C" + "'", str39, "(S)C");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)V" + "'", str40, "(S)V");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)D" + "'", str41, "(S)D");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "boolean" + "'", str47, "boolean");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)S" + "'", str57, "(C)S");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(C)Z" + "'", str58, "(C)Z");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org/mockito/asm/tree/analysis/SimpleVerifier" + "'", str66, "org/mockito/asm/tree/analysis/SimpleVerifier");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str67, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str69, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertNotNull(type70);
    }

    @Test
    public void test06412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06412");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)L(C)LZ;;");
    }

    @Test
    public void test06413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06413");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        int int13 = value12.getSize();
        org.mockito.asm.tree.analysis.Value value14 = simpleVerifier6.merge(value9, value12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type18, list19, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        int int28 = value27.getSize();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier21.merge(value24, value27);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier36.merge(value57, value74);
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier6.merge(value29, value74);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.LONG_TYPE;
        int int78 = type77.getSort();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier6.newValue(type77);
        int int80 = value79.getSize();
        int int81 = value79.getSize();
        int int82 = value79.getSize();
        int int83 = value79.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 7 + "'", int78 == 7);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
    }

    @Test
    public void test06414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06414");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str1 = type0.getDescriptor();
        org.mockito.asm.Type type2 = null;
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray14 = new org.mockito.asm.Type[] { type13 };
        java.lang.String str15 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray14);
        boolean boolean17 = type7.equals((java.lang.Object) '4');
        org.mockito.asm.Type type18 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type18, list19, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type30, true);
        org.mockito.asm.Type type43 = null;
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        int int61 = value60.getSize();
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier54.merge(value57, value60);
        org.mockito.asm.tree.analysis.Value value63 = simpleVerifier42.merge(value47, value62);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getReturnType("(C)Z");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type69, list70, true);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray74);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray74);
        org.mockito.asm.tree.analysis.Value value77 = simpleVerifier42.newValue(type65);
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier21.newValue(type65);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type65, false);
        org.mockito.asm.Type type81 = null;
        org.mockito.asm.tree.analysis.Value value82 = simpleVerifier80.newValue(type81);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value84 = simpleVerifier80.newOperation(abstractInsnNode83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "S" + "'", str1, "S");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(C)S" + "'", str15, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(C)S" + "'", str75, "(C)S");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)Z" + "'", str76, "(C)Z");
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value82);
    }

    @Test
    public void test06415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06415");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type4 = type1.getElementType();
        int int5 = type4.getSize();
        java.lang.String str6 = type4.toString();
        int int8 = type4.getOpcode(21);
        java.lang.String str9 = type4.toString();
        int int10 = type4.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lg/mockito/asm/Type;" + "'", str6, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 25 + "'", int8 == 25);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lg/mockito/asm/Type;" + "'", str9, "Lg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test06416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06416");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("L(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;;");
        java.lang.String str2 = type1.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LL(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;;;" + "'", str2, "LL(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;;;");
    }

    @Test
    public void test06417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06417");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, false);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str14 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.Value value15 = simpleVerifier12.newValue(type13);
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type13, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value22 = basicVerifier20.newValue(type21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray28 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str29 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray28);
        boolean boolean31 = type21.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray32);
        java.lang.String str34 = type19.getDescriptor();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int38 = type36.getOpcode(86);
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type36, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray50);
        boolean boolean53 = type43.equals((java.lang.Object) '4');
        org.mockito.asm.Type type54 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type54, list55, false);
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier41.newValue(type43);
        int int59 = value58.getSize();
        org.mockito.asm.Type type60 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        int int68 = type62.getSort();
        java.lang.String str69 = type62.getClassName();
        java.lang.String str70 = type62.getDescriptor();
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list71, false);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        int int76 = type74.getOpcode(84);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier77 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type78 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value79 = basicVerifier77.newValue(type78);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list81 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type78, type80, list81, true);
        int int84 = type78.getSort();
        boolean boolean86 = type78.equals((java.lang.Object) 192);
        int int87 = type78.getSort();
        java.lang.String str88 = type78.toString();
        boolean boolean89 = type74.equals((java.lang.Object) str88);
        org.mockito.asm.Type[] typeArray91 = org.mockito.asm.Type.getArgumentTypes("(C)L(S)C;");
        java.lang.String str92 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray91);
        org.mockito.asm.tree.analysis.Value value93 = simpleVerifier73.newValue(type74);
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier18.merge(value58, value93);
        int int95 = value94.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "S" + "'", str14, "S");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(C)S" + "'", str29, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(S)C" + "'", str33, "(S)C");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "C" + "'", str34, "C");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 86 + "'", int38 == 86);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(C)S" + "'", str51, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "short" + "'", str69, "short");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "S" + "'", str70, "S");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 84 + "'", int76 == 84);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 4 + "'", int84 == 4);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 4 + "'", int87 == 4);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "S" + "'", str88, "S");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(typeArray91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(C)C" + "'", str92, "(C)C");
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
    }

    @Test
    public void test06418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06418");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)L(S)Lorg/mockito/asm/Type;;");
        java.lang.Throwable[] throwableArray2 = analyzerException1.getSuppressed();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Z", (java.lang.Throwable) analyzerException24);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;", (java.lang.Throwable) analyzerException24);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str31 = type30.getClassName();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = value47.getSize();
        org.mockito.asm.tree.analysis.Value value49 = simpleVerifier41.merge(value44, value47);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value49);
        boolean boolean51 = type32.equals((java.lang.Object) analyzerException50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray61 = new org.mockito.asm.Type[] { type60 };
        java.lang.String str62 = org.mockito.asm.Type.getMethodDescriptor(type54, typeArray61);
        boolean boolean64 = type54.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray65);
        java.lang.String str67 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray65);
        java.lang.String str68 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray65);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        org.mockito.asm.Type type72 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type72, list73, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier76 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type77 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value78 = basicVerifier76.newValue(type77);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier79 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type80 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value81 = basicVerifier79.newValue(type80);
        int int82 = value81.getSize();
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier75.merge(value78, value81);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException84 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Object) type30, value78);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException85 = new org.mockito.asm.tree.analysis.AnalyzerException("D", (java.lang.Throwable) analyzerException84);
        java.lang.Throwable[] throwableArray86 = analyzerException85.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException87 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Throwable) analyzerException85);
        analyzerException24.addSuppressed((java.lang.Throwable) analyzerException87);
        analyzerException1.addSuppressed((java.lang.Throwable) analyzerException87);
        java.lang.Throwable[] throwableArray90 = analyzerException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "double" + "'", str31, "double");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(C)S" + "'", str62, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(S)C" + "'", str66, "(S)C");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(S)V" + "'", str67, "(S)V");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(S)D" + "'", str68, "(S)D");
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(value81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test06419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06419");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)C");
        int int2 = type1.getSort();
        org.mockito.asm.Type type3 = type1.getElementType();
        java.lang.String str4 = type3.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "S" + "'", str4, "S");
    }

    @Test
    public void test06420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06420");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier15 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type16 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value17 = basicVerifier15.newValue(type16);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = value20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier14.merge(value17, value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value22);
        analyzerException5.addSuppressed((java.lang.Throwable) analyzerException23);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException25 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException5);
        java.lang.Throwable[] throwableArray26 = analyzerException5.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)V", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException28 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;;", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException29 = new org.mockito.asm.tree.analysis.AnalyzerException("()Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException28);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException32 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)S");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException36 = new org.mockito.asm.tree.analysis.AnalyzerException("I");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException37 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I", (java.lang.Throwable) analyzerException36);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException38 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: B", (java.lang.Throwable) analyzerException37);
        analyzerException32.addSuppressed((java.lang.Throwable) analyzerException38);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("[Ljava/lang/Throwable;", (java.lang.Throwable) analyzerException38);
        analyzerException28.addSuppressed((java.lang.Throwable) analyzerException38);
        java.lang.String str42 = analyzerException28.toString();
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: L(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;;" + "'", str42, "org.mockito.asm.tree.analysis.AnalyzerException: L(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;;");
    }

    @Test
    public void test06421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06421");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type4 = type1.getElementType();
        int int5 = type4.getSort();
        int int7 = type4.getOpcode(184);
        int int8 = type4.getSort();
        int int9 = type4.getSize();
        org.mockito.asm.Type type10 = type4.getElementType();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)C");
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        boolean boolean25 = type15.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray26);
        int int28 = type13.getSize();
        boolean boolean30 = type13.equals((java.lang.Object) 181);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getObjectType("(S)C");
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type32, list33, true);
        int int37 = type32.getOpcode(131072);
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type32, list38, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.SimpleVerifier");
        org.mockito.asm.Type type43 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier56 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type57 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value58 = basicVerifier56.newValue(type57);
        int int59 = value58.getSize();
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier52.merge(value55, value58);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException61 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value60);
        boolean boolean62 = type43.equals((java.lang.Object) analyzerException61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        boolean boolean75 = type65.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type65 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray76);
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray76);
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray76);
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray76);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray76);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 188 + "'", int7 == 188);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(S)C" + "'", str27, "(S)C");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 131076 + "'", int37 == 131076);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(C)S" + "'", str73, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(S)C" + "'", str77, "(S)C");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(S)V" + "'", str78, "(S)V");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(S)Lorg.mockito.asm.tree.analysis.SimpleVerifier;" + "'", str79, "(S)Lorg.mockito.asm.tree.analysis.SimpleVerifier;");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(S)L(S)C;" + "'", str80, "(S)L(S)C;");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(S)Lg/mockito/asm/Type;" + "'", str81, "(S)Lg/mockito/asm/Type;");
    }

    @Test
    public void test06422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06422");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("(C)LC;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("boolean");
        java.lang.String str4 = type3.getClassName();
        java.lang.Class<?> wildcardClass5 = type3.getClass();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass5);
        org.mockito.asm.Type[] typeArray8 = org.mockito.asm.Type.getArgumentTypes("(C)LLorg/mockito/asm/tree/analysis/SimpleVerifier;;");
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray8);
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        org.mockito.asm.Type type11 = type1.getElementType();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str17 = type16.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type16, typeArray26);
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type16, list29, false);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str33 = type32.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type41 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray42);
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type32, typeArray42);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray42);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        boolean boolean58 = type48.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray59);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray59);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type63, true);
        int int67 = type63.getOpcode(163);
        java.lang.String str68 = type63.getClassName();
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type63, list69, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode72 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier73 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value75 = basicVerifier73.newValue(type74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type74, type76, list77, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier83 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value85 = basicVerifier83.newValue(type84);
        int int86 = value85.getSize();
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier79.merge(value82, value85);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value88 = simpleVerifier71.copyOperation(abstractInsnNode72, value87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "boolean" + "'", str4, "boolean");
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str9, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)LC)LC;" + "'", str10, "(C)LC)LC;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "boolean" + "'", str17, "boolean");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(C)S" + "'", str27, "(C)S");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)Z" + "'", str28, "(C)Z");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "boolean" + "'", str33, "boolean");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)S" + "'", str43, "(C)S");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)Z" + "'", str44, "(C)Z");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)C" + "'", str45, "(C)C");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)C" + "'", str60, "(S)C");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(S)C" + "'", str61, "(S)C");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 167 + "'", int67 == 167);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException;" + "'", str68, "Lorg.mockito.asm.tree.analysis.AnalyzerException;");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(value85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(value87);
    }

    @Test
    public void test06423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06423");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        int int38 = value37.getSize();
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier31.merge(value34, value37);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException40 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) 0, value37);
        analyzerException21.addSuppressed((java.lang.Throwable) analyzerException40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException42 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: D", (java.lang.Throwable) analyzerException40);
        java.lang.Throwable[] throwableArray43 = analyzerException40.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("(SC)S", (java.lang.Throwable) analyzerException40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("LJ;", (java.lang.Throwable) analyzerException40);
        java.lang.String str46 = analyzerException45.toString();
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: LJ;" + "'", str46, "org.mockito.asm.tree.analysis.AnalyzerException: LJ;");
    }

    @Test
    public void test06424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06424");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass3 = type2.getClass();
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        java.lang.String str5 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass3);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass3);
        org.mockito.asm.tree.analysis.Value value7 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException8 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type6, value7);
        boolean boolean10 = type6.equals((java.lang.Object) 188);
        org.mockito.asm.Type type11 = type6.getElementType();
        int int12 = type6.getSort();
        java.lang.String str13 = type6.getDescriptor();
        java.lang.String str14 = type6.getClassName();
        java.lang.String str15 = type6.toString();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str13, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.mockito.asm.Type" + "'", str14, "org.mockito.asm.Type");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str15, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06425");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)J");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        java.lang.String str13 = type9.getDescriptor();
        int int15 = type9.getOpcode((int) (short) 0);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        int int30 = type24.getSort();
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray31);
        java.lang.String str33 = type19.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type19, false);
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type9, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.FLOAT_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type43, list44, true);
        int int47 = type41.getSort();
        java.lang.String str48 = type41.toString();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type49, list50, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        int int60 = type54.getSort();
        java.lang.String str61 = type54.getClassName();
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier52.newValue(type54);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier64 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type54, true);
        org.mockito.asm.tree.analysis.Value value65 = simpleVerifier38.newValue(type54);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str71 = type70.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        java.lang.String str82 = org.mockito.asm.Type.getMethodDescriptor(type70, typeArray80);
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type70, list83, false);
        java.util.List list86 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier88 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type67, list86, true);
        java.lang.String str89 = type67.getClassName();
        int int91 = type67.getOpcode((int) (byte) -1);
        java.util.List list92 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier94 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type67, list92, true);
        org.mockito.asm.Type type96 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.SimpleVerifier");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier98 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type96, false);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type99 = type67.getElementType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "C" + "'", str13, "C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "S" + "'", str48, "S");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "short" + "'", str61, "short");
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "boolean" + "'", str71, "boolean");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)S" + "'", str81, "(C)S");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(C)Z" + "'", str82, "(C)Z");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "char" + "'", str89, "char");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(type96);
    }

    @Test
    public void test06426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06426");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        int int13 = type2.getSort();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str16 = type15.getClassName();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass19);
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type21, list22, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, false);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str32 = type31.getDescriptor();
        org.mockito.asm.tree.analysis.Value value33 = simpleVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier24.newValue(type31);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException35 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Z", (java.lang.Object) type2, value34);
        java.lang.Class<?> wildcardClass36 = type2.getClass();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        java.lang.String str38 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        java.lang.String str39 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass36);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 4 + "'", int13 == 4);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "S" + "'", str16, "S");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "S" + "'", str32, "S");
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org/mockito/asm/Type" + "'", str38, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org/mockito/asm/Type" + "'", str39, "org/mockito/asm/Type");
    }

    @Test
    public void test06427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06427");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lrg.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        int int2 = type1.getDimensions();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test06428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06428");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg.mockito.asm.tree.analysis.AnalyzerException;");
        int int2 = type1.getSort();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, false);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        int int14 = type12.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, false);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray26 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str27 = org.mockito.asm.Type.getMethodDescriptor(type19, typeArray26);
        boolean boolean29 = type19.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray30);
        java.lang.String str32 = type17.getDescriptor();
        int int33 = type17.getSort();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        boolean boolean46 = type36.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray47 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str48 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray47);
        int int49 = type34.getSize();
        boolean boolean51 = type34.equals((java.lang.Object) 181);
        int int52 = type34.getSize();
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray53);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray53);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray53);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray53);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(C)S" + "'", str27, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(S)C" + "'", str31, "(S)C");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "C" + "'", str32, "C");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(S)C" + "'", str48, "(S)C");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)C" + "'", str54, "(C)C");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)LC;" + "'", str55, "(C)LC;");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)C" + "'", str56, "(C)C");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException;" + "'", str57, "(C)Lorg.mockito.asm.tree.analysis.AnalyzerException;");
    }

    @Test
    public void test06429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06429");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        java.lang.String str23 = type19.getDescriptor();
        int int25 = type19.getOpcode((int) (short) 0);
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list26, true);
        java.lang.String str29 = type0.toString();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int32 = type31.getSort();
        java.lang.String str33 = type31.toString();
        org.mockito.asm.Type type34 = type31.getElementType();
        java.util.List list35 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type34, list35, false);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getType("(SC)L(C)LC;;");
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type41, true);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str45 = type44.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray54);
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type44, list57, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type74 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type68, typeArray75);
        boolean boolean78 = type68.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type68, true);
        int int81 = type63.getSort();
        java.util.List list82 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type63, list82, true);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.INT_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier84.newValue(type85);
        java.lang.String str87 = type85.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type85, true);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int93 = type91.getOpcode((int) (byte) 10);
        int int94 = type91.getSort();
        org.mockito.asm.tree.analysis.Value value95 = simpleVerifier89.newValue(type91);
        org.mockito.asm.tree.analysis.Value value96 = simpleVerifier37.newValue(type91);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode97 = null;
        java.util.List list98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier37.naryOperation(abstractInsnNode97, list98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "C" + "'", str29, "C");
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str33, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "boolean" + "'", str45, "boolean");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)Z" + "'", str56, "(C)Z");
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)S" + "'", str76, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "I" + "'", str87, "I");
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 14 + "'", int93 == 14);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 10 + "'", int94 == 10);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertNotNull(value96);
    }

    @Test
    public void test06430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06430");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        int int3 = type1.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type5, false);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getObjectType("mockito/asm/Type");
        org.mockito.asm.tree.analysis.Value value16 = simpleVerifier13.newValue(type15);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode17 = null;
        java.util.List list18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value19 = simpleVerifier13.naryOperation(abstractInsnNode17, list18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
    }

    @Test
    public void test06431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06431");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str1 = type0.getDescriptor();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        java.lang.String str17 = type2.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list22 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier24 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type21, list22, true);
        java.lang.String str25 = type21.getDescriptor();
        int int27 = type21.getOpcode((int) (short) 0);
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type21, list28, true);
        int int31 = type21.getSort();
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type21, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str40 = type39.getDescriptor();
        org.mockito.asm.tree.analysis.Value value41 = simpleVerifier38.newValue(type39);
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier34.newValue(type39);
        java.lang.String str43 = type39.getClassName();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getObjectType("Ldouble;");
        int int46 = type45.getSort();
        boolean boolean47 = type39.equals((java.lang.Object) type45);
        java.lang.String str48 = type45.toString();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "I" + "'", str1, "I");
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "C" + "'", str17, "C");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "I" + "'", str40, "I");
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "int" + "'", str43, "int");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "LLdouble;;" + "'", str48, "LLdouble;;");
    }

    @Test
    public void test06432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06432");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = type5.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        java.lang.String str19 = type8.toString();
        int int20 = type8.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type8, true);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType("(C)Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.Value value25 = simpleVerifier22.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str31 = type30.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier32 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value34 = basicVerifier32.newValue(type33);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type35, list36, true);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type39 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray40);
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray40);
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type30, list43, false);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        boolean boolean58 = type48.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray59);
        java.lang.String str61 = type46.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type65, list66, true);
        java.lang.String str69 = type65.getDescriptor();
        int int71 = type65.getOpcode((int) (short) 0);
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type65, list72, true);
        int int75 = type46.getSort();
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type46, list76, false);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.BYTE_TYPE;
        int int80 = type79.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type79, false);
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier22.newValue(type30);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode84 = null;
        java.util.List list85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value86 = simpleVerifier22.naryOperation(abstractInsnNode84, list85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "S" + "'", str19, "S");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "boolean" + "'", str31, "boolean");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(C)S" + "'", str41, "(C)S");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)Z" + "'", str42, "(C)Z");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)C" + "'", str60, "(S)C");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "C" + "'", str61, "C");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "C" + "'", str69, "C");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 3 + "'", int80 == 3);
        org.junit.Assert.assertNotNull(value83);
    }

    @Test
    public void test06433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06433");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.Value value6 = simpleVerifier3.newValue(type5);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode7 = null;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type9, true);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str13 = type12.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type17, list18, true);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type21 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type15, typeArray22);
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray22);
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type12, list25, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        boolean boolean46 = type36.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type36, true);
        int int49 = type31.getSort();
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type31, list50, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.getObjectType("Ldouble;");
        java.lang.String str55 = type54.getClassName();
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier52.newValue(type54);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value57 = simpleVerifier3.unaryOperation(abstractInsnNode7, value56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "boolean" + "'", str13, "boolean");
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)S" + "'", str23, "(C)S");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(C)Z" + "'", str24, "(C)Z");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Ldouble;" + "'", str55, "Ldouble;");
        org.junit.Assert.assertNotNull(value56);
    }

    @Test
    public void test06434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06434");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        int int1 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter2 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode3 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        int int17 = value16.getSize();
        org.mockito.asm.tree.analysis.Value value18 = simpleVerifier10.merge(value13, value16);
        org.mockito.asm.tree.analysis.Value value19 = basicInterpreter2.copyOperation(abstractInsnNode3, value16);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        int int34 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value35 = simpleVerifier27.merge(value30, value33);
        int int36 = value33.getSize();
        org.mockito.asm.tree.analysis.Value value37 = basicInterpreter2.copyOperation(abstractInsnNode20, value33);
        boolean boolean38 = type0.equals((java.lang.Object) basicInterpreter2);
        org.mockito.asm.Type type39 = org.mockito.asm.Type.LONG_TYPE;
        int int40 = type39.getSort();
        java.util.List list41 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier43 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type39, list41, false);
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type45, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type45, true);
        java.lang.Class<?> wildcardClass50 = type0.getClass();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 7 + "'", int1 == 7);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 7 + "'", int40 == 7);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test06435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06435");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type12, list13, false);
        java.lang.String str16 = type12.getClassName();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type18, false);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass23 = type22.getClass();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        java.lang.String str26 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass23);
        java.lang.String str27 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass23);
        java.lang.String str28 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        java.lang.String str30 = type29.getInternalName();
        org.mockito.asm.tree.analysis.Value value31 = simpleVerifier20.newValue(type29);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode32 = null;
        java.util.List list33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value34 = simpleVerifier20.naryOperation(abstractInsnNode32, list33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "int" + "'", str16, "int");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str26, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str27, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org/mockito/asm/Type" + "'", str28, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org/mockito/asm/Type" + "'", str30, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(value31);
    }

    @Test
    public void test06436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06436");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(S)Lrg.mockito.asm.tree.analysis.AnalyzerException: (C)L(C)Z;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06437");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        int int3 = type1.getOpcode((int) (byte) 10);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        int int11 = type5.getSort();
        int int12 = type5.getSize();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int15 = type14.getSort();
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type14, list16, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type14, true);
        int int21 = type1.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type30, true);
        boolean boolean44 = type30.equals((java.lang.Object) 158);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str46 = type45.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray55);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray55);
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray55);
        org.mockito.asm.Type type60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type60, false);
        org.mockito.asm.Type type63 = null;
        org.mockito.asm.tree.analysis.Value value64 = simpleVerifier62.newValue(type63);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode65 = null;
        org.mockito.asm.Type type68 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)Z");
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str71 = type70.getClassName();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass74 = type73.getClass();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass74);
        org.mockito.asm.Type type76 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass74);
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type70, type76, list77, true);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type82 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list83 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type80, type82, list83, false);
        org.mockito.asm.Type type86 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str87 = type86.getDescriptor();
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier85.newValue(type86);
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier79.newValue(type86);
        int int90 = value89.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)LC;", (java.lang.Object) type68, value89);
        int int92 = value89.getSize();
        int int93 = value89.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value94 = simpleVerifier62.copyOperation(abstractInsnNode65, value89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 14 + "'", int3 == 14);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "boolean" + "'", str46, "boolean");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)Z" + "'", str57, "(C)Z");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(C)S" + "'", str58, "(C)S");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;" + "'", str59, "(C)Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "S" + "'", str71, "S");
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "S" + "'", str87, "S");
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test06438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06438");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int4 = type3.getSort();
        java.lang.String str5 = type3.toString();
        org.mockito.asm.Type type6 = type3.getElementType();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list7, true);
        org.mockito.asm.Type type10 = null;
        org.mockito.asm.Type type11 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        int int15 = type13.getOpcode(8192);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, true);
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type11, list18, true);
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier9.newValue(type11);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray35);
        int int37 = type22.getSize();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type39, false);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type43, true);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str47 = type46.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray56);
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray56);
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type46, list59, false);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        boolean boolean74 = type64.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray75);
        java.lang.String str77 = type62.getDescriptor();
        int int78 = type62.getSort();
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type62, list79, true);
        boolean boolean82 = type39.equals((java.lang.Object) type43);
        int int83 = type39.getSize();
        java.lang.String str84 = type39.getClassName();
        int int86 = type39.getOpcode(0);
        java.lang.String str87 = type39.toString();
        java.lang.String str88 = type39.getClassName();
        java.util.List list89 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier91 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type39, list89, true);
        java.lang.String str92 = type39.toString();
        int int94 = type39.getOpcode(25);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8196 + "'", int15 == 8196);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(S)C" + "'", str36, "(S)C");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "boolean" + "'", str47, "boolean");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)S" + "'", str57, "(C)S");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(C)Z" + "'", str58, "(C)Z");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)S" + "'", str72, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(S)C" + "'", str76, "(S)C");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "C" + "'", str77, "C");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "char" + "'", str84, "char");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "C" + "'", str87, "C");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "char" + "'", str88, "char");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "C" + "'", str92, "C");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 25 + "'", int94 == 25);
    }

    @Test
    public void test06439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06439");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type4 = type1.getElementType();
        int int5 = type4.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        int int22 = value21.getSize();
        org.mockito.asm.tree.analysis.Value value23 = simpleVerifier15.merge(value18, value21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value23);
        boolean boolean25 = type6.equals((java.lang.Object) analyzerException24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray39);
        java.lang.String str41 = type26.getDescriptor();
        int int42 = type26.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type26, true);
        java.lang.String str45 = type26.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier47 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type26, false);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getReturnType("B");
        org.mockito.asm.tree.analysis.Value value50 = simpleVerifier47.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.DOUBLE_TYPE;
        org.mockito.asm.Type type53 = org.mockito.asm.Type.getType("Lorg/mockito/asm/tree/analysis/BasicValue;");
        int int55 = type53.getOpcode(8192);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, true);
        java.lang.String str58 = type51.getDescriptor();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier47.newValue(type51);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode60 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type68 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray69);
        boolean boolean72 = type62.equals((java.lang.Object) '4');
        java.lang.String str73 = type62.toString();
        org.mockito.asm.Type type74 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type76, type78, list79, true);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray83 = new org.mockito.asm.Type[] { type82 };
        java.lang.String str84 = org.mockito.asm.Type.getMethodDescriptor(type76, typeArray83);
        boolean boolean86 = type76.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray87 = new org.mockito.asm.Type[] { type76 };
        java.lang.String str88 = org.mockito.asm.Type.getMethodDescriptor(type74, typeArray87);
        int int89 = type74.getSize();
        boolean boolean91 = type74.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier93 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type74, false);
        org.mockito.asm.Type type95 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.tree.analysis.Value value96 = simpleVerifier93.newValue(type95);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value97 = simpleVerifier47.copyOperation(abstractInsnNode60, value96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "C" + "'", str45, "C");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 8196 + "'", int55 == 8196);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "D" + "'", str58, "D");
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(C)S" + "'", str70, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "S" + "'", str73, "S");
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(C)S" + "'", str84, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(S)C" + "'", str88, "(S)C");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertNotNull(value96);
    }

    @Test
    public void test06440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06440");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException1 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: ()LC)L(S)C;");
    }

    @Test
    public void test06441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06441");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getObjectType("double");
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier19.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.Type type35 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type35, list36, false);
        org.mockito.asm.tree.analysis.Value value39 = simpleVerifier19.newValue(type24);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value41 = simpleVerifier19.newOperation(abstractInsnNode40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value39);
    }

    @Test
    public void test06442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06442");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        int int18 = type0.getSize();
        java.lang.String str19 = type0.toString();
        int int20 = type0.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier21 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value23 = basicVerifier21.newValue(type22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type24, list25, true);
        int int28 = type22.getSort();
        java.lang.String str29 = type22.toString();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type30, list31, false);
        boolean boolean35 = type30.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier37 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type30, true);
        int int39 = type0.getOpcode(177);
        java.lang.String str40 = type0.getClassName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = type0.getInternalName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "C" + "'", str19, "C");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(value23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "S" + "'", str29, "S");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 177 + "'", int39 == 177);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "char" + "'", str40, "char");
    }

    @Test
    public void test06443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06443");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("C");
        int int3 = type1.getOpcode(160);
        int int5 = type1.getOpcode(83);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: char");
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type7, list8, false);
        int int12 = type7.getOpcode(124);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 160 + "'", int3 == 160);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 83 + "'", int5 == 83);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 128 + "'", int12 == 128);
    }

    @Test
    public void test06444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06444");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str1 = type0.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray10);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type14, true);
        boolean boolean17 = type0.equals((java.lang.Object) simpleVerifier16);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier16.newValue(type19);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass23 = type22.getClass();
        java.lang.String str24 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass23);
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        java.lang.String str27 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass23);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass23);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        int int36 = type30.getSort();
        java.lang.String str37 = type30.toString();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type38, list39, false);
        boolean boolean43 = type38.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        int int58 = type52.getSort();
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray59);
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray59);
        java.lang.String str62 = type38.toString();
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type38, list63, false);
        org.mockito.asm.tree.analysis.Value value66 = simpleVerifier16.newValue(type28);
        java.lang.String str67 = type28.toString();
        int int68 = type28.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "boolean" + "'", str1, "boolean");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(C)S" + "'", str11, "(C)S");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)Z" + "'", str12, "(C)Z");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str24, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str25, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org/mockito/asm/Type" + "'", str27, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 4 + "'", int36 == 4);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "S" + "'", str37, "S");
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)C" + "'", str60, "(S)C");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(S)S" + "'", str61, "(S)S");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "S" + "'", str62, "S");
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str67, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
    }

    @Test
    public void test06445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06445");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("LS;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray18);
        boolean boolean21 = type11.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray22);
        int int24 = type9.getSize();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type26, false);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str34 = type33.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray43);
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type33, list46, false);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        boolean boolean61 = type51.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray62);
        java.lang.String str64 = type49.getDescriptor();
        int int65 = type49.getSort();
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type49, list66, true);
        boolean boolean69 = type26.equals((java.lang.Object) type30);
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type26, list70, true);
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type8, list73, false);
        int int76 = type1.getSort();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(C)S" + "'", str19, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(S)C" + "'", str23, "(S)C");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "boolean" + "'", str34, "boolean");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)Z" + "'", str45, "(C)Z");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)S" + "'", str59, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(S)C" + "'", str63, "(S)C");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "C" + "'", str64, "C");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
    }

    @Test
    public void test06446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06446");
        org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("LS)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(typeArray1);
    }

    @Test
    public void test06447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06447");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("LS;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass4 = type3.getClass();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        java.lang.String str6 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass4);
        java.lang.String str7 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass4);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type11, type13, list14, true);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray18 = new org.mockito.asm.Type[] { type17 };
        java.lang.String str19 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray18);
        boolean boolean21 = type11.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray22 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray22);
        int int24 = type9.getSize();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type26, false);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str34 = type33.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray43 = new org.mockito.asm.Type[] { type42 };
        java.lang.String str44 = org.mockito.asm.Type.getMethodDescriptor(type36, typeArray43);
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray43);
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type33, list46, false);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.Type type57 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray58 = new org.mockito.asm.Type[] { type57 };
        java.lang.String str59 = org.mockito.asm.Type.getMethodDescriptor(type51, typeArray58);
        boolean boolean61 = type51.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray62 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str63 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray62);
        java.lang.String str64 = type49.getDescriptor();
        int int65 = type49.getSort();
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type49, list66, true);
        boolean boolean69 = type26.equals((java.lang.Object) type30);
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type26, list70, true);
        java.util.List list73 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier75 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type8, list73, false);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        java.lang.String str78 = type77.getInternalName();
        int int80 = type77.getOpcode(195);
        org.mockito.asm.tree.analysis.Value value81 = simpleVerifier75.newValue(type77);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value83 = simpleVerifier75.newOperation(abstractInsnNode82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org/mockito/asm/Type" + "'", str7, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(C)S" + "'", str19, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(S)C" + "'", str23, "(S)C");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "boolean" + "'", str34, "boolean");
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(C)S" + "'", str44, "(C)S");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)Z" + "'", str45, "(C)Z");
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(C)S" + "'", str59, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(S)C" + "'", str63, "(S)C");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "C" + "'", str64, "C");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str78, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 199 + "'", int80 == 199);
        org.junit.Assert.assertNotNull(value81);
    }

    @Test
    public void test06448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06448");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray8 = new org.mockito.asm.Type[] { type7 };
        java.lang.String str9 = org.mockito.asm.Type.getMethodDescriptor(type1, typeArray8);
        boolean boolean11 = type1.equals((java.lang.Object) '4');
        org.mockito.asm.Type type12 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type12, list13, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type24, true);
        org.mockito.asm.Type type37 = null;
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        int int55 = value54.getSize();
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier48.merge(value51, value54);
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier36.merge(value41, value56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getReturnType("(C)Z");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type67 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray68);
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray68);
        org.mockito.asm.tree.analysis.Value value71 = simpleVerifier36.newValue(type59);
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier15.newValue(type59);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int75 = type74.getSort();
        java.lang.String str76 = type74.toString();
        org.mockito.asm.Type type77 = type74.getElementType();
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type59, type77, list78, true);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode81 = null;
        org.mockito.asm.Type type83 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        int int87 = type85.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier89 = new org.mockito.asm.tree.analysis.SimpleVerifier(type83, type85, false);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.getObjectType("Lorg/mockito/asm/tree/analysis/AnalyzerException;");
        java.lang.String str92 = type91.getClassName();
        org.mockito.asm.tree.analysis.Value value93 = simpleVerifier89.newValue(type91);
        int int94 = value93.getSize();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value95 = simpleVerifier80.copyOperation(abstractInsnNode81, value93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(C)S" + "'", str9, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(C)S" + "'", str69, "(C)S");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(C)Z" + "'", str70, "(C)Z");
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str76, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 4 + "'", int87 == 4);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException;" + "'", str92, "Lorg.mockito.asm.tree.analysis.AnalyzerException;");
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test06449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06449");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        int int5 = type3.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, false);
        java.lang.Class<?> wildcardClass8 = type3.getClass();
        java.lang.String str9 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        java.lang.String str10 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type12 = type11.getElementType();
        int int13 = type11.getSort();
        int int15 = type11.getOpcode(95);
        int int17 = type11.getOpcode(128);
        org.mockito.asm.Type type18 = type11.getElementType();
        org.mockito.asm.Type type19 = type11.getElementType();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str9, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str10, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 99 + "'", int15 == 99);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 132 + "'", int17 == 132);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type19);
    }

    @Test
    public void test06450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06450");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        org.mockito.asm.Type type21 = null;
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier20.newValue(type21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        int int36 = value35.getSize();
        org.mockito.asm.tree.analysis.Value value37 = simpleVerifier29.merge(value32, value35);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type39, type41, list42, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        boolean boolean56 = type46.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type46, true);
        org.mockito.asm.Type type59 = null;
        org.mockito.asm.tree.analysis.Value value60 = simpleVerifier58.newValue(type59);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier71 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type72 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value73 = basicVerifier71.newValue(type72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        int int77 = value76.getSize();
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier70.merge(value73, value76);
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier58.merge(value63, value78);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier20.merge(value37, value78);
        int int81 = value37.getSize();
        java.lang.Class<?> wildcardClass82 = value37.getClass();
        java.lang.String str83 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass82);
        int int86 = type84.getOpcode(190);
        java.lang.String str87 = type84.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str83, "Lorg/mockito/asm/tree/analysis/BasicValue;");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 194 + "'", int86 == 194);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Lorg/mockito/asm/tree/analysis/BasicValue;" + "'", str87, "Lorg/mockito/asm/tree/analysis/BasicValue;");
    }

    @Test
    public void test06451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06451");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;: expected (C)S, but found null");
        int int2 = type1.getDimensions();
        java.lang.String str3 = type1.getInternalName();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        int int9 = type7.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier11 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, false);
        java.lang.Class<?> wildcardClass12 = type7.getClass();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass12);
        java.lang.String str14 = type13.getInternalName();
        boolean boolean15 = type1.equals((java.lang.Object) type13);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;: expected (C)S, but found null" + "'", str3, "org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;: expected (C)S, but found null");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org/mockito/asm/Type" + "'", str14, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06452");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)LLorg/mockito/asm/tree/analysis/SimpleVerifier;;");
        java.lang.String str2 = type1.toString();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.LONG_TYPE;
        int int4 = type3.getSort();
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode6 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier13.merge(value16, value19);
        org.mockito.asm.tree.analysis.Value value22 = basicInterpreter5.copyOperation(abstractInsnNode6, value19);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier31 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value33 = basicVerifier31.newValue(type32);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        int int37 = value36.getSize();
        org.mockito.asm.tree.analysis.Value value38 = simpleVerifier30.merge(value33, value36);
        int int39 = value36.getSize();
        org.mockito.asm.tree.analysis.Value value40 = basicInterpreter5.copyOperation(abstractInsnNode23, value36);
        boolean boolean41 = type3.equals((java.lang.Object) basicInterpreter5);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.LONG_TYPE;
        int int43 = type42.getSort();
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type42, list44, false);
        java.lang.Class<?> wildcardClass47 = simpleVerifier46.getClass();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass47);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.getObjectType("(S)V");
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type56, true);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str60 = type59.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier61 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value63 = basicVerifier61.newValue(type62);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type64, list65, true);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type68 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray69);
        java.lang.String str71 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray69);
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type56, type59, list72, false);
        java.lang.String str75 = type56.getDescriptor();
        org.mockito.asm.tree.analysis.Value value76 = simpleVerifier54.newValue(type56);
        int int77 = value76.getSize();
        boolean boolean78 = type1.equals((java.lang.Object) int77);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "L(C)LLorg/mockito/asm/tree/analysis/SimpleVerifier;;;" + "'", str2, "L(C)LLorg/mockito/asm/tree/analysis/SimpleVerifier;;;");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 7 + "'", int4 == 7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(value33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7 + "'", int43 == 7);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "boolean" + "'", str60, "boolean");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(value63);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(C)S" + "'", str70, "(C)S");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(C)Z" + "'", str71, "(C)Z");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "C" + "'", str75, "C");
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test06453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06453");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        int int18 = type0.getSize();
        java.lang.String str19 = type0.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier20 = new org.mockito.asm.tree.analysis.BasicVerifier();
        boolean boolean21 = type0.equals((java.lang.Object) basicVerifier20);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str24 = type23.getDescriptor();
        java.lang.String str25 = type23.toString();
        java.lang.String str26 = type23.getClassName();
        java.lang.String str27 = type23.getClassName();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str29 = type28.getClassName();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        int int46 = value45.getSize();
        org.mockito.asm.tree.analysis.Value value47 = simpleVerifier39.merge(value42, value45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value47);
        boolean boolean49 = type30.equals((java.lang.Object) analyzerException48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list55 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type52, type54, list55, true);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type58 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type52, typeArray59);
        boolean boolean62 = type52.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray63 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str64 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray63);
        java.lang.String str65 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray63);
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray63);
        boolean boolean67 = type23.equals((java.lang.Object) type28);
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier20.newValue(type28);
        int int69 = value68.getSize();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "char" + "'", str19, "char");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "S" + "'", str24, "S");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "S" + "'", str25, "S");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "short" + "'", str26, "short");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "short" + "'", str27, "short");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "double" + "'", str29, "double");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(C)S" + "'", str60, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(S)C" + "'", str64, "(S)C");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(S)V" + "'", str65, "(S)V");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(S)D" + "'", str66, "(S)D");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
    }

    @Test
    public void test06454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06454");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("LS;");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getObjectType("C");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        int int7 = type5.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, false);
        java.lang.Class<?> wildcardClass10 = type5.getClass();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass10);
        int int13 = type11.getOpcode(88);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type11, false);
        java.lang.String str16 = type11.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 92 + "'", int13 == 92);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str16, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06455");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: Z", (java.lang.Throwable) analyzerException3);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: g.mockito.asm.Type: expected true, but found I", (java.lang.Throwable) analyzerException4);
        java.lang.Throwable[] throwableArray6 = analyzerException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = analyzerException5.getSuppressed();
        java.lang.Throwable[] throwableArray8 = analyzerException5.getSuppressed();
        java.lang.Throwable[] throwableArray9 = analyzerException5.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test06456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06456");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier3 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, true);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier13.merge(value16, value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value21);
        boolean boolean23 = type4.equals((java.lang.Object) analyzerException22);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier25 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type26 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value27 = basicVerifier25.newValue(type26);
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list29 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier31 = new org.mockito.asm.tree.analysis.SimpleVerifier(type26, type28, list29, true);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray33 = new org.mockito.asm.Type[] { type32 };
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray33);
        boolean boolean36 = type26.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray37);
        java.lang.String str39 = type24.getDescriptor();
        int int40 = type24.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type24, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type4, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        int int48 = type46.getSize();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        int int56 = type50.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type50, false);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getObjectType("(S)C");
        int int61 = type60.getSort();
        java.lang.String str62 = type60.getClassName();
        org.mockito.asm.Type type63 = type60.getElementType();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        org.mockito.asm.Type type66 = type65.getElementType();
        boolean boolean67 = type60.equals((java.lang.Object) type66);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type69, list70, false);
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier58.newValue(type69);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier78 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type79 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value80 = basicVerifier78.newValue(type79);
        org.mockito.asm.Type type81 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list82 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type79, type81, list82, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier85 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier85.newValue(type86);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier88 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value90 = basicVerifier88.newValue(type89);
        int int91 = value90.getSize();
        org.mockito.asm.tree.analysis.Value value92 = simpleVerifier84.merge(value87, value90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException93 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value92);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException94 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)S", (java.lang.Object) 175, value92);
        org.mockito.asm.tree.analysis.Value value95 = simpleVerifier44.merge(value73, value92);
        org.mockito.asm.Type type97 = org.mockito.asm.Type.getReturnType("B");
        org.mockito.asm.tree.analysis.Value value98 = simpleVerifier44.newValue(type97);
        int int99 = type97.getSort();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(value27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)S" + "'", str34, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(S)C" + "'", str38, "(S)C");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "C" + "'", str39, "C");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(S)C" + "'", str62, "(S)C");
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertNotNull(value98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 3 + "'", int99 == 3);
    }

    @Test
    public void test06457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06457");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        int int19 = type17.getOpcode(86);
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str28 = type27.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray37);
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type27, list40, false);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str44 = type43.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray53 = new org.mockito.asm.Type[] { type52 };
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray53);
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray53);
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray53);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray53);
        java.lang.Class<?> wildcardClass58 = type17.getClass();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass58);
        java.lang.String str61 = type60.toString();
        org.mockito.asm.Type type62 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type62, type63, true);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str67 = type66.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier68 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value70 = basicVerifier68.newValue(type69);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list72 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type71, list72, true);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray76 = new org.mockito.asm.Type[] { type75 };
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type69, typeArray76);
        java.lang.String str78 = org.mockito.asm.Type.getMethodDescriptor(type66, typeArray76);
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type63, type66, list79, false);
        org.mockito.asm.Type type82 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str83 = type82.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        org.mockito.asm.Type type87 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list88 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type85, type87, list88, true);
        org.mockito.asm.Type type91 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray92 = new org.mockito.asm.Type[] { type91 };
        java.lang.String str93 = org.mockito.asm.Type.getMethodDescriptor(type85, typeArray92);
        java.lang.String str94 = org.mockito.asm.Type.getMethodDescriptor(type82, typeArray92);
        java.lang.String str95 = org.mockito.asm.Type.getMethodDescriptor(type63, typeArray92);
        java.lang.String str96 = org.mockito.asm.Type.getMethodDescriptor(type60, typeArray92);
        java.lang.String str97 = type60.toString();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 86 + "'", int19 == 86);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "boolean" + "'", str28, "boolean");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)Z" + "'", str39, "(C)Z");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "boolean" + "'", str44, "boolean");
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)S" + "'", str54, "(C)S");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)Z" + "'", str55, "(C)Z");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)C" + "'", str56, "(C)C");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)S" + "'", str57, "(C)S");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str61, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "boolean" + "'", str67, "boolean");
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(value70);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(C)S" + "'", str77, "(C)S");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(C)Z" + "'", str78, "(C)Z");
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "boolean" + "'", str83, "boolean");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(typeArray92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(C)S" + "'", str93, "(C)S");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(C)Z" + "'", str94, "(C)Z");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "(C)C" + "'", str95, "(C)C");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "(C)Lorg/mockito/asm/Type;" + "'", str96, "(C)Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str97, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06458");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        boolean boolean19 = type9.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type9, true);
        boolean boolean23 = type9.equals((java.lang.Object) 158);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.getType("S");
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type25, list26, false);
        java.lang.Class<?> wildcardClass29 = type9.getClass();
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str33 = type32.getClassName();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass36 = type35.getClass();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass36);
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type32, type38, list39, true);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException60 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value59);
        boolean boolean61 = type42.equals((java.lang.Object) analyzerException60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        boolean boolean74 = type64.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray75 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray75);
        java.lang.String str77 = type62.getDescriptor();
        int int78 = type62.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type62, true);
        java.lang.String str81 = type62.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type62, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        int int87 = value86.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException88 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org/mockito/asm/tree/analysis/SimpleVerifier", (java.lang.Object) false, value86);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException89 = new org.mockito.asm.tree.analysis.AnalyzerException("LLorg.mockito.asm.tree.analysis.AnalyzerException: ;;", (java.lang.Object) wildcardClass29, value86);
        java.lang.String str90 = analyzerException89.toString();
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "S" + "'", str33, "S");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)S" + "'", str72, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(S)C" + "'", str76, "(S)C");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "C" + "'", str77, "C");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "C" + "'", str81, "C");
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: LLorg.mockito.asm.tree.analysis.AnalyzerException: ;;: expected class org.mockito.asm.Type, but found I" + "'", str90, "org.mockito.asm.tree.analysis.AnalyzerException: LLorg.mockito.asm.tree.analysis.AnalyzerException: ;;: expected class org.mockito.asm.Type, but found I");
    }

    @Test
    public void test06459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06459");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type1, false);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getObjectType("S");
        java.lang.Object obj7 = null;
        boolean boolean8 = type6.equals(obj7);
        org.mockito.asm.tree.analysis.Value value9 = simpleVerifier4.newValue(type6);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode10 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier18 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value20 = basicVerifier18.newValue(type19);
        int int21 = type19.getSort();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type23, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        int int33 = type27.getSort();
        org.mockito.asm.tree.analysis.Value value34 = simpleVerifier25.newValue(type27);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, false);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str42 = type41.getDescriptor();
        org.mockito.asm.tree.analysis.Value value43 = simpleVerifier40.newValue(type41);
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier25.newValue(type41);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.getReturnType("S");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter48 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier50 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value52 = basicVerifier50.newValue(type51);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list54 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier56 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type53, list54, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        int int63 = value62.getSize();
        org.mockito.asm.tree.analysis.Value value64 = simpleVerifier56.merge(value59, value62);
        org.mockito.asm.tree.analysis.Value value65 = basicInterpreter48.copyOperation(abstractInsnNode49, value62);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException66 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) "S", value65);
        int int67 = value65.getSize();
        org.mockito.asm.tree.analysis.Value value68 = simpleVerifier17.merge(value44, value65);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type69, type70, true);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getReturnType("(C)C");
        org.mockito.asm.tree.analysis.Value value75 = simpleVerifier72.newValue(type74);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value76 = simpleVerifier4.binaryOperation(abstractInsnNode10, value65, value75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "boolean" + "'", str2, "boolean");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(value34);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "S" + "'", str42, "S");
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(value52);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(value75);
    }

    @Test
    public void test06460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06460");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = type5.getDescriptor();
        org.mockito.asm.Type type7 = type5.getElementType();
        java.lang.String str8 = type5.getClassName();
        int int9 = type5.getDimensions();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.getObjectType("org/mockito/asm/Type");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type11, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str16 = type15.getDescriptor();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier13.newValue(type15);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType("Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I;");
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier13.newValue(type19);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode21 = null;
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str27 = type26.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray36);
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type26, list39, false);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        boolean boolean54 = type44.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type44 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray55);
        int int57 = type42.getSize();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type59, false);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str63 = type62.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier64 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type65 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value66 = basicVerifier64.newValue(type65);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type65, type67, list68, true);
        org.mockito.asm.Type type71 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type71 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray72);
        java.lang.String str74 = org.mockito.asm.Type.getMethodDescriptor(type62, typeArray72);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type76 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type75, type76, true);
        boolean boolean79 = type62.equals((java.lang.Object) simpleVerifier78);
        java.util.List list80 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier82 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type62, list80, false);
        org.mockito.asm.tree.analysis.Value value83 = simpleVerifier41.newValue(type62);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value84 = simpleVerifier13.unaryOperation(abstractInsnNode21, value83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.mockito.asm.Type" + "'", str8, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "S" + "'", str16, "S");
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "boolean" + "'", str27, "boolean");
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)Z" + "'", str38, "(C)Z");
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(S)C" + "'", str56, "(S)C");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "boolean" + "'", str63, "boolean");
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(value66);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(C)S" + "'", str73, "(C)S");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(C)Z" + "'", str74, "(C)Z");
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(value83);
    }

    @Test
    public void test06461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06461");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.LONG_TYPE;
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier4 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type2, true);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str6 = type5.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray15);
        java.util.List list18 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type5, list18, false);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        boolean boolean33 = type23.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray34);
        int int36 = type21.getSize();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type38, false);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str42 = type41.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier43 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value45 = basicVerifier43.newValue(type44);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type44, type46, list47, true);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray51 = new org.mockito.asm.Type[] { type50 };
        java.lang.String str52 = org.mockito.asm.Type.getMethodDescriptor(type44, typeArray51);
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray51);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier57 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type55, true);
        boolean boolean58 = type41.equals((java.lang.Object) simpleVerifier57);
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type41, list59, false);
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier20.newValue(type41);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier63 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value65 = basicVerifier63.newValue(type64);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list67 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type64, type66, list67, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray71 = new org.mockito.asm.Type[] { type70 };
        java.lang.String str72 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray71);
        boolean boolean74 = type64.equals((java.lang.Object) '4');
        java.lang.String str75 = type64.toString();
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type41, type64, list76, true);
        java.lang.String str79 = type41.getClassName();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type41, false);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = type0.getDimensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "boolean" + "'", str6, "boolean");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)Z" + "'", str17, "(C)Z");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)C" + "'", str35, "(S)C");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "boolean" + "'", str42, "boolean");
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(C)S" + "'", str52, "(C)S");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)Z" + "'", str53, "(C)Z");
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(value65);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(C)S" + "'", str72, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "S" + "'", str75, "S");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "boolean" + "'", str79, "boolean");
    }

    @Test
    public void test06462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06462");
        java.lang.Object obj2 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier10 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type11 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value12 = basicVerifier10.newValue(type11);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        int int16 = value15.getSize();
        org.mockito.asm.tree.analysis.Value value17 = simpleVerifier9.merge(value12, value15);
        int int18 = value17.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException19 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", obj2, value17);
        java.lang.Throwable throwable22 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable22);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier36 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type37 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value38 = basicVerifier36.newValue(type37);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        int int42 = value41.getSize();
        org.mockito.asm.tree.analysis.Value value43 = simpleVerifier35.merge(value38, value41);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException44 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value43);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier45 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type46 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value47 = basicVerifier45.newValue(type46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list49 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier51 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type48, list49, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier52 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type53 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value54 = basicVerifier52.newValue(type53);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        int int58 = value57.getSize();
        org.mockito.asm.tree.analysis.Value value59 = simpleVerifier51.merge(value54, value57);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier70 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type71 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value72 = basicVerifier70.newValue(type71);
        int int73 = value72.getSize();
        org.mockito.asm.tree.analysis.Value value74 = simpleVerifier66.merge(value69, value72);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        org.mockito.asm.Type type78 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type76, type78, list79, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier82 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type83 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value84 = basicVerifier82.newValue(type83);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier85 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type86 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value87 = basicVerifier85.newValue(type86);
        int int88 = value87.getSize();
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier81.merge(value84, value87);
        org.mockito.asm.tree.analysis.Value value90 = simpleVerifier51.merge(value72, value89);
        org.mockito.asm.tree.analysis.Value value91 = basicVerifier24.merge(value43, value90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException23, value91);
        analyzerException19.addSuppressed((java.lang.Throwable) analyzerException92);
        java.lang.Throwable[] throwableArray94 = analyzerException19.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException95 = new org.mockito.asm.tree.analysis.AnalyzerException("L(S)F;", (java.lang.Throwable) analyzerException19);
        java.lang.Throwable[] throwableArray96 = analyzerException95.getSuppressed();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(value12);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(value17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(value38);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(value43);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(value54);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(value84);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(value91);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertNotNull(throwableArray96);
    }

    @Test
    public void test06463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06463");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        java.lang.String str2 = type1.getInternalName();
        org.mockito.asm.Type type3 = type1.getElementType();
        java.lang.String str4 = type1.getClassName();
        int int5 = type1.getDimensions();
        java.lang.String str6 = type1.getDescriptor();
        java.lang.String str7 = type1.getClassName();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray17 = new org.mockito.asm.Type[] { type16 };
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray17);
        boolean boolean20 = type10.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray21);
        java.lang.String str23 = type8.getDescriptor();
        int int24 = type8.getSort();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        boolean boolean37 = type27.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray38);
        int int40 = type25.getSize();
        boolean boolean42 = type25.equals((java.lang.Object) 181);
        int int43 = type25.getSize();
        org.mockito.asm.Type[] typeArray44 = new org.mockito.asm.Type[] { type25 };
        java.lang.String str45 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray44);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        boolean boolean57 = type47.equals((java.lang.Object) '4');
        java.lang.String str58 = type47.toString();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier60 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type61 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value62 = basicVerifier60.newValue(type61);
        org.mockito.asm.Type type63 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type61, type63, list64, true);
        org.mockito.asm.Type type67 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray68 = new org.mockito.asm.Type[] { type67 };
        java.lang.String str69 = org.mockito.asm.Type.getMethodDescriptor(type61, typeArray68);
        boolean boolean71 = type61.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray72 = new org.mockito.asm.Type[] { type61 };
        java.lang.String str73 = org.mockito.asm.Type.getMethodDescriptor(type59, typeArray72);
        int int74 = type59.getSize();
        boolean boolean76 = type59.equals((java.lang.Object) 181);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type59, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type59, true);
        java.lang.String str81 = type59.getDescriptor();
        java.lang.String str82 = type59.getDescriptor();
        java.lang.Class<?> wildcardClass83 = type59.getClass();
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass83);
        java.lang.String str85 = type84.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type84, true);
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        org.mockito.asm.Type type90 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass89);
        int int91 = type90.getSize();
        int int92 = type90.getSort();
        java.lang.String str93 = type90.toString();
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier87.newValue(type90);
        java.lang.String str95 = type90.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org/mockito/asm/Type" + "'", str2, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.mockito.asm.Type" + "'", str4, "org.mockito.asm.Type");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.mockito.asm.Type" + "'", str7, "org.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)S" + "'", str18, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(S)C" + "'", str22, "(S)C");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)C" + "'", str39, "(S)C");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(C)C" + "'", str45, "(C)C");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "S" + "'", str58, "S");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(C)S" + "'", str69, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(S)C" + "'", str73, "(S)C");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "C" + "'", str81, "C");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "C" + "'", str82, "C");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str85, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 10 + "'", int92 == 10);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Ljava/lang/Object;" + "'", str93, "Ljava/lang/Object;");
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "java.lang.Object" + "'", str95, "java.lang.Object");
    }

    @Test
    public void test06464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06464");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BYTE_TYPE;
        int int1 = type0.getSize();
        int int3 = type0.getOpcode(53);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 53 + "'", int3 == 53);
    }

    @Test
    public void test06465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06465");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)[Ljava/lang/Throwable;");
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test06466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06466");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("Z");
        java.lang.String str2 = type1.getClassName();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier4 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type5 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value6 = basicVerifier4.newValue(type5);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list8 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type7, list8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray12 = new org.mockito.asm.Type[] { type11 };
        java.lang.String str13 = org.mockito.asm.Type.getMethodDescriptor(type5, typeArray12);
        boolean boolean15 = type5.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type5 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray16);
        int int18 = type3.getSize();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type20, false);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type24 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type24, true);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str28 = type27.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray37);
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type27, list40, false);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray52);
        boolean boolean55 = type45.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type45 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type43, typeArray56);
        java.lang.String str58 = type43.getDescriptor();
        int int59 = type43.getSort();
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type43, list60, true);
        boolean boolean63 = type20.equals((java.lang.Object) type24);
        int int64 = type20.getSize();
        java.lang.String str65 = type20.getClassName();
        int int67 = type20.getOpcode(0);
        int int68 = type20.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type20, true);
        java.lang.String str71 = type20.getClassName();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Z" + "'", str2, "Z");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(value6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(C)S" + "'", str13, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(S)C" + "'", str17, "(S)C");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "boolean" + "'", str28, "boolean");
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(C)Z" + "'", str39, "(C)Z");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)S" + "'", str53, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(S)C" + "'", str57, "(S)C");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "C" + "'", str58, "C");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "char" + "'", str65, "char");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "char" + "'", str71, "char");
    }

    @Test
    public void test06467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06467");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (S)V");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06468");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type17, false);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str21 = type20.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray30);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type34, true);
        boolean boolean37 = type20.equals((java.lang.Object) simpleVerifier36);
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type20, list38, false);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.BYTE_TYPE;
        java.util.List list42 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type41, list42, true);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier55 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type56 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value57 = basicVerifier55.newValue(type56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier58 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type59 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value60 = basicVerifier58.newValue(type59);
        int int61 = value60.getSize();
        org.mockito.asm.tree.analysis.Value value62 = simpleVerifier54.merge(value57, value60);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException63 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value62);
        boolean boolean64 = type45.equals((java.lang.Object) analyzerException63);
        org.mockito.asm.Type type65 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type69, list70, true);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray74);
        boolean boolean77 = type67.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray78 = new org.mockito.asm.Type[] { type67 };
        java.lang.String str79 = org.mockito.asm.Type.getMethodDescriptor(type65, typeArray78);
        java.lang.String str80 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray78);
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type41, typeArray78);
        int int82 = type41.getSort();
        java.lang.String str83 = type41.getClassName();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "boolean" + "'", str21, "boolean");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)Z" + "'", str32, "(C)Z");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(value62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(C)S" + "'", str75, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(S)C" + "'", str79, "(S)C");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(S)V" + "'", str80, "(S)V");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(S)B" + "'", str81, "(S)B");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 3 + "'", int82 == 3);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "byte" + "'", str83, "byte");
    }

    @Test
    public void test06469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06469");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type type1 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: : expected null, but found null");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06470");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        java.lang.String str15 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        java.lang.String str23 = type19.getDescriptor();
        int int25 = type19.getOpcode((int) (short) 0);
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type19, list26, true);
        int int29 = type19.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        int int37 = type31.getSort();
        java.lang.String str38 = type31.toString();
        java.lang.String str39 = type31.getDescriptor();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type31, true);
        org.mockito.asm.Type type43 = org.mockito.asm.Type.getType("[Lorg/mockito/asm/Type;");
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type43, list44, true);
        int int47 = type43.getDimensions();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "C" + "'", str15, "C");
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "C" + "'", str23, "C");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 4 + "'", int37 == 4);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "S" + "'", str38, "S");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "S" + "'", str39, "S");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test06471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06471");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type type15 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type15, list16, false);
        java.lang.String str19 = type15.getClassName();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.getType("Lorg/mockito/asm/Type;");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier23 = new org.mockito.asm.tree.analysis.SimpleVerifier(type15, type21, false);
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type21, list24, true);
        java.lang.String str27 = type21.getDescriptor();
        int int29 = type21.getOpcode(138);
        int int30 = type21.getSize();
        int int31 = type21.getSize();
        org.mockito.asm.Type type32 = type21.getElementType();
        java.lang.String str33 = type32.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "int" + "'", str19, "int");
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str27, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 142 + "'", int29 == 142);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Lg/mockito/asm/Type;" + "'", str33, "Lg/mockito/asm/Type;");
    }

    @Test
    public void test06472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06472");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        java.lang.String str3 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = type5.getElementType();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, false);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str14 = type13.getDescriptor();
        org.mockito.asm.tree.analysis.Value value15 = simpleVerifier12.newValue(type13);
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type13, list16, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type22, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        java.lang.String str30 = type29.getDescriptor();
        org.mockito.asm.tree.analysis.Value value31 = simpleVerifier27.newValue(type29);
        java.lang.String str32 = type29.getClassName();
        org.mockito.asm.Type type33 = org.mockito.asm.Type.FLOAT_TYPE;
        int int35 = type33.getOpcode(110);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        int int52 = value51.getSize();
        org.mockito.asm.tree.analysis.Value value53 = simpleVerifier45.merge(value48, value51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException54 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value53);
        boolean boolean55 = type36.equals((java.lang.Object) analyzerException54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier57 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value59 = basicVerifier57.newValue(type58);
        org.mockito.asm.Type type60 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type60, list61, true);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray65 = new org.mockito.asm.Type[] { type64 };
        java.lang.String str66 = org.mockito.asm.Type.getMethodDescriptor(type58, typeArray65);
        boolean boolean68 = type58.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray69 = new org.mockito.asm.Type[] { type58 };
        java.lang.String str70 = org.mockito.asm.Type.getMethodDescriptor(type56, typeArray69);
        java.lang.String str71 = type56.getDescriptor();
        int int72 = type56.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier74 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type56, true);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str76 = type75.getDescriptor();
        boolean boolean77 = type56.equals((java.lang.Object) type75);
        org.mockito.asm.Type type80 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass81 = type80.getClass();
        java.lang.String str82 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass81);
        java.lang.String str83 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass81);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass81);
        org.mockito.asm.tree.analysis.Value value85 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException86 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.Type", (java.lang.Object) type84, value85);
        java.lang.String str87 = type84.getInternalName();
        java.util.List list88 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier90 = new org.mockito.asm.tree.analysis.SimpleVerifier(type75, type84, list88, true);
        java.util.List list91 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier93 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type75, list91, true);
        int int94 = type33.getSize();
        java.util.List list95 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier97 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type33, list95, false);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "S" + "'", str14, "S");
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;" + "'", str30, "Lorg.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str32, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 112 + "'", int35 == 112);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(value59);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(C)S" + "'", str66, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(S)C" + "'", str70, "(S)C");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "C" + "'", str71, "C");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "I" + "'", str76, "I");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str82, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str83, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org/mockito/asm/Type" + "'", str87, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
    }

    @Test
    public void test06473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06473");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (S)C");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier3 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value5 = basicVerifier3.newValue(type4);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type6, list7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray11 = new org.mockito.asm.Type[] { type10 };
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type4, typeArray11);
        boolean boolean14 = type4.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type4 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray15);
        int int17 = type2.getSize();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type19, false);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str23 = type22.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier24 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type25 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value26 = basicVerifier24.newValue(type25);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list28 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type27, list28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray32 = new org.mockito.asm.Type[] { type31 };
        java.lang.String str33 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray32);
        java.lang.String str34 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray32);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type36, true);
        boolean boolean39 = type22.equals((java.lang.Object) simpleVerifier38);
        java.util.List list40 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type22, list40, false);
        boolean boolean43 = type1.equals((java.lang.Object) type22);
        int int45 = type1.getOpcode(137);
        org.mockito.asm.Type type46 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        boolean boolean58 = type48.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray59 = new org.mockito.asm.Type[] { type48 };
        java.lang.String str60 = org.mockito.asm.Type.getMethodDescriptor(type46, typeArray59);
        int int61 = type46.getSize();
        boolean boolean63 = type46.equals((java.lang.Object) 181);
        int int64 = type46.getSize();
        java.lang.String str65 = type46.toString();
        int int66 = type46.getSort();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier67 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type68 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value69 = basicVerifier67.newValue(type68);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list71 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier73 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type70, list71, true);
        int int74 = type68.getSort();
        java.lang.String str75 = type68.toString();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list77 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier79 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type76, list77, false);
        boolean boolean81 = type76.equals((java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type76, true);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getObjectType("(S)C");
        int int86 = type85.getSort();
        int int87 = type85.getSort();
        int int88 = type85.getSort();
        java.lang.String str89 = type85.getInternalName();
        java.util.List list90 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier92 = new org.mockito.asm.tree.analysis.SimpleVerifier(type46, type85, list90, true);
        org.mockito.asm.Type type94 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        java.lang.String str95 = type94.getDescriptor();
        int int96 = type94.getDimensions();
        org.mockito.asm.tree.analysis.Value value97 = simpleVerifier92.newValue(type94);
        boolean boolean98 = type1.equals((java.lang.Object) type94);
        java.lang.String str99 = type1.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(value5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)S" + "'", str12, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "boolean" + "'", str23, "boolean");
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(value26);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(C)S" + "'", str33, "(C)S");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(C)Z" + "'", str34, "(C)Z");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 137 + "'", int45 == 137);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(S)C" + "'", str60, "(S)C");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "C" + "'", str65, "C");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(value69);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 4 + "'", int74 == 4);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "S" + "'", str75, "S");
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 10 + "'", int86 == 10);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 10 + "'", int87 == 10);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 10 + "'", int88 == 10);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(S)C" + "'", str89, "(S)C");
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str95, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
        org.junit.Assert.assertNotNull(value97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "C" + "'", str99, "C");
    }

    @Test
    public void test06474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06474");
        org.mockito.asm.Type type0 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type type13 = org.mockito.asm.Type.INT_TYPE;
        java.util.List list14 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type13, list14, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, true);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(C)D");
        int int21 = type20.getSize();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier18.newValue(type20);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode23 = null;
        java.util.List list24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value25 = simpleVerifier18.naryOperation(abstractInsnNode23, list24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(value22);
    }

    @Test
    public void test06475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06475");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int6 = type5.getDimensions();
        org.mockito.asm.Type type7 = type5.getElementType();
        int int8 = type7.getDimensions();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str17 = type16.getDescriptor();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier19 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value21 = basicVerifier19.newValue(type20);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type22, list23, true);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray27 = new org.mockito.asm.Type[] { type26 };
        java.lang.String str28 = org.mockito.asm.Type.getMethodDescriptor(type20, typeArray27);
        boolean boolean30 = type20.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type18, typeArray31);
        java.lang.String str33 = type18.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        java.lang.String str41 = type37.getDescriptor();
        int int43 = type37.getOpcode((int) (short) 0);
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type18, type37, list44, true);
        int int47 = type37.getSort();
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type16, type37, list48, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type51, type52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.INT_TYPE;
        java.lang.String str56 = type55.getDescriptor();
        org.mockito.asm.tree.analysis.Value value57 = simpleVerifier54.newValue(type55);
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier50.newValue(type55);
        int int59 = type55.getSort();
        java.lang.String str60 = type55.getDescriptor();
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier15.newValue(type55);
        boolean boolean62 = type7.equals((java.lang.Object) type55);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.getReturnType("(C)Z");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type64, false);
        int int68 = type55.getOpcode(1);
        java.lang.String str69 = type55.toString();
        java.lang.String str70 = type55.getDescriptor();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "I" + "'", str17, "I");
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(C)S" + "'", str28, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(S)C" + "'", str32, "(S)C");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "I" + "'", str56, "I");
        org.junit.Assert.assertNotNull(value57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "I" + "'", str60, "I");
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "I" + "'", str69, "I");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "I" + "'", str70, "I");
    }

    @Test
    public void test06476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06476");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.getReturnType("(C)Lorg.mockito.asm.tree.analysis.AnalyzerException;");
        org.mockito.asm.tree.analysis.Value value15 = simpleVerifier12.newValue(type14);
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;: expected (C)S, but found null");
        org.mockito.asm.Type type18 = type17.getElementType();
        org.mockito.asm.tree.analysis.Value value19 = simpleVerifier12.newValue(type18);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode20 = null;
        java.util.List list21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value22 = simpleVerifier12.naryOperation(abstractInsnNode20, list21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
    }

    @Test
    public void test06477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06477");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        java.lang.String str8 = type1.toString();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type9, list10, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        int int20 = type14.getSort();
        java.lang.String str21 = type14.getClassName();
        org.mockito.asm.tree.analysis.Value value22 = simpleVerifier12.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        java.lang.String str30 = type24.toString();
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type24, list31, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        int int41 = type35.getSort();
        java.lang.String str42 = type35.toString();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type43, list44, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        int int54 = type48.getSort();
        java.lang.String str55 = type48.getClassName();
        org.mockito.asm.tree.analysis.Value value56 = simpleVerifier46.newValue(type48);
        java.lang.String str57 = type48.getClassName();
        java.lang.String str58 = type48.getDescriptor();
        int int59 = type48.getSort();
        java.lang.String str60 = type48.toString();
        java.util.List list61 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier63 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type48, list61, true);
        org.mockito.asm.Type type64 = org.mockito.asm.Type.DOUBLE_TYPE;
        java.lang.String str65 = type64.getClassName();
        int int67 = type64.getOpcode(0);
        java.lang.String str68 = type64.getClassName();
        org.mockito.asm.tree.analysis.Value value69 = simpleVerifier63.newValue(type64);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value71 = simpleVerifier63.newOperation(abstractInsnNode70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "short" + "'", str21, "short");
        org.junit.Assert.assertNotNull(value22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "S" + "'", str30, "S");
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "S" + "'", str42, "S");
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "short" + "'", str55, "short");
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "short" + "'", str57, "short");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "S" + "'", str58, "S");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 4 + "'", int59 == 4);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "S" + "'", str60, "S");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "double" + "'", str65, "double");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3 + "'", int67 == 3);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "double" + "'", str68, "double");
        org.junit.Assert.assertNotNull(value69);
    }

    @Test
    public void test06478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06478");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str1 = type0.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list6 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier8 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type5, list6, true);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray10 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str11 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray10);
        java.lang.String str12 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray10);
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type14, true);
        boolean boolean17 = type0.equals((java.lang.Object) simpleVerifier16);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier16.newValue(type19);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.getType("C");
        int int24 = type22.getOpcode(160);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type33 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray34);
        boolean boolean37 = type27.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray38 = new org.mockito.asm.Type[] { type27 };
        java.lang.String str39 = org.mockito.asm.Type.getMethodDescriptor(type25, typeArray38);
        int int40 = type25.getSize();
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier44 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type42, false);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str46 = type45.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier47 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type48 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value49 = basicVerifier47.newValue(type48);
        org.mockito.asm.Type type50 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list51 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier53 = new org.mockito.asm.tree.analysis.SimpleVerifier(type48, type50, list51, true);
        org.mockito.asm.Type type54 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray55 = new org.mockito.asm.Type[] { type54 };
        java.lang.String str56 = org.mockito.asm.Type.getMethodDescriptor(type48, typeArray55);
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray55);
        org.mockito.asm.Type type58 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type59 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type58, type59, true);
        boolean boolean62 = type45.equals((java.lang.Object) simpleVerifier61);
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type45, list63, false);
        java.util.List list66 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier68 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type25, list66, true);
        org.mockito.asm.Type type70 = org.mockito.asm.Type.getObjectType("double");
        org.mockito.asm.tree.analysis.Value value71 = simpleVerifier68.newValue(type70);
        org.mockito.asm.tree.analysis.Value value72 = simpleVerifier16.newValue(type70);
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass75 = type74.getClass();
        java.lang.String str76 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass75);
        java.lang.String str77 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        java.lang.String str78 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass75);
        java.lang.String str79 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass75);
        boolean boolean80 = type70.equals((java.lang.Object) wildcardClass75);
        java.lang.String str81 = type70.getClassName();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "boolean" + "'", str1, "boolean");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(C)S" + "'", str11, "(C)S");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(C)Z" + "'", str12, "(C)Z");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 160 + "'", int24 == 160);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(C)S" + "'", str35, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(S)C" + "'", str39, "(S)C");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "boolean" + "'", str46, "boolean");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(value49);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(C)S" + "'", str56, "(C)S");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)Z" + "'", str57, "(C)Z");
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertNotNull(value72);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str76, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org/mockito/asm/Type" + "'", str77, "org/mockito/asm/Type");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str78, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org/mockito/asm/Type" + "'", str79, "org/mockito/asm/Type");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "double" + "'", str81, "double");
    }

    @Test
    public void test06479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06479");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type2 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list3 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type0, type2, list3, false);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str7 = type6.getDescriptor();
        org.mockito.asm.tree.analysis.Value value8 = simpleVerifier5.newValue(type6);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier9 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value11 = basicVerifier9.newValue(type10);
        org.mockito.asm.Type type12 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list13 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier15 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type12, list13, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list20 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type17, type19, list20, true);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray24 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str25 = org.mockito.asm.Type.getMethodDescriptor(type17, typeArray24);
        boolean boolean27 = type17.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type17, true);
        boolean boolean31 = type17.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.Value value32 = simpleVerifier5.newValue(type17);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass35 = type34.getClass();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        java.lang.String str39 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass35);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass43 = type42.getClass();
        org.mockito.asm.Type type44 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass43);
        java.lang.String str46 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass43);
        boolean boolean47 = type40.equals((java.lang.Object) str46);
        org.mockito.asm.tree.analysis.Value value48 = simpleVerifier5.newValue(type40);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode49 = null;
        java.util.List list50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value51 = simpleVerifier5.naryOperation(abstractInsnNode49, list50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "S" + "'", str7, "S");
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(value11);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(C)S" + "'", str25, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str39, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str46, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(value48);
    }

    @Test
    public void test06480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06480");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type8, true);
        int int21 = type3.getSort();
        org.mockito.asm.Type type22 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type23, true);
        int int26 = type22.getSize();
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type22, list27, true);
        java.lang.Class<?> wildcardClass30 = simpleVerifier29.getClass();
        java.lang.String str31 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass30);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.Type type38 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list39 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type36, type38, list39, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        int int49 = type43.getSort();
        org.mockito.asm.Type[] typeArray50 = new org.mockito.asm.Type[] { type43 };
        java.lang.String str51 = org.mockito.asm.Type.getMethodDescriptor(type38, typeArray50);
        int int52 = type38.getSize();
        java.lang.String str53 = type38.toString();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass56 = type55.getClass();
        java.lang.String str57 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        java.lang.String str58 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass56);
        org.mockito.asm.Type type59 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass56);
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type38, type59, list60, false);
        org.mockito.asm.Type type63 = null;
        org.mockito.asm.tree.analysis.Value value64 = simpleVerifier62.newValue(type63);
        org.mockito.asm.Type type66 = org.mockito.asm.Type.getReturnType("LS;");
        org.mockito.asm.tree.analysis.Value value67 = simpleVerifier62.newValue(type66);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier69 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type66, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode70 = null;
        org.mockito.asm.tree.analysis.Value value71 = null;
        org.mockito.asm.Type type74 = org.mockito.asm.Type.getType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;: expected I, but found I");
        org.mockito.asm.Type type77 = org.mockito.asm.Type.getReturnType("S");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter78 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode79 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier80 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type81 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value82 = basicVerifier80.newValue(type81);
        org.mockito.asm.Type type83 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list84 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier86 = new org.mockito.asm.tree.analysis.SimpleVerifier(type81, type83, list84, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier87 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type88 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value89 = basicVerifier87.newValue(type88);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier90 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type91 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value92 = basicVerifier90.newValue(type91);
        int int93 = value92.getSize();
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier86.merge(value89, value92);
        org.mockito.asm.tree.analysis.Value value95 = basicInterpreter78.copyOperation(abstractInsnNode79, value92);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException96 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) "S", value95);
        int int97 = value95.getSize();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException98 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)L(S)C;", (java.lang.Object) "org.mockito.asm.tree.analysis.AnalyzerException: Lorg/mockito/asm/tree/analysis/SimpleVerifier;: expected I, but found I", value95);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value99 = simpleVerifier69.binaryOperation(abstractInsnNode70, value71, value95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org/mockito/asm/tree/analysis/SimpleVerifier" + "'", str31, "org/mockito/asm/tree/analysis/SimpleVerifier");
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4 + "'", int49 == 4);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(S)C" + "'", str51, "(S)C");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "C" + "'", str53, "C");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str57, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str58, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(value82);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(value92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(value94);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1 + "'", int97 == 1);
    }

    @Test
    public void test06481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06481");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException2 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException3 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Throwable) analyzerException2);
        java.lang.String str4 = analyzerException2.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: hi!" + "'", str4, "org.mockito.asm.tree.analysis.AnalyzerException: hi!");
    }

    @Test
    public void test06482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06482");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException5 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter6 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier10 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type8, true);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str12 = type11.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.Type type16 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list17 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier19 = new org.mockito.asm.tree.analysis.SimpleVerifier(type14, type16, list17, true);
        org.mockito.asm.Type type20 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray21 = new org.mockito.asm.Type[] { type20 };
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type14, typeArray21);
        java.lang.String str23 = org.mockito.asm.Type.getMethodDescriptor(type11, typeArray21);
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type11, list24, false);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.Type type35 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray36 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str37 = org.mockito.asm.Type.getMethodDescriptor(type29, typeArray36);
        boolean boolean39 = type29.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray40 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str41 = org.mockito.asm.Type.getMethodDescriptor(type27, typeArray40);
        java.lang.String str42 = type27.getDescriptor();
        int int43 = type27.getSort();
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type27, list44, true);
        org.mockito.asm.tree.analysis.Value value47 = basicInterpreter6.newValue(type27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) analyzerException5, value47);
        java.lang.Throwable[] throwableArray49 = analyzerException5.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException50 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I: expected org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I, but found I", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)Lorg/mockito/asm/tree/analysis/AnalyzerException;", (java.lang.Throwable) analyzerException5);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException52 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException51);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "boolean" + "'", str12, "boolean");
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)S" + "'", str22, "(C)S");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(C)Z" + "'", str23, "(C)Z");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(C)S" + "'", str37, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(S)C" + "'", str41, "(S)C");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "C" + "'", str42, "C");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(value47);
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test06483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06483");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        int int14 = type8.getSort();
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type3, typeArray15);
        int int17 = type3.getSize();
        java.lang.String str18 = type3.toString();
        org.mockito.asm.Type type20 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass21 = type20.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        java.lang.String str23 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        java.util.List list25 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier27 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type24, list25, false);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.getObjectType("hi!");
        org.mockito.asm.Type type31 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.Type");
        org.mockito.asm.Type type33 = org.mockito.asm.Type.getType("(C)L(C)LC;");
        org.mockito.asm.Type type34 = type33.getElementType();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, true);
        int int39 = type31.getSize();
        org.mockito.asm.tree.analysis.Value value40 = simpleVerifier27.newValue(type31);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode41 = null;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier42 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type43 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value44 = basicVerifier42.newValue(type43);
        org.mockito.asm.Type type45 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list46 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier48 = new org.mockito.asm.tree.analysis.SimpleVerifier(type43, type45, list46, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray57 = new org.mockito.asm.Type[] { type56 };
        java.lang.String str58 = org.mockito.asm.Type.getMethodDescriptor(type50, typeArray57);
        boolean boolean60 = type50.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type50, true);
        boolean boolean64 = type50.equals((java.lang.Object) 158);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.Type type75 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type73, type75, list76, true);
        org.mockito.asm.Type type79 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray80 = new org.mockito.asm.Type[] { type79 };
        java.lang.String str81 = org.mockito.asm.Type.getMethodDescriptor(type73, typeArray80);
        boolean boolean83 = type73.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier85 = new org.mockito.asm.tree.analysis.SimpleVerifier(type68, type73, true);
        org.mockito.asm.Type type86 = null;
        org.mockito.asm.tree.analysis.Value value87 = simpleVerifier85.newValue(type86);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.VOID_TYPE;
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier85.newValue(type88);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier91 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type88, true);
        org.mockito.asm.Type type93 = org.mockito.asm.Type.getObjectType("boolean");
        org.mockito.asm.tree.analysis.Value value94 = simpleVerifier91.newValue(type93);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value95 = simpleVerifier27.copyOperation(abstractInsnNode41, value94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(S)C" + "'", str16, "(S)C");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "C" + "'", str18, "C");
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str22, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str23, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(C)S" + "'", str58, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(C)S" + "'", str81, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(value87);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNull(value89);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertNotNull(value94);
    }

    @Test
    public void test06484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06484");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("(C)Z");
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int4 = type3.getSort();
        java.lang.String str5 = type3.toString();
        org.mockito.asm.Type type6 = type3.getElementType();
        java.util.List list7 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list7, true);
        java.lang.String str10 = type1.getDescriptor();
        int int12 = type1.getOpcode(4);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str5, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "L(C)Z;" + "'", str10, "L(C)Z;");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
    }

    @Test
    public void test06485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06485");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        int int2 = type0.getOpcode(84);
        int int4 = type0.getOpcode(136);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str7 = type6.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray16);
        java.lang.Throwable throwable21 = null;
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("S", throwable21);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier28 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type29 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value30 = basicVerifier28.newValue(type29);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list32 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier34 = new org.mockito.asm.tree.analysis.SimpleVerifier(type29, type31, list32, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier35 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type36 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value37 = basicVerifier35.newValue(type36);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier38 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value40 = basicVerifier38.newValue(type39);
        int int41 = value40.getSize();
        org.mockito.asm.tree.analysis.Value value42 = simpleVerifier34.merge(value37, value40);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException43 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value42);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier51 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type52 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value53 = basicVerifier51.newValue(type52);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier54 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value56 = basicVerifier54.newValue(type55);
        int int57 = value56.getSize();
        org.mockito.asm.tree.analysis.Value value58 = simpleVerifier50.merge(value53, value56);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier59 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type60 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value61 = basicVerifier59.newValue(type60);
        org.mockito.asm.Type type62 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type60, type62, list63, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier69 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type70 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value71 = basicVerifier69.newValue(type70);
        int int72 = value71.getSize();
        org.mockito.asm.tree.analysis.Value value73 = simpleVerifier65.merge(value68, value71);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier74 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value76 = basicVerifier74.newValue(type75);
        org.mockito.asm.Type type77 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list78 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier80 = new org.mockito.asm.tree.analysis.SimpleVerifier(type75, type77, list78, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier84 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type85 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value86 = basicVerifier84.newValue(type85);
        int int87 = value86.getSize();
        org.mockito.asm.tree.analysis.Value value88 = simpleVerifier80.merge(value83, value86);
        org.mockito.asm.tree.analysis.Value value89 = simpleVerifier50.merge(value71, value88);
        org.mockito.asm.tree.analysis.Value value90 = basicVerifier23.merge(value42, value89);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException91 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Object) analyzerException22, value90);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException92 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S", (java.lang.Object) typeArray16, value90);
        java.lang.Class<?> wildcardClass93 = value90.getClass();
        java.lang.String str94 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass93);
        org.mockito.asm.Type type95 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass93);
        java.lang.String str96 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass93);
        org.mockito.asm.Type type97 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass93);
        boolean boolean98 = type0.equals((java.lang.Object) wildcardClass93);
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 84 + "'", int2 == 84);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 136 + "'", int4 == 136);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean" + "'", str7, "boolean");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)Z" + "'", str18, "(C)Z");
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(value30);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(value37);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(value40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(value53);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(value56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(value71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(value73);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(value76);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(value88);
        org.junit.Assert.assertNotNull(value89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str94, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org/mockito/asm/tree/analysis/BasicValue" + "'", str96, "org/mockito/asm/tree/analysis/BasicValue");
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test06486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06486");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str4 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass2);
        java.lang.String str5 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        boolean boolean19 = type9.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type9 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type7, typeArray20);
        int int22 = type7.getSize();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type24, false);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type28 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier30 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type28, true);
        org.mockito.asm.Type type31 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str32 = type31.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier33 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type34 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value35 = basicVerifier33.newValue(type34);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list37 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier39 = new org.mockito.asm.tree.analysis.SimpleVerifier(type34, type36, list37, true);
        org.mockito.asm.Type type40 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray41 = new org.mockito.asm.Type[] { type40 };
        java.lang.String str42 = org.mockito.asm.Type.getMethodDescriptor(type34, typeArray41);
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type31, typeArray41);
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type31, list44, false);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier48 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type49 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value50 = basicVerifier48.newValue(type49);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list52 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier54 = new org.mockito.asm.tree.analysis.SimpleVerifier(type49, type51, list52, true);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray56 = new org.mockito.asm.Type[] { type55 };
        java.lang.String str57 = org.mockito.asm.Type.getMethodDescriptor(type49, typeArray56);
        boolean boolean59 = type49.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray60 = new org.mockito.asm.Type[] { type49 };
        java.lang.String str61 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray60);
        java.lang.String str62 = type47.getDescriptor();
        int int63 = type47.getSort();
        java.util.List list64 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier66 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type47, list64, true);
        boolean boolean67 = type24.equals((java.lang.Object) type28);
        java.util.List list68 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type24, list68, true);
        int int72 = type6.getOpcode(112);
        int int73 = type6.getSort();
        org.mockito.asm.Type type75 = org.mockito.asm.Type.getObjectType("L(S)Lorg/mockito/asm/Type;;");
        java.util.List list76 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier78 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type75, list76, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode79 = null;
        org.mockito.asm.Type type80 = null;
        org.mockito.asm.Type type81 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type82 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier84 = new org.mockito.asm.tree.analysis.SimpleVerifier(type81, type82, true);
        int int85 = type81.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type80, type81, false);
        org.mockito.asm.Type type88 = org.mockito.asm.Type.BYTE_TYPE;
        int int89 = type88.getSort();
        org.mockito.asm.tree.analysis.Value value90 = simpleVerifier87.newValue(type88);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value91 = simpleVerifier78.unaryOperation(abstractInsnNode79, value90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str4, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org/mockito/asm/Type" + "'", str5, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(S)C" + "'", str21, "(S)C");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "boolean" + "'", str32, "boolean");
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(value35);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(C)S" + "'", str42, "(C)S");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)Z" + "'", str43, "(C)Z");
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(value50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(C)S" + "'", str57, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(S)C" + "'", str61, "(S)C");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "C" + "'", str62, "C");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 116 + "'", int72 == 116);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 3 + "'", int89 == 3);
        org.junit.Assert.assertNotNull(value90);
    }

    @Test
    public void test06487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06487");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier5 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type3, true);
        org.mockito.asm.Type type6 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str7 = type6.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier8 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value10 = basicVerifier8.newValue(type9);
        org.mockito.asm.Type type11 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type9, type11, list12, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray16 = new org.mockito.asm.Type[] { type15 };
        java.lang.String str17 = org.mockito.asm.Type.getMethodDescriptor(type9, typeArray16);
        java.lang.String str18 = org.mockito.asm.Type.getMethodDescriptor(type6, typeArray16);
        java.util.List list19 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier21 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type6, list19, false);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier29 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type30 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value31 = basicVerifier29.newValue(type30);
        org.mockito.asm.Type type32 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list33 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier35 = new org.mockito.asm.tree.analysis.SimpleVerifier(type30, type32, list33, true);
        org.mockito.asm.Type type36 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray37 = new org.mockito.asm.Type[] { type36 };
        java.lang.String str38 = org.mockito.asm.Type.getMethodDescriptor(type30, typeArray37);
        boolean boolean40 = type30.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier42 = new org.mockito.asm.tree.analysis.SimpleVerifier(type25, type30, true);
        int int43 = type25.getSort();
        java.util.List list44 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier46 = new org.mockito.asm.tree.analysis.SimpleVerifier(type3, type25, list44, true);
        java.util.List list47 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier49 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list47, false);
        java.lang.String str50 = type1.getInternalName();
        java.lang.Object obj51 = null;
        boolean boolean52 = type1.equals(obj51);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier53 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type54 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value55 = basicVerifier53.newValue(type54);
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list57 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type56, list57, true);
        int int60 = type54.getSort();
        int int61 = type54.getSize();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int64 = type63.getSort();
        java.util.List list65 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier67 = new org.mockito.asm.tree.analysis.SimpleVerifier(type54, type63, list65, true);
        int int68 = type63.getDimensions();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier70 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type63, false);
        org.mockito.asm.tree.AbstractInsnNode abstractInsnNode71 = null;
        java.util.List list72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.tree.analysis.Value value73 = simpleVerifier70.naryOperation(abstractInsnNode71, list72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean" + "'", str7, "boolean");
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(value10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(C)S" + "'", str17, "(C)S");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(C)Z" + "'", str18, "(C)Z");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(value31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(C)S" + "'", str38, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I" + "'", str50, "org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(value55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
    }

    @Test
    public void test06488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06488");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str1 = type0.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier2 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value4 = basicVerifier2.newValue(type3);
        boolean boolean5 = type0.equals((java.lang.Object) basicVerifier2);
        java.lang.String str6 = type0.getDescriptor();
        int int7 = type0.getSize();
        java.lang.String str8 = type0.toString();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "S" + "'", str1, "S");
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(value4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "S" + "'", str6, "S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
    }

    @Test
    public void test06489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06489");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getObjectType("LS;");
        java.lang.String str2 = type1.toString();
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getObjectType("S");
        java.lang.String str5 = type4.getClassName();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass8 = type7.getClass();
        org.mockito.asm.Type type9 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass8);
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type10, list11, true);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass16 = type15.getClass();
        java.lang.String str17 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass16);
        java.lang.String str18 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass16);
        org.mockito.asm.Type type20 = type19.getElementType();
        org.mockito.asm.Type type21 = org.mockito.asm.Type.BOOLEAN_TYPE;
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getReturnType("(S)C");
        java.util.List list24 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier26 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type23, list24, false);
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        java.lang.String str28 = type27.getDescriptor();
        org.mockito.asm.tree.analysis.Value value29 = simpleVerifier26.newValue(type27);
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type20, type27, list30, true);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier34 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type35 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value36 = basicVerifier34.newValue(type35);
        org.mockito.asm.Type type37 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list38 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type35, type37, list38, true);
        org.mockito.asm.Type type41 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray42 = new org.mockito.asm.Type[] { type41 };
        java.lang.String str43 = org.mockito.asm.Type.getMethodDescriptor(type35, typeArray42);
        boolean boolean45 = type35.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray46 = new org.mockito.asm.Type[] { type35 };
        java.lang.String str47 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray46);
        java.lang.String str48 = type33.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier49 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type50 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value51 = basicVerifier49.newValue(type50);
        org.mockito.asm.Type type52 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list53 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier55 = new org.mockito.asm.tree.analysis.SimpleVerifier(type50, type52, list53, true);
        java.lang.String str56 = type52.getDescriptor();
        int int58 = type52.getOpcode((int) (short) 0);
        java.util.List list59 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier61 = new org.mockito.asm.tree.analysis.SimpleVerifier(type33, type52, list59, true);
        int int62 = type33.getSort();
        java.lang.String str63 = type33.toString();
        org.mockito.asm.Type type64 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str65 = type64.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier66 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type67 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value68 = basicVerifier66.newValue(type67);
        org.mockito.asm.Type type69 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list70 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier72 = new org.mockito.asm.tree.analysis.SimpleVerifier(type67, type69, list70, true);
        org.mockito.asm.Type type73 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray74 = new org.mockito.asm.Type[] { type73 };
        java.lang.String str75 = org.mockito.asm.Type.getMethodDescriptor(type67, typeArray74);
        java.lang.String str76 = org.mockito.asm.Type.getMethodDescriptor(type64, typeArray74);
        java.lang.String str77 = org.mockito.asm.Type.getMethodDescriptor(type33, typeArray74);
        org.mockito.asm.tree.analysis.Value value78 = simpleVerifier32.newValue(type33);
        java.util.List list79 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier81 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type33, list79, false);
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier83 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type33, true);
        org.mockito.asm.Type type85 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: Lorg.mockito.asm.tree.analysis.BasicValue;: expected double, but found I");
        org.mockito.asm.tree.analysis.Value value86 = simpleVerifier83.newValue(type85);
        int int87 = value86.getSize();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LLS;;" + "'", str2, "LLS;;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "S" + "'", str5, "S");
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str17, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str18, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "S" + "'", str28, "S");
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(value36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(C)S" + "'", str43, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(S)C" + "'", str47, "(S)C");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "C" + "'", str48, "C");
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(value51);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "C" + "'", str56, "C");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "C" + "'", str63, "C");
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "boolean" + "'", str65, "boolean");
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(value68);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(C)S" + "'", str75, "(C)S");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(C)Z" + "'", str76, "(C)Z");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(C)C" + "'", str77, "(C)C");
        org.junit.Assert.assertNotNull(value78);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(value86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test06490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06490");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier0 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type1 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value2 = basicVerifier0.newValue(type1);
        org.mockito.asm.Type type3 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list4 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier6 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type3, list4, true);
        int int7 = type1.getSort();
        int int8 = type1.getSize();
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list12, true);
        int int15 = type10.getSize();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.getReturnType("(S)Lorg.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I;");
        int int18 = type17.getDimensions();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier20 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type17, true);
        int int22 = type17.getOpcode(152);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(value2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 156 + "'", int22 == 156);
    }

    @Test
    public void test06491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06491");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int2 = type1.getSort();
        java.lang.String str3 = type1.toString();
        org.mockito.asm.Type type4 = type1.getElementType();
        int int5 = type4.getSize();
        int int6 = type4.getSize();
        boolean boolean8 = type4.equals((java.lang.Object) "(S)L(C)Z;");
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getReturnType("Lorg/mockito/asm/Type;");
        int int11 = type10.getSort();
        java.lang.String str12 = type10.toString();
        org.mockito.asm.Type type13 = type10.getElementType();
        int int14 = type13.getSize();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier16 = new org.mockito.asm.tree.analysis.SimpleVerifier(type4, type13, false);
        java.lang.String str17 = type13.getClassName();
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType("C");
        int int21 = type19.getOpcode(160);
        org.mockito.asm.Type type22 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier23 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type24 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value25 = basicVerifier23.newValue(type24);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list27 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier29 = new org.mockito.asm.tree.analysis.SimpleVerifier(type24, type26, list27, true);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray31 = new org.mockito.asm.Type[] { type30 };
        java.lang.String str32 = org.mockito.asm.Type.getMethodDescriptor(type24, typeArray31);
        boolean boolean34 = type24.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type24 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type22, typeArray35);
        int int37 = type22.getSize();
        org.mockito.asm.Type type39 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier41 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type39, false);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str43 = type42.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier44 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type45 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value46 = basicVerifier44.newValue(type45);
        org.mockito.asm.Type type47 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list48 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier50 = new org.mockito.asm.tree.analysis.SimpleVerifier(type45, type47, list48, true);
        org.mockito.asm.Type type51 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray52 = new org.mockito.asm.Type[] { type51 };
        java.lang.String str53 = org.mockito.asm.Type.getMethodDescriptor(type45, typeArray52);
        java.lang.String str54 = org.mockito.asm.Type.getMethodDescriptor(type42, typeArray52);
        org.mockito.asm.Type type55 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type56 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier58 = new org.mockito.asm.tree.analysis.SimpleVerifier(type55, type56, true);
        boolean boolean59 = type42.equals((java.lang.Object) simpleVerifier58);
        java.util.List list60 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier62 = new org.mockito.asm.tree.analysis.SimpleVerifier(type22, type42, list60, false);
        java.util.List list63 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier65 = new org.mockito.asm.tree.analysis.SimpleVerifier(type19, type22, list63, true);
        java.lang.String str66 = type22.toString();
        int int67 = type22.getSort();
        boolean boolean68 = type13.equals((java.lang.Object) type22);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str3, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str12, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "g.mockito.asm.Type" + "'", str17, "g.mockito.asm.Type");
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 160 + "'", int21 == 160);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(value25);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(C)S" + "'", str32, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(S)C" + "'", str36, "(S)C");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "boolean" + "'", str43, "boolean");
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(C)S" + "'", str53, "(C)S");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(C)Z" + "'", str54, "(C)Z");
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "C" + "'", str66, "C");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test06492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06492");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("org.mockito.asm.tree.analysis.AnalyzerException: (C)S");
        java.lang.String str2 = type1.getDescriptor();
        java.lang.String str3 = type1.toString();
        int int4 = type1.getSort();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.getObjectType("(C)Z");
        boolean boolean8 = type6.equals((java.lang.Object) (short) 1);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.getObjectType("org.mockito.asm.tree.analysis.AnalyzerException: S: expected S, but found I");
        int int11 = type10.getSort();
        java.util.List list12 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier14 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type10, list12, false);
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type1, type10, list15, false);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.getType("B");
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier17.newValue(type19);
        org.mockito.asm.Type type21 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier22 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type23 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value24 = basicVerifier22.newValue(type23);
        org.mockito.asm.Type type25 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list26 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier28 = new org.mockito.asm.tree.analysis.SimpleVerifier(type23, type25, list26, true);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray30 = new org.mockito.asm.Type[] { type29 };
        java.lang.String str31 = org.mockito.asm.Type.getMethodDescriptor(type23, typeArray30);
        boolean boolean33 = type23.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray34 = new org.mockito.asm.Type[] { type23 };
        java.lang.String str35 = org.mockito.asm.Type.getMethodDescriptor(type21, typeArray34);
        int int36 = type21.getSize();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.getReturnType("(S)C");
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier40 = new org.mockito.asm.tree.analysis.SimpleVerifier(type21, type38, false);
        boolean boolean42 = type38.equals((java.lang.Object) 23);
        java.lang.String str43 = type38.getClassName();
        java.lang.String str44 = type38.getDescriptor();
        org.mockito.asm.tree.analysis.Value value45 = simpleVerifier17.newValue(type38);
        java.lang.Class<?> wildcardClass46 = simpleVerifier17.getClass();
        java.lang.String str47 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass46);
        org.mockito.asm.Type type48 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass46);
        java.lang.String str49 = type48.toString();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "S" + "'", str2, "S");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "S" + "'", str3, "S");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(value24);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(C)S" + "'", str31, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(S)C" + "'", str35, "(S)C");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "char" + "'", str43, "char");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "C" + "'", str44, "C");
        org.junit.Assert.assertNotNull(value45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org/mockito/asm/tree/analysis/SimpleVerifier" + "'", str47, "org/mockito/asm/tree/analysis/SimpleVerifier");
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Lorg/mockito/asm/tree/analysis/SimpleVerifier;" + "'", str49, "Lorg/mockito/asm/tree/analysis/SimpleVerifier;");
    }

    @Test
    public void test06493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06493");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier14 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type15 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value16 = basicVerifier14.newValue(type15);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier17 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type18 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value19 = basicVerifier17.newValue(type18);
        int int20 = value19.getSize();
        org.mockito.asm.tree.analysis.Value value21 = simpleVerifier13.merge(value16, value19);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value21);
        analyzerException4.addSuppressed((java.lang.Throwable) analyzerException22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException24 = new org.mockito.asm.tree.analysis.AnalyzerException("", (java.lang.Throwable) analyzerException4);
        java.lang.Throwable[] throwableArray25 = analyzerException4.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException26 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)V", (java.lang.Throwable) analyzerException4);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("L(C)Lorg.mockito.asm.tree.analysis.AnalyzerException: (C)S;;", (java.lang.Throwable) analyzerException4);
        java.lang.Throwable[] throwableArray28 = analyzerException27.getSuppressed();
        java.lang.Class<?> wildcardClass29 = throwableArray28.getClass();
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(value16);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(value19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(value21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test06494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06494");
        java.lang.Object obj1 = new java.lang.Object();
        java.lang.Class<?> wildcardClass2 = obj1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        int int4 = type3.getSize();
        int int5 = type3.getSort();
        java.lang.Object obj6 = null;
        boolean boolean7 = type3.equals(obj6);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier11 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type12 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value13 = basicVerifier11.newValue(type12);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list15 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier17 = new org.mockito.asm.tree.analysis.SimpleVerifier(type12, type14, list15, true);
        org.mockito.asm.Type type18 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray19 = new org.mockito.asm.Type[] { type18 };
        java.lang.String str20 = org.mockito.asm.Type.getMethodDescriptor(type12, typeArray19);
        boolean boolean22 = type12.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray23 = new org.mockito.asm.Type[] { type12 };
        java.lang.String str24 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray23);
        java.lang.String str25 = type10.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier26 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type27 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value28 = basicVerifier26.newValue(type27);
        org.mockito.asm.Type type29 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list30 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier32 = new org.mockito.asm.tree.analysis.SimpleVerifier(type27, type29, list30, true);
        java.lang.String str33 = type29.getDescriptor();
        int int35 = type29.getOpcode((int) (short) 0);
        java.util.List list36 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier38 = new org.mockito.asm.tree.analysis.SimpleVerifier(type10, type29, list36, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier39 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type40 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value41 = basicVerifier39.newValue(type40);
        org.mockito.asm.Type type42 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type40, type42, list43, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier46 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type47 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value48 = basicVerifier46.newValue(type47);
        org.mockito.asm.Type type49 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list50 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier52 = new org.mockito.asm.tree.analysis.SimpleVerifier(type47, type49, list50, true);
        org.mockito.asm.Type type53 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray54 = new org.mockito.asm.Type[] { type53 };
        java.lang.String str55 = org.mockito.asm.Type.getMethodDescriptor(type47, typeArray54);
        boolean boolean57 = type47.equals((java.lang.Object) '4');
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier59 = new org.mockito.asm.tree.analysis.SimpleVerifier(type42, type47, true);
        org.mockito.asm.Type type60 = null;
        org.mockito.asm.tree.analysis.Value value61 = simpleVerifier59.newValue(type60);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier62 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type63 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value64 = basicVerifier62.newValue(type63);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier65 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type66 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value67 = basicVerifier65.newValue(type66);
        org.mockito.asm.Type type68 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list69 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier71 = new org.mockito.asm.tree.analysis.SimpleVerifier(type66, type68, list69, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier72 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type73 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value74 = basicVerifier72.newValue(type73);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier75 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type76 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value77 = basicVerifier75.newValue(type76);
        int int78 = value77.getSize();
        org.mockito.asm.tree.analysis.Value value79 = simpleVerifier71.merge(value74, value77);
        org.mockito.asm.tree.analysis.Value value80 = simpleVerifier59.merge(value64, value79);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier81 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type82 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value83 = basicVerifier81.newValue(type82);
        org.mockito.asm.Type type84 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list85 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier87 = new org.mockito.asm.tree.analysis.SimpleVerifier(type82, type84, list85, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier88 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type89 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value90 = basicVerifier88.newValue(type89);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier91 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type92 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value93 = basicVerifier91.newValue(type92);
        int int94 = value93.getSize();
        org.mockito.asm.tree.analysis.Value value95 = simpleVerifier87.merge(value90, value93);
        org.mockito.asm.tree.analysis.Value value96 = simpleVerifier38.merge(value79, value95);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException97 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)D", (java.lang.Object) 10.0f, value96);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException98 = new org.mockito.asm.tree.analysis.AnalyzerException("C", (java.lang.Object) type3, value96);
        int int99 = type3.getDimensions();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(value13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(C)S" + "'", str20, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(S)C" + "'", str24, "(S)C");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "C" + "'", str25, "C");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(value28);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "C" + "'", str33, "C");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(value41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(value48);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(C)S" + "'", str55, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(value61);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(value64);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(value67);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(value74);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(value77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(value79);
        org.junit.Assert.assertNotNull(value80);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(value83);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(value90);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertNotNull(value93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNotNull(value95);
        org.junit.Assert.assertNotNull(value96);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 1 + "'", int99 == 1);
    }

    @Test
    public void test06495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06495");
        org.mockito.asm.Type type1 = org.mockito.asm.Type.getReturnType("(S)C");
        java.lang.Class<?> wildcardClass2 = type1.getClass();
        org.mockito.asm.Type type3 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        org.mockito.asm.Type type5 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass2);
        java.lang.String str6 = type5.getDescriptor();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier7 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type8 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value9 = basicVerifier7.newValue(type8);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list11 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier13 = new org.mockito.asm.tree.analysis.SimpleVerifier(type8, type10, list11, true);
        org.mockito.asm.Type type14 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray15 = new org.mockito.asm.Type[] { type14 };
        java.lang.String str16 = org.mockito.asm.Type.getMethodDescriptor(type8, typeArray15);
        boolean boolean18 = type8.equals((java.lang.Object) '4');
        java.lang.String str19 = type8.toString();
        int int20 = type8.getSort();
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier22 = new org.mockito.asm.tree.analysis.SimpleVerifier(type5, type8, true);
        java.lang.Class<?> wildcardClass23 = type5.getClass();
        java.lang.String str24 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass23);
        java.lang.String str25 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass23);
        java.lang.String str26 = org.mockito.asm.Type.getDescriptor((java.lang.Class) wildcardClass23);
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str6, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(value9);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(C)S" + "'", str16, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "S" + "'", str19, "S");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str24, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str25, "Lorg/mockito/asm/Type;");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str26, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06496");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier6 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type7 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value8 = basicVerifier6.newValue(type7);
        org.mockito.asm.Type type9 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list10 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier12 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type9, list10, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier13 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type14 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value15 = basicVerifier13.newValue(type14);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier16 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type17 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value18 = basicVerifier16.newValue(type17);
        int int19 = value18.getSize();
        org.mockito.asm.tree.analysis.Value value20 = simpleVerifier12.merge(value15, value18);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException21 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value20);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException22 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)S", (java.lang.Throwable) analyzerException21);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException23 = new org.mockito.asm.tree.analysis.AnalyzerException("(C)Z", (java.lang.Throwable) analyzerException22);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException27 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!");
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier30 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type31 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value32 = basicVerifier30.newValue(type31);
        org.mockito.asm.Type type33 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list34 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier36 = new org.mockito.asm.tree.analysis.SimpleVerifier(type31, type33, list34, true);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier37 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type38 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value39 = basicVerifier37.newValue(type38);
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier40 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type41 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value42 = basicVerifier40.newValue(type41);
        int int43 = value42.getSize();
        org.mockito.asm.tree.analysis.Value value44 = simpleVerifier36.merge(value39, value42);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException45 = new org.mockito.asm.tree.analysis.AnalyzerException("S", (java.lang.Object) "S", value44);
        analyzerException27.addSuppressed((java.lang.Throwable) analyzerException45);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("hi!", (java.lang.Throwable) analyzerException27);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException48 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)C", (java.lang.Throwable) analyzerException47);
        analyzerException23.addSuppressed((java.lang.Throwable) analyzerException48);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("char");
        java.lang.Throwable[] throwableArray52 = analyzerException51.getSuppressed();
        java.lang.Throwable[] throwableArray53 = analyzerException51.getSuppressed();
        analyzerException23.addSuppressed((java.lang.Throwable) analyzerException51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException55 = new org.mockito.asm.tree.analysis.AnalyzerException("Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException51);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException58 = new org.mockito.asm.tree.analysis.AnalyzerException("[Ljava/lang/Throwable;");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException59 = new org.mockito.asm.tree.analysis.AnalyzerException("org/mockito/asm/tree/analysis/SimpleVerifier", (java.lang.Throwable) analyzerException58);
        java.lang.Throwable[] throwableArray60 = analyzerException59.getSuppressed();
        analyzerException55.addSuppressed((java.lang.Throwable) analyzerException59);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException62 = new org.mockito.asm.tree.analysis.AnalyzerException("Lrg.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;", (java.lang.Throwable) analyzerException59);
        java.lang.String str63 = analyzerException62.toString();
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(value8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(value15);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(value18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(value20);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(value32);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(value39);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(value42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(value44);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: Lrg.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;" + "'", str63, "org.mockito.asm.tree.analysis.AnalyzerException: Lrg.mockito.asm.tree.analysis.AnalyzerException: (S)Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06497");
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException4 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
        org.mockito.asm.tree.analysis.BasicInterpreter basicInterpreter5 = new org.mockito.asm.tree.analysis.BasicInterpreter();
        org.mockito.asm.Type type6 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.Type type7 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier9 = new org.mockito.asm.tree.analysis.SimpleVerifier(type6, type7, true);
        org.mockito.asm.Type type10 = org.mockito.asm.Type.BOOLEAN_TYPE;
        java.lang.String str11 = type10.getClassName();
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier12 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type13 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value14 = basicVerifier12.newValue(type13);
        org.mockito.asm.Type type15 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list16 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier18 = new org.mockito.asm.tree.analysis.SimpleVerifier(type13, type15, list16, true);
        org.mockito.asm.Type type19 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray20 = new org.mockito.asm.Type[] { type19 };
        java.lang.String str21 = org.mockito.asm.Type.getMethodDescriptor(type13, typeArray20);
        java.lang.String str22 = org.mockito.asm.Type.getMethodDescriptor(type10, typeArray20);
        java.util.List list23 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier25 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type10, list23, false);
        org.mockito.asm.Type type26 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier27 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type28 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value29 = basicVerifier27.newValue(type28);
        org.mockito.asm.Type type30 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list31 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier33 = new org.mockito.asm.tree.analysis.SimpleVerifier(type28, type30, list31, true);
        org.mockito.asm.Type type34 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray35 = new org.mockito.asm.Type[] { type34 };
        java.lang.String str36 = org.mockito.asm.Type.getMethodDescriptor(type28, typeArray35);
        boolean boolean38 = type28.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray39 = new org.mockito.asm.Type[] { type28 };
        java.lang.String str40 = org.mockito.asm.Type.getMethodDescriptor(type26, typeArray39);
        java.lang.String str41 = type26.getDescriptor();
        int int42 = type26.getSort();
        java.util.List list43 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier45 = new org.mockito.asm.tree.analysis.SimpleVerifier(type7, type26, list43, true);
        org.mockito.asm.tree.analysis.Value value46 = basicInterpreter5.newValue(type26);
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException47 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I", (java.lang.Object) analyzerException4, value46);
        java.lang.Throwable[] throwableArray48 = analyzerException4.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException49 = new org.mockito.asm.tree.analysis.AnalyzerException("org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: S: expected 192, but found I: expected org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I, but found I", (java.lang.Throwable) analyzerException4);
        java.lang.Throwable[] throwableArray50 = analyzerException4.getSuppressed();
        org.mockito.asm.tree.analysis.AnalyzerException analyzerException51 = new org.mockito.asm.tree.analysis.AnalyzerException("(S)F", (java.lang.Throwable) analyzerException4);
        java.lang.Throwable[] throwableArray52 = analyzerException4.getSuppressed();
        java.lang.Throwable[] throwableArray53 = analyzerException4.getSuppressed();
        java.lang.String str54 = analyzerException4.toString();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean" + "'", str11, "boolean");
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(value14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(C)S" + "'", str21, "(C)S");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(C)Z" + "'", str22, "(C)Z");
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(value29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(C)S" + "'", str36, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(S)C" + "'", str40, "(S)C");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "C" + "'", str41, "C");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(value46);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I" + "'", str54, "org.mockito.asm.tree.analysis.AnalyzerException: org.mockito.asm.tree.analysis.AnalyzerException: (C)S: expected org.mockito.asm.tree.analysis.AnalyzerException: S, but found I");
    }

    @Test
    public void test06498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06498");
        org.mockito.asm.Type type0 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.tree.analysis.BasicVerifier basicVerifier1 = new org.mockito.asm.tree.analysis.BasicVerifier();
        org.mockito.asm.Type type2 = org.mockito.asm.Type.SHORT_TYPE;
        org.mockito.asm.tree.analysis.Value value3 = basicVerifier1.newValue(type2);
        org.mockito.asm.Type type4 = org.mockito.asm.Type.CHAR_TYPE;
        java.util.List list5 = null;
        org.mockito.asm.tree.analysis.SimpleVerifier simpleVerifier7 = new org.mockito.asm.tree.analysis.SimpleVerifier(type2, type4, list5, true);
        org.mockito.asm.Type type8 = org.mockito.asm.Type.CHAR_TYPE;
        org.mockito.asm.Type[] typeArray9 = new org.mockito.asm.Type[] { type8 };
        java.lang.String str10 = org.mockito.asm.Type.getMethodDescriptor(type2, typeArray9);
        boolean boolean12 = type2.equals((java.lang.Object) '4');
        org.mockito.asm.Type[] typeArray13 = new org.mockito.asm.Type[] { type2 };
        java.lang.String str14 = org.mockito.asm.Type.getMethodDescriptor(type0, typeArray13);
        int int15 = type0.getSize();
        boolean boolean17 = type0.equals((java.lang.Object) 181);
        int int18 = type0.getSize();
        int int20 = type0.getOpcode(8196);
        java.lang.Class<?> wildcardClass21 = type0.getClass();
        java.lang.String str22 = org.mockito.asm.Type.getInternalName((java.lang.Class) wildcardClass21);
        org.mockito.asm.Type type23 = org.mockito.asm.Type.getType((java.lang.Class) wildcardClass21);
        java.lang.String str24 = type23.getDescriptor();
        org.junit.Assert.assertNotNull(type0);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(value3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(C)S" + "'", str10, "(C)S");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(S)C" + "'", str14, "(S)C");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8196 + "'", int20 == 8196);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org/mockito/asm/Type" + "'", str22, "org/mockito/asm/Type");
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Lorg/mockito/asm/Type;" + "'", str24, "Lorg/mockito/asm/Type;");
    }

    @Test
    public void test06499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06499");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("org.mockito.asm.tree.analysis.AnalyzerException: (C)L(C)Z;");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 58");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06500");
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.Type[] typeArray1 = org.mockito.asm.Type.getArgumentTypes("LLorg.mockito.asm.tree.analysis.AnalyzerException: boolean;;");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 60");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }
}

