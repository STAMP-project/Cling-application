import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ErrorTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test001");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.DurationField durationField4 = chronology3.eras();
        org.joda.time.DateTimeField dateTimeField5 = chronology3.yearOfEra();
        org.joda.time.DurationField durationField6 = chronology3.weekyears();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField4, durationField6, and durationField4", !(durationField4.compareTo(durationField6) == 0) || (Math.signum(durationField4.compareTo(durationField4)) == Math.signum(durationField6.compareTo(durationField4))));
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test002");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.DurationField durationField4 = chronology3.eras();
        org.joda.time.DurationField durationField5 = chronology3.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField4, durationField5, and durationField4", !(durationField4.compareTo(durationField5) == 0) || (Math.signum(durationField4.compareTo(durationField4)) == Math.signum(durationField5.compareTo(durationField4))));
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test003");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardSeconds(10L);
        java.lang.Object obj10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(obj10);
        boolean boolean13 = dateTime11.isBefore((long) (short) 100);
        org.joda.time.Instant instant14 = new org.joda.time.Instant();
        org.joda.time.Instant instant16 = instant14.withMillis(0L);
        org.joda.time.Chronology chronology17 = instant16.getChronology();
        org.joda.time.DateTime dateTime18 = dateTime11.toDateTime(chronology17);
        mutablePeriod7.setPeriod((org.joda.time.ReadableDuration) duration9, chronology17);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime11 and instant14", (dateTime11.compareTo(instant14) == 0) == dateTime11.equals(instant14));
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test004");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime20.withDayOfYear(3);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test005");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        boolean boolean3 = dateTime1.isBefore((long) (short) 100);
        org.joda.time.Instant instant4 = new org.joda.time.Instant();
        org.joda.time.Instant instant6 = instant4.withMillis(0L);
        org.joda.time.Chronology chronology7 = instant6.getChronology();
        org.joda.time.DateTime dateTime8 = dateTime1.toDateTime(chronology7);
        org.joda.time.DateTime.Property property9 = dateTime8.secondOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant4", (dateTime1.compareTo(instant4) == 0) == dateTime1.equals(instant4));
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test006");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        java.lang.Object obj18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(obj18);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime20.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField26 = localDateTime24.getField((int) (byte) 0);
        long long28 = dateTimeField26.roundHalfEven((long) 1);
        int int29 = dateTime19.get(dateTimeField26);
        mutableDateTime1.setRounding(dateTimeField26);
        mutableDateTime1.setHourOfDay((int) (short) 0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime19", (instant11.compareTo(dateTime19) == 0) == instant11.equals(dateTime19));
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test007");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DateTime dateTime7 = new org.joda.time.DateTime(chronology6);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Chronology chronology12 = instant11.getChronology();
        org.joda.time.DurationField durationField13 = chronology12.eras();
        java.util.Locale locale14 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket16 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology12, locale14, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime17 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime19 = localDateTime17.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property20 = localDateTime17.hourOfDay();
        org.joda.time.DateTimeField dateTimeField21 = property20.getField();
        int int22 = property20.get();
        org.joda.time.LocalDateTime localDateTime23 = property20.roundHalfFloorCopy();
        long long25 = chronology12.set((org.joda.time.ReadablePartial) localDateTime23, (long) 2022);
        org.joda.time.DateTime dateTime26 = dateTime7.toDateTime(chronology12);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant9", (dateTime7.compareTo(instant9) == 0) == dateTime7.equals(instant9));
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test008");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.millisOfDay();
        org.joda.time.DateTime dateTime22 = property21.roundHalfFloorCopy();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime22 and instant3", (dateTime22.compareTo(instant3) == 0) == dateTime22.equals(instant3));
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test009");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.DurationField durationField4 = chronology3.eras();
        org.joda.time.DurationField durationField5 = chronology3.hours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField4, durationField5, and durationField4", !(durationField4.compareTo(durationField5) == 0) || (Math.signum(durationField4.compareTo(durationField4)) == Math.signum(durationField5.compareTo(durationField4))));
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test010");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.millisOfDay();
        java.lang.String str22 = property21.getAsShortText();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test011");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.LocalDateTime localDateTime19 = localDateTime15.withWeekyear((int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.Duration duration25 = duration21.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime27 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime27.add((org.joda.time.ReadableDuration) duration29, (int) (short) 100);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.DateTime dateTime33 = new org.joda.time.DateTime(chronology32);
        int int34 = dateTime33.getYearOfCentury();
        org.joda.time.Interval interval35 = duration29.toIntervalTo((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Duration duration36 = duration25.minus((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Hours hours37 = duration25.toStandardHours();
        org.joda.time.LocalDateTime localDateTime39 = localDateTime15.withDurationAdded((org.joda.time.ReadableDuration) duration25, (int) (byte) -1);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime33", (instant1.compareTo(dateTime33) == 0) == instant1.equals(dateTime33));
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test012");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        int int17 = dateTime16.getSecondOfMinute();
        int int18 = dateTime16.getYearOfEra();
        boolean boolean19 = instant14.isEqual((org.joda.time.ReadableInstant) dateTime16);
        org.joda.time.Instant instant22 = instant14.withDurationAdded((long) 48, 2);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime16", (instant9.compareTo(dateTime16) == 0) == instant9.equals(dateTime16));
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test013");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTimeField dateTimeField21 = chronology6.monthOfYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test014");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusDays(22);
        org.joda.time.DateTime dateTime24 = dateTime22.plusHours(12);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test015");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime19 = mutableDateTime1.toMutableDateTime(dateTimeZone18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.DateTime dateTime21 = new org.joda.time.DateTime(chronology20);
        org.joda.time.Instant instant23 = new org.joda.time.Instant();
        org.joda.time.Instant instant25 = instant23.withMillis(0L);
        org.joda.time.Chronology chronology26 = instant25.getChronology();
        org.joda.time.DurationField durationField27 = chronology26.eras();
        java.util.Locale locale28 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket30 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology26, locale28, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime31.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property34 = localDateTime31.hourOfDay();
        org.joda.time.DateTimeField dateTimeField35 = property34.getField();
        int int36 = property34.get();
        org.joda.time.LocalDateTime localDateTime37 = property34.roundHalfFloorCopy();
        long long39 = chronology26.set((org.joda.time.ReadablePartial) localDateTime37, (long) 2022);
        org.joda.time.DateTime dateTime40 = dateTime21.toDateTime(chronology26);
        org.joda.time.DateTime dateTime42 = dateTime21.plusDays(22);
        java.lang.Object obj43 = null;
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime(obj43);
        org.joda.time.LocalDateTime localDateTime45 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime47 = localDateTime45.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property48 = localDateTime45.hourOfDay();
        org.joda.time.DateTimeField dateTimeField49 = property48.getField();
        boolean boolean51 = property48.equals((java.lang.Object) '#');
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.DateTime dateTime53 = new org.joda.time.DateTime(chronology52);
        int int54 = dateTime53.getSecondOfMinute();
        int int55 = dateTime53.getYearOfEra();
        int int56 = property48.getDifference((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.DateTime dateTime60 = dateTime53.withDurationAdded((long) (byte) 0, 22);
        boolean boolean61 = dateTime21.isBefore((org.joda.time.ReadableInstant) dateTime60);
        int int62 = dateTimeZone18.getOffset((org.joda.time.ReadableInstant) dateTime60);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime1 and mutableDateTime19", (mutableDateTime1.compareTo(mutableDateTime19) == 0) == mutableDateTime1.equals(mutableDateTime19));
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test016");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.millisOfDay();
        java.util.Locale locale22 = java.util.Locale.GERMAN;
        java.util.Locale locale23 = locale22.stripExtensions();
        int int24 = property21.getMaximumShortTextLength(locale22);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test017");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate((long) 53, chronology5);
        org.joda.time.DateTimeField dateTimeField11 = chronology5.dayOfYear();
        org.joda.time.DurationField durationField12 = chronology5.hours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField12, and durationField6", !(durationField6.compareTo(durationField12) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField12.compareTo(durationField6))));
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test018");
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime3 = new org.joda.time.MutableDateTime(0L, dateTimeZone2);
        long long6 = dateTimeZone2.convertLocalToUTC((long) 3, true);
        org.joda.time.LocalTime localTime7 = new org.joda.time.LocalTime((long) 4, dateTimeZone2);
        java.lang.Object obj8 = null;
        org.joda.time.DateTime dateTime9 = new org.joda.time.DateTime(obj8);
        boolean boolean11 = dateTime9.isBefore((long) (short) 100);
        org.joda.time.Instant instant12 = new org.joda.time.Instant();
        org.joda.time.Instant instant14 = instant12.withMillis(0L);
        org.joda.time.Chronology chronology15 = instant14.getChronology();
        org.joda.time.DateTime dateTime16 = dateTime9.toDateTime(chronology15);
        org.joda.time.DateTime dateTime17 = localTime7.toDateTime((org.joda.time.ReadableInstant) dateTime16);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime9 and instant12", (dateTime9.compareTo(instant12) == 0) == dateTime9.equals(instant12));
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test019");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType17 = dateTimeFieldType16.getRangeDurationType();
        org.joda.time.DateTime.Property property18 = dateTime15.property(dateTimeFieldType16);
        boolean boolean20 = dateTime15.isEqual((long) 53);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period23 = duration22.toPeriod();
        org.joda.time.DateTime dateTime25 = dateTime15.withDurationAdded((org.joda.time.ReadableDuration) duration22, (-292275054));
        org.joda.time.Duration duration26 = duration22.toDuration();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime15", (instant11.compareTo(dateTime15) == 0) == instant11.equals(dateTime15));
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test020");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        int int17 = dateTime16.getSecondOfMinute();
        int int18 = dateTime16.getYearOfEra();
        boolean boolean19 = instant14.isEqual((org.joda.time.ReadableInstant) dateTime16);
        org.joda.time.MutableDateTime mutableDateTime20 = instant14.toMutableDateTime();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime16", (instant9.compareTo(dateTime16) == 0) == instant9.equals(dateTime16));
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test021");
        org.joda.time.LocalDate localDate0 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate2 = localDate0.minusMonths((int) ' ');
        int int3 = localDate0.size();
        org.joda.time.DateMidnight dateMidnight4 = localDate0.toDateMidnight();
        org.joda.time.LocalDate localDate6 = localDate0.withYearOfCentury(0);
        org.joda.time.MutableDateTime mutableDateTime8 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.Period period17 = period12.plus((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Instant instant18 = new org.joda.time.Instant();
        org.joda.time.Instant instant20 = instant18.withMillis(0L);
        org.joda.time.Duration duration21 = period16.toDurationTo((org.joda.time.ReadableInstant) instant20);
        mutableDateTime8.add((org.joda.time.ReadableDuration) duration21, 39);
        org.joda.time.MutableDateTime.Property property24 = mutableDateTime8.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime8.setZone(dateTimeZone25);
        org.joda.time.DateTime dateTime27 = localDate0.toDateTimeAtMidnight(dateTimeZone25);
        long long30 = dateTimeZone25.adjustOffset((long) 1969, false);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateMidnight4 and dateTime27", (dateMidnight4.compareTo(dateTime27) == 0) == dateMidnight4.equals(dateTime27));
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test022");
        java.lang.Object obj2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(obj2);
        boolean boolean5 = dateTime3.isBefore((long) (short) 100);
        org.joda.time.Instant instant6 = new org.joda.time.Instant();
        org.joda.time.Instant instant8 = instant6.withMillis(0L);
        org.joda.time.Chronology chronology9 = instant8.getChronology();
        org.joda.time.DateTime dateTime10 = dateTime3.toDateTime(chronology9);
        org.joda.time.Period period11 = new org.joda.time.Period(24L, 0L, chronology9);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and instant6", (dateTime3.compareTo(instant6) == 0) == dateTime3.equals(instant6));
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test023");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.dayOfMonth();
        org.joda.time.DateTime dateTime23 = property21.addToCopy(59);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test024");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.LocalDate localDate16 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate18 = localDate16.minusMonths((int) ' ');
        int int19 = localDate16.size();
        org.joda.time.DateMidnight dateMidnight20 = localDate16.toDateMidnight();
        boolean boolean21 = dateTime15.isBefore((org.joda.time.ReadableInstant) dateMidnight20);
        int int22 = dateMidnight20.getMillisOfSecond();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime15", (instant11.compareTo(dateTime15) == 0) == instant11.equals(dateTime15));
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test025");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant();
        org.joda.time.Instant instant8 = instant6.withMillis(0L);
        org.joda.time.Chronology chronology9 = instant8.getChronology();
        org.joda.time.DurationField durationField10 = chronology9.eras();
        java.util.Locale locale11 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket13 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology9, locale11, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime16 = localDateTime14.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property17 = localDateTime14.hourOfDay();
        org.joda.time.DateTimeField dateTimeField18 = property17.getField();
        int int19 = property17.get();
        org.joda.time.LocalDateTime localDateTime20 = property17.roundHalfFloorCopy();
        long long22 = chronology9.set((org.joda.time.ReadablePartial) localDateTime20, (long) 2022);
        org.joda.time.DateTime dateTime23 = dateTime4.toDateTime(chronology9);
        org.joda.time.Period period24 = new org.joda.time.Period((long) '4', (long) 43, periodType2, chronology9);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime4 and instant6", (dateTime4.compareTo(instant6) == 0) == dateTime4.equals(instant6));
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test026");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.DurationField durationField4 = chronology3.eras();
        org.joda.time.DateTimeField dateTimeField5 = chronology3.yearOfEra();
        org.joda.time.DurationField durationField6 = chronology3.centuries();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField4, durationField6, and durationField4", !(durationField4.compareTo(durationField6) == 0) || (Math.signum(durationField4.compareTo(durationField4)) == Math.signum(durationField6.compareTo(durationField4))));
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test027");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType17 = dateTimeFieldType16.getRangeDurationType();
        org.joda.time.DateTime.Property property18 = dateTime15.property(dateTimeFieldType16);
        boolean boolean20 = dateTime15.isEqual((long) 53);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.DateTime dateTime25 = new org.joda.time.DateTime(chronology24);
        int int26 = dateTime25.getSecondOfMinute();
        boolean boolean27 = dateTime25.isEqualNow();
        int int28 = dateTime25.getDayOfYear();
        org.joda.time.Chronology chronology29 = dateTime25.getChronology();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology29);
        org.joda.time.DateTimeField dateTimeField31 = chronology29.year();
        org.joda.time.Period period32 = new org.joda.time.Period(1L, chronology29);
        org.joda.time.MutableDateTime mutableDateTime33 = dateTime15.toMutableDateTime(chronology29);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime25", (instant9.compareTo(dateTime25) == 0) == instant9.equals(dateTime25));
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test028");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.millisOfDay();
        org.joda.time.DurationField durationField22 = property21.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test029");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        mutableDateTime1.addMillis(39221019);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.DateTime dateTime21 = new org.joda.time.DateTime(chronology20);
        org.joda.time.Instant instant23 = new org.joda.time.Instant();
        org.joda.time.Instant instant25 = instant23.withMillis(0L);
        org.joda.time.Chronology chronology26 = instant25.getChronology();
        org.joda.time.DurationField durationField27 = chronology26.eras();
        java.util.Locale locale28 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket30 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology26, locale28, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime31.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property34 = localDateTime31.hourOfDay();
        org.joda.time.DateTimeField dateTimeField35 = property34.getField();
        int int36 = property34.get();
        org.joda.time.LocalDateTime localDateTime37 = property34.roundHalfFloorCopy();
        long long39 = chronology26.set((org.joda.time.ReadablePartial) localDateTime37, (long) 2022);
        org.joda.time.DateTime dateTime40 = dateTime21.toDateTime(chronology26);
        org.joda.time.DateTime dateTime42 = dateTime21.plusDays(22);
        org.joda.time.DateTime dateTime44 = dateTime21.plusSeconds(14);
        mutableDateTime1.setDate((org.joda.time.ReadableInstant) dateTime44);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime21", (instant11.compareTo(dateTime21) == 0) == instant11.equals(dateTime21));
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test030");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate((long) 53, chronology5);
        org.joda.time.DurationField durationField11 = chronology5.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField11, and durationField6", !(durationField6.compareTo(durationField11) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField11.compareTo(durationField6))));
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test031");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType17 = dateTimeFieldType16.getRangeDurationType();
        org.joda.time.DateTime.Property property18 = dateTime15.property(dateTimeFieldType16);
        org.joda.time.DateTime dateTime20 = property18.addToCopy((long) 49);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime15", (instant11.compareTo(dateTime15) == 0) == instant11.equals(dateTime15));
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test032");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((long) 100, 1L, periodType12);
        org.joda.time.Period period14 = period9.plus((org.joda.time.ReadablePeriod) period13);
        org.joda.time.Instant instant15 = new org.joda.time.Instant();
        org.joda.time.Instant instant17 = instant15.withMillis(0L);
        org.joda.time.Duration duration18 = period13.toDurationTo((org.joda.time.ReadableInstant) instant17);
        long long19 = instant17.getMillis();
        org.joda.time.Interval interval20 = duration1.toIntervalTo((org.joda.time.ReadableInstant) instant17);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) 100, 1L, periodType23);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((long) 100, 1L, periodType27);
        org.joda.time.Period period29 = period24.plus((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Instant instant30 = new org.joda.time.Instant();
        org.joda.time.Instant instant32 = instant30.withMillis(0L);
        org.joda.time.Duration duration33 = period28.toDurationTo((org.joda.time.ReadableInstant) instant32);
        org.joda.time.Instant instant35 = instant32.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime36 = instant32.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType38 = dateTimeFieldType37.getRangeDurationType();
        org.joda.time.DateTime.Property property39 = dateTime36.property(dateTimeFieldType37);
        boolean boolean41 = dateTime36.isEqual((long) 53);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period44 = duration43.toPeriod();
        org.joda.time.DateTime dateTime46 = dateTime36.withDurationAdded((org.joda.time.ReadableDuration) duration43, (-292275054));
        boolean boolean47 = duration1.isEqual((org.joda.time.ReadableDuration) duration43);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime36", (instant17.compareTo(dateTime36) == 0) == instant17.equals(dateTime36));
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test033");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        boolean boolean3 = dateTime1.isBefore((long) (short) 100);
        org.joda.time.Instant instant4 = new org.joda.time.Instant();
        org.joda.time.Instant instant6 = instant4.withMillis(0L);
        org.joda.time.Chronology chronology7 = instant6.getChronology();
        org.joda.time.DateTime dateTime8 = dateTime1.toDateTime(chronology7);
        java.util.TimeZone timeZone9 = java.util.TimeZone.getDefault();
        org.joda.time.DateTimeZone dateTimeZone10 = org.joda.time.DateTimeZone.forTimeZone(timeZone9);
        org.joda.time.MutableDateTime mutableDateTime11 = dateTime8.toMutableDateTime(dateTimeZone10);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant4", (dateTime1.compareTo(instant4) == 0) == dateTime1.equals(instant4));
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test034");
        org.joda.time.LocalDate localDate0 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate2 = localDate0.minusMonths((int) ' ');
        int int3 = localDate0.size();
        org.joda.time.DateMidnight dateMidnight4 = localDate0.toDateMidnight();
        org.joda.time.LocalDate localDate6 = localDate0.withYearOfCentury(0);
        org.joda.time.MutableDateTime mutableDateTime8 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.Period period17 = period12.plus((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Instant instant18 = new org.joda.time.Instant();
        org.joda.time.Instant instant20 = instant18.withMillis(0L);
        org.joda.time.Duration duration21 = period16.toDurationTo((org.joda.time.ReadableInstant) instant20);
        mutableDateTime8.add((org.joda.time.ReadableDuration) duration21, 39);
        org.joda.time.MutableDateTime.Property property24 = mutableDateTime8.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime8.setZone(dateTimeZone25);
        org.joda.time.DateTime dateTime27 = localDate0.toDateTimeAtMidnight(dateTimeZone25);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray28 = localDate0.getFieldTypes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateMidnight4 and dateTime27", (dateMidnight4.compareTo(dateTime27) == 0) == dateMidnight4.equals(dateTime27));
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test035");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration6 = duration2.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant7);
        org.joda.time.Duration duration9 = duration6.toDuration();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period12 = duration11.toPeriod();
        org.joda.time.Duration duration15 = duration11.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) 100, 1L, periodType18);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.Period period24 = period19.plus((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.Instant instant27 = instant25.withMillis(0L);
        org.joda.time.Duration duration28 = period23.toDurationTo((org.joda.time.ReadableInstant) instant27);
        org.joda.time.Instant instant30 = instant27.plus((long) (byte) -1);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.DateTime dateTime33 = new org.joda.time.DateTime((long) (short) 1, chronology32);
        org.joda.time.Instant instant34 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) instant34, periodType35);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, (org.joda.time.ReadableInstant) instant27, periodType35);
        int int38 = duration6.compareTo((org.joda.time.ReadableDuration) duration11);
        org.joda.time.MutableDateTime mutableDateTime40 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((long) 100, 1L, periodType43);
        org.joda.time.PeriodType periodType47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((long) 100, 1L, periodType47);
        org.joda.time.Period period49 = period44.plus((org.joda.time.ReadablePeriod) period48);
        org.joda.time.Instant instant50 = new org.joda.time.Instant();
        org.joda.time.Instant instant52 = instant50.withMillis(0L);
        org.joda.time.Duration duration53 = period48.toDurationTo((org.joda.time.ReadableInstant) instant52);
        mutableDateTime40.add((org.joda.time.ReadableDuration) duration53, 39);
        org.joda.time.MutableDateTime.Property property56 = mutableDateTime40.secondOfMinute();
        org.joda.time.Instant instant57 = mutableDateTime40.toInstant();
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, (org.joda.time.ReadableInstant) instant57, periodType58);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((long) 40, periodType58);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime40 and instant57", (mutableDateTime40.compareTo(instant57) == 0) == mutableDateTime40.equals(instant57));
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test036");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate((long) 53, chronology5);
        org.joda.time.DateTimeField dateTimeField11 = chronology5.dayOfYear();
        org.joda.time.DurationField durationField12 = chronology5.years();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField12, and durationField6", !(durationField6.compareTo(durationField12) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField12.compareTo(durationField6))));
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test037");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.LocalDateTime localDateTime2 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime4 = localDateTime2.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property5 = localDateTime2.hourOfDay();
        org.joda.time.DateTimeField dateTimeField6 = property5.getField();
        boolean boolean8 = property5.equals((java.lang.Object) '#');
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(chronology9);
        int int11 = dateTime10.getSecondOfMinute();
        int int12 = dateTime10.getYearOfEra();
        int int13 = property5.getDifference((org.joda.time.ReadableInstant) dateTime10);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime1, (org.joda.time.ReadableInstant) dateTime10);
        org.joda.time.DateTime dateTime15 = dateTime1.toDateTimeISO();
        org.joda.time.MutableDateTime mutableDateTime17 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((long) 100, 1L, periodType20);
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 100, 1L, periodType24);
        org.joda.time.Period period26 = period21.plus((org.joda.time.ReadablePeriod) period25);
        org.joda.time.Instant instant27 = new org.joda.time.Instant();
        org.joda.time.Instant instant29 = instant27.withMillis(0L);
        org.joda.time.Duration duration30 = period25.toDurationTo((org.joda.time.ReadableInstant) instant29);
        mutableDateTime17.add((org.joda.time.ReadableDuration) duration30, 39);
        org.joda.time.MutableDateTime.Property property33 = mutableDateTime17.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone34 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime35 = mutableDateTime17.toMutableDateTime(dateTimeZone34);
        org.joda.time.Duration duration36 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime1, (org.joda.time.ReadableInstant) mutableDateTime17);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime10 and instant27", (dateTime10.compareTo(instant27) == 0) == dateTime10.equals(instant27));
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test038");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusDays(22);
        java.lang.Object obj23 = null;
        org.joda.time.DateTime dateTime24 = new org.joda.time.DateTime(obj23);
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime25.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property28 = localDateTime25.hourOfDay();
        org.joda.time.DateTimeField dateTimeField29 = property28.getField();
        boolean boolean31 = property28.equals((java.lang.Object) '#');
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.DateTime dateTime33 = new org.joda.time.DateTime(chronology32);
        int int34 = dateTime33.getSecondOfMinute();
        int int35 = dateTime33.getYearOfEra();
        int int36 = property28.getDifference((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.DateTime dateTime40 = dateTime33.withDurationAdded((long) (byte) 0, 22);
        boolean boolean41 = dateTime1.isBefore((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.DateTime dateTime43 = dateTime40.plus(1645455600000L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test039");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusDays(22);
        org.joda.time.DateTime.Property property23 = dateTime1.hourOfDay();
        org.joda.time.DateTime dateTime24 = property23.roundHalfCeilingCopy();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test040");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime((long) (short) 1, chronology4);
        org.joda.time.Instant instant6 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime5, (org.joda.time.ReadableInstant) instant6, periodType7);
        org.joda.time.LocalDate localDate9 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate11 = localDate9.minusMonths((int) ' ');
        org.joda.time.Chronology chronology12 = localDate9.getChronology();
        org.joda.time.Period period13 = new org.joda.time.Period((long) (byte) 1, periodType7, chronology12);
        org.joda.time.LocalDate localDate14 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate16 = localDate14.minusMonths((int) ' ');
        org.joda.time.Chronology chronology17 = localDate14.getChronology();
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate20 = localDate14.withFieldAdded(durationFieldType18, (int) (byte) 100);
        boolean boolean21 = periodType7.isSupported(durationFieldType18);
        org.joda.time.PeriodType periodType22 = periodType7.withDaysRemoved();
        org.joda.time.LocalDate localDate23 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property24 = localDate23.dayOfMonth();
        org.joda.time.Chronology chronology25 = localDate23.getChronology();
        org.joda.time.Period period26 = new org.joda.time.Period((long) 43, periodType7, chronology25);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period29 = duration28.toPeriod();
        org.joda.time.Duration duration32 = duration28.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.Instant instant36 = new org.joda.time.Instant();
        org.joda.time.Instant instant38 = instant36.withMillis(0L);
        org.joda.time.Chronology chronology39 = instant38.getChronology();
        org.joda.time.DurationField durationField40 = chronology39.eras();
        java.util.Locale locale41 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket43 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology39, locale41, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate44 = new org.joda.time.LocalDate((long) 53, chronology39);
        org.joda.time.DateTimeField dateTimeField45 = chronology39.dayOfYear();
        org.joda.time.DateTimeField dateTimeField46 = chronology39.monthOfYear();
        org.joda.time.Period period47 = duration28.toPeriod(periodType33, chronology39);
        org.joda.time.Period period48 = new org.joda.time.Period((long) '#', periodType7, chronology39);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period51 = duration50.toPeriod();
        org.joda.time.Duration duration54 = duration50.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime56 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime56.add((org.joda.time.ReadableDuration) duration58, (int) (short) 100);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.DateTime dateTime62 = new org.joda.time.DateTime(chronology61);
        int int63 = dateTime62.getYearOfCentury();
        org.joda.time.Interval interval64 = duration58.toIntervalTo((org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Duration duration65 = duration54.minus((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.DateTime dateTime68 = new org.joda.time.DateTime((long) (short) 1, chronology67);
        org.joda.time.DateTime dateTime69 = dateTime68.toDateTime();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.DateTime dateTime72 = new org.joda.time.DateTime((long) (short) 1, chronology71);
        org.joda.time.DateTime dateTime73 = dateTime72.toDateTime();
        int int74 = dateTime69.compareTo((org.joda.time.ReadableInstant) dateTime72);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType76 = periodType75.withDaysRemoved();
        org.joda.time.Period period77 = duration58.toPeriodTo((org.joda.time.ReadableInstant) dateTime72, periodType75);
        boolean boolean78 = period48.equals((java.lang.Object) dateTime72);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant6 and dateTime62", (instant6.compareTo(dateTime62) == 0) == instant6.equals(dateTime62));
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test041");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.millisOfDay();
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property25 = localDateTime22.hourOfDay();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime22.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str29 = dateTimeFieldType28.getName();
        int int30 = localDateTime22.indexOf(dateTimeFieldType28);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str32 = dateTimeFieldType31.getName();
        org.joda.time.LocalDateTime.Property property33 = localDateTime22.property(dateTimeFieldType31);
        int int34 = localDateTime22.getDayOfWeek();
        org.joda.time.DateTime dateTime35 = dateTime1.withFields((org.joda.time.ReadablePartial) localDateTime22);
        int int36 = dateTime35.getMillisOfSecond();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test042");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.DateTimeField dateTimeField9 = chronology4.yearOfCentury();
        org.joda.time.LocalDateTime localDateTime10 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property11 = localDateTime10.monthOfYear();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getSecondOfMinute();
        boolean boolean15 = dateTime13.isEqualNow();
        int int16 = dateTime13.getDayOfYear();
        org.joda.time.Chronology chronology17 = dateTime13.getChronology();
        long long18 = property11.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime13);
        int int19 = property11.getMaximumValue();
        java.util.Locale locale20 = null;
        java.lang.String str21 = property11.getAsText(locale20);
        int int22 = property11.getLeapAmount();
        org.joda.time.LocalDateTime localDateTime24 = property11.addWrapFieldToCopy(46);
        org.joda.time.LocalDateTime localDateTime26 = localDateTime24.plusWeeks(0);
        int int27 = dateTimeField9.getMaximumValue((org.joda.time.ReadablePartial) localDateTime26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime13", (instant1.compareTo(dateTime13) == 0) == instant1.equals(dateTime13));
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test043");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean18 = mutableDateTime1.isSupported(dateTimeFieldType17);
        int int19 = mutableDateTime1.getWeekOfWeekyear();
        org.joda.time.Instant instant21 = new org.joda.time.Instant();
        org.joda.time.Instant instant23 = instant21.withMillis(0L);
        org.joda.time.Chronology chronology24 = instant23.getChronology();
        org.joda.time.DurationField durationField25 = chronology24.eras();
        java.util.Locale locale26 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket28 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology24, locale26, (java.lang.Integer) 39221019);
        mutableDateTime1.setChronology(chronology24);
        org.joda.time.LocalDate localDate30 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate32 = localDate30.minusMonths((int) ' ');
        org.joda.time.Chronology chronology33 = localDate30.getChronology();
        org.joda.time.DateTimeField dateTimeField34 = chronology33.minuteOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = dateTimeField34.getType();
        int int37 = dateTimeField34.getMaximumValue((long) (-292275054));
        mutableDateTime1.setRounding(dateTimeField34);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.DateTime dateTime40 = new org.joda.time.DateTime(chronology39);
        int int41 = dateTime40.getSecondOfMinute();
        boolean boolean42 = dateTime40.isEqualNow();
        int int43 = dateTime40.getDayOfYear();
        org.joda.time.Chronology chronology44 = dateTime40.getChronology();
        org.joda.time.DateTime dateTime45 = org.joda.time.DateTime.now(chronology44);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.DateTime dateTime49 = new org.joda.time.DateTime(chronology48);
        int int50 = dateTime49.getSecondOfMinute();
        boolean boolean51 = dateTime49.isEqualNow();
        int int52 = dateTime49.getDayOfYear();
        org.joda.time.Chronology chronology53 = dateTime49.getChronology();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology53);
        int int55 = mutablePeriod54.getDays();
        org.joda.time.DateTime dateTime57 = dateTime45.withPeriodAdded((org.joda.time.ReadablePeriod) mutablePeriod54, (int) (byte) 0);
        boolean boolean58 = mutableDateTime1.isBefore((org.joda.time.ReadableInstant) dateTime45);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime40", (instant11.compareTo(dateTime40) == 0) == instant11.equals(dateTime40));
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test044");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        java.lang.Object obj18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(obj18);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime20.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField26 = localDateTime24.getField((int) (byte) 0);
        long long28 = dateTimeField26.roundHalfEven((long) 1);
        int int29 = dateTime19.get(dateTimeField26);
        mutableDateTime1.setRounding(dateTimeField26);
        java.util.Locale locale32 = java.util.Locale.ROOT;
        java.lang.String str33 = dateTimeField26.getAsShortText((long) 47, locale32);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime19", (instant11.compareTo(dateTime19) == 0) == instant11.equals(dateTime19));
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test045");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        boolean boolean3 = dateTime1.isBefore((long) (short) 100);
        org.joda.time.Instant instant4 = new org.joda.time.Instant();
        org.joda.time.Instant instant6 = instant4.withMillis(0L);
        org.joda.time.Chronology chronology7 = instant6.getChronology();
        org.joda.time.DateTime dateTime8 = dateTime1.toDateTime(chronology7);
        org.joda.time.DateTimeZone dateTimeZone10 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime11 = new org.joda.time.MutableDateTime(0L, dateTimeZone10);
        long long14 = dateTimeZone10.convertLocalToUTC((long) 3, true);
        org.joda.time.LocalDateTime localDateTime15 = new org.joda.time.LocalDateTime(dateTimeZone10);
        java.lang.String str17 = dateTimeZone10.getName((long) (short) 100);
        org.joda.time.Chronology chronology18 = chronology7.withZone(dateTimeZone10);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant4", (dateTime1.compareTo(instant4) == 0) == dateTime1.equals(instant4));
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test046");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration9, (int) (short) 100);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getYearOfCentury();
        org.joda.time.Interval interval15 = duration9.toIntervalTo((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Duration duration16 = duration5.minus((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Period period17 = duration16.toPeriod();
        org.joda.time.Period period19 = period17.plusMillis((int) (short) 10);
        org.joda.time.MutableDateTime mutableDateTime21 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 100, 1L, periodType24);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.Period period30 = period25.plus((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Instant instant31 = new org.joda.time.Instant();
        org.joda.time.Instant instant33 = instant31.withMillis(0L);
        org.joda.time.Duration duration34 = period29.toDurationTo((org.joda.time.ReadableInstant) instant33);
        mutableDateTime21.add((org.joda.time.ReadableDuration) duration34, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean38 = mutableDateTime21.isSupported(dateTimeFieldType37);
        org.joda.time.Duration duration39 = period19.toDurationTo((org.joda.time.ReadableInstant) mutableDateTime21);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and instant31", (dateTime13.compareTo(instant31) == 0) == dateTime13.equals(instant31));
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test047");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusHours(4);
        int int23 = dateTime22.getDayOfWeek();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test048");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology7);
        org.joda.time.DurationField durationField9 = chronology7.hours();
        org.joda.time.LocalDateTime localDateTime10 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property11 = localDateTime10.monthOfYear();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DateTime dateTime14 = new org.joda.time.DateTime((long) (short) 1, chronology13);
        org.joda.time.Instant instant15 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime14, (org.joda.time.ReadableInstant) instant15, periodType16);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int19 = instant15.get(dateTimeFieldType18);
        org.joda.time.LocalDateTime localDateTime21 = localDateTime10.withField(dateTimeFieldType18, 39);
        int[] intArray23 = chronology7.get((org.joda.time.ReadablePartial) localDateTime10, (long) 751);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and instant15", (dateTime3.compareTo(instant15) == 0) == dateTime3.equals(instant15));
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test049");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology7);
        org.joda.time.Instant instant14 = new org.joda.time.Instant();
        org.joda.time.Instant instant16 = instant14.withMillis(0L);
        org.joda.time.Chronology chronology17 = instant16.getChronology();
        org.joda.time.DurationField durationField18 = chronology17.eras();
        java.util.Locale locale19 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket21 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology17, locale19, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate22 = new org.joda.time.LocalDate((long) 53, chronology17);
        org.joda.time.DateTimeField dateTimeField23 = chronology17.clockhourOfHalfday();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) 54, 3600L, chronology17);
        mutablePeriod8.add(2629746000L, chronology17);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and instant14", (dateTime3.compareTo(instant14) == 0) == dateTime3.equals(instant14));
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test050");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTime.Property property3 = dateTime2.dayOfWeek();
        java.util.Locale locale4 = java.util.Locale.GERMAN;
        java.util.Locale locale5 = locale4.stripExtensions();
        int int6 = property3.getMaximumTextLength(locale4);
        org.joda.time.DateTime dateTime7 = property3.roundHalfCeilingCopy();
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 100, 1L, periodType14);
        org.joda.time.Period period16 = period11.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Duration duration20 = period15.toDurationTo((org.joda.time.ReadableInstant) instant19);
        org.joda.time.Instant instant22 = instant19.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime23 = instant19.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType25 = dateTimeFieldType24.getRangeDurationType();
        org.joda.time.DateTime.Property property26 = dateTime23.property(dateTimeFieldType24);
        org.joda.time.DateTime.Property property27 = dateTime7.property(dateTimeFieldType24);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant19 and dateTime23", (instant19.compareTo(dateTime23) == 0) == instant19.equals(dateTime23));
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test051");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.millisOfDay();
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property25 = localDateTime22.hourOfDay();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime22.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str29 = dateTimeFieldType28.getName();
        int int30 = localDateTime22.indexOf(dateTimeFieldType28);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str32 = dateTimeFieldType31.getName();
        org.joda.time.LocalDateTime.Property property33 = localDateTime22.property(dateTimeFieldType31);
        int int34 = localDateTime22.getDayOfWeek();
        org.joda.time.DateTime dateTime35 = dateTime1.withFields((org.joda.time.ReadablePartial) localDateTime22);
        org.joda.time.MutableDateTime mutableDateTime37 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((long) 100, 1L, periodType40);
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((long) 100, 1L, periodType44);
        org.joda.time.Period period46 = period41.plus((org.joda.time.ReadablePeriod) period45);
        org.joda.time.Instant instant47 = new org.joda.time.Instant();
        org.joda.time.Instant instant49 = instant47.withMillis(0L);
        org.joda.time.Duration duration50 = period45.toDurationTo((org.joda.time.ReadableInstant) instant49);
        mutableDateTime37.add((org.joda.time.ReadableDuration) duration50, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean54 = mutableDateTime37.isSupported(dateTimeFieldType53);
        org.joda.time.MutableDateTime.Property property55 = mutableDateTime37.millisOfSecond();
        int int56 = mutableDateTime37.getDayOfMonth();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime1, (org.joda.time.ReadableInstant) mutableDateTime37);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and dateTime1", (instant3.compareTo(dateTime1) == 0) == instant3.equals(dateTime1));
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test052");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(chronology4);
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DurationField durationField20 = chronology4.eras();
        org.joda.time.DateTimeField dateTimeField21 = chronology4.weekyear();
        org.joda.time.Chronology chronology22 = chronology4.withUTC();
        org.joda.time.DurationField durationField23 = chronology4.weeks();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField23, and durationField5", !(durationField5.compareTo(durationField23) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField23.compareTo(durationField5))));
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test053");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        java.lang.Object obj18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(obj18);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime20.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField26 = localDateTime24.getField((int) (byte) 0);
        long long28 = dateTimeField26.roundHalfEven((long) 1);
        int int29 = dateTime19.get(dateTimeField26);
        mutableDateTime1.setRounding(dateTimeField26);
        long long33 = dateTimeField26.addWrapField((long) 49, (int) (byte) -1);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime19", (instant11.compareTo(dateTime19) == 0) == instant11.equals(dateTime19));
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test054");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusDays(22);
        org.joda.time.DateTime dateTime23 = dateTime22.withLaterOffsetAtOverlap();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test055");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.DurationField durationField9 = chronology4.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField9, and durationField5", !(durationField5.compareTo(durationField9) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField9.compareTo(durationField5))));
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test056");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str9 = mutablePeriod8.toString();
        org.joda.time.DateTime dateTime10 = dateTime1.plus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.MutableDateTime mutableDateTime12 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        mutableDateTime12.add((org.joda.time.ReadableDuration) duration25, 39);
        org.joda.time.MutableDateTime.Property property28 = mutableDateTime12.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime12.setZone(dateTimeZone29);
        int int31 = mutableDateTime12.getYearOfEra();
        int int32 = mutableDateTime12.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property33 = mutableDateTime12.year();
        org.joda.time.LocalDate localDate34 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate36 = localDate34.minusMonths((int) ' ');
        org.joda.time.Chronology chronology37 = localDate34.getChronology();
        mutableDateTime12.setChronology(chronology37);
        boolean boolean39 = dateTime1.isBefore((org.joda.time.ReadableInstant) mutableDateTime12);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.DateTime dateTime42 = new org.joda.time.DateTime((long) (short) 1, chronology41);
        org.joda.time.Instant instant43 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableInstant) instant43, periodType44);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int47 = instant43.get(dateTimeFieldType46);
        java.lang.String str48 = dateTimeFieldType46.getName();
        java.lang.String str49 = dateTimeFieldType46.toString();
        boolean boolean50 = dateTime1.isSupported(dateTimeFieldType46);
        org.joda.time.DateTime dateTime51 = dateTime1.toDateTime();
        org.joda.time.DateTime dateTime53 = dateTime51.minusMinutes(53600069);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime51 and instant22", (dateTime51.compareTo(instant22) == 0) == dateTime51.equals(instant22));
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test057");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        mutableDateTime1.addYears(3);
        java.lang.Object obj20 = null;
        org.joda.time.DateTime dateTime21 = new org.joda.time.DateTime(obj20);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime26 = localDateTime24.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField28 = localDateTime26.getField((int) (byte) 0);
        long long30 = dateTimeField28.roundHalfEven((long) 1);
        int int31 = dateTime21.get(dateTimeField28);
        boolean boolean32 = dateTime21.isBeforeNow();
        org.joda.time.DateTime.Property property33 = dateTime21.weekOfWeekyear();
        mutableDateTime1.setTime((org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime((long) (short) 1, chronology38);
        org.joda.time.DateTime dateTime40 = dateTime39.toDateTime();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.DateTime dateTime43 = new org.joda.time.DateTime((long) (short) 1, chronology42);
        org.joda.time.DateTime dateTime44 = dateTime43.toDateTime();
        int int45 = dateTime40.compareTo((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration50 = duration36.withDurationAdded((org.joda.time.ReadableDuration) duration47, 10);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration50, 7);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime21", (instant11.compareTo(dateTime21) == 0) == instant11.equals(dateTime21));
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test058");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str9 = mutablePeriod8.toString();
        org.joda.time.DateTime dateTime10 = dateTime1.plus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.MutableDateTime mutableDateTime12 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        mutableDateTime12.add((org.joda.time.ReadableDuration) duration25, 39);
        org.joda.time.MutableDateTime.Property property28 = mutableDateTime12.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime12.setZone(dateTimeZone29);
        int int31 = mutableDateTime12.getYearOfEra();
        int int32 = mutableDateTime12.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property33 = mutableDateTime12.year();
        org.joda.time.LocalDate localDate34 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate36 = localDate34.minusMonths((int) ' ');
        org.joda.time.Chronology chronology37 = localDate34.getChronology();
        mutableDateTime12.setChronology(chronology37);
        boolean boolean39 = dateTime1.isBefore((org.joda.time.ReadableInstant) mutableDateTime12);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.DateTime dateTime42 = new org.joda.time.DateTime((long) (short) 1, chronology41);
        org.joda.time.Instant instant43 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableInstant) instant43, periodType44);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int47 = instant43.get(dateTimeFieldType46);
        java.lang.String str48 = dateTimeFieldType46.getName();
        java.lang.String str49 = dateTimeFieldType46.toString();
        boolean boolean50 = dateTime1.isSupported(dateTimeFieldType46);
        java.lang.String str51 = dateTimeFieldType46.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant22", (dateTime1.compareTo(instant22) == 0) == dateTime1.equals(instant22));
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test059");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType17 = dateTimeFieldType16.getRangeDurationType();
        org.joda.time.DateTime.Property property18 = dateTime15.property(dateTimeFieldType16);
        boolean boolean20 = dateTime15.isEqual((long) 53);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period23 = duration22.toPeriod();
        org.joda.time.DateTime dateTime25 = dateTime15.withDurationAdded((org.joda.time.ReadableDuration) duration22, (-292275054));
        java.lang.String str26 = duration22.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime15", (instant11.compareTo(dateTime15) == 0) == instant11.equals(dateTime15));
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test060");
        org.joda.time.LocalDate localDate0 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate2 = localDate0.minusMonths((int) ' ');
        int int3 = localDate0.size();
        org.joda.time.DateMidnight dateMidnight4 = localDate0.toDateMidnight();
        org.joda.time.LocalDate localDate6 = localDate0.withYearOfCentury(0);
        org.joda.time.MutableDateTime mutableDateTime8 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.Period period17 = period12.plus((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Instant instant18 = new org.joda.time.Instant();
        org.joda.time.Instant instant20 = instant18.withMillis(0L);
        org.joda.time.Duration duration21 = period16.toDurationTo((org.joda.time.ReadableInstant) instant20);
        mutableDateTime8.add((org.joda.time.ReadableDuration) duration21, 39);
        org.joda.time.MutableDateTime.Property property24 = mutableDateTime8.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime8.setZone(dateTimeZone25);
        org.joda.time.DateTime dateTime27 = localDate0.toDateTimeAtMidnight(dateTimeZone25);
        org.joda.time.LocalDate localDate28 = new org.joda.time.LocalDate(dateTimeZone25);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateMidnight4 and dateTime27", (dateMidnight4.compareTo(dateTime27) == 0) == dateMidnight4.equals(dateTime27));
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test061");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.millisOfDay();
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property25 = localDateTime22.hourOfDay();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime22.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str29 = dateTimeFieldType28.getName();
        int int30 = localDateTime22.indexOf(dateTimeFieldType28);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str32 = dateTimeFieldType31.getName();
        org.joda.time.LocalDateTime.Property property33 = localDateTime22.property(dateTimeFieldType31);
        int int34 = localDateTime22.getDayOfWeek();
        org.joda.time.DateTime dateTime35 = dateTime1.withFields((org.joda.time.ReadablePartial) localDateTime22);
        org.joda.time.DateTime dateTime37 = dateTime35.minusSeconds(894);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime35 and instant3", (dateTime35.compareTo(instant3) == 0) == dateTime35.equals(instant3));
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test062");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration9, (int) (short) 100);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getYearOfCentury();
        org.joda.time.Interval interval15 = duration9.toIntervalTo((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Duration duration16 = duration5.minus((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime((long) (short) 1, chronology18);
        org.joda.time.DateTime dateTime20 = dateTime19.toDateTime();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime((long) (short) 1, chronology22);
        org.joda.time.DateTime dateTime24 = dateTime23.toDateTime();
        int int25 = dateTime20.compareTo((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType27 = periodType26.withDaysRemoved();
        org.joda.time.Period period28 = duration9.toPeriodTo((org.joda.time.ReadableInstant) dateTime23, periodType26);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Chronology chronology32 = instant31.getChronology();
        org.joda.time.Instant instant34 = instant31.minus((-60494601599990L));
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) instant31);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and instant29", (dateTime13.compareTo(instant29) == 0) == dateTime13.equals(instant29));
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test063");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.dayOfMonth();
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = property21.getFieldType();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test064");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        org.joda.time.Duration duration8 = duration5.toDuration();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Duration duration14 = duration10.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((long) 100, 1L, periodType21);
        org.joda.time.Period period23 = period18.plus((org.joda.time.ReadablePeriod) period22);
        org.joda.time.Instant instant24 = new org.joda.time.Instant();
        org.joda.time.Instant instant26 = instant24.withMillis(0L);
        org.joda.time.Duration duration27 = period22.toDurationTo((org.joda.time.ReadableInstant) instant26);
        org.joda.time.Instant instant29 = instant26.plus((long) (byte) -1);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime((long) (short) 1, chronology31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) instant33, periodType34);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant26, periodType34);
        int int37 = duration5.compareTo((org.joda.time.ReadableDuration) duration10);
        org.joda.time.MutableDateTime mutableDateTime39 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((long) 100, 1L, periodType42);
        org.joda.time.PeriodType periodType46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((long) 100, 1L, periodType46);
        org.joda.time.Period period48 = period43.plus((org.joda.time.ReadablePeriod) period47);
        org.joda.time.Instant instant49 = new org.joda.time.Instant();
        org.joda.time.Instant instant51 = instant49.withMillis(0L);
        org.joda.time.Duration duration52 = period47.toDurationTo((org.joda.time.ReadableInstant) instant51);
        mutableDateTime39.add((org.joda.time.ReadableDuration) duration52, 39);
        org.joda.time.MutableDateTime.Property property55 = mutableDateTime39.secondOfMinute();
        org.joda.time.Instant instant56 = mutableDateTime39.toInstant();
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant56, periodType57);
        org.joda.time.LocalDate localDate59 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate61 = localDate59.minusMonths((int) ' ');
        int int62 = localDate59.size();
        org.joda.time.LocalDate.Property property63 = localDate59.weekOfWeekyear();
        org.joda.time.DateTimeZone dateTimeZone65 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime66 = new org.joda.time.MutableDateTime(0L, dateTimeZone65);
        long long69 = dateTimeZone65.convertLocalToUTC((long) 3, true);
        org.joda.time.MutableDateTime mutableDateTime70 = new org.joda.time.MutableDateTime(dateTimeZone65);
        org.joda.time.DateTime dateTime71 = localDate59.toDateTimeAtStartOfDay(dateTimeZone65);
        org.joda.time.Period period72 = duration10.toPeriodTo((org.joda.time.ReadableInstant) dateTime71);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime39 and instant56", (mutableDateTime39.compareTo(instant56) == 0) == mutableDateTime39.equals(instant56));
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test065");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        mutablePeriod7.setYears(10);
        mutablePeriod7.setPeriod((int) (short) 1, 14, (int) (byte) 0, 1, (int) (short) 1, 53, 1969, 86396191);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration24 = duration20.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period27 = duration26.toPeriod();
        org.joda.time.Duration duration28 = duration20.plus((org.joda.time.ReadableDuration) duration26);
        mutablePeriod7.add((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 100, 1L, periodType36);
        org.joda.time.Period period38 = period33.plus((org.joda.time.ReadablePeriod) period37);
        org.joda.time.Instant instant39 = new org.joda.time.Instant();
        org.joda.time.Instant instant41 = instant39.withMillis(0L);
        org.joda.time.Duration duration42 = period37.toDurationTo((org.joda.time.ReadableInstant) instant41);
        org.joda.time.Instant instant44 = instant41.plus((long) (byte) -1);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.DateTime dateTime46 = new org.joda.time.DateTime(chronology45);
        int int47 = dateTime46.getSecondOfMinute();
        int int48 = dateTime46.getYearOfEra();
        boolean boolean49 = instant44.isEqual((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Period period50 = duration28.toPeriodTo((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Period period52 = period50.plusYears(44);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant39 and dateTime46", (instant39.compareTo(dateTime46) == 0) == instant39.equals(dateTime46));
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test066");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        mutablePeriod7.setYears(10);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(chronology10);
        int int12 = dateTime11.getSecondOfMinute();
        org.joda.time.DateTime dateTime15 = dateTime11.withDurationAdded((long) 6, 12);
        org.joda.time.DateTime dateTime17 = dateTime11.minusMillis(31);
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime19.yearOfEra();
        mutableDateTime19.addMillis(39221019);
        mutableDateTime19.setWeekyear(49);
        mutableDateTime19.addMinutes(39);
        mutablePeriod7.setPeriod((org.joda.time.ReadableInstant) dateTime11, (org.joda.time.ReadableInstant) mutableDateTime19);
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = org.joda.time.DateTimeFieldType.dayOfYear();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.DateTime dateTime46 = new org.joda.time.DateTime(chronology45);
        int int47 = dateTime46.getSecondOfMinute();
        boolean boolean48 = dateTime46.isEqualNow();
        int int49 = dateTime46.getDayOfYear();
        org.joda.time.Chronology chronology50 = dateTime46.getChronology();
        java.util.Locale locale51 = java.util.Locale.SIMPLIFIED_CHINESE;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket52 = new org.joda.time.format.DateTimeParserBucket(315532800097L, chronology50, locale51);
        org.joda.time.DateTimeField dateTimeField53 = dateTimeFieldType43.getField(chronology50);
        mutableDateTime19.setChronology(chronology50);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime11 and instant29", (dateTime11.compareTo(instant29) == 0) == dateTime11.equals(instant29));
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test067");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((long) 100, 1L, periodType12);
        org.joda.time.Period period14 = period9.plus((org.joda.time.ReadablePeriod) period13);
        org.joda.time.Instant instant15 = new org.joda.time.Instant();
        org.joda.time.Instant instant17 = instant15.withMillis(0L);
        org.joda.time.Duration duration18 = period13.toDurationTo((org.joda.time.ReadableInstant) instant17);
        org.joda.time.Instant instant20 = instant17.plus((long) (byte) -1);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime((long) (short) 1, chronology22);
        org.joda.time.Instant instant24 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) instant24, periodType25);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) instant17, periodType25);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(2022, (int) ' ', 6, (int) (short) 100);
        org.joda.time.Period period33 = mutablePeriod32.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.millis(1645455600000L);
        org.joda.time.Minutes minutes36 = duration35.toStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period39 = duration38.toPeriod();
        org.joda.time.Duration duration42 = duration38.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime44 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime44.add((org.joda.time.ReadableDuration) duration46, (int) (short) 100);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.DateTime dateTime50 = new org.joda.time.DateTime(chronology49);
        int int51 = dateTime50.getYearOfCentury();
        org.joda.time.Interval interval52 = duration46.toIntervalTo((org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.Duration duration53 = duration42.minus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period56 = duration55.toPeriod();
        org.joda.time.Duration duration58 = duration42.withDurationAdded((org.joda.time.ReadableDuration) duration55, 54);
        org.joda.time.Duration duration59 = duration35.minus((org.joda.time.ReadableDuration) duration58);
        mutablePeriod32.add((org.joda.time.ReadableDuration) duration35);
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) instant17, (org.joda.time.ReadableDuration) duration35);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant15 and dateTime50", (instant15.compareTo(dateTime50) == 0) == instant15.equals(dateTime50));
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test068");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusDays(22);
        int int23 = dateTime1.getSecondOfMinute();
        org.joda.time.DateTime dateTime25 = dateTime1.plusYears(11);
        java.lang.Object obj26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime27);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test069");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        org.joda.time.Duration duration8 = duration5.toDuration();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Duration duration14 = duration10.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((long) 100, 1L, periodType21);
        org.joda.time.Period period23 = period18.plus((org.joda.time.ReadablePeriod) period22);
        org.joda.time.Instant instant24 = new org.joda.time.Instant();
        org.joda.time.Instant instant26 = instant24.withMillis(0L);
        org.joda.time.Duration duration27 = period22.toDurationTo((org.joda.time.ReadableInstant) instant26);
        org.joda.time.Instant instant29 = instant26.plus((long) (byte) -1);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime((long) (short) 1, chronology31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) instant33, periodType34);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant26, periodType34);
        int int37 = duration5.compareTo((org.joda.time.ReadableDuration) duration10);
        org.joda.time.MutableDateTime mutableDateTime39 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((long) 100, 1L, periodType42);
        org.joda.time.PeriodType periodType46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((long) 100, 1L, periodType46);
        org.joda.time.Period period48 = period43.plus((org.joda.time.ReadablePeriod) period47);
        org.joda.time.Instant instant49 = new org.joda.time.Instant();
        org.joda.time.Instant instant51 = instant49.withMillis(0L);
        org.joda.time.Duration duration52 = period47.toDurationTo((org.joda.time.ReadableInstant) instant51);
        mutableDateTime39.add((org.joda.time.ReadableDuration) duration52, 39);
        org.joda.time.MutableDateTime.Property property55 = mutableDateTime39.secondOfMinute();
        org.joda.time.Instant instant56 = mutableDateTime39.toInstant();
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant56, periodType57);
        java.lang.String str59 = duration10.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime39 and instant56", (mutableDateTime39.compareTo(instant56) == 0) == mutableDateTime39.equals(instant56));
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test070");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property1 = localDateTime0.monthOfYear();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime((long) (short) 1, chronology3);
        org.joda.time.Instant instant5 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime4, (org.joda.time.ReadableInstant) instant5, periodType6);
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int9 = instant5.get(dateTimeFieldType8);
        org.joda.time.LocalDateTime localDateTime11 = localDateTime0.withField(dateTimeFieldType8, 39);
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.minusSeconds(52);
        int int14 = localDateTime13.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime16 = localDateTime13.plusWeeks(22);
        org.joda.time.DateTime dateTime17 = localDateTime13.toDateTime();
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime19.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime19.setZone(dateTimeZone36);
        org.joda.time.DateTime dateTime38 = dateTime17.withZone(dateTimeZone36);
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime(dateTimeZone36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime17 and dateTime38", (dateTime17.compareTo(dateTime38) == 0) == dateTime17.equals(dateTime38));
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test071");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str9 = mutablePeriod8.toString();
        org.joda.time.DateTime dateTime10 = dateTime1.plus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.MutableDateTime mutableDateTime12 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        mutableDateTime12.add((org.joda.time.ReadableDuration) duration25, 39);
        org.joda.time.MutableDateTime.Property property28 = mutableDateTime12.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime12.setZone(dateTimeZone29);
        int int31 = mutableDateTime12.getYearOfEra();
        int int32 = mutableDateTime12.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property33 = mutableDateTime12.year();
        org.joda.time.LocalDate localDate34 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate36 = localDate34.minusMonths((int) ' ');
        org.joda.time.Chronology chronology37 = localDate34.getChronology();
        mutableDateTime12.setChronology(chronology37);
        boolean boolean39 = dateTime1.isBefore((org.joda.time.ReadableInstant) mutableDateTime12);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.DateTime dateTime42 = new org.joda.time.DateTime((long) (short) 1, chronology41);
        org.joda.time.Instant instant43 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableInstant) instant43, periodType44);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int47 = instant43.get(dateTimeFieldType46);
        java.lang.String str48 = dateTimeFieldType46.getName();
        java.lang.String str49 = dateTimeFieldType46.toString();
        boolean boolean50 = dateTime1.isSupported(dateTimeFieldType46);
        org.joda.time.DateTime dateTime51 = dateTime1.toDateTime();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter52 = null;
        java.lang.String str53 = dateTime1.toString(dateTimeFormatter52);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant22 and dateTime1", (instant22.compareTo(dateTime1) == 0) == instant22.equals(dateTime1));
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test072");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.DateTime.Property property2 = dateTime1.millisOfDay();
        org.joda.time.DateTimeField dateTimeField3 = property2.getField();
        org.joda.time.DateTime dateTime4 = property2.withMinimumValue();
        org.joda.time.Interval interval5 = property2.toInterval();
        org.joda.time.DateTime dateTime7 = property2.addToCopy((long) 40);
        org.joda.time.MutableDateTime mutableDateTime9 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((long) 100, 1L, periodType12);
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((long) 100, 1L, periodType16);
        org.joda.time.Period period18 = period13.plus((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Instant instant19 = new org.joda.time.Instant();
        org.joda.time.Instant instant21 = instant19.withMillis(0L);
        org.joda.time.Duration duration22 = period17.toDurationTo((org.joda.time.ReadableInstant) instant21);
        mutableDateTime9.add((org.joda.time.ReadableDuration) duration22, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean26 = mutableDateTime9.isSupported(dateTimeFieldType25);
        org.joda.time.DateTimeField dateTimeField27 = mutableDateTime9.getRoundingField();
        int int28 = mutableDateTime9.getMillisOfDay();
        int int29 = mutableDateTime9.getEra();
        int int30 = dateTime7.compareTo((org.joda.time.ReadableInstant) mutableDateTime9);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant19", (dateTime1.compareTo(instant19) == 0) == dateTime1.equals(instant19));
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test073");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.DurationField durationField4 = chronology3.eras();
        org.joda.time.DateTimeField dateTimeField5 = chronology3.yearOfEra();
        long long7 = dateTimeField5.roundHalfCeiling((long) 10);
        org.joda.time.LocalDateTime localDateTime8 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property9 = localDateTime8.monthOfYear();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(chronology10);
        int int12 = dateTime11.getSecondOfMinute();
        boolean boolean13 = dateTime11.isEqualNow();
        int int14 = dateTime11.getDayOfYear();
        org.joda.time.Chronology chronology15 = dateTime11.getChronology();
        long long16 = property9.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime11);
        org.joda.time.LocalDateTime localDateTime17 = property9.roundFloorCopy();
        java.util.Locale locale19 = java.util.Locale.GERMAN;
        java.util.Locale locale20 = java.util.Locale.CANADA;
        java.lang.String str21 = locale19.getDisplayVariant(locale20);
        java.lang.String str22 = locale20.getCountry();
        java.lang.String str23 = dateTimeField5.getAsShortText((org.joda.time.ReadablePartial) localDateTime17, (int) (short) 1, locale20);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant0 and dateTime11", (instant0.compareTo(dateTime11) == 0) == instant0.equals(dateTime11));
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test074");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.millisOfDay();
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property25 = localDateTime22.hourOfDay();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime22.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str29 = dateTimeFieldType28.getName();
        int int30 = localDateTime22.indexOf(dateTimeFieldType28);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str32 = dateTimeFieldType31.getName();
        org.joda.time.LocalDateTime.Property property33 = localDateTime22.property(dateTimeFieldType31);
        int int34 = localDateTime22.getDayOfWeek();
        org.joda.time.DateTime dateTime35 = dateTime1.withFields((org.joda.time.ReadablePartial) localDateTime22);
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = org.joda.time.DateTimeFieldType.secondOfDay();
        java.lang.String str37 = dateTimeFieldType36.toString();
        int int38 = localDateTime22.indexOf(dateTimeFieldType36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test075");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        java.lang.Object obj18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(obj18);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime20.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField26 = localDateTime24.getField((int) (byte) 0);
        long long28 = dateTimeField26.roundHalfEven((long) 1);
        int int29 = dateTime19.get(dateTimeField26);
        mutableDateTime1.setRounding(dateTimeField26);
        int int31 = mutableDateTime1.getMinuteOfHour();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime19", (instant11.compareTo(dateTime19) == 0) == instant11.equals(dateTime19));
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test076");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Chronology chronology12 = instant11.getChronology();
        org.joda.time.DurationField durationField13 = chronology12.eras();
        java.util.Locale locale14 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket16 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology12, locale14, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate17 = new org.joda.time.LocalDate((long) 53, chronology12);
        org.joda.time.DateTimeField dateTimeField18 = chronology12.dayOfYear();
        org.joda.time.DateTimeField dateTimeField19 = chronology12.monthOfYear();
        org.joda.time.Period period20 = duration1.toPeriod(periodType6, chronology12);
        org.joda.time.DurationField durationField21 = chronology12.centuries();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField13, durationField21, and durationField13", !(durationField13.compareTo(durationField21) == 0) || (Math.signum(durationField13.compareTo(durationField13)) == Math.signum(durationField21.compareTo(durationField13))));
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test077");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 100, 1L, periodType14);
        org.joda.time.Period period16 = period11.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Duration duration20 = period15.toDurationTo((org.joda.time.ReadableInstant) instant19);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration20, 39);
        org.joda.time.MutableDateTime.Property property23 = mutableDateTime7.secondOfMinute();
        mutableDateTime7.addYears(3);
        java.lang.Object obj26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime(obj26);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime28.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime32 = localDateTime30.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField34 = localDateTime32.getField((int) (byte) 0);
        long long36 = dateTimeField34.roundHalfEven((long) 1);
        int int37 = dateTime27.get(dateTimeField34);
        boolean boolean38 = dateTime27.isBeforeNow();
        org.joda.time.DateTime.Property property39 = dateTime27.weekOfWeekyear();
        mutableDateTime7.setTime((org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Period period41 = duration5.toPeriodTo((org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Period period43 = period41.minusMillis(45);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime27", (instant17.compareTo(dateTime27) == 0) == instant17.equals(dateTime27));
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test078");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property1 = localDateTime0.monthOfYear();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime((long) (short) 1, chronology3);
        org.joda.time.Instant instant5 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime4, (org.joda.time.ReadableInstant) instant5, periodType6);
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int9 = instant5.get(dateTimeFieldType8);
        org.joda.time.LocalDateTime localDateTime11 = localDateTime0.withField(dateTimeFieldType8, 39);
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.minusSeconds(52);
        int int14 = localDateTime13.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime16 = localDateTime13.plusWeeks(22);
        org.joda.time.DateTime dateTime17 = localDateTime13.toDateTime();
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime19.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime19.setZone(dateTimeZone36);
        org.joda.time.DateTime dateTime38 = dateTime17.withZone(dateTimeZone36);
        org.joda.time.MutableDateTime mutableDateTime39 = new org.joda.time.MutableDateTime(dateTimeZone36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime17 and dateTime38", (dateTime17.compareTo(dateTime38) == 0) == dateTime17.equals(dateTime38));
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test079");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        boolean boolean3 = dateTime1.isBefore((long) (short) 100);
        org.joda.time.Instant instant4 = new org.joda.time.Instant();
        org.joda.time.Instant instant6 = instant4.withMillis(0L);
        org.joda.time.Chronology chronology7 = instant6.getChronology();
        org.joda.time.DateTime dateTime8 = dateTime1.toDateTime(chronology7);
        org.joda.time.DurationField durationField9 = chronology7.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant4", (dateTime1.compareTo(instant4) == 0) == dateTime1.equals(instant4));
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test080");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        mutableDateTime1.setDayOfYear((int) ' ');
        mutableDateTime1.add((long) 53);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter22 = null;
        java.lang.String str23 = mutableDateTime1.toString(dateTimeFormatter22);
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.UTC;
        int int26 = dateTimeZone24.getStandardOffset((long) 894);
        mutableDateTime1.setZoneRetainFields(dateTimeZone24);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.DateTime dateTime31 = new org.joda.time.DateTime(chronology30);
        int int32 = dateTime31.getSecondOfMinute();
        boolean boolean33 = dateTime31.isEqualNow();
        int int34 = dateTime31.getDayOfYear();
        org.joda.time.Chronology chronology35 = dateTime31.getChronology();
        java.util.Locale locale36 = java.util.Locale.SIMPLIFIED_CHINESE;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket37 = new org.joda.time.format.DateTimeParserBucket(315532800097L, chronology35, locale36);
        java.lang.String str38 = mutableDateTime1.toString("-1", locale36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime31", (instant11.compareTo(dateTime31) == 0) == instant11.equals(dateTime31));
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test081");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.DurationField durationField4 = chronology3.eras();
        org.joda.time.DateTimeField dateTimeField5 = chronology3.yearOfEra();
        org.joda.time.DateTimeField dateTimeField6 = chronology3.millisOfSecond();
        org.joda.time.DurationField durationField7 = dateTimeField6.getDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField4, durationField7, and durationField4", !(durationField4.compareTo(durationField7) == 0) || (Math.signum(durationField4.compareTo(durationField4)) == Math.signum(durationField7.compareTo(durationField4))));
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test082");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        org.joda.time.Duration duration8 = duration5.toDuration();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Duration duration14 = duration10.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((long) 100, 1L, periodType21);
        org.joda.time.Period period23 = period18.plus((org.joda.time.ReadablePeriod) period22);
        org.joda.time.Instant instant24 = new org.joda.time.Instant();
        org.joda.time.Instant instant26 = instant24.withMillis(0L);
        org.joda.time.Duration duration27 = period22.toDurationTo((org.joda.time.ReadableInstant) instant26);
        org.joda.time.Instant instant29 = instant26.plus((long) (byte) -1);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime((long) (short) 1, chronology31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) instant33, periodType34);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant26, periodType34);
        int int37 = duration5.compareTo((org.joda.time.ReadableDuration) duration10);
        org.joda.time.MutableDateTime mutableDateTime39 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((long) 100, 1L, periodType42);
        org.joda.time.PeriodType periodType46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((long) 100, 1L, periodType46);
        org.joda.time.Period period48 = period43.plus((org.joda.time.ReadablePeriod) period47);
        org.joda.time.Instant instant49 = new org.joda.time.Instant();
        org.joda.time.Instant instant51 = instant49.withMillis(0L);
        org.joda.time.Duration duration52 = period47.toDurationTo((org.joda.time.ReadableInstant) instant51);
        mutableDateTime39.add((org.joda.time.ReadableDuration) duration52, 39);
        org.joda.time.MutableDateTime.Property property55 = mutableDateTime39.secondOfMinute();
        org.joda.time.Instant instant56 = mutableDateTime39.toInstant();
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant56, periodType57);
        org.joda.time.PeriodType periodType59 = periodType57.withHoursRemoved();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime39 and instant56", (mutableDateTime39.compareTo(instant56) == 0) == mutableDateTime39.equals(instant56));
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test083");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime19 = mutableDateTime1.toMutableDateTime(dateTimeZone18);
        org.joda.time.MutableDateTime.Property property20 = mutableDateTime19.secondOfDay();
        org.joda.time.Period period22 = org.joda.time.Period.millis(100);
        org.joda.time.Period period23 = period22.negated();
        mutableDateTime19.add((org.joda.time.ReadablePeriod) period22, 0);
        org.joda.time.Period period27 = period22.plusHours((int) (byte) 10);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime1 and mutableDateTime19", (mutableDateTime1.compareTo(mutableDateTime19) == 0) == mutableDateTime1.equals(mutableDateTime19));
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test084");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        mutablePeriod7.setYears(10);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(chronology10);
        int int12 = dateTime11.getSecondOfMinute();
        org.joda.time.DateTime dateTime15 = dateTime11.withDurationAdded((long) 6, 12);
        org.joda.time.DateTime dateTime17 = dateTime11.minusMillis(31);
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime19.yearOfEra();
        mutableDateTime19.addMillis(39221019);
        mutableDateTime19.setWeekyear(49);
        mutableDateTime19.addMinutes(39);
        mutablePeriod7.setPeriod((org.joda.time.ReadableInstant) dateTime11, (org.joda.time.ReadableInstant) mutableDateTime19);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime(chronology43);
        int int45 = dateTime44.getDayOfMonth();
        mutableDateTime19.setMillis((org.joda.time.ReadableInstant) dateTime44);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime11 and instant29", (dateTime11.compareTo(instant29) == 0) == dateTime11.equals(instant29));
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test085");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        int int5 = dateTime4.getSecondOfMinute();
        boolean boolean6 = dateTime4.isEqualNow();
        int int7 = dateTime4.getDayOfYear();
        org.joda.time.Chronology chronology8 = dateTime4.getChronology();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology8);
        org.joda.time.DateTimeField dateTimeField10 = chronology8.year();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.dayOfMonth();
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now(chronology8);
        org.joda.time.DurationField durationField13 = chronology8.years();
        org.joda.time.Instant instant15 = new org.joda.time.Instant();
        org.joda.time.Instant instant17 = instant15.withMillis(0L);
        org.joda.time.Chronology chronology18 = instant17.getChronology();
        org.joda.time.DurationField durationField19 = chronology18.eras();
        java.util.Locale locale20 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket22 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology18, locale20, (java.lang.Integer) 39221019);
        java.lang.String str23 = locale20.getDisplayScript();
        java.lang.String str24 = locale20.getCountry();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket25 = new org.joda.time.format.DateTimeParserBucket(0L, chronology8, locale20);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime4 and instant15", (dateTime4.compareTo(instant15) == 0) == dateTime4.equals(instant15));
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test086");
        org.joda.time.DateTimeZone dateTimeZone0 = null;
        org.joda.time.LocalTime localTime1 = new org.joda.time.LocalTime(dateTimeZone0);
        org.joda.time.LocalTime localTime3 = localTime1.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime5 = localTime3.plusMillis((int) (byte) 100);
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 100, 1L, periodType14);
        org.joda.time.Period period16 = period11.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Duration duration20 = period15.toDurationTo((org.joda.time.ReadableInstant) instant19);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration20, 39);
        org.joda.time.MutableDateTime.Property property23 = mutableDateTime7.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime7.setZone(dateTimeZone24);
        int int26 = mutableDateTime7.getYearOfEra();
        int int27 = mutableDateTime7.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property28 = mutableDateTime7.year();
        org.joda.time.MutableDateTime mutableDateTime29 = property28.roundHalfEven();
        org.joda.time.DateTime dateTime30 = localTime5.toDateTime((org.joda.time.ReadableInstant) mutableDateTime29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.millis(1645455600000L);
        org.joda.time.Minutes minutes33 = duration32.toStandardMinutes();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period36 = duration35.toPeriod();
        org.joda.time.Duration duration39 = duration35.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime41 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime41.add((org.joda.time.ReadableDuration) duration43, (int) (short) 100);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DateTime dateTime47 = new org.joda.time.DateTime(chronology46);
        int int48 = dateTime47.getYearOfCentury();
        org.joda.time.Interval interval49 = duration43.toIntervalTo((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.Duration duration50 = duration39.minus((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period53 = duration52.toPeriod();
        org.joda.time.Duration duration55 = duration39.withDurationAdded((org.joda.time.ReadableDuration) duration52, 54);
        org.joda.time.Duration duration56 = duration32.minus((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration58 = duration32.plus((long) 14);
        org.joda.time.DateTime dateTime59 = dateTime30.minus((org.joda.time.ReadableDuration) duration58);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime47", (instant17.compareTo(dateTime47) == 0) == instant17.equals(dateTime47));
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test087");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        mutableDateTime1.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property20 = mutableDateTime1.minuteOfDay();
        org.joda.time.MutableDateTime mutableDateTime22 = property20.addWrapField((int) (short) 100);
        org.joda.time.LocalDate localDate23 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate25 = localDate23.minusMonths((int) ' ');
        int int26 = localDate23.size();
        org.joda.time.DateMidnight dateMidnight27 = localDate23.toDateMidnight();
        org.joda.time.LocalDate localDate29 = localDate23.withYearOfCentury(0);
        org.joda.time.MutableDateTime mutableDateTime31 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((long) 100, 1L, periodType34);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((long) 100, 1L, periodType38);
        org.joda.time.Period period40 = period35.plus((org.joda.time.ReadablePeriod) period39);
        org.joda.time.Instant instant41 = new org.joda.time.Instant();
        org.joda.time.Instant instant43 = instant41.withMillis(0L);
        org.joda.time.Duration duration44 = period39.toDurationTo((org.joda.time.ReadableInstant) instant43);
        mutableDateTime31.add((org.joda.time.ReadableDuration) duration44, 39);
        org.joda.time.MutableDateTime.Property property47 = mutableDateTime31.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone48 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime31.setZone(dateTimeZone48);
        org.joda.time.DateTime dateTime50 = localDate23.toDateTimeAtMidnight(dateTimeZone48);
        mutableDateTime22.setZoneRetainFields(dateTimeZone48);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateMidnight27 and dateTime50", (dateMidnight27.compareTo(dateTime50) == 0) == dateMidnight27.equals(dateTime50));
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test088");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str9 = mutablePeriod8.toString();
        org.joda.time.DateTime dateTime10 = dateTime1.plus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.MutableDateTime mutableDateTime12 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        mutableDateTime12.add((org.joda.time.ReadableDuration) duration25, 39);
        org.joda.time.MutableDateTime.Property property28 = mutableDateTime12.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime12.setZone(dateTimeZone29);
        int int31 = mutableDateTime12.getYearOfEra();
        int int32 = mutableDateTime12.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property33 = mutableDateTime12.year();
        org.joda.time.LocalDate localDate34 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate36 = localDate34.minusMonths((int) ' ');
        org.joda.time.Chronology chronology37 = localDate34.getChronology();
        mutableDateTime12.setChronology(chronology37);
        boolean boolean39 = dateTime1.isBefore((org.joda.time.ReadableInstant) mutableDateTime12);
        org.joda.time.MutableDateTime.Property property40 = mutableDateTime12.yearOfCentury();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant22", (dateTime1.compareTo(instant22) == 0) == dateTime1.equals(instant22));
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test089");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.DateTime.Property property2 = dateTime1.millisOfDay();
        org.joda.time.LocalDateTime localDateTime3 = dateTime1.toLocalDateTime();
        org.joda.time.MutableDateTime mutableDateTime4 = dateTime1.toMutableDateTime();
        int int5 = mutableDateTime4.getHourOfDay();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        mutablePeriod10.addYears(59);
        org.joda.time.Instant instant15 = new org.joda.time.Instant();
        org.joda.time.Instant instant17 = instant15.withMillis(0L);
        org.joda.time.Chronology chronology18 = instant17.getChronology();
        org.joda.time.DurationField durationField19 = chronology18.eras();
        java.util.Locale locale20 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket22 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology18, locale20, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate23 = new org.joda.time.LocalDate((long) 53, chronology18);
        org.joda.time.ReadableDuration readableDuration24 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period(readableDuration24, readableInstant25);
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) 100, 1L, periodType29);
        org.joda.time.Period period32 = period30.minusSeconds((-1));
        java.lang.String str33 = period30.toString();
        org.joda.time.Period period34 = period30.toPeriod();
        org.joda.time.PeriodType periodType35 = period30.getPeriodType();
        org.joda.time.Period period36 = period26.normalizedStandard(periodType35);
        boolean boolean37 = localDate23.equals((java.lang.Object) period26);
        org.joda.time.Interval interval38 = localDate23.toInterval();
        mutablePeriod10.add((org.joda.time.ReadableInterval) interval38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardDays((long) (byte) 1);
        java.lang.String str42 = duration41.toString();
        mutablePeriod10.setPeriod((org.joda.time.ReadableDuration) duration41);
        mutableDateTime4.add((org.joda.time.ReadablePeriod) mutablePeriod10);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant15", (dateTime1.compareTo(instant15) == 0) == dateTime1.equals(instant15));
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test090");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str9 = mutablePeriod8.toString();
        org.joda.time.DateTime dateTime10 = dateTime1.plus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.DateTime.Property property11 = dateTime1.weekyear();
        org.joda.time.MutableDateTime mutableDateTime12 = dateTime1.toMutableDateTimeISO();
        int int13 = dateTime1.getMinuteOfDay();
        org.joda.time.MutableDateTime mutableDateTime15 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) 100, 1L, periodType18);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.Period period24 = period19.plus((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.Instant instant27 = instant25.withMillis(0L);
        org.joda.time.Duration duration28 = period23.toDurationTo((org.joda.time.ReadableInstant) instant27);
        mutableDateTime15.add((org.joda.time.ReadableDuration) duration28, 39);
        org.joda.time.MutableDateTime.Property property31 = mutableDateTime15.yearOfEra();
        mutableDateTime15.setDayOfYear((int) ' ');
        mutableDateTime15.add((long) 39221019);
        mutableDateTime15.setMinuteOfDay(21);
        org.joda.time.Duration duration38 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime1, (org.joda.time.ReadableInstant) mutableDateTime15);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.DateTime dateTime42 = new org.joda.time.DateTime((long) (short) 1, chronology41);
        org.joda.time.Instant instant43 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableInstant) instant43, periodType44);
        org.joda.time.LocalDate localDate46 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate48 = localDate46.minusMonths((int) ' ');
        org.joda.time.Chronology chronology49 = localDate46.getChronology();
        org.joda.time.Period period50 = new org.joda.time.Period((long) (byte) 1, periodType44, chronology49);
        org.joda.time.LocalDate localDate51 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate53 = localDate51.minusMonths((int) ' ');
        org.joda.time.Chronology chronology54 = localDate51.getChronology();
        org.joda.time.DurationFieldType durationFieldType55 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate57 = localDate51.withFieldAdded(durationFieldType55, (int) (byte) 100);
        boolean boolean58 = periodType44.isSupported(durationFieldType55);
        org.joda.time.Instant instant61 = new org.joda.time.Instant();
        org.joda.time.Instant instant63 = instant61.withMillis(0L);
        org.joda.time.Chronology chronology64 = instant63.getChronology();
        org.joda.time.DurationField durationField65 = chronology64.eras();
        java.util.Locale locale66 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket68 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology64, locale66, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate69 = new org.joda.time.LocalDate((long) 53, chronology64);
        org.joda.time.DateTimeField dateTimeField70 = chronology64.dayOfYear();
        org.joda.time.DateTimeField dateTimeField71 = chronology64.monthOfYear();
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((java.lang.Object) duration38, periodType44, chronology64);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant25", (dateTime1.compareTo(instant25) == 0) == dateTime1.equals(instant25));
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test091");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean18 = mutableDateTime1.isSupported(dateTimeFieldType17);
        boolean boolean19 = mutableDateTime1.isBeforeNow();
        int int20 = mutableDateTime1.getSecondOfDay();
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime21.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property24 = localDateTime21.hourOfDay();
        org.joda.time.DateTimeField dateTimeField25 = property24.getField();
        mutableDateTime1.setRounding(dateTimeField25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.DateTime dateTime28 = new org.joda.time.DateTime(chronology27);
        org.joda.time.DateTime dateTime30 = dateTime28.plusWeeks(40);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant31, readableInstant32, periodType33);
        org.joda.time.DateTimeZone dateTimeZone35 = null;
        org.joda.time.LocalTime localTime36 = new org.joda.time.LocalTime(dateTimeZone35);
        org.joda.time.LocalTime localTime38 = localTime36.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime40 = localTime38.plusMillis((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType41 = org.joda.time.DurationFieldType.eras();
        boolean boolean42 = localTime38.isSupported(durationFieldType41);
        boolean boolean43 = mutablePeriod34.isSupported(durationFieldType41);
        org.joda.time.Period period44 = mutablePeriod34.toPeriod();
        org.joda.time.DateTime dateTime45 = dateTime28.minus((org.joda.time.ReadablePeriod) mutablePeriod34);
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableInstant) mutableDateTime1, (org.joda.time.ReadableInstant) dateTime45);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime45", (instant11.compareTo(dateTime45) == 0) == instant11.equals(dateTime45));
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test092");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology5);
        org.joda.time.DurationField durationField8 = chronology5.eras();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime(chronology11);
        int int13 = dateTime12.getSecondOfMinute();
        boolean boolean14 = dateTime12.isEqualNow();
        int int15 = dateTime12.getDayOfYear();
        org.joda.time.Chronology chronology16 = dateTime12.getChronology();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology16);
        org.joda.time.DateTimeField dateTimeField18 = chronology16.year();
        org.joda.time.DateTimeField dateTimeField19 = chronology16.dayOfMonth();
        org.joda.time.DurationField durationField20 = chronology16.halfdays();
        long long23 = durationField20.getMillis(0L, (long) 6);
        int int24 = durationField8.compareTo(durationField20);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime12", (instant2.compareTo(dateTime12) == 0) == instant2.equals(dateTime12));
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test093");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str9 = mutablePeriod8.toString();
        org.joda.time.DateTime dateTime10 = dateTime1.plus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.MutableDateTime mutableDateTime12 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        mutableDateTime12.add((org.joda.time.ReadableDuration) duration25, 39);
        org.joda.time.MutableDateTime.Property property28 = mutableDateTime12.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime12.setZone(dateTimeZone29);
        int int31 = mutableDateTime12.getYearOfEra();
        int int32 = mutableDateTime12.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property33 = mutableDateTime12.year();
        org.joda.time.LocalDate localDate34 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate36 = localDate34.minusMonths((int) ' ');
        org.joda.time.Chronology chronology37 = localDate34.getChronology();
        mutableDateTime12.setChronology(chronology37);
        boolean boolean39 = dateTime1.isBefore((org.joda.time.ReadableInstant) mutableDateTime12);
        mutableDateTime12.addMinutes(0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant22", (dateTime1.compareTo(instant22) == 0) == dateTime1.equals(instant22));
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test094");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration9, (int) (short) 100);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getYearOfCentury();
        org.joda.time.Interval interval15 = duration9.toIntervalTo((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Duration duration16 = duration5.minus((org.joda.time.ReadableDuration) duration9);
        org.joda.time.MutableDateTime mutableDateTime18 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((long) 100, 1L, periodType21);
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) 100, 1L, periodType25);
        org.joda.time.Period period27 = period22.plus((org.joda.time.ReadablePeriod) period26);
        org.joda.time.Instant instant28 = new org.joda.time.Instant();
        org.joda.time.Instant instant30 = instant28.withMillis(0L);
        org.joda.time.Duration duration31 = period26.toDurationTo((org.joda.time.ReadableInstant) instant30);
        mutableDateTime18.add((org.joda.time.ReadableDuration) duration31, 39);
        java.lang.String str34 = mutableDateTime18.toString();
        mutableDateTime18.setSecondOfDay((int) (byte) 10);
        org.joda.time.Interval interval37 = duration5.toIntervalFrom((org.joda.time.ReadableInstant) mutableDateTime18);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and instant28", (dateTime13.compareTo(instant28) == 0) == dateTime13.equals(instant28));
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test095");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.MutableDateTime.Property property18 = mutableDateTime1.minuteOfHour();
        org.joda.time.MutableDateTime mutableDateTime19 = property18.roundHalfCeiling();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime19 and instant13", (mutableDateTime19.compareTo(instant13) == 0) == mutableDateTime19.equals(instant13));
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test096");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.LocalDateTime localDateTime2 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime4 = localDateTime2.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime6 = localDateTime4.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField8 = localDateTime6.getField((int) (byte) 0);
        long long10 = dateTimeField8.roundHalfEven((long) 1);
        int int11 = dateTime1.get(dateTimeField8);
        boolean boolean12 = dateTime1.isBeforeNow();
        org.joda.time.DateTime.Property property13 = dateTime1.weekOfWeekyear();
        org.joda.time.DateTime dateTime14 = dateTime1.toDateTime();
        org.joda.time.LocalDateTime localDateTime15 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime15.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime19 = localDateTime17.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField21 = localDateTime19.getField((int) (byte) 0);
        long long23 = dateTimeField21.roundHalfEven((long) 1);
        int int24 = dateTime1.get(dateTimeField21);
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime25.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime29 = localDateTime27.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime31 = localDateTime29.withCenturyOfEra((int) 'a');
        org.joda.time.LocalDateTime.Property property32 = localDateTime29.secondOfMinute();
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 100, 1L, periodType36);
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((long) 100, 1L, periodType40);
        org.joda.time.Period period42 = period37.plus((org.joda.time.ReadablePeriod) period41);
        org.joda.time.Instant instant43 = new org.joda.time.Instant();
        org.joda.time.Instant instant45 = instant43.withMillis(0L);
        org.joda.time.Duration duration46 = period41.toDurationTo((org.joda.time.ReadableInstant) instant45);
        org.joda.time.Instant instant48 = instant45.plus((long) (byte) -1);
        org.joda.time.Instant instant51 = instant48.withDurationAdded(1L, (int) (short) -1);
        org.joda.time.Chronology chronology52 = instant48.getChronology();
        org.joda.time.Chronology chronology54 = null;
        java.util.Locale locale55 = java.util.Locale.GERMAN;
        java.util.Locale locale56 = locale55.stripExtensions();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket59 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology54, locale55, (java.lang.Integer) 45, (int) '4');
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket61 = new org.joda.time.format.DateTimeParserBucket(0L, chronology52, locale55, (java.lang.Integer) 1970);
        java.lang.String str62 = dateTimeField21.getAsShortText((org.joda.time.ReadablePartial) localDateTime29, locale55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant43", (dateTime1.compareTo(instant43) == 0) == dateTime1.equals(instant43));
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test097");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.DateTime dateTime3 = instant0.toDateTimeISO();
        org.joda.time.DateTime dateTime5 = dateTime3.minusMinutes(1969);
        org.joda.time.DateMidnight dateMidnight6 = dateTime5.toDateMidnight();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant0 and dateTime3", (instant0.compareTo(dateTime3) == 0) == instant0.equals(dateTime3));
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test098");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusDays(22);
        int int23 = dateTime1.getSecondOfMinute();
        org.joda.time.DateMidnight dateMidnight24 = dateTime1.toDateMidnight();
        org.joda.time.Instant instant25 = dateMidnight24.toInstant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test099");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime2 = localDateTime0.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property3 = localDateTime0.hourOfDay();
        org.joda.time.LocalDateTime localDateTime5 = localDateTime0.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str7 = dateTimeFieldType6.getName();
        int int8 = localDateTime0.indexOf(dateTimeFieldType6);
        org.joda.time.LocalDateTime localDateTime10 = localDateTime0.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime0.minusSeconds((int) '#');
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str14 = dateTimeFieldType13.getName();
        org.joda.time.LocalDateTime.Property property15 = localDateTime12.property(dateTimeFieldType13);
        int int16 = localDateTime12.getMinuteOfHour();
        org.joda.time.LocalDateTime localDateTime18 = localDateTime12.withMillisOfDay(1);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter19 = null;
        java.lang.String str20 = localDateTime18.toString(dateTimeFormatter19);
        org.joda.time.LocalDateTime localDateTime22 = localDateTime18.plusMonths(53600069);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period25 = duration24.toPeriod();
        org.joda.time.Duration duration28 = duration24.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, readableInstant29);
        mutablePeriod30.setYears(10);
        mutablePeriod30.setPeriod((int) (short) 1, 14, (int) (byte) 0, 1, (int) (short) 1, 53, 1969, 86396191);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period44 = duration43.toPeriod();
        org.joda.time.Duration duration47 = duration43.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period50 = duration49.toPeriod();
        org.joda.time.Duration duration51 = duration43.plus((org.joda.time.ReadableDuration) duration49);
        mutablePeriod30.add((org.joda.time.ReadableDuration) duration51);
        org.joda.time.PeriodType periodType55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((long) 100, 1L, periodType55);
        org.joda.time.PeriodType periodType59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((long) 100, 1L, periodType59);
        org.joda.time.Period period61 = period56.plus((org.joda.time.ReadablePeriod) period60);
        org.joda.time.Instant instant62 = new org.joda.time.Instant();
        org.joda.time.Instant instant64 = instant62.withMillis(0L);
        org.joda.time.Duration duration65 = period60.toDurationTo((org.joda.time.ReadableInstant) instant64);
        org.joda.time.Instant instant67 = instant64.plus((long) (byte) -1);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.DateTime dateTime69 = new org.joda.time.DateTime(chronology68);
        int int70 = dateTime69.getSecondOfMinute();
        int int71 = dateTime69.getYearOfEra();
        boolean boolean72 = instant67.isEqual((org.joda.time.ReadableInstant) dateTime69);
        org.joda.time.Period period73 = duration51.toPeriodTo((org.joda.time.ReadableInstant) dateTime69);
        org.joda.time.LocalDateTime localDateTime74 = localDateTime18.plus((org.joda.time.ReadableDuration) duration51);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant62 and dateTime69", (instant62.compareTo(dateTime69) == 0) == instant62.equals(dateTime69));
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test100");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        boolean boolean3 = dateTime1.isBefore((long) (short) 100);
        org.joda.time.Instant instant4 = new org.joda.time.Instant();
        org.joda.time.Instant instant6 = instant4.withMillis(0L);
        org.joda.time.Chronology chronology7 = instant6.getChronology();
        org.joda.time.DateTime dateTime8 = dateTime1.toDateTime(chronology7);
        org.joda.time.LocalTime localTime9 = new org.joda.time.LocalTime(chronology7);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant4", (dateTime1.compareTo(instant4) == 0) == dateTime1.equals(instant4));
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test101");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology5);
        org.joda.time.DurationField durationField8 = chronology5.hours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField8, and durationField6", !(durationField6.compareTo(durationField8) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField8.compareTo(durationField6))));
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test102");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.MutableDateTime.Property property18 = mutableDateTime1.hourOfDay();
        boolean boolean19 = mutableDateTime1.isBeforeNow();
        mutableDateTime1.addWeeks((int) 'x');
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime(chronology22);
        int int24 = dateTime23.getSecondOfMinute();
        boolean boolean25 = dateTime23.isEqualNow();
        int int26 = dateTime23.getDayOfYear();
        org.joda.time.Chronology chronology27 = dateTime23.getChronology();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.DateTime dateTime30 = dateTime23.plus((org.joda.time.ReadableDuration) duration29);
        org.joda.time.MutableDateTime mutableDateTime32 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime32.add((org.joda.time.ReadableDuration) duration34, (int) (short) 100);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.DateTime dateTime38 = new org.joda.time.DateTime(chronology37);
        int int39 = dateTime38.getYearOfCentury();
        org.joda.time.Interval interval40 = duration34.toIntervalTo((org.joda.time.ReadableInstant) dateTime38);
        int int41 = duration29.compareTo((org.joda.time.ReadableDuration) duration34);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration29);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime23", (instant11.compareTo(dateTime23) == 0) == instant11.equals(dateTime23));
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test103");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        mutablePeriod7.setYears(10);
        mutablePeriod7.setPeriod((int) (short) 1, 14, (int) (byte) 0, 1, (int) (short) 1, 53, 1969, 86396191);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration24 = duration20.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period27 = duration26.toPeriod();
        org.joda.time.Duration duration28 = duration20.plus((org.joda.time.ReadableDuration) duration26);
        mutablePeriod7.add((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 100, 1L, periodType36);
        org.joda.time.Period period38 = period33.plus((org.joda.time.ReadablePeriod) period37);
        org.joda.time.Instant instant39 = new org.joda.time.Instant();
        org.joda.time.Instant instant41 = instant39.withMillis(0L);
        org.joda.time.Duration duration42 = period37.toDurationTo((org.joda.time.ReadableInstant) instant41);
        org.joda.time.Instant instant44 = instant41.plus((long) (byte) -1);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.DateTime dateTime46 = new org.joda.time.DateTime(chronology45);
        int int47 = dateTime46.getSecondOfMinute();
        int int48 = dateTime46.getYearOfEra();
        boolean boolean49 = instant44.isEqual((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Period period50 = duration28.toPeriodTo((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.format.PeriodFormatter periodFormatter51 = null;
        java.lang.String str52 = period50.toString(periodFormatter51);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant39 and dateTime46", (instant39.compareTo(dateTime46) == 0) == instant39.equals(dateTime46));
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test104");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period8 = duration7.toPeriod();
        org.joda.time.Duration duration9 = duration1.plus((org.joda.time.ReadableDuration) duration7);
        java.lang.Object obj10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(obj10);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime14 = localDateTime12.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property15 = localDateTime12.hourOfDay();
        org.joda.time.DateTimeField dateTimeField16 = property15.getField();
        boolean boolean18 = property15.equals((java.lang.Object) '#');
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology19);
        int int21 = dateTime20.getSecondOfMinute();
        int int22 = dateTime20.getYearOfEra();
        int int23 = property15.getDifference((org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime11, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Period period25 = duration9.toPeriodFrom((org.joda.time.ReadableInstant) dateTime11);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.DateTime dateTime31 = new org.joda.time.DateTime((long) (short) 1, chronology30);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableInstant) instant32, periodType33);
        org.joda.time.LocalDate localDate35 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate37 = localDate35.minusMonths((int) ' ');
        org.joda.time.Chronology chronology38 = localDate35.getChronology();
        org.joda.time.Period period39 = new org.joda.time.Period((long) (byte) 1, periodType33, chronology38);
        org.joda.time.LocalDate localDate40 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate42 = localDate40.minusMonths((int) ' ');
        org.joda.time.Chronology chronology43 = localDate40.getChronology();
        org.joda.time.DurationFieldType durationFieldType44 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate46 = localDate40.withFieldAdded(durationFieldType44, (int) (byte) 100);
        boolean boolean47 = periodType33.isSupported(durationFieldType44);
        org.joda.time.Period period48 = new org.joda.time.Period(3155760000035L, (long) 457070, periodType33);
        org.joda.time.Period period49 = duration9.toPeriod(periodType33);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime11 and instant32", (dateTime11.compareTo(instant32) == 0) == dateTime11.equals(instant32));
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test105");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType17 = dateTimeFieldType16.getRangeDurationType();
        org.joda.time.DateTime.Property property18 = dateTime15.property(dateTimeFieldType16);
        boolean boolean20 = dateTime15.isEqual((long) 53);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period23 = duration22.toPeriod();
        org.joda.time.DateTime dateTime25 = dateTime15.withDurationAdded((org.joda.time.ReadableDuration) duration22, (-292275054));
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime28 = new org.joda.time.MutableDateTime(0L, dateTimeZone27);
        mutableDateTime28.addMillis(50);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime15, (org.joda.time.ReadableInstant) mutableDateTime28);
        mutablePeriod31.setYears(28);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime15", (instant11.compareTo(dateTime15) == 0) == instant11.equals(dateTime15));
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test106");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime dateTime3 = dateTime1.plusWeeks(40);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5, periodType6);
        org.joda.time.DateTimeZone dateTimeZone8 = null;
        org.joda.time.LocalTime localTime9 = new org.joda.time.LocalTime(dateTimeZone8);
        org.joda.time.LocalTime localTime11 = localTime9.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime13 = localTime11.plusMillis((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType14 = org.joda.time.DurationFieldType.eras();
        boolean boolean15 = localTime11.isSupported(durationFieldType14);
        boolean boolean16 = mutablePeriod7.isSupported(durationFieldType14);
        org.joda.time.Period period17 = mutablePeriod7.toPeriod();
        org.joda.time.DateTime dateTime18 = dateTime1.minus((org.joda.time.ReadablePeriod) mutablePeriod7);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology19);
        int int21 = dateTime20.getSecondOfMinute();
        int int22 = dateTime20.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str28 = mutablePeriod27.toString();
        org.joda.time.DateTime dateTime29 = dateTime20.plus((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.MutableDateTime mutableDateTime31 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((long) 100, 1L, periodType34);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((long) 100, 1L, periodType38);
        org.joda.time.Period period40 = period35.plus((org.joda.time.ReadablePeriod) period39);
        org.joda.time.Instant instant41 = new org.joda.time.Instant();
        org.joda.time.Instant instant43 = instant41.withMillis(0L);
        org.joda.time.Duration duration44 = period39.toDurationTo((org.joda.time.ReadableInstant) instant43);
        mutableDateTime31.add((org.joda.time.ReadableDuration) duration44, 39);
        org.joda.time.MutableDateTime.Property property47 = mutableDateTime31.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone48 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime31.setZone(dateTimeZone48);
        int int50 = mutableDateTime31.getYearOfEra();
        int int51 = mutableDateTime31.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property52 = mutableDateTime31.year();
        org.joda.time.LocalDate localDate53 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate55 = localDate53.minusMonths((int) ' ');
        org.joda.time.Chronology chronology56 = localDate53.getChronology();
        mutableDateTime31.setChronology(chronology56);
        boolean boolean58 = dateTime20.isBefore((org.joda.time.ReadableInstant) mutableDateTime31);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.DateTime dateTime61 = new org.joda.time.DateTime((long) (short) 1, chronology60);
        org.joda.time.Instant instant62 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime61, (org.joda.time.ReadableInstant) instant62, periodType63);
        org.joda.time.DateTimeFieldType dateTimeFieldType65 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int66 = instant62.get(dateTimeFieldType65);
        java.lang.String str67 = dateTimeFieldType65.getName();
        java.lang.String str68 = dateTimeFieldType65.toString();
        boolean boolean69 = dateTime20.isSupported(dateTimeFieldType65);
        org.joda.time.DateTime dateTime71 = dateTime18.withField(dateTimeFieldType65, 56);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime18 and instant41", (dateTime18.compareTo(instant41) == 0) == dateTime18.equals(instant41));
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test107");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        boolean boolean3 = dateTime1.isEqualNow();
        int int4 = dateTime1.getDayOfYear();
        org.joda.time.Chronology chronology5 = dateTime1.getChronology();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.DateTime dateTime8 = dateTime1.plus((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(chronology9);
        int int11 = dateTime10.getSecondOfMinute();
        int int12 = dateTime10.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str18 = mutablePeriod17.toString();
        org.joda.time.DateTime dateTime19 = dateTime10.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.DateTime.Property property20 = dateTime10.weekyear();
        org.joda.time.MutableDateTime mutableDateTime21 = dateTime10.toMutableDateTimeISO();
        int int22 = dateTime10.getMinuteOfDay();
        org.joda.time.MutableDateTime mutableDateTime24 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((long) 100, 1L, periodType27);
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((long) 100, 1L, periodType31);
        org.joda.time.Period period33 = period28.plus((org.joda.time.ReadablePeriod) period32);
        org.joda.time.Instant instant34 = new org.joda.time.Instant();
        org.joda.time.Instant instant36 = instant34.withMillis(0L);
        org.joda.time.Duration duration37 = period32.toDurationTo((org.joda.time.ReadableInstant) instant36);
        mutableDateTime24.add((org.joda.time.ReadableDuration) duration37, 39);
        org.joda.time.MutableDateTime.Property property40 = mutableDateTime24.yearOfEra();
        mutableDateTime24.setDayOfYear((int) ' ');
        mutableDateTime24.add((long) 39221019);
        mutableDateTime24.setMinuteOfDay(21);
        org.joda.time.Duration duration47 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) mutableDateTime24);
        boolean boolean48 = dateTime1.equals((java.lang.Object) mutableDateTime24);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime10 and instant34", (dateTime10.compareTo(instant34) == 0) == dateTime10.equals(instant34));
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test108");
        java.lang.Object obj1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime(obj1);
        boolean boolean4 = dateTime2.isBefore((long) (short) 100);
        org.joda.time.Instant instant5 = new org.joda.time.Instant();
        org.joda.time.Instant instant7 = instant5.withMillis(0L);
        org.joda.time.Chronology chronology8 = instant7.getChronology();
        org.joda.time.DateTime dateTime9 = dateTime2.toDateTime(chronology8);
        org.joda.time.Instant instant12 = new org.joda.time.Instant();
        org.joda.time.Instant instant14 = instant12.withMillis(0L);
        org.joda.time.Chronology chronology15 = instant14.getChronology();
        org.joda.time.DurationField durationField16 = chronology15.eras();
        java.util.Locale locale17 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket19 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology15, locale17, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime20.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property23 = localDateTime20.hourOfDay();
        org.joda.time.DateTimeField dateTimeField24 = property23.getField();
        int int25 = property23.get();
        org.joda.time.LocalDateTime localDateTime26 = property23.roundHalfFloorCopy();
        long long28 = chronology15.set((org.joda.time.ReadablePartial) localDateTime26, (long) 2022);
        org.joda.time.LocalDateTime localDateTime29 = org.joda.time.LocalDateTime.now(chronology15);
        org.joda.time.DateTime dateTime30 = new org.joda.time.DateTime(chronology15);
        org.joda.time.DurationField durationField31 = chronology15.eras();
        java.util.Locale locale35 = new java.util.Locale("hi!", "clockhourOfDay", "java.io.IOException");
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket36 = new org.joda.time.format.DateTimeParserBucket((long) 42, chronology15, locale35);
        org.joda.time.DateTimeZone dateTimeZone37 = dateTimeParserBucket36.getZone();
        java.util.Locale locale38 = dateTimeParserBucket36.getLocale();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket39 = new org.joda.time.format.DateTimeParserBucket(0L, chronology8, locale38);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime2 and instant5", (dateTime2.compareTo(instant5) == 0) == dateTime2.equals(instant5));
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test109");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration9, (int) (short) 100);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getYearOfCentury();
        org.joda.time.Interval interval15 = duration9.toIntervalTo((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Duration duration16 = duration5.minus((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration17 = duration16.toDuration();
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period37 = duration36.toPeriod();
        org.joda.time.DurationFieldType durationFieldType38 = org.joda.time.DurationFieldType.centuries();
        int int39 = period37.get(durationFieldType38);
        mutableDateTime19.add((org.joda.time.ReadablePeriod) period37, 54);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType43 = periodType42.withDaysRemoved();
        org.joda.time.PeriodType periodType44 = periodType42.withDaysRemoved();
        org.joda.time.Period period45 = duration16.toPeriodTo((org.joda.time.ReadableInstant) mutableDateTime19, periodType44);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and instant29", (dateTime13.compareTo(instant29) == 0) == dateTime13.equals(instant29));
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test110");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime19 = mutableDateTime1.toMutableDateTime(dateTimeZone18);
        org.joda.time.MutableDateTime.Property property20 = mutableDateTime19.secondOfDay();
        org.joda.time.Period period22 = org.joda.time.Period.millis(100);
        org.joda.time.Period period23 = period22.negated();
        mutableDateTime19.add((org.joda.time.ReadablePeriod) period22, 0);
        org.joda.time.Seconds seconds26 = period22.toStandardSeconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime1 and mutableDateTime19", (mutableDateTime1.compareTo(mutableDateTime19) == 0) == mutableDateTime1.equals(mutableDateTime19));
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test111");
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate11 = new org.joda.time.LocalDate((long) 53, chronology6);
        org.joda.time.DateTimeField dateTimeField12 = chronology6.clockhourOfHalfday();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.DateTime dateTime15 = new org.joda.time.DateTime(chronology14);
        int int16 = dateTime15.getSecondOfMinute();
        boolean boolean17 = dateTime15.isEqualNow();
        int int18 = dateTime15.getDayOfYear();
        org.joda.time.Chronology chronology19 = dateTime15.getChronology();
        java.util.Locale locale20 = java.util.Locale.SIMPLIFIED_CHINESE;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket21 = new org.joda.time.format.DateTimeParserBucket(315532800097L, chronology19, locale20);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket24 = new org.joda.time.format.DateTimeParserBucket((long) 39, chronology6, locale20, (java.lang.Integer) 365, (int) (short) 10);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and dateTime15", (instant3.compareTo(dateTime15) == 0) == instant3.equals(dateTime15));
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test112");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime1.setZone(dateTimeZone18);
        int int20 = mutableDateTime1.getYearOfEra();
        int int21 = mutableDateTime1.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property22 = mutableDateTime1.year();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.DateTime dateTime24 = new org.joda.time.DateTime(chronology23);
        int int25 = dateTime24.getSecondOfMinute();
        boolean boolean26 = dateTime24.isEqualNow();
        int int27 = dateTime24.getDayOfYear();
        org.joda.time.Chronology chronology28 = dateTime24.getChronology();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.DateTime dateTime31 = dateTime24.plus((org.joda.time.ReadableDuration) duration30);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration30, (int) 'x');
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime24", (instant11.compareTo(dateTime24) == 0) == instant11.equals(dateTime24));
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test113");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        mutableDateTime1.setDayOfYear((int) ' ');
        mutableDateTime1.addDays(97);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.DateTime dateTime24 = new org.joda.time.DateTime((long) (short) 1, chronology23);
        org.joda.time.DateTime dateTime25 = dateTime24.toDateTime();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.DateTime dateTime28 = new org.joda.time.DateTime((long) (short) 1, chronology27);
        org.joda.time.DateTime dateTime29 = dateTime28.toDateTime();
        int int30 = dateTime25.compareTo((org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime28, (org.joda.time.ReadableDuration) duration32);
        org.joda.time.DateMidnight dateMidnight34 = dateTime28.toDateMidnight();
        org.joda.time.Period period36 = org.joda.time.Period.seconds(5);
        org.joda.time.DateTime dateTime37 = dateTime28.minus((org.joda.time.ReadablePeriod) period36);
        mutableDateTime1.add((org.joda.time.ReadablePeriod) period36, (int) 'u');
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant13 and dateMidnight34", (instant13.compareTo(dateMidnight34) == 0) == instant13.equals(dateMidnight34));
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test114");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType17 = dateTimeFieldType16.getRangeDurationType();
        org.joda.time.DateTime.Property property18 = dateTime15.property(dateTimeFieldType16);
        boolean boolean20 = dateTime15.isEqual((long) 53);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period23 = duration22.toPeriod();
        org.joda.time.DateTime dateTime25 = dateTime15.withDurationAdded((org.joda.time.ReadableDuration) duration22, (-292275054));
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime28 = new org.joda.time.MutableDateTime(0L, dateTimeZone27);
        mutableDateTime28.addMillis(50);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime15, (org.joda.time.ReadableInstant) mutableDateTime28);
        mutablePeriod31.addYears(36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime15", (instant11.compareTo(dateTime15) == 0) == instant11.equals(dateTime15));
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test115");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        boolean boolean3 = dateTime1.isBefore((long) (short) 100);
        org.joda.time.Instant instant4 = new org.joda.time.Instant();
        org.joda.time.Instant instant6 = instant4.withMillis(0L);
        org.joda.time.Chronology chronology7 = instant6.getChronology();
        org.joda.time.DateTime dateTime8 = dateTime1.toDateTime(chronology7);
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.Period period19 = period14.plus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Instant instant20 = new org.joda.time.Instant();
        org.joda.time.Instant instant22 = instant20.withMillis(0L);
        org.joda.time.Duration duration23 = period18.toDurationTo((org.joda.time.ReadableInstant) instant22);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration23, 39);
        org.joda.time.MutableDateTime.Property property26 = mutableDateTime10.yearOfEra();
        mutableDateTime10.setDayOfYear((int) ' ');
        org.joda.time.Duration duration29 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableInstant) mutableDateTime10);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant4", (dateTime1.compareTo(instant4) == 0) == dateTime1.equals(instant4));
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test116");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period19 = duration18.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.centuries();
        int int21 = period19.get(durationFieldType20);
        mutableDateTime1.add((org.joda.time.ReadablePeriod) period19, 54);
        mutableDateTime1.setMillisOfDay(0);
        org.joda.time.MutableDateTime.Property property26 = mutableDateTime1.centuryOfEra();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.DateTime dateTime30 = new org.joda.time.DateTime(chronology29);
        int int31 = dateTime30.getSecondOfMinute();
        boolean boolean32 = dateTime30.isEqualNow();
        int int33 = dateTime30.getDayOfYear();
        org.joda.time.Chronology chronology34 = dateTime30.getChronology();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology34);
        org.joda.time.DateTimeField dateTimeField36 = chronology34.year();
        org.joda.time.DateTime dateTime37 = org.joda.time.DateTime.now(chronology34);
        org.joda.time.Period period39 = org.joda.time.Period.millis(100);
        org.joda.time.Period period40 = period39.negated();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(readableInstant41, readableInstant42, periodType43);
        mutablePeriod44.setYears((int) '#');
        org.joda.time.Chronology chronology48 = null;
        mutablePeriod44.add((long) 1, chronology48);
        org.joda.time.ReadableInterval readableInterval50 = null;
        mutablePeriod44.setPeriod(readableInterval50);
        mutablePeriod44.setMillis((int) '4');
        org.joda.time.Period period54 = period40.minus((org.joda.time.ReadablePeriod) mutablePeriod44);
        org.joda.time.DateTime dateTime55 = dateTime37.plus((org.joda.time.ReadablePeriod) period54);
        int int56 = mutableDateTime1.compareTo((org.joda.time.ReadableInstant) dateTime37);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime30", (instant11.compareTo(dateTime30) == 0) == instant11.equals(dateTime30));
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test117");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 100, 1L, periodType14);
        org.joda.time.Period period16 = period11.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Duration duration20 = period15.toDurationTo((org.joda.time.ReadableInstant) instant19);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration20, 39);
        org.joda.time.MutableDateTime.Property property23 = mutableDateTime7.secondOfMinute();
        mutableDateTime7.addYears(3);
        java.lang.Object obj26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime(obj26);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime28.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime32 = localDateTime30.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField34 = localDateTime32.getField((int) (byte) 0);
        long long36 = dateTimeField34.roundHalfEven((long) 1);
        int int37 = dateTime27.get(dateTimeField34);
        boolean boolean38 = dateTime27.isBeforeNow();
        org.joda.time.DateTime.Property property39 = dateTime27.weekOfWeekyear();
        mutableDateTime7.setTime((org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Period period41 = duration5.toPeriodTo((org.joda.time.ReadableInstant) dateTime27);
        java.util.Date date42 = dateTime27.toDate();
        org.joda.time.LocalTime localTime43 = org.joda.time.LocalTime.fromDateFields(date42);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime27", (instant17.compareTo(dateTime27) == 0) == instant17.equals(dateTime27));
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test118");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.DateTimeField dateTimeField18 = chronology4.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField19 = chronology4.minuteOfHour();
        org.joda.time.DurationField durationField20 = dateTimeField19.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField20, and durationField5", !(durationField5.compareTo(durationField20) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField20.compareTo(durationField5))));
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test119");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        mutablePeriod7.setYears(10);
        mutablePeriod7.setPeriod((int) (short) 1, 14, (int) (byte) 0, 1, (int) (short) 1, 53, 1969, 86396191);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration24 = duration20.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period27 = duration26.toPeriod();
        org.joda.time.Duration duration28 = duration20.plus((org.joda.time.ReadableDuration) duration26);
        mutablePeriod7.add((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 100, 1L, periodType36);
        org.joda.time.Period period38 = period33.plus((org.joda.time.ReadablePeriod) period37);
        org.joda.time.Instant instant39 = new org.joda.time.Instant();
        org.joda.time.Instant instant41 = instant39.withMillis(0L);
        org.joda.time.Duration duration42 = period37.toDurationTo((org.joda.time.ReadableInstant) instant41);
        org.joda.time.Instant instant44 = instant41.plus((long) (byte) -1);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.DateTime dateTime46 = new org.joda.time.DateTime(chronology45);
        int int47 = dateTime46.getSecondOfMinute();
        int int48 = dateTime46.getYearOfEra();
        boolean boolean49 = instant44.isEqual((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Period period50 = duration28.toPeriodTo((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.MutableDateTime mutableDateTime52 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((long) 100, 1L, periodType55);
        org.joda.time.PeriodType periodType59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((long) 100, 1L, periodType59);
        org.joda.time.Period period61 = period56.plus((org.joda.time.ReadablePeriod) period60);
        org.joda.time.Instant instant62 = new org.joda.time.Instant();
        org.joda.time.Instant instant64 = instant62.withMillis(0L);
        org.joda.time.Duration duration65 = period60.toDurationTo((org.joda.time.ReadableInstant) instant64);
        mutableDateTime52.add((org.joda.time.ReadableDuration) duration65, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType68 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean69 = mutableDateTime52.isSupported(dateTimeFieldType68);
        boolean boolean70 = mutableDateTime52.isBeforeNow();
        mutableDateTime52.add((long) 86396191);
        boolean boolean73 = dateTime46.isEqual((org.joda.time.ReadableInstant) mutableDateTime52);
        mutableDateTime52.setMillis((long) 39);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant39 and dateTime46", (instant39.compareTo(dateTime46) == 0) == instant39.equals(dateTime46));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test120");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean18 = mutableDateTime1.isSupported(dateTimeFieldType17);
        boolean boolean19 = mutableDateTime1.isBeforeNow();
        int int20 = mutableDateTime1.getSecondOfDay();
        org.joda.time.DateTime dateTime22 = new org.joda.time.DateTime((long) 100);
        org.joda.time.DateTime.Property property23 = dateTime22.monthOfYear();
        org.joda.time.DateTime dateTime24 = dateTime22.toDateTimeISO();
        mutableDateTime1.setMillis((org.joda.time.ReadableInstant) dateTime22);
        java.lang.Object obj26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime(obj26);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime28.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime32 = localDateTime30.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField34 = localDateTime32.getField((int) (byte) 0);
        long long36 = dateTimeField34.roundHalfEven((long) 1);
        int int37 = dateTime27.get(dateTimeField34);
        boolean boolean38 = dateTime27.isBeforeNow();
        org.joda.time.DateTime.Property property39 = dateTime27.weekOfWeekyear();
        org.joda.time.DateTime dateTime40 = dateTime27.toDateTime();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.DateTime dateTime45 = new org.joda.time.DateTime((long) (short) 1, chronology44);
        org.joda.time.DateTime dateTime46 = dateTime45.toDateTime();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.DateTime dateTime49 = new org.joda.time.DateTime((long) (short) 1, chronology48);
        org.joda.time.DateTime dateTime50 = dateTime49.toDateTime();
        int int51 = dateTime46.compareTo((org.joda.time.ReadableInstant) dateTime49);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime49, (org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration56 = duration42.withDurationAdded((org.joda.time.ReadableDuration) duration53, 10);
        long long57 = duration56.getMillis();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period60 = duration59.toPeriod();
        org.joda.time.Duration duration63 = duration59.withDurationAdded((long) 38, (int) 'a');
        int int64 = duration56.compareTo((org.joda.time.ReadableDuration) duration63);
        org.joda.time.DateTime dateTime65 = dateTime40.minus((org.joda.time.ReadableDuration) duration56);
        boolean boolean66 = dateTime22.isAfter((org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.DateTime dateTime68 = dateTime22.minusMonths(958);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime27", (instant11.compareTo(dateTime27) == 0) == instant11.equals(dateTime27));
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test121");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str9 = mutablePeriod8.toString();
        org.joda.time.DateTime dateTime10 = dateTime1.plus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.DateTime.Property property11 = dateTime1.weekyear();
        org.joda.time.MutableDateTime mutableDateTime12 = dateTime1.toMutableDateTimeISO();
        int int13 = dateTime1.getMinuteOfDay();
        org.joda.time.MutableDateTime mutableDateTime15 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) 100, 1L, periodType18);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.Period period24 = period19.plus((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.Instant instant27 = instant25.withMillis(0L);
        org.joda.time.Duration duration28 = period23.toDurationTo((org.joda.time.ReadableInstant) instant27);
        mutableDateTime15.add((org.joda.time.ReadableDuration) duration28, 39);
        org.joda.time.MutableDateTime.Property property31 = mutableDateTime15.yearOfEra();
        mutableDateTime15.setDayOfYear((int) ' ');
        mutableDateTime15.add((long) 39221019);
        mutableDateTime15.setMinuteOfDay(21);
        org.joda.time.Duration duration38 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime1, (org.joda.time.ReadableInstant) mutableDateTime15);
        org.joda.time.MutableDateTime.Property property39 = mutableDateTime15.weekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant25", (dateTime1.compareTo(instant25) == 0) == dateTime1.equals(instant25));
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test122");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 100, 1L, periodType14);
        org.joda.time.Period period16 = period11.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Duration duration20 = period15.toDurationTo((org.joda.time.ReadableInstant) instant19);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration20, 39);
        org.joda.time.MutableDateTime.Property property23 = mutableDateTime7.yearOfEra();
        mutableDateTime7.setDayOfYear((int) ' ');
        mutableDateTime7.addHours(11);
        java.lang.String str28 = mutableDateTime7.toString();
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Period period30 = duration1.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime7, periodType29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration36 = duration32.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime38 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime38.add((org.joda.time.ReadableDuration) duration40, (int) (short) 100);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime(chronology43);
        int int45 = dateTime44.getYearOfCentury();
        org.joda.time.Interval interval46 = duration40.toIntervalTo((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Duration duration47 = duration36.minus((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Period period48 = duration47.toPeriod();
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime44", (instant17.compareTo(dateTime44) == 0) == instant17.equals(dateTime44));
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test123");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str9 = mutablePeriod8.toString();
        org.joda.time.DateTime dateTime10 = dateTime1.plus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime(chronology11);
        org.joda.time.Instant instant14 = new org.joda.time.Instant();
        org.joda.time.Instant instant16 = instant14.withMillis(0L);
        org.joda.time.Chronology chronology17 = instant16.getChronology();
        org.joda.time.DurationField durationField18 = chronology17.eras();
        java.util.Locale locale19 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket21 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology17, locale19, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property25 = localDateTime22.hourOfDay();
        org.joda.time.DateTimeField dateTimeField26 = property25.getField();
        int int27 = property25.get();
        org.joda.time.LocalDateTime localDateTime28 = property25.roundHalfFloorCopy();
        long long30 = chronology17.set((org.joda.time.ReadablePartial) localDateTime28, (long) 2022);
        org.joda.time.DateTime dateTime31 = dateTime12.toDateTime(chronology17);
        org.joda.time.DateTime dateTime33 = dateTime12.plusHours(4);
        org.joda.time.DateTime.Property property34 = dateTime12.millisOfSecond();
        boolean boolean35 = dateTime10.equals((java.lang.Object) property34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant14", (dateTime1.compareTo(instant14) == 0) == dateTime1.equals(instant14));
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test124");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration3, (int) (short) 100);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DateTime dateTime7 = new org.joda.time.DateTime(chronology6);
        int int8 = dateTime7.getYearOfCentury();
        org.joda.time.Interval interval9 = duration3.toIntervalTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.MutableDateTime mutableDateTime11 = new org.joda.time.MutableDateTime((long) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime7, (org.joda.time.ReadableInstant) mutableDateTime11);
        int int13 = mutableDateTime11.getDayOfYear();
        org.joda.time.MutableDateTime mutableDateTime15 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) 100, 1L, periodType18);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.Period period24 = period19.plus((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.Instant instant27 = instant25.withMillis(0L);
        org.joda.time.Duration duration28 = period23.toDurationTo((org.joda.time.ReadableInstant) instant27);
        mutableDateTime15.add((org.joda.time.ReadableDuration) duration28, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean32 = mutableDateTime15.isSupported(dateTimeFieldType31);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.DateTime dateTime37 = new org.joda.time.DateTime((long) (short) 1, chronology36);
        org.joda.time.DateTime dateTime38 = dateTime37.toDateTime();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.DateTime dateTime41 = new org.joda.time.DateTime((long) (short) 1, chronology40);
        org.joda.time.DateTime dateTime42 = dateTime41.toDateTime();
        int int43 = dateTime38.compareTo((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime41, (org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration34.withDurationAdded((org.joda.time.ReadableDuration) duration45, 10);
        org.joda.time.Duration duration49 = duration48.toDuration();
        mutableDateTime15.add((org.joda.time.ReadableDuration) duration48);
        mutableDateTime15.setDayOfYear(1);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.DateTime dateTime56 = new org.joda.time.DateTime((long) (short) 1, chronology55);
        org.joda.time.Instant instant57 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) instant57, periodType58);
        org.joda.time.LocalDate localDate60 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate62 = localDate60.minusMonths((int) ' ');
        org.joda.time.Chronology chronology63 = localDate60.getChronology();
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 1, periodType58, chronology63);
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableInstant) mutableDateTime11, (org.joda.time.ReadableInstant) mutableDateTime15, periodType58);
        mutableDateTime15.setSecondOfMinute(27);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant25", (dateTime7.compareTo(instant25) == 0) == dateTime7.equals(instant25));
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test125");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property1 = localDateTime0.monthOfYear();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime((long) (short) 1, chronology3);
        org.joda.time.Instant instant5 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime4, (org.joda.time.ReadableInstant) instant5, periodType6);
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int9 = instant5.get(dateTimeFieldType8);
        org.joda.time.LocalDateTime localDateTime11 = localDateTime0.withField(dateTimeFieldType8, 39);
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.minusSeconds(52);
        int int14 = localDateTime13.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime16 = localDateTime13.plusWeeks(22);
        org.joda.time.DateTime dateTime17 = localDateTime13.toDateTime();
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime19.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime19.setZone(dateTimeZone36);
        org.joda.time.DateTime dateTime38 = dateTime17.withZone(dateTimeZone36);
        org.joda.time.MutableDateTime mutableDateTime40 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((long) 100, 1L, periodType43);
        org.joda.time.PeriodType periodType47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((long) 100, 1L, periodType47);
        org.joda.time.Period period49 = period44.plus((org.joda.time.ReadablePeriod) period48);
        org.joda.time.Instant instant50 = new org.joda.time.Instant();
        org.joda.time.Instant instant52 = instant50.withMillis(0L);
        org.joda.time.Duration duration53 = period48.toDurationTo((org.joda.time.ReadableInstant) instant52);
        mutableDateTime40.add((org.joda.time.ReadableDuration) duration53, 39);
        java.lang.String str56 = mutableDateTime40.toString();
        boolean boolean57 = mutableDateTime40.isEqualNow();
        boolean boolean58 = dateTime17.isBefore((org.joda.time.ReadableInstant) mutableDateTime40);
        mutableDateTime40.setMillisOfDay(41);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime17 and dateTime38", (dateTime17.compareTo(dateTime38) == 0) == dateTime17.equals(dateTime38));
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test126");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusDays(22);
        java.lang.Object obj23 = null;
        org.joda.time.DateTime dateTime24 = new org.joda.time.DateTime(obj23);
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime25.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property28 = localDateTime25.hourOfDay();
        org.joda.time.DateTimeField dateTimeField29 = property28.getField();
        boolean boolean31 = property28.equals((java.lang.Object) '#');
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.DateTime dateTime33 = new org.joda.time.DateTime(chronology32);
        int int34 = dateTime33.getSecondOfMinute();
        int int35 = dateTime33.getYearOfEra();
        int int36 = property28.getDifference((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.DateTime dateTime40 = dateTime33.withDurationAdded((long) (byte) 0, 22);
        boolean boolean41 = dateTime1.isBefore((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period44 = duration43.toPeriod();
        org.joda.time.Duration duration47 = duration43.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration47, readableInstant48);
        mutablePeriod49.setYears(10);
        mutablePeriod49.setPeriod((int) (short) 1, 14, (int) (byte) 0, 1, (int) (short) 1, 53, 1969, 86396191);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period63 = duration62.toPeriod();
        org.joda.time.Duration duration66 = duration62.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period69 = duration68.toPeriod();
        org.joda.time.Duration duration70 = duration62.plus((org.joda.time.ReadableDuration) duration68);
        mutablePeriod49.add((org.joda.time.ReadableDuration) duration70);
        org.joda.time.PeriodType periodType74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((long) 100, 1L, periodType74);
        org.joda.time.PeriodType periodType78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((long) 100, 1L, periodType78);
        org.joda.time.Period period80 = period75.plus((org.joda.time.ReadablePeriod) period79);
        org.joda.time.Instant instant81 = new org.joda.time.Instant();
        org.joda.time.Instant instant83 = instant81.withMillis(0L);
        org.joda.time.Duration duration84 = period79.toDurationTo((org.joda.time.ReadableInstant) instant83);
        org.joda.time.Instant instant86 = instant83.plus((long) (byte) -1);
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.DateTime dateTime88 = new org.joda.time.DateTime(chronology87);
        int int89 = dateTime88.getSecondOfMinute();
        int int90 = dateTime88.getYearOfEra();
        boolean boolean91 = instant86.isEqual((org.joda.time.ReadableInstant) dateTime88);
        org.joda.time.Period period92 = duration70.toPeriodTo((org.joda.time.ReadableInstant) dateTime88);
        org.joda.time.DateTime dateTime94 = dateTime1.withPeriodAdded((org.joda.time.ReadablePeriod) period92, 34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and dateTime24", (instant3.compareTo(dateTime24) == 0) == instant3.equals(dateTime24));
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test127");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        long long13 = instant11.getMillis();
        org.joda.time.Instant instant15 = instant11.minus((long) (byte) 1);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardSeconds((long) 49);
        org.joda.time.Instant instant19 = instant15.withDurationAdded((org.joda.time.ReadableDuration) duration17, 16);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property21 = localDateTime20.monthOfYear();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime(chronology22);
        int int24 = dateTime23.getSecondOfMinute();
        boolean boolean25 = dateTime23.isEqualNow();
        int int26 = dateTime23.getDayOfYear();
        org.joda.time.Chronology chronology27 = dateTime23.getChronology();
        long long28 = property21.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.DateTime dateTime30 = dateTime23.minusYears(0);
        org.joda.time.DateTime dateTime32 = dateTime30.withDayOfMonth((int) (byte) 10);
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((long) 100, 1L, periodType35);
        org.joda.time.Period period38 = period36.minusSeconds((-1));
        java.lang.String str39 = period36.toString();
        org.joda.time.Period period40 = period36.negated();
        org.joda.time.DateTime dateTime42 = dateTime30.withPeriodAdded((org.joda.time.ReadablePeriod) period40, (int) (byte) 100);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.millis();
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((long) 46, periodType46);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(0L, 0L, periodType46, chronology48);
        org.joda.time.Period period50 = duration17.toPeriodTo((org.joda.time.ReadableInstant) dateTime42, periodType46);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime23", (instant9.compareTo(dateTime23) == 0) == instant9.equals(dateTime23));
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test128");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime((long) (short) 1, chronology3);
        org.joda.time.DateTime dateTime5 = dateTime4.toDateTime();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.DateTime dateTime8 = new org.joda.time.DateTime((long) (short) 1, chronology7);
        org.joda.time.DateTime dateTime9 = dateTime8.toDateTime();
        int int10 = dateTime5.compareTo((org.joda.time.ReadableInstant) dateTime8);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration15 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration12, 10);
        org.joda.time.Duration duration16 = duration15.toDuration();
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) 100, 1L, periodType23);
        org.joda.time.Period period25 = period20.plus((org.joda.time.ReadablePeriod) period24);
        org.joda.time.Instant instant26 = new org.joda.time.Instant();
        org.joda.time.Instant instant28 = instant26.withMillis(0L);
        org.joda.time.Duration duration29 = period24.toDurationTo((org.joda.time.ReadableInstant) instant28);
        org.joda.time.Instant instant31 = instant28.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime32 = instant28.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType34 = dateTimeFieldType33.getRangeDurationType();
        org.joda.time.DateTime.Property property35 = dateTime32.property(dateTimeFieldType33);
        boolean boolean37 = dateTime32.isEqual((long) 53);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period40 = duration39.toPeriod();
        org.joda.time.DateTime dateTime42 = dateTime32.withDurationAdded((org.joda.time.ReadableDuration) duration39, (-292275054));
        boolean boolean43 = duration16.isEqual((org.joda.time.ReadableDuration) duration39);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant28 and dateTime32", (instant28.compareTo(dateTime32) == 0) == instant28.equals(dateTime32));
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test129");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime1.setZone(dateTimeZone18);
        int int20 = mutableDateTime1.getYearOfEra();
        int int21 = mutableDateTime1.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property22 = mutableDateTime1.year();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period25 = duration24.toPeriod();
        org.joda.time.Duration duration28 = duration24.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime30 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime30.add((org.joda.time.ReadableDuration) duration32, (int) (short) 100);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(chronology35);
        int int37 = dateTime36.getYearOfCentury();
        org.joda.time.Interval interval38 = duration32.toIntervalTo((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Duration duration39 = duration28.minus((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.DateTime dateTime42 = new org.joda.time.DateTime((long) (short) 1, chronology41);
        org.joda.time.DateTime dateTime43 = dateTime42.toDateTime();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.DateTime dateTime46 = new org.joda.time.DateTime((long) (short) 1, chronology45);
        org.joda.time.DateTime dateTime47 = dateTime46.toDateTime();
        int int48 = dateTime43.compareTo((org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType50 = periodType49.withDaysRemoved();
        org.joda.time.Period period51 = duration32.toPeriodTo((org.joda.time.ReadableInstant) dateTime46, periodType49);
        org.joda.time.LocalDateTime localDateTime52 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime54 = localDateTime52.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property55 = localDateTime52.hourOfDay();
        org.joda.time.DateTimeField dateTimeField56 = property55.getField();
        boolean boolean57 = property55.isLeap();
        java.util.Locale locale58 = java.util.Locale.GERMAN;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.lang.String str60 = locale58.getDisplayVariant(locale59);
        java.lang.String str61 = locale59.getCountry();
        java.lang.String str62 = property55.getAsShortText(locale59);
        org.joda.time.LocalDateTime localDateTime64 = property55.addWrapFieldToCopy((int) (byte) 100);
        org.joda.time.DateTime dateTime65 = dateTime46.withFields((org.joda.time.ReadablePartial) localDateTime64);
        int int66 = property22.getDifference((org.joda.time.ReadableInstant) dateTime46);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime36", (instant11.compareTo(dateTime36) == 0) == instant11.equals(dateTime36));
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test130");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        mutablePeriod7.setYears(10);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(chronology10);
        int int12 = dateTime11.getSecondOfMinute();
        org.joda.time.DateTime dateTime15 = dateTime11.withDurationAdded((long) 6, 12);
        org.joda.time.DateTime dateTime17 = dateTime11.minusMillis(31);
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime19.yearOfEra();
        mutableDateTime19.addMillis(39221019);
        mutableDateTime19.setWeekyear(49);
        mutableDateTime19.addMinutes(39);
        mutablePeriod7.setPeriod((org.joda.time.ReadableInstant) dateTime11, (org.joda.time.ReadableInstant) mutableDateTime19);
        mutablePeriod7.setPeriod(55, 23, 654, 2022, 58, 43, 958, 53652105);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime11 and instant29", (dateTime11.compareTo(instant29) == 0) == dateTime11.equals(instant29));
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test131");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusDays(22);
        int int23 = dateTime1.getSecondOfMinute();
        org.joda.time.DateTime dateTime25 = dateTime1.plusYears(11);
        org.joda.time.DateTime dateTime27 = dateTime1.withYear(20);
        int int28 = dateTime27.getMillisOfSecond();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test132");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology7);
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.Period period19 = period14.plus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Instant instant20 = new org.joda.time.Instant();
        org.joda.time.Instant instant22 = instant20.withMillis(0L);
        org.joda.time.Duration duration23 = period18.toDurationTo((org.joda.time.ReadableInstant) instant22);
        org.joda.time.Instant instant25 = instant22.plus((long) (byte) -1);
        org.joda.time.Instant instant28 = instant25.withDurationAdded(1L, (int) (short) -1);
        org.joda.time.Chronology chronology29 = instant25.getChronology();
        org.joda.time.Chronology chronology31 = null;
        java.util.Locale locale32 = java.util.Locale.GERMAN;
        java.util.Locale locale33 = locale32.stripExtensions();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket36 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology31, locale32, (java.lang.Integer) 45, (int) '4');
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket38 = new org.joda.time.format.DateTimeParserBucket(0L, chronology29, locale32, (java.lang.Integer) 1970);
        mutablePeriod8.add((long) 11, chronology29);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and instant20", (dateTime3.compareTo(instant20) == 0) == dateTime3.equals(instant20));
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test133");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime10 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property13 = localDateTime10.hourOfDay();
        org.joda.time.DateTimeField dateTimeField14 = property13.getField();
        int int15 = property13.get();
        org.joda.time.LocalDateTime localDateTime16 = property13.roundHalfFloorCopy();
        long long18 = chronology5.set((org.joda.time.ReadablePartial) localDateTime16, (long) 2022);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(chronology5);
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology5);
        org.joda.time.DurationField durationField21 = chronology5.eras();
        java.util.Locale locale25 = new java.util.Locale("hi!", "clockhourOfDay", "java.io.IOException");
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket26 = new org.joda.time.format.DateTimeParserBucket((long) 42, chronology5, locale25);
        org.joda.time.DurationField durationField27 = chronology5.millis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField27, and durationField6", !(durationField6.compareTo(durationField27) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField27.compareTo(durationField6))));
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test134");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int7 = instant3.get(dateTimeFieldType6);
        java.lang.String str8 = dateTimeFieldType6.getName();
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Chronology chronology14 = instant13.getChronology();
        org.joda.time.DurationField durationField15 = chronology14.eras();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology14);
        org.joda.time.DateTimeField dateTimeField17 = dateTimeFieldType6.getField(chronology14);
        org.joda.time.DurationField durationField18 = chronology14.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField15, durationField18, and durationField15", !(durationField15.compareTo(durationField18) == 0) || (Math.signum(durationField15.compareTo(durationField15)) == Math.signum(durationField18.compareTo(durationField15))));
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test135");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusDays(22);
        int int23 = dateTime1.getSecondOfMinute();
        org.joda.time.DateTime dateTime25 = dateTime1.plusYears(11);
        org.joda.time.DateTime dateTime27 = dateTime25.minusDays(1969);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test136");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime1.setZone(dateTimeZone18);
        int int20 = mutableDateTime1.getYearOfEra();
        int int21 = mutableDateTime1.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property22 = mutableDateTime1.year();
        org.joda.time.MutableDateTime mutableDateTime23 = property22.roundHalfEven();
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.Instant instant27 = instant25.withMillis(0L);
        org.joda.time.Chronology chronology28 = instant27.getChronology();
        org.joda.time.DurationField durationField29 = chronology28.eras();
        java.util.Locale locale30 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket32 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology28, locale30, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology34 = null;
        java.util.Locale locale35 = java.util.Locale.GERMAN;
        java.util.Locale locale36 = java.util.Locale.CANADA;
        java.lang.String str37 = locale35.getDisplayVariant(locale36);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket38 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology34, locale36);
        org.joda.time.DateTimeZone dateTimeZone39 = dateTimeParserBucket38.getZone();
        org.joda.time.Chronology chronology40 = chronology28.withZone(dateTimeZone39);
        org.joda.time.LocalTime localTime41 = org.joda.time.LocalTime.now(chronology40);
        org.joda.time.MutableDateTime mutableDateTime42 = mutableDateTime23.toMutableDateTime(chronology40);
        mutableDateTime23.addWeekyears(53);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant13 and mutableDateTime42", (instant13.compareTo(mutableDateTime42) == 0) == instant13.equals(mutableDateTime42));
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test137");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property1 = localDateTime0.monthOfYear();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime((long) (short) 1, chronology3);
        org.joda.time.Instant instant5 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime4, (org.joda.time.ReadableInstant) instant5, periodType6);
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int9 = instant5.get(dateTimeFieldType8);
        org.joda.time.LocalDateTime localDateTime11 = localDateTime0.withField(dateTimeFieldType8, 39);
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.minusSeconds(52);
        int int14 = localDateTime13.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime16 = localDateTime13.plusWeeks(22);
        org.joda.time.DateTime dateTime17 = localDateTime13.toDateTime();
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime19.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime19.setZone(dateTimeZone36);
        org.joda.time.DateTime dateTime38 = dateTime17.withZone(dateTimeZone36);
        org.joda.time.DateTime dateTime39 = org.joda.time.DateTime.now(dateTimeZone36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime17 and dateTime38", (dateTime17.compareTo(dateTime38) == 0) == dateTime17.equals(dateTime38));
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test138");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period19 = duration18.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.centuries();
        int int21 = period19.get(durationFieldType20);
        mutableDateTime1.add((org.joda.time.ReadablePeriod) period19, 54);
        mutableDateTime1.setMillisOfDay(0);
        int int26 = mutableDateTime1.getSecondOfMinute();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.DateTime dateTime28 = new org.joda.time.DateTime(chronology27);
        int int29 = dateTime28.getSecondOfMinute();
        boolean boolean30 = dateTime28.isEqualNow();
        int int31 = dateTime28.getDayOfYear();
        org.joda.time.Chronology chronology32 = dateTime28.getChronology();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.DateTime dateTime35 = dateTime28.plus((org.joda.time.ReadableDuration) duration34);
        org.joda.time.MutableDateTime mutableDateTime37 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime37.add((org.joda.time.ReadableDuration) duration39, (int) (short) 100);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.DateTime dateTime43 = new org.joda.time.DateTime(chronology42);
        int int44 = dateTime43.getYearOfCentury();
        org.joda.time.Interval interval45 = duration39.toIntervalTo((org.joda.time.ReadableInstant) dateTime43);
        int int46 = duration34.compareTo((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Minutes minutes47 = duration39.toStandardMinutes();
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration39, 116);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime28", (instant11.compareTo(dateTime28) == 0) == instant11.equals(dateTime28));
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test139");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTime.Property property3 = dateTime2.dayOfWeek();
        org.joda.time.LocalDate localDate4 = dateTime2.toLocalDate();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period7 = duration6.toPeriod();
        org.joda.time.Duration duration10 = duration6.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime12 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime12.add((org.joda.time.ReadableDuration) duration14, (int) (short) 100);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.DateTime dateTime18 = new org.joda.time.DateTime(chronology17);
        int int19 = dateTime18.getYearOfCentury();
        org.joda.time.Interval interval20 = duration14.toIntervalTo((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.Duration duration21 = duration10.minus((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period26 = duration25.toPeriod();
        org.joda.time.Duration duration29 = duration25.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration29, readableInstant30);
        org.joda.time.MutableDateTime mutableDateTime33 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 100, 1L, periodType36);
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((long) 100, 1L, periodType40);
        org.joda.time.Period period42 = period37.plus((org.joda.time.ReadablePeriod) period41);
        org.joda.time.Instant instant43 = new org.joda.time.Instant();
        org.joda.time.Instant instant45 = instant43.withMillis(0L);
        org.joda.time.Duration duration46 = period41.toDurationTo((org.joda.time.ReadableInstant) instant45);
        mutableDateTime33.add((org.joda.time.ReadableDuration) duration46, 39);
        org.joda.time.MutableDateTime.Property property49 = mutableDateTime33.yearOfEra();
        mutableDateTime33.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property52 = mutableDateTime33.minuteOfDay();
        java.util.Date date53 = mutableDateTime33.toDate();
        org.joda.time.Interval interval54 = duration29.toIntervalFrom((org.joda.time.ReadableInstant) mutableDateTime33);
        mutablePeriod23.add((org.joda.time.ReadableInterval) interval54);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        mutablePeriod60.addYears(59);
        org.joda.time.Instant instant65 = new org.joda.time.Instant();
        org.joda.time.Instant instant67 = instant65.withMillis(0L);
        org.joda.time.Chronology chronology68 = instant67.getChronology();
        org.joda.time.DurationField durationField69 = chronology68.eras();
        java.util.Locale locale70 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket72 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology68, locale70, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate73 = new org.joda.time.LocalDate((long) 53, chronology68);
        org.joda.time.ReadableDuration readableDuration74 = null;
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period(readableDuration74, readableInstant75);
        org.joda.time.PeriodType periodType79 = null;
        org.joda.time.Period period80 = new org.joda.time.Period((long) 100, 1L, periodType79);
        org.joda.time.Period period82 = period80.minusSeconds((-1));
        java.lang.String str83 = period80.toString();
        org.joda.time.Period period84 = period80.toPeriod();
        org.joda.time.PeriodType periodType85 = period80.getPeriodType();
        org.joda.time.Period period86 = period76.normalizedStandard(periodType85);
        boolean boolean87 = localDate73.equals((java.lang.Object) period76);
        org.joda.time.Interval interval88 = localDate73.toInterval();
        mutablePeriod60.add((org.joda.time.ReadableInterval) interval88);
        mutablePeriod23.setPeriod((org.joda.time.ReadableInterval) interval88);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime18 and instant43", (dateTime18.compareTo(instant43) == 0) == dateTime18.equals(instant43));
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test140");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration9, (int) (short) 100);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getYearOfCentury();
        org.joda.time.Interval interval15 = duration9.toIntervalTo((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Duration duration16 = duration5.minus((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period19 = duration18.toPeriod();
        org.joda.time.Duration duration21 = duration5.withDurationAdded((org.joda.time.ReadableDuration) duration18, 54);
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period32 = period27.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.Instant instant35 = instant33.withMillis(0L);
        org.joda.time.Duration duration36 = period31.toDurationTo((org.joda.time.ReadableInstant) instant35);
        mutableDateTime23.add((org.joda.time.ReadableDuration) duration36, 39);
        org.joda.time.MutableDateTime.Property property39 = mutableDateTime23.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime23.setZone(dateTimeZone40);
        int int42 = mutableDateTime23.getYearOfEra();
        int int43 = mutableDateTime23.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property44 = mutableDateTime23.year();
        mutableDateTime23.setSecondOfDay(50);
        org.joda.time.Chronology chronology47 = mutableDateTime23.getChronology();
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType49 = periodType48.withDaysRemoved();
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) mutableDateTime23, periodType49);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and instant33", (dateTime13.compareTo(instant33) == 0) == dateTime13.equals(instant33));
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test141");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 1);
        org.joda.time.LocalDate localDate2 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate4 = localDate2.minusMonths((int) ' ');
        org.joda.time.Chronology chronology5 = localDate2.getChronology();
        org.joda.time.Period period6 = duration1.toPeriod(chronology5);
        org.joda.time.LocalDate localDate7 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate9 = localDate7.minusMonths((int) ' ');
        int int10 = localDate7.size();
        org.joda.time.LocalDate.Property property11 = localDate7.era();
        org.joda.time.LocalDate localDate12 = property11.roundCeilingCopy();
        org.joda.time.LocalDate.Property property13 = localDate12.weekyear();
        org.joda.time.LocalDate localDate15 = localDate12.plusMonths(44);
        boolean boolean16 = duration1.equals((java.lang.Object) 44);
        org.joda.time.Duration duration17 = duration1.toDuration();
        org.joda.time.Duration duration18 = duration1.toDuration();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period21 = duration20.toPeriod();
        org.joda.time.Duration duration24 = duration20.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant25);
        mutablePeriod26.setYears(10);
        mutablePeriod26.setPeriod((int) (short) 1, 14, (int) (byte) 0, 1, (int) (short) 1, 53, 1969, 86396191);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period40 = duration39.toPeriod();
        org.joda.time.Duration duration43 = duration39.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period46 = duration45.toPeriod();
        org.joda.time.Duration duration47 = duration39.plus((org.joda.time.ReadableDuration) duration45);
        mutablePeriod26.add((org.joda.time.ReadableDuration) duration47);
        org.joda.time.PeriodType periodType51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((long) 100, 1L, periodType51);
        org.joda.time.PeriodType periodType55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((long) 100, 1L, periodType55);
        org.joda.time.Period period57 = period52.plus((org.joda.time.ReadablePeriod) period56);
        org.joda.time.Instant instant58 = new org.joda.time.Instant();
        org.joda.time.Instant instant60 = instant58.withMillis(0L);
        org.joda.time.Duration duration61 = period56.toDurationTo((org.joda.time.ReadableInstant) instant60);
        org.joda.time.Instant instant63 = instant60.plus((long) (byte) -1);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.DateTime dateTime65 = new org.joda.time.DateTime(chronology64);
        int int66 = dateTime65.getSecondOfMinute();
        int int67 = dateTime65.getYearOfEra();
        boolean boolean68 = instant63.isEqual((org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.Period period69 = duration47.toPeriodTo((org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.Duration duration70 = duration18.plus((org.joda.time.ReadableDuration) duration47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant58 and dateTime65", (instant58.compareTo(dateTime65) == 0) == instant58.equals(dateTime65));
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test142");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime19 = mutableDateTime1.toMutableDateTime(dateTimeZone18);
        org.joda.time.MutableDateTime.Property property20 = mutableDateTime19.millisOfSecond();
        org.joda.time.MutableDateTime mutableDateTime21 = property20.roundHalfCeiling();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime1 and mutableDateTime21", (mutableDateTime1.compareTo(mutableDateTime21) == 0) == mutableDateTime1.equals(mutableDateTime21));
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test143");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        mutableDateTime1.setWeekOfWeekyear(14);
        org.joda.time.LocalDate localDate20 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate22 = localDate20.minusMonths((int) ' ');
        org.joda.time.Chronology chronology23 = localDate20.getChronology();
        org.joda.time.DateTimeField dateTimeField24 = chronology23.minuteOfDay();
        mutableDateTime1.setChronology(chronology23);
        org.joda.time.DurationField durationField26 = chronology23.days();
        org.joda.time.DurationField durationField27 = chronology23.eras();
        org.joda.time.DurationField durationField28 = chronology23.weekyears();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField26 and durationField27", Math.signum(durationField26.compareTo(durationField27)) == -Math.signum(durationField27.compareTo(durationField26)));
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test144");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate((long) 53, chronology5);
        org.joda.time.DateTimeField dateTimeField11 = chronology5.dayOfYear();
        org.joda.time.DateTimeField dateTimeField12 = chronology5.monthOfYear();
        org.joda.time.DateTimeField dateTimeField13 = chronology5.secondOfMinute();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        int int17 = dateTime16.getSecondOfMinute();
        boolean boolean18 = dateTime16.isEqualNow();
        int int19 = dateTime16.getDayOfYear();
        org.joda.time.Chronology chronology20 = dateTime16.getChronology();
        java.util.Locale locale21 = java.util.Locale.SIMPLIFIED_CHINESE;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket22 = new org.joda.time.format.DateTimeParserBucket(315532800097L, chronology20, locale21);
        org.joda.time.LocalDate localDate23 = new org.joda.time.LocalDate(chronology20);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime(chronology26);
        int int28 = dateTime27.getSecondOfMinute();
        boolean boolean29 = dateTime27.isEqualNow();
        int int30 = dateTime27.getDayOfYear();
        org.joda.time.Chronology chronology31 = dateTime27.getChronology();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology31);
        org.joda.time.DateTimeField dateTimeField33 = chronology31.year();
        org.joda.time.DateTimeZone dateTimeZone34 = chronology31.getZone();
        org.joda.time.DateTimeField dateTimeField35 = chronology31.yearOfEra();
        org.joda.time.LocalDate localDate36 = new org.joda.time.LocalDate();
        int int37 = localDate36.getDayOfMonth();
        org.joda.time.LocalDate localDate39 = localDate36.plusYears(1);
        org.joda.time.DateTime dateTime40 = localDate39.toDateTimeAtStartOfDay();
        org.joda.time.LocalDate localDate42 = localDate39.minusYears(39221019);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period45 = duration44.toPeriod();
        org.joda.time.Days days46 = period45.toStandardDays();
        int[] intArray47 = period45.getValues();
        int int48 = dateTimeField35.getMinimumValue((org.joda.time.ReadablePartial) localDate42, intArray47);
        int int49 = dateTimeField13.getMinimumValue((org.joda.time.ReadablePartial) localDate23, intArray47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime16", (instant2.compareTo(dateTime16) == 0) == instant2.equals(dateTime16));
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test145");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTimeField dateTimeField21 = chronology6.millisOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test146");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.dayOfMonth();
        org.joda.time.DateTime dateTime22 = dateTime1.withTimeAtStartOfDay();
        org.joda.time.DateTime dateTime24 = dateTime22.withDayOfYear(29);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test147");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        mutablePeriod3.setYears((int) '#');
        org.joda.time.Instant instant8 = new org.joda.time.Instant();
        org.joda.time.Instant instant10 = instant8.withMillis(0L);
        org.joda.time.Chronology chronology11 = instant10.getChronology();
        org.joda.time.DurationField durationField12 = chronology11.eras();
        java.util.Locale locale13 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket15 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology11, locale13, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime16 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime18 = localDateTime16.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property19 = localDateTime16.hourOfDay();
        org.joda.time.DateTimeField dateTimeField20 = property19.getField();
        int int21 = property19.get();
        org.joda.time.LocalDateTime localDateTime22 = property19.roundHalfFloorCopy();
        long long24 = chronology11.set((org.joda.time.ReadablePartial) localDateTime22, (long) 2022);
        mutablePeriod3.setPeriod((long) ' ', chronology11);
        org.joda.time.DurationField durationField26 = chronology11.minutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField12, durationField26, and durationField12", !(durationField12.compareTo(durationField26) == 0) || (Math.signum(durationField12.compareTo(durationField12)) == Math.signum(durationField26.compareTo(durationField12))));
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test148");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        mutableDateTime1.setWeekOfWeekyear(14);
        org.joda.time.LocalDate localDate20 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate22 = localDate20.minusMonths((int) ' ');
        org.joda.time.Chronology chronology23 = localDate20.getChronology();
        org.joda.time.DateTimeField dateTimeField24 = chronology23.minuteOfDay();
        mutableDateTime1.setChronology(chronology23);
        org.joda.time.DurationField durationField26 = chronology23.days();
        org.joda.time.DurationField durationField27 = chronology23.eras();
        org.joda.time.DurationField durationField28 = chronology23.eras();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField26 and durationField28", Math.signum(durationField26.compareTo(durationField28)) == -Math.signum(durationField28.compareTo(durationField26)));
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test149");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period19 = duration18.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.centuries();
        int int21 = period19.get(durationFieldType20);
        mutableDateTime1.add((org.joda.time.ReadablePeriod) period19, 54);
        mutableDateTime1.setMillisOfDay(0);
        org.joda.time.MutableDateTime.Property property26 = mutableDateTime1.centuryOfEra();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 1);
        org.joda.time.LocalDate localDate29 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate31 = localDate29.minusMonths((int) ' ');
        org.joda.time.Chronology chronology32 = localDate29.getChronology();
        org.joda.time.Period period33 = duration28.toPeriod(chronology32);
        org.joda.time.DateTime dateTime34 = mutableDateTime1.toDateTime(chronology32);
        org.joda.time.DateTimeField dateTimeField35 = chronology32.centuryOfEra();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime1 and dateTime34", (mutableDateTime1.compareTo(dateTime34) == 0) == mutableDateTime1.equals(dateTime34));
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test150");
        org.joda.time.LocalDateTime localDateTime1 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property2 = localDateTime1.monthOfYear();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime((long) (short) 1, chronology4);
        org.joda.time.Instant instant6 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime5, (org.joda.time.ReadableInstant) instant6, periodType7);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int10 = instant6.get(dateTimeFieldType9);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime1.withField(dateTimeFieldType9, 39);
        org.joda.time.LocalDateTime localDateTime14 = localDateTime12.minusSeconds(52);
        int int15 = localDateTime14.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime14.plusWeeks(22);
        org.joda.time.DateTime dateTime18 = localDateTime14.toDateTime();
        org.joda.time.MutableDateTime mutableDateTime20 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) 100, 1L, periodType23);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((long) 100, 1L, periodType27);
        org.joda.time.Period period29 = period24.plus((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Instant instant30 = new org.joda.time.Instant();
        org.joda.time.Instant instant32 = instant30.withMillis(0L);
        org.joda.time.Duration duration33 = period28.toDurationTo((org.joda.time.ReadableInstant) instant32);
        mutableDateTime20.add((org.joda.time.ReadableDuration) duration33, 39);
        org.joda.time.MutableDateTime.Property property36 = mutableDateTime20.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone37 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime20.setZone(dateTimeZone37);
        org.joda.time.DateTime dateTime39 = dateTime18.withZone(dateTimeZone37);
        org.joda.time.LocalDate localDate40 = new org.joda.time.LocalDate((long) 39221019, dateTimeZone37);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime18 and dateTime39", (dateTime18.compareTo(dateTime39) == 0) == dateTime18.equals(dateTime39));
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test151");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        boolean boolean3 = dateTime1.isBefore((long) (short) 100);
        org.joda.time.Instant instant4 = new org.joda.time.Instant();
        org.joda.time.Instant instant6 = instant4.withMillis(0L);
        org.joda.time.Chronology chronology7 = instant6.getChronology();
        org.joda.time.DateTime dateTime8 = dateTime1.toDateTime(chronology7);
        org.joda.time.MutableDateTime mutableDateTime9 = dateTime1.toMutableDateTimeISO();
        org.joda.time.DateTime dateTime11 = dateTime1.withCenturyOfEra(654);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and mutableDateTime9", (instant4.compareTo(mutableDateTime9) == 0) == instant4.equals(mutableDateTime9));
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test152");
        org.joda.time.MutableDateTime mutableDateTime0 = new org.joda.time.MutableDateTime();
        org.joda.time.MutableDateTime.Property property1 = mutableDateTime0.centuryOfEra();
        org.joda.time.MutableDateTime mutableDateTime2 = property1.roundHalfFloor();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant();
        org.joda.time.Instant instant8 = instant6.withMillis(0L);
        org.joda.time.Chronology chronology9 = instant8.getChronology();
        org.joda.time.DurationField durationField10 = chronology9.eras();
        java.util.Locale locale11 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket13 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology9, locale11, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime16 = localDateTime14.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property17 = localDateTime14.hourOfDay();
        org.joda.time.DateTimeField dateTimeField18 = property17.getField();
        int int19 = property17.get();
        org.joda.time.LocalDateTime localDateTime20 = property17.roundHalfFloorCopy();
        long long22 = chronology9.set((org.joda.time.ReadablePartial) localDateTime20, (long) 2022);
        org.joda.time.DateTime dateTime23 = dateTime4.toDateTime(chronology9);
        org.joda.time.DateTime dateTime25 = dateTime4.plusDays(22);
        java.lang.Object obj26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime(obj26);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime28.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property31 = localDateTime28.hourOfDay();
        org.joda.time.DateTimeField dateTimeField32 = property31.getField();
        boolean boolean34 = property31.equals((java.lang.Object) '#');
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(chronology35);
        int int37 = dateTime36.getSecondOfMinute();
        int int38 = dateTime36.getYearOfEra();
        int int39 = property31.getDifference((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.DateTime dateTime43 = dateTime36.withDurationAdded((long) (byte) 0, 22);
        boolean boolean44 = dateTime4.isBefore((org.joda.time.ReadableInstant) dateTime43);
        long long45 = property1.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime4);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant6 and dateTime27", (instant6.compareTo(dateTime27) == 0) == instant6.equals(dateTime27));
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test153");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        java.lang.Object obj18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(obj18);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime20.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField26 = localDateTime24.getField((int) (byte) 0);
        long long28 = dateTimeField26.roundHalfEven((long) 1);
        int int29 = dateTime19.get(dateTimeField26);
        mutableDateTime1.setRounding(dateTimeField26);
        org.joda.time.DateTimeField dateTimeField31 = mutableDateTime1.getRoundingField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime19", (instant11.compareTo(dateTime19) == 0) == instant11.equals(dateTime19));
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test154");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.millisOfDay();
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property25 = localDateTime22.hourOfDay();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime22.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType28 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str29 = dateTimeFieldType28.getName();
        int int30 = localDateTime22.indexOf(dateTimeFieldType28);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str32 = dateTimeFieldType31.getName();
        org.joda.time.LocalDateTime.Property property33 = localDateTime22.property(dateTimeFieldType31);
        int int34 = localDateTime22.getDayOfWeek();
        org.joda.time.DateTime dateTime35 = dateTime1.withFields((org.joda.time.ReadablePartial) localDateTime22);
        org.joda.time.LocalDateTime.Property property36 = localDateTime22.yearOfEra();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test155");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DateTime dateTime14 = new org.joda.time.DateTime(chronology13);
        int int15 = dateTime14.getSecondOfMinute();
        org.joda.time.DateTime dateTime18 = dateTime14.withDurationAdded((long) 6, 12);
        int int19 = dateTime18.getYear();
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime18);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime14", (instant9.compareTo(dateTime14) == 0) == instant9.equals(dateTime14));
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test156");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str9 = mutablePeriod8.toString();
        org.joda.time.DateTime dateTime10 = dateTime1.plus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.DateTime.Property property11 = dateTime1.weekyear();
        org.joda.time.MutableDateTime mutableDateTime12 = dateTime1.toMutableDateTimeISO();
        int int13 = dateTime1.getMinuteOfDay();
        org.joda.time.MutableDateTime mutableDateTime15 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) 100, 1L, periodType18);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.Period period24 = period19.plus((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.Instant instant27 = instant25.withMillis(0L);
        org.joda.time.Duration duration28 = period23.toDurationTo((org.joda.time.ReadableInstant) instant27);
        mutableDateTime15.add((org.joda.time.ReadableDuration) duration28, 39);
        org.joda.time.MutableDateTime.Property property31 = mutableDateTime15.yearOfEra();
        mutableDateTime15.setDayOfYear((int) ' ');
        mutableDateTime15.add((long) 39221019);
        mutableDateTime15.setMinuteOfDay(21);
        org.joda.time.Duration duration38 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime1, (org.joda.time.ReadableInstant) mutableDateTime15);
        org.joda.time.Instant instant40 = new org.joda.time.Instant();
        org.joda.time.Instant instant42 = instant40.withMillis(0L);
        org.joda.time.Chronology chronology43 = instant42.getChronology();
        org.joda.time.DurationField durationField44 = chronology43.eras();
        java.util.Locale locale45 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket47 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology43, locale45, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology49 = null;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = java.util.Locale.CANADA;
        java.lang.String str52 = locale50.getDisplayVariant(locale51);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket53 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology49, locale51);
        org.joda.time.DateTimeZone dateTimeZone54 = dateTimeParserBucket53.getZone();
        org.joda.time.Chronology chronology55 = chronology43.withZone(dateTimeZone54);
        org.joda.time.LocalTime localTime56 = org.joda.time.LocalTime.now(chronology55);
        org.joda.time.DateTimeField dateTimeField57 = chronology55.weekOfWeekyear();
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = dateTimeField57.getType();
        int int59 = mutableDateTime15.get(dateTimeFieldType58);
        org.joda.time.DateTimeZone dateTimeZone60 = mutableDateTime15.getZone();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant25", (dateTime1.compareTo(instant25) == 0) == dateTime1.equals(instant25));
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test157");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        java.lang.Object obj18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(obj18);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime20.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField26 = localDateTime24.getField((int) (byte) 0);
        long long28 = dateTimeField26.roundHalfEven((long) 1);
        int int29 = dateTime19.get(dateTimeField26);
        mutableDateTime1.setRounding(dateTimeField26);
        mutableDateTime1.setTime(1645455600000L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime19", (instant11.compareTo(dateTime19) == 0) == instant11.equals(dateTime19));
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test158");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime20.withMillisOfDay(86396191);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test159");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str9 = mutablePeriod8.toString();
        org.joda.time.DateTime dateTime10 = dateTime1.plus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.DateTime.Property property11 = dateTime1.weekyear();
        org.joda.time.MutableDateTime mutableDateTime12 = dateTime1.toMutableDateTimeISO();
        int int13 = dateTime1.getMinuteOfDay();
        org.joda.time.MutableDateTime mutableDateTime15 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) 100, 1L, periodType18);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.Period period24 = period19.plus((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.Instant instant27 = instant25.withMillis(0L);
        org.joda.time.Duration duration28 = period23.toDurationTo((org.joda.time.ReadableInstant) instant27);
        mutableDateTime15.add((org.joda.time.ReadableDuration) duration28, 39);
        org.joda.time.MutableDateTime.Property property31 = mutableDateTime15.yearOfEra();
        mutableDateTime15.setDayOfYear((int) ' ');
        mutableDateTime15.add((long) 39221019);
        mutableDateTime15.setMinuteOfDay(21);
        org.joda.time.Duration duration38 = new org.joda.time.Duration((org.joda.time.ReadableInstant) dateTime1, (org.joda.time.ReadableInstant) mutableDateTime15);
        mutableDateTime15.addHours(893);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant25", (dateTime1.compareTo(instant25) == 0) == dateTime1.equals(instant25));
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test160");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime dateTime4 = dateTime1.withDurationAdded((long) 41, 53);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) 100, 1L, periodType7);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.Period period13 = period8.plus((org.joda.time.ReadablePeriod) period12);
        org.joda.time.MutablePeriod mutablePeriod14 = period13.toMutablePeriod();
        mutablePeriod14.addWeeks(14);
        int int17 = mutablePeriod14.size();
        org.joda.time.DateTime dateTime18 = dateTime4.minus((org.joda.time.ReadablePeriod) mutablePeriod14);
        org.joda.time.MutableDateTime mutableDateTime20 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime20.add((org.joda.time.ReadableDuration) duration22, (int) (short) 100);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime((long) (short) 1, chronology26);
        org.joda.time.Instant instant28 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) instant28, periodType29);
        org.joda.time.LocalDate localDate31 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate33 = localDate31.minusMonths((int) ' ');
        org.joda.time.Chronology chronology34 = localDate31.getChronology();
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate37 = localDate31.withFieldAdded(durationFieldType35, (int) (byte) 100);
        int int38 = periodType29.indexOf(durationFieldType35);
        org.joda.time.Period period39 = duration22.toPeriod(periodType29);
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.days();
        org.joda.time.Period period42 = period39.withField(durationFieldType40, 49);
        mutablePeriod14.set(durationFieldType40, 642);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant28", (dateTime1.compareTo(instant28) == 0) == dateTime1.equals(instant28));
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test161");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime(0L, chronology1);
        org.joda.time.LocalDateTime localDateTime3 = dateTime2.toLocalDateTime();
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.Period period12 = period7.plus((org.joda.time.ReadablePeriod) period11);
        org.joda.time.Instant instant13 = new org.joda.time.Instant();
        org.joda.time.Instant instant15 = instant13.withMillis(0L);
        org.joda.time.Duration duration16 = period11.toDurationTo((org.joda.time.ReadableInstant) instant15);
        org.joda.time.Instant instant18 = instant15.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime19 = instant15.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType21 = dateTimeFieldType20.getRangeDurationType();
        org.joda.time.DateTime.Property property22 = dateTime19.property(dateTimeFieldType20);
        boolean boolean24 = dateTime19.isEqual((long) 53);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period27 = duration26.toPeriod();
        org.joda.time.DateTime dateTime29 = dateTime19.withDurationAdded((org.joda.time.ReadableDuration) duration26, (-292275054));
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime32 = new org.joda.time.MutableDateTime(0L, dateTimeZone31);
        mutableDateTime32.addMillis(50);
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime19, (org.joda.time.ReadableInstant) mutableDateTime32);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) mutableDateTime32);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant15 and dateTime19", (instant15.compareTo(dateTime19) == 0) == instant15.equals(dateTime19));
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test162");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period5 = duration4.toPeriod();
        org.joda.time.Duration duration8 = duration4.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Duration duration12 = duration4.plus((org.joda.time.ReadableDuration) duration10);
        boolean boolean13 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Days days14 = duration1.toStandardDays();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period17 = duration16.toPeriod();
        org.joda.time.Duration duration20 = duration16.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration20, readableInstant21);
        mutablePeriod22.setYears(10);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.DateTime dateTime26 = new org.joda.time.DateTime(chronology25);
        int int27 = dateTime26.getSecondOfMinute();
        org.joda.time.DateTime dateTime30 = dateTime26.withDurationAdded((long) 6, 12);
        org.joda.time.DateTime dateTime32 = dateTime26.minusMillis(31);
        org.joda.time.MutableDateTime mutableDateTime34 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((long) 100, 1L, periodType37);
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((long) 100, 1L, periodType41);
        org.joda.time.Period period43 = period38.plus((org.joda.time.ReadablePeriod) period42);
        org.joda.time.Instant instant44 = new org.joda.time.Instant();
        org.joda.time.Instant instant46 = instant44.withMillis(0L);
        org.joda.time.Duration duration47 = period42.toDurationTo((org.joda.time.ReadableInstant) instant46);
        mutableDateTime34.add((org.joda.time.ReadableDuration) duration47, 39);
        org.joda.time.MutableDateTime.Property property50 = mutableDateTime34.yearOfEra();
        mutableDateTime34.addMillis(39221019);
        mutableDateTime34.setWeekyear(49);
        mutableDateTime34.addMinutes(39);
        mutablePeriod22.setPeriod((org.joda.time.ReadableInstant) dateTime26, (org.joda.time.ReadableInstant) mutableDateTime34);
        org.joda.time.Interval interval58 = duration1.toIntervalTo((org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.MutableDateTime mutableDateTime60 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((long) 100, 1L, periodType63);
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((long) 100, 1L, periodType67);
        org.joda.time.Period period69 = period64.plus((org.joda.time.ReadablePeriod) period68);
        org.joda.time.Instant instant70 = new org.joda.time.Instant();
        org.joda.time.Instant instant72 = instant70.withMillis(0L);
        org.joda.time.Duration duration73 = period68.toDurationTo((org.joda.time.ReadableInstant) instant72);
        mutableDateTime60.add((org.joda.time.ReadableDuration) duration73, 39);
        org.joda.time.MutableDateTime.Property property76 = mutableDateTime60.secondOfMinute();
        org.joda.time.Instant instant77 = mutableDateTime60.toInstant();
        org.joda.time.ReadableDuration readableDuration78 = null;
        org.joda.time.Instant instant79 = instant77.plus(readableDuration78);
        org.joda.time.Interval interval80 = duration1.toIntervalFrom((org.joda.time.ReadableInstant) instant77);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime26 and instant44", (dateTime26.compareTo(instant44) == 0) == dateTime26.equals(instant44));
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test163");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean18 = mutableDateTime1.isSupported(dateTimeFieldType17);
        int int19 = mutableDateTime1.getWeekOfWeekyear();
        org.joda.time.Instant instant21 = new org.joda.time.Instant();
        org.joda.time.Instant instant23 = instant21.withMillis(0L);
        org.joda.time.Chronology chronology24 = instant23.getChronology();
        org.joda.time.DurationField durationField25 = chronology24.eras();
        java.util.Locale locale26 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket28 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology24, locale26, (java.lang.Integer) 39221019);
        mutableDateTime1.setChronology(chronology24);
        org.joda.time.LocalDate localDate30 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate32 = localDate30.minusMonths((int) ' ');
        org.joda.time.Chronology chronology33 = localDate30.getChronology();
        org.joda.time.DateTimeField dateTimeField34 = chronology33.minuteOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = dateTimeField34.getType();
        int int37 = dateTimeField34.getMaximumValue((long) (-292275054));
        mutableDateTime1.setRounding(dateTimeField34);
        int int39 = mutableDateTime1.getDayOfWeek();
        org.joda.time.MutableDateTime mutableDateTime41 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((long) 100, 1L, periodType44);
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) 100, 1L, periodType48);
        org.joda.time.Period period50 = period45.plus((org.joda.time.ReadablePeriod) period49);
        org.joda.time.Instant instant51 = new org.joda.time.Instant();
        org.joda.time.Instant instant53 = instant51.withMillis(0L);
        org.joda.time.Duration duration54 = period49.toDurationTo((org.joda.time.ReadableInstant) instant53);
        mutableDateTime41.add((org.joda.time.ReadableDuration) duration54, 39);
        org.joda.time.MutableDateTime.Property property57 = mutableDateTime41.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone58 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime41.setZone(dateTimeZone58);
        int int60 = mutableDateTime41.getYearOfEra();
        int int61 = mutableDateTime41.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property62 = mutableDateTime41.year();
        org.joda.time.DateTimeFieldType dateTimeFieldType63 = property62.getFieldType();
        int int64 = mutableDateTime1.get(dateTimeFieldType63);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period67 = duration66.toPeriod();
        org.joda.time.Duration duration70 = duration66.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime72 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime72.add((org.joda.time.ReadableDuration) duration74, (int) (short) 100);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.DateTime dateTime78 = new org.joda.time.DateTime(chronology77);
        int int79 = dateTime78.getYearOfCentury();
        org.joda.time.Interval interval80 = duration74.toIntervalTo((org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.Duration duration81 = duration70.minus((org.joda.time.ReadableDuration) duration74);
        org.joda.time.Duration duration82 = duration81.toDuration();
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration82);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime78", (instant11.compareTo(dateTime78) == 0) == instant11.equals(dateTime78));
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test164");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology7);
        org.joda.time.DurationField durationField9 = chronology7.hours();
        org.joda.time.DateTimeField dateTimeField10 = chronology7.dayOfWeek();
        org.joda.time.MutableDateTime mutableDateTime12 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        mutableDateTime12.add((org.joda.time.ReadableDuration) duration25, 39);
        org.joda.time.MutableDateTime.Property property28 = mutableDateTime12.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone29 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime12.setZone(dateTimeZone29);
        org.joda.time.Chronology chronology32 = null;
        java.util.Locale locale33 = java.util.Locale.GERMAN;
        java.util.Locale locale34 = locale33.stripExtensions();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket37 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology32, locale33, (java.lang.Integer) 45, (int) '4');
        org.joda.time.DateTimeZone dateTimeZone38 = dateTimeParserBucket37.getZone();
        long long40 = dateTimeZone29.getMillisKeepLocal(dateTimeZone38, 315532800097L);
        org.joda.time.DateTimeZone dateTimeZone41 = null;
        long long43 = dateTimeZone38.getMillisKeepLocal(dateTimeZone41, (long) 53);
        org.joda.time.Chronology chronology44 = chronology7.withZone(dateTimeZone38);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and instant22", (dateTime3.compareTo(instant22) == 0) == dateTime3.equals(instant22));
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test165");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime1.setZone(dateTimeZone18);
        int int20 = mutableDateTime1.getYearOfEra();
        int int21 = mutableDateTime1.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property22 = mutableDateTime1.year();
        org.joda.time.LocalDate localDate23 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate25 = localDate23.minusMonths((int) ' ');
        org.joda.time.Chronology chronology26 = localDate23.getChronology();
        mutableDateTime1.setChronology(chronology26);
        org.joda.time.DateTimeField dateTimeField28 = chronology26.dayOfYear();
        org.joda.time.DateTimeZone dateTimeZone30 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime31 = new org.joda.time.MutableDateTime(0L, dateTimeZone30);
        int int33 = dateTimeZone30.getOffsetFromLocal((long) (byte) 1);
        java.lang.String str34 = dateTimeZone30.getID();
        org.joda.time.MutableDateTime mutableDateTime37 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((long) 100, 1L, periodType40);
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((long) 100, 1L, periodType44);
        org.joda.time.Period period46 = period41.plus((org.joda.time.ReadablePeriod) period45);
        org.joda.time.Instant instant47 = new org.joda.time.Instant();
        org.joda.time.Instant instant49 = instant47.withMillis(0L);
        org.joda.time.Duration duration50 = period45.toDurationTo((org.joda.time.ReadableInstant) instant49);
        mutableDateTime37.add((org.joda.time.ReadableDuration) duration50, 39);
        org.joda.time.MutableDateTime.Property property53 = mutableDateTime37.secondOfMinute();
        org.joda.time.MutableDateTime.Property property54 = mutableDateTime37.minuteOfHour();
        java.lang.String str55 = property54.getAsShortText();
        java.util.Locale locale56 = java.util.Locale.GERMAN;
        java.util.Locale locale57 = locale56.stripExtensions();
        int int58 = property54.getMaximumTextLength(locale57);
        java.lang.String str59 = dateTimeZone30.getName((long) 3, locale57);
        org.joda.time.LocalDate localDate60 = new org.joda.time.LocalDate(dateTimeZone30);
        java.util.Locale locale62 = null;
        java.lang.String str63 = dateTimeField28.getAsShortText((org.joda.time.ReadablePartial) localDate60, 15, locale62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime1 and mutableDateTime37", (mutableDateTime1.compareTo(mutableDateTime37) == 0) == mutableDateTime1.equals(mutableDateTime37));
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test166");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType17 = dateTimeFieldType16.getRangeDurationType();
        org.joda.time.DateTime.Property property18 = dateTime15.property(dateTimeFieldType16);
        org.joda.time.DateTime dateTime19 = property18.roundFloorCopy();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime19", (instant11.compareTo(dateTime19) == 0) == instant11.equals(dateTime19));
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test167");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        boolean boolean26 = instant11.isEqual((org.joda.time.ReadableInstant) instant24);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 1);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period31 = duration30.toPeriod();
        org.joda.time.Duration duration34 = duration30.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant35);
        org.joda.time.Duration duration37 = duration34.toDuration();
        int int38 = duration28.compareTo((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Instant instant39 = instant11.minus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.DateTime dateTime41 = new org.joda.time.DateTime(chronology40);
        int int42 = dateTime41.getSecondOfMinute();
        int int43 = dateTime41.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str49 = mutablePeriod48.toString();
        org.joda.time.DateTime dateTime50 = dateTime41.plus((org.joda.time.ReadablePeriod) mutablePeriod48);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, (org.joda.time.ReadableInstant) dateTime41);
        mutablePeriod51.addMinutes(47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime41", (instant9.compareTo(dateTime41) == 0) == instant9.equals(dateTime41));
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test168");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration3, (int) (short) 100);
        mutableDateTime1.setYear(10);
        mutableDateTime1.addSeconds((int) (short) 0);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(chronology10);
        int int12 = dateTime11.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter13 = null;
        java.lang.String str14 = dateTime11.toString(dateTimeFormatter13);
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableInstant) mutableDateTime1, (org.joda.time.ReadableInstant) dateTime11);
        org.joda.time.LocalDateTime localDateTime16 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime18 = localDateTime16.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime20 = localDateTime18.withHourOfDay(10);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) 100, 1L, periodType23);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((long) 100, 1L, periodType27);
        org.joda.time.Period period29 = period24.plus((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Instant instant30 = new org.joda.time.Instant();
        org.joda.time.Instant instant32 = instant30.withMillis(0L);
        org.joda.time.Duration duration33 = period28.toDurationTo((org.joda.time.ReadableInstant) instant32);
        org.joda.time.LocalDateTime localDateTime34 = localDateTime20.plus((org.joda.time.ReadablePeriod) period28);
        org.joda.time.LocalDateTime localDateTime36 = localDateTime34.withMillisOfDay(1);
        org.joda.time.Chronology chronology38 = null;
        java.util.Locale locale39 = java.util.Locale.GERMAN;
        java.util.Locale locale40 = java.util.Locale.CANADA;
        java.lang.String str41 = locale39.getDisplayVariant(locale40);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket42 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology38, locale40);
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = org.joda.time.DateTimeFieldType.centuryOfEra();
        java.util.Locale.Category category45 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale46 = java.util.Locale.getDefault(category45);
        java.lang.String str47 = locale46.getVariant();
        dateTimeParserBucket42.saveField(dateTimeFieldType43, "2022-02-21T14:53:55.782Z", locale46);
        org.joda.time.LocalDateTime localDateTime50 = localDateTime34.withField(dateTimeFieldType43, 0);
        mutableDateTime1.set(dateTimeFieldType43, 894);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime11 and instant30", (dateTime11.compareTo(instant30) == 0) == dateTime11.equals(instant30));
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test169");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        boolean boolean3 = dateTime1.isEqualNow();
        int int4 = dateTime1.getDayOfYear();
        org.joda.time.LocalTime localTime5 = dateTime1.toLocalTime();
        org.joda.time.DateTime dateTime7 = dateTime1.withMillisOfSecond((int) (byte) 0);
        org.joda.time.Instant instant8 = new org.joda.time.Instant();
        org.joda.time.Instant instant10 = instant8.withMillis(0L);
        org.joda.time.Chronology chronology11 = instant10.getChronology();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period14 = duration13.toPeriod();
        org.joda.time.Duration duration16 = duration13.plus(1L);
        org.joda.time.MutableDateTime mutableDateTime18 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((long) 100, 1L, periodType21);
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) 100, 1L, periodType25);
        org.joda.time.Period period27 = period22.plus((org.joda.time.ReadablePeriod) period26);
        org.joda.time.Instant instant28 = new org.joda.time.Instant();
        org.joda.time.Instant instant30 = instant28.withMillis(0L);
        org.joda.time.Duration duration31 = period26.toDurationTo((org.joda.time.ReadableInstant) instant30);
        mutableDateTime18.add((org.joda.time.ReadableDuration) duration31, 39);
        int int34 = duration13.compareTo((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Instant instant36 = instant10.withDurationAdded((org.joda.time.ReadableDuration) duration31, 0);
        org.joda.time.Instant instant37 = instant10.toInstant();
        org.joda.time.DateTime dateTime38 = instant37.toDateTime();
        org.joda.time.DateTime dateTime40 = dateTime38.withYearOfCentury(47);
        int int41 = dateTime7.compareTo((org.joda.time.ReadableInstant) dateTime38);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant8", (dateTime1.compareTo(instant8) == 0) == dateTime1.equals(instant8));
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test170");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property1 = localDateTime0.monthOfYear();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime((long) (short) 1, chronology3);
        org.joda.time.Instant instant5 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime4, (org.joda.time.ReadableInstant) instant5, periodType6);
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int9 = instant5.get(dateTimeFieldType8);
        org.joda.time.LocalDateTime localDateTime11 = localDateTime0.withField(dateTimeFieldType8, 39);
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.minusSeconds(52);
        int int14 = localDateTime13.getYearOfEra();
        org.joda.time.LocalDateTime localDateTime16 = localDateTime13.minusHours(47);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period19 = duration18.toPeriod();
        org.joda.time.Duration duration22 = duration18.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime24 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((long) 100, 1L, periodType27);
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((long) 100, 1L, periodType31);
        org.joda.time.Period period33 = period28.plus((org.joda.time.ReadablePeriod) period32);
        org.joda.time.Instant instant34 = new org.joda.time.Instant();
        org.joda.time.Instant instant36 = instant34.withMillis(0L);
        org.joda.time.Duration duration37 = period32.toDurationTo((org.joda.time.ReadableInstant) instant36);
        mutableDateTime24.add((org.joda.time.ReadableDuration) duration37, 39);
        org.joda.time.MutableDateTime.Property property40 = mutableDateTime24.secondOfMinute();
        mutableDateTime24.addYears(3);
        java.lang.Object obj43 = null;
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime(obj43);
        org.joda.time.LocalDateTime localDateTime45 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime47 = localDateTime45.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime49 = localDateTime47.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField51 = localDateTime49.getField((int) (byte) 0);
        long long53 = dateTimeField51.roundHalfEven((long) 1);
        int int54 = dateTime44.get(dateTimeField51);
        boolean boolean55 = dateTime44.isBeforeNow();
        org.joda.time.DateTime.Property property56 = dateTime44.weekOfWeekyear();
        mutableDateTime24.setTime((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Period period58 = duration22.toPeriodTo((org.joda.time.ReadableInstant) dateTime44);
        java.util.Date date59 = dateTime44.toDate();
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean61 = dateTime44.equals((java.lang.Object) dateTimeFieldType60);
        org.joda.time.LocalDateTime.Property property62 = localDateTime16.property(dateTimeFieldType60);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and dateTime44", (instant5.compareTo(dateTime44) == 0) == instant5.equals(dateTime44));
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test171");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.LocalDateTime localDateTime2 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime4 = localDateTime2.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime6 = localDateTime4.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField8 = localDateTime6.getField((int) (byte) 0);
        long long10 = dateTimeField8.roundHalfEven((long) 1);
        int int11 = dateTime1.get(dateTimeField8);
        boolean boolean12 = dateTime1.isBeforeNow();
        org.joda.time.DateTime dateTime14 = dateTime1.minusWeeks((int) (byte) 0);
        org.joda.time.DateTime dateTime16 = dateTime14.plusMinutes((int) (short) 10);
        int int17 = dateTime14.getMinuteOfHour();
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime20 = localDateTime18.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property21 = localDateTime18.hourOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime18.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str25 = dateTimeFieldType24.getName();
        int int26 = localDateTime18.indexOf(dateTimeFieldType24);
        org.joda.time.LocalDateTime localDateTime28 = localDateTime18.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime30 = localDateTime18.minusSeconds((int) '#');
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str32 = dateTimeFieldType31.getName();
        org.joda.time.LocalDateTime.Property property33 = localDateTime30.property(dateTimeFieldType31);
        int int34 = localDateTime30.getMinuteOfHour();
        org.joda.time.DateTime dateTime35 = localDateTime30.toDateTime();
        org.joda.time.MutableDateTime mutableDateTime37 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((long) 100, 1L, periodType40);
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((long) 100, 1L, periodType44);
        org.joda.time.Period period46 = period41.plus((org.joda.time.ReadablePeriod) period45);
        org.joda.time.Instant instant47 = new org.joda.time.Instant();
        org.joda.time.Instant instant49 = instant47.withMillis(0L);
        org.joda.time.Duration duration50 = period45.toDurationTo((org.joda.time.ReadableInstant) instant49);
        mutableDateTime37.add((org.joda.time.ReadableDuration) duration50, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean54 = mutableDateTime37.isSupported(dateTimeFieldType53);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.DateTime dateTime59 = new org.joda.time.DateTime((long) (short) 1, chronology58);
        org.joda.time.DateTime dateTime60 = dateTime59.toDateTime();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.DateTime dateTime63 = new org.joda.time.DateTime((long) (short) 1, chronology62);
        org.joda.time.DateTime dateTime64 = dateTime63.toDateTime();
        int int65 = dateTime60.compareTo((org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableDuration) duration67);
        org.joda.time.Duration duration70 = duration56.withDurationAdded((org.joda.time.ReadableDuration) duration67, 10);
        org.joda.time.Duration duration71 = duration70.toDuration();
        mutableDateTime37.add((org.joda.time.ReadableDuration) duration70);
        org.joda.time.DateTime dateTime73 = dateTime35.plus((org.joda.time.ReadableDuration) duration70);
        int int74 = dateTime73.getCenturyOfEra();
        org.joda.time.DateTime.Property property75 = dateTime73.millisOfSecond();
        boolean boolean76 = dateTime14.isEqual((org.joda.time.ReadableInstant) dateTime73);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime14 and instant47", (dateTime14.compareTo(instant47) == 0) == dateTime14.equals(instant47));
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test172");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime(chronology1);
        int int3 = dateTime2.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter4 = null;
        java.lang.String str5 = dateTime2.toString(dateTimeFormatter4);
        org.joda.time.DateTime dateTime7 = dateTime2.plusMonths(86396191);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(chronology10);
        int int12 = dateTime11.getSecondOfMinute();
        boolean boolean13 = dateTime11.isEqualNow();
        int int14 = dateTime11.getDayOfYear();
        org.joda.time.Chronology chronology15 = dateTime11.getChronology();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology15);
        org.joda.time.DateTime dateTime17 = dateTime7.toDateTime(chronology15);
        org.joda.time.DurationField durationField18 = chronology15.eras();
        org.joda.time.format.DateTimePrinter dateTimePrinter19 = null;
        org.joda.time.format.DateTimeParser dateTimeParser20 = null;
        org.joda.time.format.DateTimeFormatter dateTimeFormatter21 = new org.joda.time.format.DateTimeFormatter(dateTimePrinter19, dateTimeParser20);
        org.joda.time.format.DateTimeParser dateTimeParser22 = dateTimeFormatter21.getParser();
        java.lang.Integer int23 = dateTimeFormatter21.getPivotYear();
        org.joda.time.format.DateTimePrinter dateTimePrinter24 = dateTimeFormatter21.getPrinter();
        org.joda.time.Instant instant27 = new org.joda.time.Instant();
        org.joda.time.Instant instant29 = instant27.withMillis(0L);
        org.joda.time.Chronology chronology30 = instant29.getChronology();
        org.joda.time.DurationField durationField31 = chronology30.eras();
        java.util.Locale locale32 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket34 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology30, locale32, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime35.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property38 = localDateTime35.hourOfDay();
        org.joda.time.DateTimeField dateTimeField39 = property38.getField();
        int int40 = property38.get();
        org.joda.time.LocalDateTime localDateTime41 = property38.roundHalfFloorCopy();
        long long43 = chronology30.set((org.joda.time.ReadablePartial) localDateTime41, (long) 2022);
        org.joda.time.DateTimeField dateTimeField44 = chronology30.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField45 = chronology30.minuteOfHour();
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) 100, 1L, periodType48);
        org.joda.time.Period period51 = period49.minusSeconds((-1));
        java.lang.String str52 = period49.toString();
        org.joda.time.Period period53 = period49.negated();
        int[] intArray55 = chronology30.get((org.joda.time.ReadablePeriod) period53, (long) 1969);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.monthOfYear();
        java.util.Locale.Category category58 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale59 = java.util.Locale.getDefault(category58);
        org.joda.time.LocalDateTime localDateTime60 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime62 = localDateTime60.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property63 = localDateTime60.hourOfDay();
        java.util.Locale locale64 = java.util.Locale.US;
        java.lang.String str65 = property63.getAsShortText(locale64);
        java.util.Locale.setDefault(category58, locale64);
        int int67 = property57.getMaximumTextLength(locale64);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket70 = new org.joda.time.format.DateTimeParserBucket((long) 9, chronology30, locale64, (java.lang.Integer) 15, 8);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter71 = dateTimeFormatter21.withLocale(locale64);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket72 = new org.joda.time.format.DateTimeParserBucket((long) (byte) 0, chronology15, locale64);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime11 and instant27", (dateTime11.compareTo(instant27) == 0) == dateTime11.equals(instant27));
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test173");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime10 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property13 = localDateTime10.hourOfDay();
        org.joda.time.DateTimeField dateTimeField14 = property13.getField();
        int int15 = property13.get();
        org.joda.time.LocalDateTime localDateTime16 = property13.roundHalfFloorCopy();
        long long18 = chronology5.set((org.joda.time.ReadablePartial) localDateTime16, (long) 2022);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(chronology5);
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology5);
        org.joda.time.DurationField durationField21 = chronology5.eras();
        java.util.Locale locale25 = new java.util.Locale("hi!", "clockhourOfDay", "java.io.IOException");
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket26 = new org.joda.time.format.DateTimeParserBucket((long) 42, chronology5, locale25);
        org.joda.time.DateTimeZone dateTimeZone27 = dateTimeParserBucket26.getZone();
        java.util.Locale locale28 = dateTimeParserBucket26.getLocale();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.DateTime dateTime30 = new org.joda.time.DateTime(chronology29);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.Instant instant34 = instant32.withMillis(0L);
        org.joda.time.Chronology chronology35 = instant34.getChronology();
        org.joda.time.DurationField durationField36 = chronology35.eras();
        java.util.Locale locale37 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket39 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology35, locale37, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime40 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime40.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property43 = localDateTime40.hourOfDay();
        org.joda.time.DateTimeField dateTimeField44 = property43.getField();
        int int45 = property43.get();
        org.joda.time.LocalDateTime localDateTime46 = property43.roundHalfFloorCopy();
        long long48 = chronology35.set((org.joda.time.ReadablePartial) localDateTime46, (long) 2022);
        org.joda.time.DateTime dateTime49 = dateTime30.toDateTime(chronology35);
        org.joda.time.DateTime.Property property50 = dateTime30.millisOfDay();
        org.joda.time.MutableDateTime mutableDateTime52 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime52.add((org.joda.time.ReadableDuration) duration54, (int) (short) 100);
        mutableDateTime52.setYear(10);
        mutableDateTime52.addSeconds((int) (short) 0);
        org.joda.time.MutableDateTime.Property property61 = mutableDateTime52.minuteOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = property61.getFieldType();
        org.joda.time.DateTime.Property property63 = dateTime30.property(dateTimeFieldType62);
        dateTimeParserBucket26.saveField(dateTimeFieldType62, 0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime30", (instant2.compareTo(dateTime30) == 0) == instant2.equals(dateTime30));
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test174");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration3, (int) (short) 100);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DateTime dateTime7 = new org.joda.time.DateTime(chronology6);
        int int8 = dateTime7.getYearOfCentury();
        org.joda.time.Interval interval9 = duration3.toIntervalTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.MutableDateTime mutableDateTime11 = new org.joda.time.MutableDateTime((long) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime7, (org.joda.time.ReadableInstant) mutableDateTime11);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DateTime dateTime14 = new org.joda.time.DateTime(chronology13);
        int int15 = dateTime14.getSecondOfMinute();
        int int16 = dateTime14.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str22 = mutablePeriod21.toString();
        org.joda.time.DateTime dateTime23 = dateTime14.plus((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.MutableDateTime mutableDateTime25 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.Period period34 = period29.plus((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Instant instant35 = new org.joda.time.Instant();
        org.joda.time.Instant instant37 = instant35.withMillis(0L);
        org.joda.time.Duration duration38 = period33.toDurationTo((org.joda.time.ReadableInstant) instant37);
        mutableDateTime25.add((org.joda.time.ReadableDuration) duration38, 39);
        org.joda.time.MutableDateTime.Property property41 = mutableDateTime25.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone42 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime25.setZone(dateTimeZone42);
        int int44 = mutableDateTime25.getYearOfEra();
        int int45 = mutableDateTime25.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property46 = mutableDateTime25.year();
        org.joda.time.LocalDate localDate47 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate49 = localDate47.minusMonths((int) ' ');
        org.joda.time.Chronology chronology50 = localDate47.getChronology();
        mutableDateTime25.setChronology(chronology50);
        boolean boolean52 = dateTime14.isBefore((org.joda.time.ReadableInstant) mutableDateTime25);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DateTime dateTime55 = new org.joda.time.DateTime((long) (short) 1, chronology54);
        org.joda.time.Instant instant56 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) instant56, periodType57);
        org.joda.time.DateTimeFieldType dateTimeFieldType59 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int60 = instant56.get(dateTimeFieldType59);
        java.lang.String str61 = dateTimeFieldType59.getName();
        java.lang.String str62 = dateTimeFieldType59.toString();
        boolean boolean63 = dateTime14.isSupported(dateTimeFieldType59);
        int int64 = dateTime7.get(dateTimeFieldType59);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime14 and instant35", (dateTime14.compareTo(instant35) == 0) == dateTime14.equals(instant35));
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test175");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.LocalDateTime localDateTime2 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime4 = localDateTime2.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime6 = localDateTime4.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField8 = localDateTime6.getField((int) (byte) 0);
        long long10 = dateTimeField8.roundHalfEven((long) 1);
        int int11 = dateTime1.get(dateTimeField8);
        boolean boolean12 = dateTime1.isBeforeNow();
        org.joda.time.DateTime dateTime14 = dateTime1.minusWeeks((int) (byte) 0);
        org.joda.time.DateTime dateTime16 = dateTime14.plusMinutes((int) (short) 10);
        int int17 = dateTime14.getDayOfMonth();
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime20 = localDateTime18.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property21 = localDateTime18.hourOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime18.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str25 = dateTimeFieldType24.getName();
        int int26 = localDateTime18.indexOf(dateTimeFieldType24);
        org.joda.time.LocalDateTime localDateTime28 = localDateTime18.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime30 = localDateTime18.minusSeconds((int) '#');
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime31.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property34 = localDateTime31.hourOfDay();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime31.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str38 = dateTimeFieldType37.getName();
        int int39 = localDateTime31.indexOf(dateTimeFieldType37);
        org.joda.time.LocalDateTime localDateTime41 = localDateTime31.minusSeconds(0);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime((long) (short) 1, chronology43);
        org.joda.time.Instant instant45 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableInstant) instant45, periodType46);
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadablePartial) localDateTime18, (org.joda.time.ReadablePartial) localDateTime41, periodType46);
        org.joda.time.DateTimeZone dateTimeZone49 = org.joda.time.DateTimeZone.UTC;
        long long52 = dateTimeZone49.convertLocalToUTC((long) (byte) 100, false);
        org.joda.time.LocalDateTime localDateTime53 = new org.joda.time.LocalDateTime(dateTimeZone49);
        org.joda.time.DateTime dateTime54 = localDateTime18.toDateTime(dateTimeZone49);
        org.joda.time.LocalDateTime localDateTime56 = localDateTime18.minusDays(2);
        java.lang.String str57 = localDateTime56.toString();
        org.joda.time.DateTime dateTime58 = dateTime14.withFields((org.joda.time.ReadablePartial) localDateTime56);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime14 and instant45", (dateTime14.compareTo(instant45) == 0) == dateTime14.equals(instant45));
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test176");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        org.joda.time.Duration duration8 = duration5.toDuration();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(chronology9);
        int int11 = dateTime10.getSecondOfMinute();
        int int12 = dateTime10.getYearOfEra();
        org.joda.time.DateTimeZone dateTimeZone13 = dateTime10.getZone();
        org.joda.time.MutableDateTime mutableDateTime15 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) 100, 1L, periodType18);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.Period period24 = period19.plus((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.Instant instant27 = instant25.withMillis(0L);
        org.joda.time.Duration duration28 = period23.toDurationTo((org.joda.time.ReadableInstant) instant27);
        mutableDateTime15.add((org.joda.time.ReadableDuration) duration28, 39);
        mutableDateTime15.setDayOfYear(22);
        boolean boolean33 = dateTime10.isEqual((org.joda.time.ReadableInstant) mutableDateTime15);
        org.joda.time.DateTime dateTime35 = dateTime10.withYearOfEra(50);
        org.joda.time.Period period36 = duration5.toPeriodTo((org.joda.time.ReadableInstant) dateTime10);
        org.joda.time.Duration duration38 = duration5.minus(893L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime10 and instant25", (dateTime10.compareTo(instant25) == 0) == dateTime10.equals(instant25));
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test177");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime2 = localDateTime0.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property3 = localDateTime0.hourOfDay();
        org.joda.time.DateTimeField dateTimeField4 = property3.getField();
        boolean boolean6 = property3.equals((java.lang.Object) '#');
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.DateTime dateTime8 = new org.joda.time.DateTime(chronology7);
        int int9 = dateTime8.getSecondOfMinute();
        int int10 = dateTime8.getYearOfEra();
        int int11 = property3.getDifference((org.joda.time.ReadableInstant) dateTime8);
        org.joda.time.MutableDateTime mutableDateTime12 = dateTime8.toMutableDateTimeISO();
        mutableDateTime12.setSecondOfDay(642);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Chronology chronology20 = instant19.getChronology();
        org.joda.time.DurationField durationField21 = chronology20.eras();
        java.util.Locale locale22 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket24 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology20, locale22, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime25.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property28 = localDateTime25.hourOfDay();
        org.joda.time.DateTimeField dateTimeField29 = property28.getField();
        int int30 = property28.get();
        org.joda.time.LocalDateTime localDateTime31 = property28.roundHalfFloorCopy();
        long long33 = chronology20.set((org.joda.time.ReadablePartial) localDateTime31, (long) 2022);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(chronology20);
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology20);
        org.joda.time.DurationField durationField36 = chronology20.eras();
        java.util.Locale locale40 = new java.util.Locale("hi!", "clockhourOfDay", "java.io.IOException");
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket41 = new org.joda.time.format.DateTimeParserBucket((long) 42, chronology20, locale40);
        org.joda.time.DateTimeZone dateTimeZone42 = dateTimeParserBucket41.getZone();
        int int44 = dateTimeZone42.getOffset((long) 40);
        java.lang.String str45 = dateTimeZone42.getID();
        mutableDateTime12.setZoneRetainFields(dateTimeZone42);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime8 and instant17", (dateTime8.compareTo(instant17) == 0) == dateTime8.equals(instant17));
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test178");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration3, (int) (short) 100);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DateTime dateTime7 = new org.joda.time.DateTime(chronology6);
        int int8 = dateTime7.getYearOfCentury();
        org.joda.time.Interval interval9 = duration3.toIntervalTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.MutableDateTime mutableDateTime11 = new org.joda.time.MutableDateTime((long) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime7, (org.joda.time.ReadableInstant) mutableDateTime11);
        int int13 = mutableDateTime11.getDayOfYear();
        org.joda.time.MutableDateTime mutableDateTime15 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) 100, 1L, periodType18);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.Period period24 = period19.plus((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.Instant instant27 = instant25.withMillis(0L);
        org.joda.time.Duration duration28 = period23.toDurationTo((org.joda.time.ReadableInstant) instant27);
        mutableDateTime15.add((org.joda.time.ReadableDuration) duration28, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean32 = mutableDateTime15.isSupported(dateTimeFieldType31);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.DateTime dateTime37 = new org.joda.time.DateTime((long) (short) 1, chronology36);
        org.joda.time.DateTime dateTime38 = dateTime37.toDateTime();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.DateTime dateTime41 = new org.joda.time.DateTime((long) (short) 1, chronology40);
        org.joda.time.DateTime dateTime42 = dateTime41.toDateTime();
        int int43 = dateTime38.compareTo((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime41, (org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration34.withDurationAdded((org.joda.time.ReadableDuration) duration45, 10);
        org.joda.time.Duration duration49 = duration48.toDuration();
        mutableDateTime15.add((org.joda.time.ReadableDuration) duration48);
        mutableDateTime15.setDayOfYear(1);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.DateTime dateTime56 = new org.joda.time.DateTime((long) (short) 1, chronology55);
        org.joda.time.Instant instant57 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) instant57, periodType58);
        org.joda.time.LocalDate localDate60 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate62 = localDate60.minusMonths((int) ' ');
        org.joda.time.Chronology chronology63 = localDate60.getChronology();
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 1, periodType58, chronology63);
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableInstant) mutableDateTime11, (org.joda.time.ReadableInstant) mutableDateTime15, periodType58);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.DateTime dateTime67 = new org.joda.time.DateTime(chronology66);
        org.joda.time.DateTime dateTime69 = dateTime67.plusWeeks(40);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(readableInstant70, readableInstant71, periodType72);
        org.joda.time.DateTimeZone dateTimeZone74 = null;
        org.joda.time.LocalTime localTime75 = new org.joda.time.LocalTime(dateTimeZone74);
        org.joda.time.LocalTime localTime77 = localTime75.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime79 = localTime77.plusMillis((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType80 = org.joda.time.DurationFieldType.eras();
        boolean boolean81 = localTime77.isSupported(durationFieldType80);
        boolean boolean82 = mutablePeriod73.isSupported(durationFieldType80);
        org.joda.time.Period period83 = mutablePeriod73.toPeriod();
        org.joda.time.DateTime dateTime84 = dateTime67.minus((org.joda.time.ReadablePeriod) mutablePeriod73);
        mutableDateTime11.add((org.joda.time.ReadablePeriod) mutablePeriod73, 20);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant25", (dateTime7.compareTo(instant25) == 0) == dateTime7.equals(instant25));
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test179");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((long) 100, 1L, periodType12);
        org.joda.time.Period period14 = period9.plus((org.joda.time.ReadablePeriod) period13);
        org.joda.time.Instant instant15 = new org.joda.time.Instant();
        org.joda.time.Instant instant17 = instant15.withMillis(0L);
        org.joda.time.Duration duration18 = period13.toDurationTo((org.joda.time.ReadableInstant) instant17);
        long long19 = instant17.getMillis();
        org.joda.time.Interval interval20 = duration1.toIntervalTo((org.joda.time.ReadableInstant) instant17);
        org.joda.time.DateTime dateTime21 = instant17.toDateTime();
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 100, 1L, periodType24);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.Period period30 = period25.plus((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Instant instant31 = new org.joda.time.Instant();
        org.joda.time.Instant instant33 = instant31.withMillis(0L);
        org.joda.time.Duration duration34 = period29.toDurationTo((org.joda.time.ReadableInstant) instant33);
        long long35 = instant33.getMillis();
        org.joda.time.Instant instant37 = instant33.minus((long) (byte) 1);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardSeconds((long) 49);
        org.joda.time.Instant instant41 = instant37.withDurationAdded((org.joda.time.ReadableDuration) duration39, 16);
        int int42 = instant17.compareTo((org.joda.time.ReadableInstant) instant41);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime21 and instant33", (dateTime21.compareTo(instant33) == 0) == dateTime21.equals(instant33));
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test180");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTime dateTime3 = dateTime2.toDateTime();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.DateTime dateTime6 = new org.joda.time.DateTime((long) (short) 1, chronology5);
        org.joda.time.DateTime dateTime7 = dateTime6.toDateTime();
        int int8 = dateTime3.compareTo((org.joda.time.ReadableInstant) dateTime6);
        org.joda.time.DateTime.Property property9 = dateTime3.hourOfDay();
        org.joda.time.DateTime.Property property10 = dateTime3.centuryOfEra();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DateTime dateTime14 = new org.joda.time.DateTime(chronology13);
        int int15 = dateTime14.getSecondOfMinute();
        boolean boolean16 = dateTime14.isEqualNow();
        int int17 = dateTime14.getDayOfYear();
        org.joda.time.Chronology chronology18 = dateTime14.getChronology();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology18);
        int int20 = mutablePeriod19.getDays();
        org.joda.time.DateTime dateTime21 = dateTime3.minus((org.joda.time.ReadablePeriod) mutablePeriod19);
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period32 = period27.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.Instant instant35 = instant33.withMillis(0L);
        org.joda.time.Duration duration36 = period31.toDurationTo((org.joda.time.ReadableInstant) instant35);
        mutableDateTime23.add((org.joda.time.ReadableDuration) duration36, 39);
        org.joda.time.MutableDateTime.Property property39 = mutableDateTime23.yearOfEra();
        mutableDateTime23.setWeekOfWeekyear(14);
        org.joda.time.LocalDate localDate42 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate44 = localDate42.minusMonths((int) ' ');
        org.joda.time.Chronology chronology45 = localDate42.getChronology();
        org.joda.time.DateTimeField dateTimeField46 = chronology45.minuteOfDay();
        mutableDateTime23.setChronology(chronology45);
        org.joda.time.DurationField durationField48 = chronology45.days();
        org.joda.time.DateTime dateTime49 = dateTime21.withChronology(chronology45);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime14 and instant33", (dateTime14.compareTo(instant33) == 0) == dateTime14.equals(instant33));
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test181");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(1645455600000L);
        org.joda.time.Minutes minutes2 = duration1.toStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period5 = duration4.toPeriod();
        org.joda.time.Duration duration8 = duration4.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration12, (int) (short) 100);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        int int17 = dateTime16.getYearOfCentury();
        org.joda.time.Interval interval18 = duration12.toIntervalTo((org.joda.time.ReadableInstant) dateTime16);
        org.joda.time.Duration duration19 = duration8.minus((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.Duration duration24 = duration8.withDurationAdded((org.joda.time.ReadableDuration) duration21, 54);
        org.joda.time.Duration duration25 = duration1.minus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period28 = duration27.toPeriod();
        org.joda.time.Duration duration31 = duration27.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime33 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime33.add((org.joda.time.ReadableDuration) duration35, (int) (short) 100);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime(chronology38);
        int int40 = dateTime39.getYearOfCentury();
        org.joda.time.Interval interval41 = duration35.toIntervalTo((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Duration duration42 = duration31.minus((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = duration35.toPeriodTo(readableInstant43);
        org.joda.time.Duration duration45 = duration25.plus((org.joda.time.ReadableDuration) duration35);
        org.joda.time.MutableDateTime mutableDateTime47 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((long) 100, 1L, periodType50);
        org.joda.time.PeriodType periodType54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((long) 100, 1L, periodType54);
        org.joda.time.Period period56 = period51.plus((org.joda.time.ReadablePeriod) period55);
        org.joda.time.Instant instant57 = new org.joda.time.Instant();
        org.joda.time.Instant instant59 = instant57.withMillis(0L);
        org.joda.time.Duration duration60 = period55.toDurationTo((org.joda.time.ReadableInstant) instant59);
        mutableDateTime47.add((org.joda.time.ReadableDuration) duration60, 39);
        org.joda.time.MutableDateTime.Property property63 = mutableDateTime47.secondOfMinute();
        mutableDateTime47.addYears(3);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period68 = duration67.toPeriod();
        org.joda.time.Duration duration71 = duration67.withDurationAdded((long) 38, (int) 'a');
        long long72 = duration67.getStandardMinutes();
        mutableDateTime47.add((org.joda.time.ReadableDuration) duration67);
        int int74 = duration45.compareTo((org.joda.time.ReadableDuration) duration67);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime16 and instant57", (dateTime16.compareTo(instant57) == 0) == dateTime16.equals(instant57));
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test182");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.plus(1L);
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.Period period19 = period14.plus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Instant instant20 = new org.joda.time.Instant();
        org.joda.time.Instant instant22 = instant20.withMillis(0L);
        org.joda.time.Duration duration23 = period18.toDurationTo((org.joda.time.ReadableInstant) instant22);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration23, 39);
        int int26 = duration5.compareTo((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Instant instant28 = instant2.withDurationAdded((org.joda.time.ReadableDuration) duration23, 0);
        org.joda.time.Instant instant29 = instant2.toInstant();
        org.joda.time.DateTime dateTime30 = instant29.toDateTime();
        org.joda.time.LocalTime localTime31 = dateTime30.toLocalTime();
        org.joda.time.LocalTime localTime32 = dateTime30.toLocalTime();
        org.joda.time.LocalTime localTime34 = localTime32.minusMillis(57);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime30", (instant2.compareTo(dateTime30) == 0) == instant2.equals(dateTime30));
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test183");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusDays(22);
        int int23 = dateTime1.getSecondOfMinute();
        org.joda.time.DateTime dateTime25 = dateTime1.plusYears(11);
        org.joda.time.DateTime dateTime28 = dateTime25.withDurationAdded(34999200005L, 116);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test184");
        org.joda.time.MutableDateTime mutableDateTime2 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((long) 100, 1L, periodType5);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) 100, 1L, periodType9);
        org.joda.time.Period period11 = period6.plus((org.joda.time.ReadablePeriod) period10);
        org.joda.time.Instant instant12 = new org.joda.time.Instant();
        org.joda.time.Instant instant14 = instant12.withMillis(0L);
        org.joda.time.Duration duration15 = period10.toDurationTo((org.joda.time.ReadableInstant) instant14);
        mutableDateTime2.add((org.joda.time.ReadableDuration) duration15, 39);
        org.joda.time.MutableDateTime.Property property18 = mutableDateTime2.yearOfEra();
        mutableDateTime2.setWeekOfWeekyear(14);
        org.joda.time.LocalDate localDate21 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate23 = localDate21.minusMonths((int) ' ');
        org.joda.time.Chronology chronology24 = localDate21.getChronology();
        org.joda.time.DateTimeField dateTimeField25 = chronology24.minuteOfDay();
        mutableDateTime2.setChronology(chronology24);
        org.joda.time.DurationField durationField27 = chronology24.days();
        org.joda.time.DurationField durationField28 = chronology24.eras();
        org.joda.time.LocalDate localDate29 = new org.joda.time.LocalDate((long) (byte) -1, chronology24);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField27 and durationField28", Math.signum(durationField27.compareTo(durationField28)) == -Math.signum(durationField28.compareTo(durationField27)));
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test185");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        mutablePeriod4.addYears(59);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Chronology chronology12 = instant11.getChronology();
        org.joda.time.DurationField durationField13 = chronology12.eras();
        java.util.Locale locale14 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket16 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology12, locale14, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate17 = new org.joda.time.LocalDate((long) 53, chronology12);
        org.joda.time.ReadableDuration readableDuration18 = null;
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period(readableDuration18, readableInstant19);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) 100, 1L, periodType23);
        org.joda.time.Period period26 = period24.minusSeconds((-1));
        java.lang.String str27 = period24.toString();
        org.joda.time.Period period28 = period24.toPeriod();
        org.joda.time.PeriodType periodType29 = period24.getPeriodType();
        org.joda.time.Period period30 = period20.normalizedStandard(periodType29);
        boolean boolean31 = localDate17.equals((java.lang.Object) period20);
        org.joda.time.Interval interval32 = localDate17.toInterval();
        mutablePeriod4.add((org.joda.time.ReadableInterval) interval32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardDays((long) (byte) 1);
        java.lang.String str36 = duration35.toString();
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime(chronology38);
        int int40 = dateTime39.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter41 = null;
        java.lang.String str42 = dateTime39.toString(dateTimeFormatter41);
        org.joda.time.DateTime dateTime44 = dateTime39.plusMonths(86396191);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.DateTime dateTime48 = new org.joda.time.DateTime(chronology47);
        int int49 = dateTime48.getSecondOfMinute();
        boolean boolean50 = dateTime48.isEqualNow();
        int int51 = dateTime48.getDayOfYear();
        org.joda.time.Chronology chronology52 = dateTime48.getChronology();
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology52);
        org.joda.time.DateTime dateTime54 = dateTime44.toDateTime(chronology52);
        org.joda.time.DateTime.Property property55 = dateTime44.hourOfDay();
        org.joda.time.Period period56 = duration35.toPeriodTo((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.DateTime dateTime59 = dateTime44.withDurationAdded((long) 53670306, 17);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime39", (instant9.compareTo(dateTime39) == 0) == instant9.equals(dateTime39));
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test186");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        long long3 = dateTimeZone0.adjustOffset(0L, true);
        org.joda.time.DateTimeZone dateTimeZone5 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime6 = new org.joda.time.MutableDateTime(0L, dateTimeZone5);
        int int7 = dateTimeZone0.getOffset((org.joda.time.ReadableInstant) mutableDateTime6);
        mutableDateTime6.addMillis((int) '#');
        org.joda.time.MutableDateTime mutableDateTime10 = mutableDateTime6.toMutableDateTime();
        org.joda.time.LocalDate localDate11 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate13 = localDate11.minusMonths((int) ' ');
        int int14 = localDate11.size();
        org.joda.time.DateMidnight dateMidnight15 = localDate11.toDateMidnight();
        org.joda.time.LocalDate localDate17 = localDate11.withYearOfCentury(0);
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime19.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime19.setZone(dateTimeZone36);
        org.joda.time.DateTime dateTime38 = localDate11.toDateTimeAtMidnight(dateTimeZone36);
        mutableDateTime10.setZone(dateTimeZone36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateMidnight15 and dateTime38", (dateMidnight15.compareTo(dateTime38) == 0) == dateMidnight15.equals(dateTime38));
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test187");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(1645455600000L);
        org.joda.time.Minutes minutes2 = duration1.toStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period5 = duration4.toPeriod();
        org.joda.time.Duration duration8 = duration4.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration12, (int) (short) 100);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        int int17 = dateTime16.getYearOfCentury();
        org.joda.time.Interval interval18 = duration12.toIntervalTo((org.joda.time.ReadableInstant) dateTime16);
        org.joda.time.Duration duration19 = duration8.minus((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.Duration duration24 = duration8.withDurationAdded((org.joda.time.ReadableDuration) duration21, 54);
        org.joda.time.Duration duration25 = duration1.minus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration27 = duration1.plus((long) 14);
        org.joda.time.MutableDateTime mutableDateTime29 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 100, 1L, periodType36);
        org.joda.time.Period period38 = period33.plus((org.joda.time.ReadablePeriod) period37);
        org.joda.time.Instant instant39 = new org.joda.time.Instant();
        org.joda.time.Instant instant41 = instant39.withMillis(0L);
        org.joda.time.Duration duration42 = period37.toDurationTo((org.joda.time.ReadableInstant) instant41);
        mutableDateTime29.add((org.joda.time.ReadableDuration) duration42, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean46 = mutableDateTime29.isSupported(dateTimeFieldType45);
        org.joda.time.DateTimeField dateTimeField47 = mutableDateTime29.getRoundingField();
        mutableDateTime29.addMillis(751);
        org.joda.time.LocalDateTime localDateTime50 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime50.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property53 = localDateTime50.hourOfDay();
        org.joda.time.LocalDateTime localDateTime55 = localDateTime50.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType56 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str57 = dateTimeFieldType56.getName();
        int int58 = localDateTime50.indexOf(dateTimeFieldType56);
        org.joda.time.LocalDateTime localDateTime60 = localDateTime50.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime62 = localDateTime50.minusSeconds((int) '#');
        org.joda.time.LocalDateTime localDateTime63 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime65 = localDateTime63.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property66 = localDateTime63.hourOfDay();
        org.joda.time.LocalDateTime localDateTime68 = localDateTime63.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType69 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str70 = dateTimeFieldType69.getName();
        int int71 = localDateTime63.indexOf(dateTimeFieldType69);
        org.joda.time.LocalDateTime localDateTime73 = localDateTime63.minusSeconds(0);
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.DateTime dateTime76 = new org.joda.time.DateTime((long) (short) 1, chronology75);
        org.joda.time.Instant instant77 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime76, (org.joda.time.ReadableInstant) instant77, periodType78);
        org.joda.time.Period period80 = new org.joda.time.Period((org.joda.time.ReadablePartial) localDateTime50, (org.joda.time.ReadablePartial) localDateTime73, periodType78);
        org.joda.time.Period period81 = duration1.toPeriodTo((org.joda.time.ReadableInstant) mutableDateTime29, periodType78);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime16 and instant39", (dateTime16.compareTo(instant39) == 0) == dateTime16.equals(instant39));
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test188");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType17 = dateTimeFieldType16.getRangeDurationType();
        org.joda.time.DateTime.Property property18 = dateTime15.property(dateTimeFieldType16);
        org.joda.time.DateTime dateTime20 = dateTime15.minus((long) 59);
        org.joda.time.DateTime dateTime22 = new org.joda.time.DateTime((long) 21);
        int int23 = dateTime22.getMinuteOfHour();
        int int24 = dateTime22.getWeekyear();
        int int25 = dateTime20.compareTo((org.joda.time.ReadableInstant) dateTime22);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime15", (instant11.compareTo(dateTime15) == 0) == instant11.equals(dateTime15));
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test189");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology5);
        org.joda.time.DateTimeField dateTimeField8 = chronology5.monthOfYear();
        org.joda.time.DateTimeField dateTimeField9 = chronology5.dayOfMonth();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.LocalDateTime localDateTime12 = new org.joda.time.LocalDateTime((long) (byte) -1, chronology11);
        org.joda.time.LocalDateTime localDateTime14 = localDateTime12.withYear((int) (short) -1);
        int int15 = localDateTime12.getCenturyOfEra();
        int int16 = dateTimeField9.getMaximumValue((org.joda.time.ReadablePartial) localDateTime12);
        org.joda.time.LocalDateTime localDateTime18 = localDateTime12.withDayOfYear(5);
        int int19 = localDateTime12.getCenturyOfEra();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.DateTime dateTime21 = new org.joda.time.DateTime(chronology20);
        int int22 = dateTime21.getSecondOfMinute();
        boolean boolean23 = dateTime21.isEqualNow();
        int int24 = dateTime21.getDayOfYear();
        org.joda.time.Chronology chronology25 = dateTime21.getChronology();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.DateTime dateTime28 = dateTime21.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.MutableDateTime mutableDateTime30 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime30.add((org.joda.time.ReadableDuration) duration32, (int) (short) 100);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(chronology35);
        int int37 = dateTime36.getYearOfCentury();
        org.joda.time.Interval interval38 = duration32.toIntervalTo((org.joda.time.ReadableInstant) dateTime36);
        int int39 = duration27.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardSeconds(10L);
        boolean boolean42 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.DateTime dateTime45 = new org.joda.time.DateTime((long) (short) 1, chronology44);
        org.joda.time.DateTimeZone dateTimeZone46 = null;
        org.joda.time.LocalTime localTime47 = new org.joda.time.LocalTime(dateTimeZone46);
        org.joda.time.LocalTime localTime49 = localTime47.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime51 = localTime49.plusMillis((int) (byte) 100);
        org.joda.time.DateTime dateTime52 = dateTime45.withFields((org.joda.time.ReadablePartial) localTime51);
        org.joda.time.DateTime dateTime53 = dateTime45.toDateTimeISO();
        org.joda.time.DateTime dateTime55 = new org.joda.time.DateTime((long) 100);
        org.joda.time.DateTime.Property property56 = dateTime55.monthOfYear();
        org.joda.time.DateTime dateTime57 = dateTime55.toDateTimeISO();
        boolean boolean58 = dateTime45.isAfter((org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.DateTime dateTime60 = dateTime57.withYearOfCentury(56);
        org.joda.time.DateTime dateTime62 = dateTime60.plusSeconds(54);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period64 = duration32.toPeriodFrom((org.joda.time.ReadableInstant) dateTime60, periodType63);
        org.joda.time.LocalDateTime localDateTime66 = localDateTime12.withDurationAdded((org.joda.time.ReadableDuration) duration32, 47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime21", (instant2.compareTo(dateTime21) == 0) == instant2.equals(dateTime21));
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test190");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime1.setZone(dateTimeZone18);
        int int20 = mutableDateTime1.getYearOfEra();
        int int21 = mutableDateTime1.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property22 = mutableDateTime1.year();
        org.joda.time.MutableDateTime mutableDateTime23 = property22.roundHalfEven();
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.Instant instant27 = instant25.withMillis(0L);
        org.joda.time.Chronology chronology28 = instant27.getChronology();
        org.joda.time.DurationField durationField29 = chronology28.eras();
        java.util.Locale locale30 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket32 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology28, locale30, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology34 = null;
        java.util.Locale locale35 = java.util.Locale.GERMAN;
        java.util.Locale locale36 = java.util.Locale.CANADA;
        java.lang.String str37 = locale35.getDisplayVariant(locale36);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket38 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology34, locale36);
        org.joda.time.DateTimeZone dateTimeZone39 = dateTimeParserBucket38.getZone();
        org.joda.time.Chronology chronology40 = chronology28.withZone(dateTimeZone39);
        org.joda.time.LocalTime localTime41 = org.joda.time.LocalTime.now(chronology40);
        org.joda.time.MutableDateTime mutableDateTime42 = mutableDateTime23.toMutableDateTime(chronology40);
        mutableDateTime23.addYears(53718);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant13 and mutableDateTime42", (instant13.compareTo(mutableDateTime42) == 0) == instant13.equals(mutableDateTime42));
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test191");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusHours(4);
        org.joda.time.DateTime.Property property23 = dateTime1.millisOfSecond();
        org.joda.time.DateTime dateTime24 = property23.getDateTime();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime24 and instant3", (dateTime24.compareTo(instant3) == 0) == dateTime24.equals(instant3));
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test192");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.UTC;
        java.lang.String str2 = dateTimeZone0.getNameKey((long) (byte) 0);
        int int4 = dateTimeZone0.getStandardOffset(315532800097L);
        org.joda.time.DateTimeZone dateTimeZone5 = org.joda.time.DateTimeZone.UTC;
        long long8 = dateTimeZone5.convertLocalToUTC((long) (byte) 100, false);
        org.joda.time.LocalDateTime localDateTime9 = new org.joda.time.LocalDateTime(dateTimeZone5);
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.plusSeconds(39);
        boolean boolean12 = dateTimeZone0.isLocalDateTimeGap(localDateTime11);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DateTime dateTime14 = new org.joda.time.DateTime(chronology13);
        org.joda.time.DateTime dateTime16 = dateTime14.plusWeeks(40);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period19 = duration18.toPeriod();
        org.joda.time.Duration duration22 = duration18.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime24 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime24.add((org.joda.time.ReadableDuration) duration26, (int) (short) 100);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.DateTime dateTime30 = new org.joda.time.DateTime(chronology29);
        int int31 = dateTime30.getYearOfCentury();
        org.joda.time.Interval interval32 = duration26.toIntervalTo((org.joda.time.ReadableInstant) dateTime30);
        org.joda.time.Duration duration33 = duration22.minus((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime((long) (short) 1, chronology35);
        org.joda.time.DateTime dateTime37 = dateTime36.toDateTime();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.DateTime dateTime40 = new org.joda.time.DateTime((long) (short) 1, chronology39);
        org.joda.time.DateTime dateTime41 = dateTime40.toDateTime();
        int int42 = dateTime37.compareTo((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType44 = periodType43.withDaysRemoved();
        org.joda.time.Period period45 = duration26.toPeriodTo((org.joda.time.ReadableInstant) dateTime40, periodType43);
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime16, (org.joda.time.ReadableDuration) duration26);
        org.joda.time.Period period48 = period46.minusMinutes(70);
        org.joda.time.LocalDateTime localDateTime49 = localDateTime11.minus((org.joda.time.ReadablePeriod) period48);
        org.joda.time.Instant instant52 = new org.joda.time.Instant();
        org.joda.time.Instant instant54 = instant52.withMillis(0L);
        org.joda.time.Chronology chronology55 = instant54.getChronology();
        org.joda.time.DurationField durationField56 = chronology55.eras();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology55);
        org.joda.time.DateTimeField dateTimeField58 = chronology55.monthOfYear();
        org.joda.time.DateTimeField dateTimeField59 = chronology55.dayOfMonth();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.LocalDateTime localDateTime62 = new org.joda.time.LocalDateTime((long) (byte) -1, chronology61);
        org.joda.time.LocalDateTime localDateTime64 = localDateTime62.withYear((int) (short) -1);
        int int65 = localDateTime62.getCenturyOfEra();
        int int66 = dateTimeField59.getMaximumValue((org.joda.time.ReadablePartial) localDateTime62);
        org.joda.time.LocalDateTime localDateTime68 = localDateTime62.withDayOfYear(5);
        org.joda.time.DateTimeField[] dateTimeFieldArray69 = localDateTime62.getFields();
        org.joda.time.DurationFieldType durationFieldType70 = org.joda.time.DurationFieldType.hours();
        org.joda.time.LocalDateTime localDateTime72 = localDateTime62.withFieldAdded(durationFieldType70, 51);
        org.joda.time.LocalDateTime localDateTime74 = localDateTime62.plusSeconds(893);
        boolean boolean75 = localDateTime49.isAfter((org.joda.time.ReadablePartial) localDateTime74);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime14 and instant52", (dateTime14.compareTo(instant52) == 0) == dateTime14.equals(instant52));
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test193");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology7);
        org.joda.time.DateTimeField dateTimeField9 = chronology7.year();
        org.joda.time.DateTimeField dateTimeField10 = chronology7.dayOfMonth();
        java.lang.Object obj11 = null;
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime14 = new org.joda.time.MutableDateTime(0L, dateTimeZone13);
        int int16 = dateTimeZone13.getOffsetFromLocal((long) (byte) 1);
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(obj11, dateTimeZone13);
        java.lang.String str18 = dateTimeZone13.toString();
        org.joda.time.Chronology chronology19 = chronology7.withZone(dateTimeZone13);
        int int21 = dateTimeZone13.getStandardOffset((long) 457070);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and dateTime17", (dateTime3.compareTo(dateTime17) == 0) == dateTime3.equals(dateTime17));
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test194");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        int int5 = dateTime4.getSecondOfMinute();
        boolean boolean6 = dateTime4.isEqualNow();
        int int7 = dateTime4.getDayOfYear();
        org.joda.time.Chronology chronology8 = dateTime4.getChronology();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology8);
        org.joda.time.DateTimeField dateTimeField10 = chronology8.year();
        org.joda.time.DateTimeZone dateTimeZone11 = chronology8.getZone();
        java.lang.String str13 = dateTimeZone11.getShortName((long) 53639537);
        org.joda.time.LocalDateTime localDateTime14 = new org.joda.time.LocalDateTime((long) (byte) -1, dateTimeZone11);
        org.joda.time.MutableDateTime mutableDateTime15 = org.joda.time.MutableDateTime.now(dateTimeZone11);
        org.joda.time.Instant instant19 = new org.joda.time.Instant();
        org.joda.time.Instant instant21 = instant19.withMillis(0L);
        org.joda.time.Chronology chronology22 = instant21.getChronology();
        org.joda.time.DurationField durationField23 = chronology22.eras();
        java.util.Locale locale24 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket26 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology22, locale24, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime27 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime29 = localDateTime27.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property30 = localDateTime27.hourOfDay();
        org.joda.time.DateTimeField dateTimeField31 = property30.getField();
        int int32 = property30.get();
        org.joda.time.LocalDateTime localDateTime33 = property30.roundHalfFloorCopy();
        long long35 = chronology22.set((org.joda.time.ReadablePartial) localDateTime33, (long) 2022);
        org.joda.time.DateTimeField dateTimeField36 = chronology22.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField37 = chronology22.minuteOfHour();
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((long) 100, 1L, periodType40);
        org.joda.time.Period period43 = period41.minusSeconds((-1));
        java.lang.String str44 = period41.toString();
        org.joda.time.Period period45 = period41.negated();
        int[] intArray47 = chronology22.get((org.joda.time.ReadablePeriod) period45, (long) 1969);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property49 = localDateTime48.monthOfYear();
        java.util.Locale.Category category50 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale51 = java.util.Locale.getDefault(category50);
        org.joda.time.LocalDateTime localDateTime52 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime54 = localDateTime52.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property55 = localDateTime52.hourOfDay();
        java.util.Locale locale56 = java.util.Locale.US;
        java.lang.String str57 = property55.getAsShortText(locale56);
        java.util.Locale.setDefault(category50, locale56);
        int int59 = property49.getMaximumTextLength(locale56);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket62 = new org.joda.time.format.DateTimeParserBucket((long) 9, chronology22, locale56, (java.lang.Integer) 15, 8);
        java.lang.String str63 = dateTimeZone11.getName((long) 206, locale56);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime4 and instant19", (dateTime4.compareTo(instant19) == 0) == dateTime4.equals(instant19));
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test195");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getMillisOfSecond();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period5 = duration4.toPeriod();
        org.joda.time.Duration duration8 = duration4.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration12, (int) (short) 100);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        int int17 = dateTime16.getYearOfCentury();
        org.joda.time.Interval interval18 = duration12.toIntervalTo((org.joda.time.ReadableInstant) dateTime16);
        org.joda.time.Duration duration19 = duration8.minus((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Hours hours20 = duration8.toStandardHours();
        org.joda.time.LocalDate localDate21 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate23 = localDate21.plusMonths(43);
        org.joda.time.LocalDate localDate25 = localDate23.withDayOfYear(12);
        org.joda.time.LocalDate localDate26 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate28 = localDate26.minusMonths((int) ' ');
        org.joda.time.ReadableDuration readableDuration29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period(readableDuration29, readableInstant30);
        org.joda.time.Period period33 = period31.withDays((int) (byte) 1);
        org.joda.time.LocalDate localDate34 = localDate28.plus((org.joda.time.ReadablePeriod) period33);
        org.joda.time.LocalDate localDate36 = localDate34.minusMonths((-292275054));
        org.joda.time.LocalDate localDate38 = localDate34.minusYears(21);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.PeriodType periodType40 = periodType39.withMonthsRemoved();
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadablePartial) localDate25, (org.joda.time.ReadablePartial) localDate38, periodType39);
        org.joda.time.PeriodType periodType42 = periodType39.withHoursRemoved();
        org.joda.time.PeriodType periodType43 = periodType39.withDaysRemoved();
        org.joda.time.Period period44 = duration8.toPeriod(periodType43);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.DateTime dateTime49 = new org.joda.time.DateTime((long) (short) 1, chronology48);
        org.joda.time.Instant instant50 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime49, (org.joda.time.ReadableInstant) instant50, periodType51);
        org.joda.time.Instant instant54 = new org.joda.time.Instant();
        org.joda.time.Instant instant56 = instant54.withMillis(0L);
        org.joda.time.Chronology chronology57 = instant56.getChronology();
        org.joda.time.DurationField durationField58 = chronology57.eras();
        java.util.Locale locale59 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket61 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology57, locale59, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime62 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime64 = localDateTime62.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property65 = localDateTime62.hourOfDay();
        org.joda.time.DateTimeField dateTimeField66 = property65.getField();
        int int67 = property65.get();
        org.joda.time.LocalDateTime localDateTime68 = property65.roundHalfFloorCopy();
        long long70 = chronology57.set((org.joda.time.ReadablePartial) localDateTime68, (long) 2022);
        org.joda.time.DateTimeField dateTimeField71 = chronology57.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField72 = chronology57.minuteOfHour();
        org.joda.time.PeriodType periodType75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period((long) 100, 1L, periodType75);
        org.joda.time.Period period78 = period76.minusSeconds((-1));
        java.lang.String str79 = period76.toString();
        org.joda.time.Period period80 = period76.negated();
        int[] intArray82 = chronology57.get((org.joda.time.ReadablePeriod) period80, (long) 1969);
        org.joda.time.DateTimeField dateTimeField83 = chronology57.halfdayOfDay();
        org.joda.time.Period period84 = new org.joda.time.Period((long) 894, 48L, periodType51, chronology57);
        org.joda.time.PeriodType periodType85 = periodType51.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime1, (org.joda.time.ReadableDuration) duration8, periodType51);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime16 and instant50", (dateTime16.compareTo(instant50) == 0) == dateTime16.equals(instant50));
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test196");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        org.joda.time.Duration duration8 = duration5.toDuration();
        java.lang.String str9 = duration5.toString();
        org.joda.time.Duration duration11 = duration5.withMillis((long) (byte) 10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getSecondOfMinute();
        int int15 = dateTime13.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str21 = mutablePeriod20.toString();
        org.joda.time.DateTime dateTime22 = dateTime13.plus((org.joda.time.ReadablePeriod) mutablePeriod20);
        org.joda.time.MutableDateTime mutableDateTime24 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((long) 100, 1L, periodType27);
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((long) 100, 1L, periodType31);
        org.joda.time.Period period33 = period28.plus((org.joda.time.ReadablePeriod) period32);
        org.joda.time.Instant instant34 = new org.joda.time.Instant();
        org.joda.time.Instant instant36 = instant34.withMillis(0L);
        org.joda.time.Duration duration37 = period32.toDurationTo((org.joda.time.ReadableInstant) instant36);
        mutableDateTime24.add((org.joda.time.ReadableDuration) duration37, 39);
        org.joda.time.MutableDateTime.Property property40 = mutableDateTime24.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime24.setZone(dateTimeZone41);
        int int43 = mutableDateTime24.getYearOfEra();
        int int44 = mutableDateTime24.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property45 = mutableDateTime24.year();
        org.joda.time.LocalDate localDate46 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate48 = localDate46.minusMonths((int) ' ');
        org.joda.time.Chronology chronology49 = localDate46.getChronology();
        mutableDateTime24.setChronology(chronology49);
        boolean boolean51 = dateTime13.isBefore((org.joda.time.ReadableInstant) mutableDateTime24);
        int int52 = dateTime13.getWeekyear();
        org.joda.time.Chronology chronology53 = dateTime13.getChronology();
        org.joda.time.DurationField durationField54 = chronology53.weeks();
        org.joda.time.Period period55 = duration11.toPeriod(chronology53);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and instant34", (dateTime13.compareTo(instant34) == 0) == dateTime13.equals(instant34));
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test197");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTime.Property property3 = dateTime2.dayOfWeek();
        org.joda.time.LocalDate localDate4 = dateTime2.toLocalDate();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period7 = duration6.toPeriod();
        org.joda.time.Duration duration10 = duration6.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime12 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime12.add((org.joda.time.ReadableDuration) duration14, (int) (short) 100);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.DateTime dateTime18 = new org.joda.time.DateTime(chronology17);
        int int19 = dateTime18.getYearOfCentury();
        org.joda.time.Interval interval20 = duration14.toIntervalTo((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.Duration duration21 = duration10.minus((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period26 = duration25.toPeriod();
        org.joda.time.Duration duration29 = duration25.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration29, readableInstant30);
        org.joda.time.MutableDateTime mutableDateTime33 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 100, 1L, periodType36);
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((long) 100, 1L, periodType40);
        org.joda.time.Period period42 = period37.plus((org.joda.time.ReadablePeriod) period41);
        org.joda.time.Instant instant43 = new org.joda.time.Instant();
        org.joda.time.Instant instant45 = instant43.withMillis(0L);
        org.joda.time.Duration duration46 = period41.toDurationTo((org.joda.time.ReadableInstant) instant45);
        mutableDateTime33.add((org.joda.time.ReadableDuration) duration46, 39);
        org.joda.time.MutableDateTime.Property property49 = mutableDateTime33.yearOfEra();
        mutableDateTime33.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property52 = mutableDateTime33.minuteOfDay();
        java.util.Date date53 = mutableDateTime33.toDate();
        org.joda.time.Interval interval54 = duration29.toIntervalFrom((org.joda.time.ReadableInstant) mutableDateTime33);
        mutablePeriod23.add((org.joda.time.ReadableInterval) interval54);
        mutablePeriod23.addMillis(8);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime18 and instant43", (dateTime18.compareTo(instant43) == 0) == dateTime18.equals(instant43));
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test198");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology7);
        org.joda.time.DateTimeField dateTimeField9 = chronology7.year();
        org.joda.time.DateTimeField dateTimeField10 = chronology7.dayOfMonth();
        java.lang.Object obj11 = null;
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime14 = new org.joda.time.MutableDateTime(0L, dateTimeZone13);
        int int16 = dateTimeZone13.getOffsetFromLocal((long) (byte) 1);
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(obj11, dateTimeZone13);
        java.lang.String str18 = dateTimeZone13.toString();
        org.joda.time.Chronology chronology19 = chronology7.withZone(dateTimeZone13);
        org.joda.time.DateTimeField dateTimeField20 = chronology19.secondOfMinute();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and dateTime17", (dateTime3.compareTo(dateTime17) == 0) == dateTime3.equals(dateTime17));
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test199");
        org.joda.time.LocalDate localDate0 = new org.joda.time.LocalDate();
        int int1 = localDate0.getDayOfMonth();
        org.joda.time.LocalDate localDate3 = localDate0.plusYears(1);
        org.joda.time.DateTime dateTime4 = localDate3.toDateTimeAtStartOfDay();
        org.joda.time.LocalDate localDate6 = localDate3.plusYears(6);
        org.joda.time.LocalDate localDate7 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property8 = localDate7.dayOfMonth();
        org.joda.time.Chronology chronology9 = localDate7.getChronology();
        org.joda.time.LocalDate.Property property10 = localDate7.dayOfWeek();
        org.joda.time.LocalDate localDate12 = localDate7.plusWeeks(56);
        org.joda.time.LocalDate localDate14 = localDate7.plusMonths(41);
        org.joda.time.LocalDate localDate16 = localDate14.minusMonths(16);
        org.joda.time.MutableDateTime mutableDateTime18 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((long) 100, 1L, periodType21);
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) 100, 1L, periodType25);
        org.joda.time.Period period27 = period22.plus((org.joda.time.ReadablePeriod) period26);
        org.joda.time.Instant instant28 = new org.joda.time.Instant();
        org.joda.time.Instant instant30 = instant28.withMillis(0L);
        org.joda.time.Duration duration31 = period26.toDurationTo((org.joda.time.ReadableInstant) instant30);
        mutableDateTime18.add((org.joda.time.ReadableDuration) duration31, 39);
        org.joda.time.MutableDateTime.Property property34 = mutableDateTime18.secondOfMinute();
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime18.minuteOfHour();
        org.joda.time.MutableDateTime mutableDateTime37 = property35.addWrapField(6);
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.UTC;
        java.lang.String str40 = dateTimeZone38.getNameKey((long) (byte) 0);
        mutableDateTime37.setZoneRetainFields(dateTimeZone38);
        java.lang.String str43 = dateTimeZone38.getNameKey((long) 3);
        org.joda.time.DateTime dateTime44 = localDate14.toDateTimeAtStartOfDay(dateTimeZone38);
        java.lang.String str46 = dateTimeZone38.getShortName((long) 120);
        org.joda.time.DateMidnight dateMidnight47 = localDate3.toDateMidnight(dateTimeZone38);
        org.joda.time.LocalDate localDate49 = localDate3.withYear(53722178);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime4 and dateMidnight47", (dateTime4.compareTo(dateMidnight47) == 0) == dateTime4.equals(dateMidnight47));
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test200");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        int int5 = dateTime4.getSecondOfMinute();
        boolean boolean6 = dateTime4.isEqualNow();
        int int7 = dateTime4.getDayOfYear();
        org.joda.time.Chronology chronology8 = dateTime4.getChronology();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology8);
        org.joda.time.DateTimeField dateTimeField10 = chronology8.year();
        org.joda.time.DateTimeZone dateTimeZone11 = chronology8.getZone();
        java.lang.String str13 = dateTimeZone11.getShortName((long) 53639537);
        org.joda.time.LocalDateTime localDateTime14 = new org.joda.time.LocalDateTime((long) (byte) -1, dateTimeZone11);
        org.joda.time.Chronology chronology16 = null;
        java.util.Locale locale17 = java.util.Locale.GERMAN;
        java.util.Locale locale18 = java.util.Locale.CANADA;
        java.lang.String str19 = locale17.getDisplayVariant(locale18);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket20 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology16, locale18);
        org.joda.time.DateTimeZone dateTimeZone21 = dateTimeParserBucket20.getZone();
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period32 = period27.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.Instant instant35 = instant33.withMillis(0L);
        org.joda.time.Duration duration36 = period31.toDurationTo((org.joda.time.ReadableInstant) instant35);
        mutableDateTime23.add((org.joda.time.ReadableDuration) duration36, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean40 = mutableDateTime23.isSupported(dateTimeFieldType39);
        org.joda.time.DurationFieldType durationFieldType41 = dateTimeFieldType39.getDurationType();
        java.util.Locale locale43 = java.util.Locale.CANADA;
        dateTimeParserBucket20.saveField(dateTimeFieldType39, "2022", locale43);
        org.joda.time.DurationFieldType durationFieldType45 = dateTimeFieldType39.getDurationType();
        boolean boolean46 = localDateTime14.isSupported(durationFieldType45);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime4 and instant33", (dateTime4.compareTo(instant33) == 0) == dateTime4.equals(instant33));
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test201");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration3, (int) (short) 100);
        mutableDateTime1.setYear(10);
        mutableDateTime1.addSeconds((int) (short) 0);
        org.joda.time.MutableDateTime.Property property10 = mutableDateTime1.minuteOfHour();
        org.joda.time.MutableDateTime.Property property11 = mutableDateTime1.monthOfYear();
        org.joda.time.MutableDateTime mutableDateTime12 = property11.getMutableDateTime();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DateTime dateTime14 = new org.joda.time.DateTime(chronology13);
        int int15 = dateTime14.getSecondOfMinute();
        boolean boolean16 = dateTime14.isEqualNow();
        int int17 = dateTime14.getDayOfYear();
        org.joda.time.LocalTime localTime18 = dateTime14.toLocalTime();
        org.joda.time.DateTime dateTime20 = dateTime14.withMillisOfSecond((int) (byte) 0);
        boolean boolean21 = mutableDateTime12.isAfter((org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.DateTime.Property property22 = dateTime20.yearOfEra();
        org.joda.time.LocalDateTime localDateTime23 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property24 = localDateTime23.monthOfYear();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime((long) (short) 1, chronology26);
        org.joda.time.Instant instant28 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) instant28, periodType29);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int32 = instant28.get(dateTimeFieldType31);
        org.joda.time.LocalDateTime localDateTime34 = localDateTime23.withField(dateTimeFieldType31, 39);
        org.joda.time.DateTime dateTime35 = dateTime20.withFields((org.joda.time.ReadablePartial) localDateTime34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime14 and instant28", (dateTime14.compareTo(instant28) == 0) == dateTime14.equals(instant28));
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test202");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology5);
        org.joda.time.DateTimeField dateTimeField8 = chronology5.monthOfYear();
        org.joda.time.DurationField durationField9 = dateTimeField8.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField9, and durationField6", !(durationField6.compareTo(durationField9) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField9.compareTo(durationField6))));
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test203");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology7);
        org.joda.time.DateTimeField dateTimeField9 = chronology7.year();
        org.joda.time.DateTimeField dateTimeField10 = chronology7.dayOfMonth();
        org.joda.time.DurationField durationField11 = chronology7.halfdays();
        org.joda.time.DateTimeField dateTimeField12 = chronology7.weekyear();
        org.joda.time.DurationField durationField13 = chronology7.eras();
        org.joda.time.ReadableDuration readableDuration14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period(readableDuration14, readableInstant15);
        org.joda.time.Period period18 = period16.withDays((int) (byte) 1);
        org.joda.time.Duration duration19 = period18.toStandardDuration();
        long long22 = chronology7.add((org.joda.time.ReadablePeriod) period18, (-1900799884L), 916);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField11 and durationField13", Math.signum(durationField11.compareTo(durationField13)) == -Math.signum(durationField13.compareTo(durationField11)));
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test204");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime((long) (short) 1, chronology3);
        org.joda.time.DateTime dateTime5 = dateTime4.toDateTime();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.DateTime dateTime8 = new org.joda.time.DateTime((long) (short) 1, chronology7);
        org.joda.time.DateTime dateTime9 = dateTime8.toDateTime();
        int int10 = dateTime5.compareTo((org.joda.time.ReadableInstant) dateTime8);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration15 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration12, 10);
        java.lang.String str16 = duration1.toString();
        org.joda.time.Period period17 = duration1.toPeriod();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology18);
        int int20 = dateTime19.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter21 = null;
        java.lang.String str22 = dateTime19.toString(dateTimeFormatter21);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime19, periodType23);
        org.joda.time.LocalDate localDate25 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property26 = localDate25.dayOfMonth();
        org.joda.time.Chronology chronology27 = localDate25.getChronology();
        org.joda.time.LocalDate.Property property28 = localDate25.dayOfWeek();
        org.joda.time.LocalDate localDate30 = localDate25.plusWeeks(56);
        org.joda.time.MutableDateTime mutableDateTime32 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((long) 100, 1L, periodType35);
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((long) 100, 1L, periodType39);
        org.joda.time.Period period41 = period36.plus((org.joda.time.ReadablePeriod) period40);
        org.joda.time.Instant instant42 = new org.joda.time.Instant();
        org.joda.time.Instant instant44 = instant42.withMillis(0L);
        org.joda.time.Duration duration45 = period40.toDurationTo((org.joda.time.ReadableInstant) instant44);
        mutableDateTime32.add((org.joda.time.ReadableDuration) duration45, 39);
        org.joda.time.MutableDateTime.Property property48 = mutableDateTime32.secondOfMinute();
        org.joda.time.MutableDateTime.Property property49 = mutableDateTime32.minuteOfHour();
        org.joda.time.MutableDateTime.Property property50 = mutableDateTime32.weekyear();
        org.joda.time.DateTime dateTime51 = localDate30.toDateTime((org.joda.time.ReadableInstant) mutableDateTime32);
        org.joda.time.Interval interval52 = duration1.toIntervalTo((org.joda.time.ReadableInstant) dateTime51);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime19 and instant42", (dateTime19.compareTo(instant42) == 0) == dateTime19.equals(instant42));
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test205");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.LocalTime localTime4 = new org.joda.time.LocalTime(dateTimeZone3);
        org.joda.time.LocalTime localTime6 = localTime4.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime8 = localTime6.plusMillis((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = dateTime2.withFields((org.joda.time.ReadablePartial) localTime8);
        int int10 = dateTime9.getSecondOfDay();
        boolean boolean12 = dateTime9.isBefore((long) '#');
        java.util.TimeZone timeZone13 = java.util.TimeZone.getDefault();
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.forTimeZone(timeZone13);
        java.util.TimeZone.setDefault(timeZone13);
        timeZone13.setRawOffset((int) (byte) -1);
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.forTimeZone(timeZone13);
        org.joda.time.DateTime dateTime19 = dateTime9.withZoneRetainFields(dateTimeZone18);
        org.joda.time.LocalDate localDate20 = org.joda.time.LocalDate.now(dateTimeZone18);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime9 and dateTime19", (dateTime9.compareTo(dateTime19) == 0) == dateTime9.equals(dateTime19));
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test206");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.MutableDateTime.Property property18 = mutableDateTime1.minuteOfHour();
        java.lang.String str19 = property18.getAsShortText();
        java.lang.String str20 = property18.getAsString();
        org.joda.time.MutableDateTime mutableDateTime21 = property18.roundFloor();
        org.joda.time.MutableDateTime.Property property22 = mutableDateTime21.minuteOfHour();
        org.joda.time.MutableDateTime mutableDateTime24 = property22.add(69);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 1);
        long long27 = duration26.getStandardSeconds();
        org.joda.time.Days days28 = duration26.toStandardDays();
        org.joda.time.MutableDateTime mutableDateTime30 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime30.add((org.joda.time.ReadableDuration) duration32, (int) (short) 100);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(chronology35);
        int int37 = dateTime36.getYearOfCentury();
        org.joda.time.Interval interval38 = duration32.toIntervalTo((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period41 = duration40.toPeriod();
        org.joda.time.Duration duration44 = duration40.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration44, readableInstant45);
        long long47 = duration44.getStandardDays();
        org.joda.time.Duration duration48 = duration44.toDuration();
        org.joda.time.Duration duration49 = duration32.minus((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration50 = duration26.minus((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration53 = duration32.withDurationAdded((-1511999969L), (int) (short) 1);
        mutableDateTime24.add((org.joda.time.ReadableDuration) duration53);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime36", (instant11.compareTo(dateTime36) == 0) == instant11.equals(dateTime36));
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test207");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str9 = mutablePeriod8.toString();
        org.joda.time.DateTime dateTime10 = dateTime1.plus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.DateTime.Property property11 = dateTime1.weekyear();
        org.joda.time.MutableDateTime mutableDateTime12 = dateTime1.toMutableDateTimeISO();
        org.joda.time.Instant instant14 = new org.joda.time.Instant();
        org.joda.time.Instant instant16 = instant14.withMillis(0L);
        org.joda.time.Chronology chronology17 = instant16.getChronology();
        org.joda.time.DurationField durationField18 = chronology17.eras();
        java.util.Locale locale19 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket21 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology17, locale19, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology23 = null;
        java.util.Locale locale24 = java.util.Locale.GERMAN;
        java.util.Locale locale25 = java.util.Locale.CANADA;
        java.lang.String str26 = locale24.getDisplayVariant(locale25);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket27 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology23, locale25);
        org.joda.time.DateTimeZone dateTimeZone28 = dateTimeParserBucket27.getZone();
        org.joda.time.Chronology chronology29 = chronology17.withZone(dateTimeZone28);
        org.joda.time.LocalDate localDate30 = new org.joda.time.LocalDate(chronology17);
        org.joda.time.DateTimeZone dateTimeZone31 = chronology17.getZone();
        mutableDateTime12.setZoneRetainFields(dateTimeZone31);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant14", (dateTime1.compareTo(instant14) == 0) == dateTime1.equals(instant14));
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test208");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.DateTime dateTime16 = dateTime15.toDateTimeISO();
        org.joda.time.DateTime dateTime18 = dateTime15.minusDays(11);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime15", (instant11.compareTo(dateTime15) == 0) == instant11.equals(dateTime15));
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test209");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration3, (int) (short) 100);
        mutableDateTime1.setYear(10);
        mutableDateTime1.addSeconds((int) (short) 0);
        org.joda.time.MutableDateTime.Property property10 = mutableDateTime1.minuteOfHour();
        org.joda.time.MutableDateTime.Property property11 = mutableDateTime1.monthOfYear();
        org.joda.time.MutableDateTime mutableDateTime12 = property11.getMutableDateTime();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DateTime dateTime14 = new org.joda.time.DateTime(chronology13);
        int int15 = dateTime14.getSecondOfMinute();
        boolean boolean16 = dateTime14.isEqualNow();
        int int17 = dateTime14.getDayOfYear();
        org.joda.time.LocalTime localTime18 = dateTime14.toLocalTime();
        org.joda.time.DateTime dateTime20 = dateTime14.withMillisOfSecond((int) (byte) 0);
        boolean boolean21 = mutableDateTime12.isAfter((org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period32 = period27.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.Instant instant35 = instant33.withMillis(0L);
        org.joda.time.Duration duration36 = period31.toDurationTo((org.joda.time.ReadableInstant) instant35);
        mutableDateTime23.add((org.joda.time.ReadableDuration) duration36, 39);
        org.joda.time.MutableDateTime.Property property39 = mutableDateTime23.secondOfMinute();
        org.joda.time.MutableDateTime.Property property40 = mutableDateTime23.minuteOfHour();
        org.joda.time.MutableDateTime mutableDateTime42 = property40.addWrapField(6);
        org.joda.time.DateTimeZone dateTimeZone43 = org.joda.time.DateTimeZone.UTC;
        java.lang.String str45 = dateTimeZone43.getNameKey((long) (byte) 0);
        mutableDateTime42.setZoneRetainFields(dateTimeZone43);
        mutableDateTime12.setZone(dateTimeZone43);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime14 and instant33", (dateTime14.compareTo(instant33) == 0) == dateTime14.equals(instant33));
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test210");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        int int5 = dateTime4.getSecondOfMinute();
        boolean boolean6 = dateTime4.isEqualNow();
        int int7 = dateTime4.getDayOfYear();
        org.joda.time.Chronology chronology8 = dateTime4.getChronology();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology8);
        org.joda.time.DateTimeField dateTimeField10 = chronology8.year();
        org.joda.time.DateTimeZone dateTimeZone11 = chronology8.getZone();
        java.lang.String str13 = dateTimeZone11.getShortName((long) 53639537);
        org.joda.time.LocalDateTime localDateTime14 = new org.joda.time.LocalDateTime((long) (byte) -1, dateTimeZone11);
        org.joda.time.MutableDateTime mutableDateTime15 = org.joda.time.MutableDateTime.now(dateTimeZone11);
        org.joda.time.LocalDate localDate16 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property17 = localDate16.dayOfMonth();
        org.joda.time.Chronology chronology18 = localDate16.getChronology();
        org.joda.time.LocalDate.Property property19 = localDate16.dayOfWeek();
        org.joda.time.LocalDate localDate21 = localDate16.plusWeeks(56);
        org.joda.time.LocalDate localDate23 = localDate16.plusMonths(41);
        org.joda.time.LocalDate localDate25 = localDate23.minusMonths(16);
        org.joda.time.MutableDateTime mutableDateTime27 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((long) 100, 1L, periodType34);
        org.joda.time.Period period36 = period31.plus((org.joda.time.ReadablePeriod) period35);
        org.joda.time.Instant instant37 = new org.joda.time.Instant();
        org.joda.time.Instant instant39 = instant37.withMillis(0L);
        org.joda.time.Duration duration40 = period35.toDurationTo((org.joda.time.ReadableInstant) instant39);
        mutableDateTime27.add((org.joda.time.ReadableDuration) duration40, 39);
        org.joda.time.MutableDateTime.Property property43 = mutableDateTime27.secondOfMinute();
        org.joda.time.MutableDateTime.Property property44 = mutableDateTime27.minuteOfHour();
        org.joda.time.MutableDateTime mutableDateTime46 = property44.addWrapField(6);
        org.joda.time.DateTimeZone dateTimeZone47 = org.joda.time.DateTimeZone.UTC;
        java.lang.String str49 = dateTimeZone47.getNameKey((long) (byte) 0);
        mutableDateTime46.setZoneRetainFields(dateTimeZone47);
        java.lang.String str52 = dateTimeZone47.getNameKey((long) 3);
        org.joda.time.DateTime dateTime53 = localDate23.toDateTimeAtStartOfDay(dateTimeZone47);
        org.joda.time.LocalDate.Property property54 = localDate23.dayOfWeek();
        org.joda.time.MutableDateTime mutableDateTime56 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((long) 100, 1L, periodType59);
        org.joda.time.PeriodType periodType63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((long) 100, 1L, periodType63);
        org.joda.time.Period period65 = period60.plus((org.joda.time.ReadablePeriod) period64);
        org.joda.time.Instant instant66 = new org.joda.time.Instant();
        org.joda.time.Instant instant68 = instant66.withMillis(0L);
        org.joda.time.Duration duration69 = period64.toDurationTo((org.joda.time.ReadableInstant) instant68);
        mutableDateTime56.add((org.joda.time.ReadableDuration) duration69, 39);
        org.joda.time.MutableDateTime.Property property72 = mutableDateTime56.yearOfEra();
        mutableDateTime56.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property75 = mutableDateTime56.minuteOfDay();
        long long76 = property54.getDifferenceAsLong((org.joda.time.ReadableInstant) mutableDateTime56);
        mutableDateTime15.setMillis((org.joda.time.ReadableInstant) mutableDateTime56);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime4 and instant37", (dateTime4.compareTo(instant37) == 0) == dateTime4.equals(instant37));
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test211");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTime dateTime3 = dateTime2.toDateTime();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.DateTime dateTime6 = new org.joda.time.DateTime((long) (short) 1, chronology5);
        org.joda.time.DateTime dateTime7 = dateTime6.toDateTime();
        int int8 = dateTime3.compareTo((org.joda.time.ReadableInstant) dateTime6);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime6, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.DateMidnight dateMidnight12 = dateTime6.toDateMidnight();
        org.joda.time.LocalDate localDate13 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate15 = localDate13.minusMonths((int) ' ');
        org.joda.time.Chronology chronology16 = localDate13.getChronology();
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate19 = localDate13.withFieldAdded(durationFieldType17, (int) (byte) 100);
        org.joda.time.LocalDate localDate21 = localDate19.minusMonths(55);
        boolean boolean22 = dateTime6.equals((java.lang.Object) localDate19);
        org.joda.time.DateTime dateTime24 = dateTime6.withSecondOfMinute(12);
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.UTC;
        int int27 = dateTimeZone25.getStandardOffset((long) 894);
        org.joda.time.DateTime dateTime28 = dateTime24.toDateTime(dateTimeZone25);
        long long30 = dateTimeZone25.nextTransition(45747072000022L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime24 and dateTime28", (dateTime24.compareTo(dateTime28) == 0) == dateTime24.equals(dateTime28));
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test212");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean18 = mutableDateTime1.isSupported(dateTimeFieldType17);
        boolean boolean19 = mutableDateTime1.isBeforeNow();
        int int20 = mutableDateTime1.getSecondOfDay();
        org.joda.time.DateTime dateTime22 = new org.joda.time.DateTime((long) 100);
        org.joda.time.DateTime.Property property23 = dateTime22.monthOfYear();
        org.joda.time.DateTime dateTime24 = dateTime22.toDateTimeISO();
        mutableDateTime1.setMillis((org.joda.time.ReadableInstant) dateTime22);
        java.lang.Object obj26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime(obj26);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime28.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime32 = localDateTime30.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField34 = localDateTime32.getField((int) (byte) 0);
        long long36 = dateTimeField34.roundHalfEven((long) 1);
        int int37 = dateTime27.get(dateTimeField34);
        boolean boolean38 = dateTime27.isBeforeNow();
        org.joda.time.DateTime.Property property39 = dateTime27.weekOfWeekyear();
        org.joda.time.DateTime dateTime40 = dateTime27.toDateTime();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.DateTime dateTime45 = new org.joda.time.DateTime((long) (short) 1, chronology44);
        org.joda.time.DateTime dateTime46 = dateTime45.toDateTime();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.DateTime dateTime49 = new org.joda.time.DateTime((long) (short) 1, chronology48);
        org.joda.time.DateTime dateTime50 = dateTime49.toDateTime();
        int int51 = dateTime46.compareTo((org.joda.time.ReadableInstant) dateTime49);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime49, (org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration56 = duration42.withDurationAdded((org.joda.time.ReadableDuration) duration53, 10);
        long long57 = duration56.getMillis();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period60 = duration59.toPeriod();
        org.joda.time.Duration duration63 = duration59.withDurationAdded((long) 38, (int) 'a');
        int int64 = duration56.compareTo((org.joda.time.ReadableDuration) duration63);
        org.joda.time.DateTime dateTime65 = dateTime40.minus((org.joda.time.ReadableDuration) duration56);
        boolean boolean66 = dateTime22.isAfter((org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.DateTime dateTime68 = dateTime65.minusMinutes(895);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime27", (instant11.compareTo(dateTime27) == 0) == instant11.equals(dateTime27));
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test213");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType17 = dateTimeFieldType16.getRangeDurationType();
        org.joda.time.DateTime.Property property18 = dateTime15.property(dateTimeFieldType16);
        org.joda.time.LocalTime localTime19 = dateTime15.toLocalTime();
        org.joda.time.DateTime dateTime21 = dateTime15.withHourOfDay(0);
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period32 = period27.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.Instant instant35 = instant33.withMillis(0L);
        org.joda.time.Duration duration36 = period31.toDurationTo((org.joda.time.ReadableInstant) instant35);
        mutableDateTime23.add((org.joda.time.ReadableDuration) duration36, 39);
        org.joda.time.MutableDateTime.Property property39 = mutableDateTime23.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime23.setZone(dateTimeZone40);
        int int42 = mutableDateTime23.getYearOfEra();
        int int43 = mutableDateTime23.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property44 = mutableDateTime23.year();
        org.joda.time.MutableDateTime mutableDateTime45 = property44.roundHalfEven();
        org.joda.time.Instant instant47 = new org.joda.time.Instant();
        org.joda.time.Instant instant49 = instant47.withMillis(0L);
        org.joda.time.Chronology chronology50 = instant49.getChronology();
        org.joda.time.DurationField durationField51 = chronology50.eras();
        java.util.Locale locale52 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket54 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology50, locale52, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology56 = null;
        java.util.Locale locale57 = java.util.Locale.GERMAN;
        java.util.Locale locale58 = java.util.Locale.CANADA;
        java.lang.String str59 = locale57.getDisplayVariant(locale58);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket60 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology56, locale58);
        org.joda.time.DateTimeZone dateTimeZone61 = dateTimeParserBucket60.getZone();
        org.joda.time.Chronology chronology62 = chronology50.withZone(dateTimeZone61);
        org.joda.time.LocalTime localTime63 = org.joda.time.LocalTime.now(chronology62);
        org.joda.time.MutableDateTime mutableDateTime64 = mutableDateTime45.toMutableDateTime(chronology62);
        org.joda.time.DateTime dateTime65 = dateTime15.toDateTime(chronology62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime65", (instant11.compareTo(dateTime65) == 0) == instant11.equals(dateTime65));
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test214");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property1 = localDateTime0.monthOfYear();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime((long) (short) 1, chronology3);
        org.joda.time.Instant instant5 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime4, (org.joda.time.ReadableInstant) instant5, periodType6);
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int9 = instant5.get(dateTimeFieldType8);
        org.joda.time.LocalDateTime localDateTime11 = localDateTime0.withField(dateTimeFieldType8, 39);
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.minusSeconds(52);
        int int14 = localDateTime13.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime16 = localDateTime13.plusWeeks(22);
        org.joda.time.DateTime dateTime17 = localDateTime13.toDateTime();
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.millis();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) 46, periodType21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(0L, 0L, periodType21, chronology23);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.DateTime dateTime29 = new org.joda.time.DateTime(chronology28);
        int int30 = dateTime29.getSecondOfMinute();
        boolean boolean31 = dateTime29.isEqualNow();
        int int32 = dateTime29.getDayOfYear();
        org.joda.time.Chronology chronology33 = dateTime29.getChronology();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology33);
        org.joda.time.DateTimeField dateTimeField35 = chronology33.year();
        org.joda.time.DateTimeField dateTimeField36 = chronology33.dayOfMonth();
        org.joda.time.DurationField durationField37 = chronology33.halfdays();
        org.joda.time.DateTimeField dateTimeField38 = chronology33.weekyear();
        mutablePeriod24.add((long) 75596, chronology33);
        org.joda.time.LocalDate localDate40 = new org.joda.time.LocalDate((java.lang.Object) dateTime17, chronology33);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and dateTime29", (instant5.compareTo(dateTime29) == 0) == instant5.equals(dateTime29));
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test215");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) 39236);
        org.joda.time.Minutes minutes2 = duration1.toStandardMinutes();
        org.joda.time.MutableDateTime mutableDateTime4 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) 100, 1L, periodType7);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.Period period13 = period8.plus((org.joda.time.ReadablePeriod) period12);
        org.joda.time.Instant instant14 = new org.joda.time.Instant();
        org.joda.time.Instant instant16 = instant14.withMillis(0L);
        org.joda.time.Duration duration17 = period12.toDurationTo((org.joda.time.ReadableInstant) instant16);
        mutableDateTime4.add((org.joda.time.ReadableDuration) duration17, 39);
        org.joda.time.MutableDateTime.Property property20 = mutableDateTime4.secondOfMinute();
        org.joda.time.MutableDateTime.Property property21 = mutableDateTime4.minuteOfHour();
        mutableDateTime4.setWeekyear(0);
        org.joda.time.MutableDateTime.Property property24 = mutableDateTime4.era();
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period(readableDuration25, readableInstant26);
        org.joda.time.Period period29 = period27.withDays((int) (byte) 1);
        org.joda.time.Period period31 = period29.minusWeeks(100);
        org.joda.time.Period period33 = period29.minusWeeks(2023);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology34);
        boolean boolean36 = period33.equals((java.lang.Object) dateTime35);
        org.joda.time.PeriodType periodType37 = period33.getPeriodType();
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime((long) 100);
        int int40 = dateTime39.getHourOfDay();
        org.joda.time.DateTime dateTime42 = dateTime39.withWeekyear(54);
        org.joda.time.DateTime dateTime44 = dateTime42.minusHours(1439);
        boolean boolean45 = periodType37.equals((java.lang.Object) dateTime44);
        org.joda.time.Period period46 = duration1.toPeriodTo((org.joda.time.ReadableInstant) mutableDateTime4, periodType37);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime35", (instant14.compareTo(dateTime35) == 0) == instant14.equals(dateTime35));
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test216");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.LocalDateTime localDateTime2 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime4 = localDateTime2.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime6 = localDateTime4.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField8 = localDateTime6.getField((int) (byte) 0);
        long long10 = dateTimeField8.roundHalfEven((long) 1);
        int int11 = dateTime1.get(dateTimeField8);
        boolean boolean12 = dateTime1.isBeforeNow();
        org.joda.time.DateTime dateTime14 = dateTime1.minusWeeks((int) (byte) 0);
        int int15 = dateTime14.getDayOfYear();
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.PeriodType periodType19 = periodType18.withSecondsRemoved();
        org.joda.time.MutableDateTime mutableDateTime21 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 100, 1L, periodType24);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.Period period30 = period25.plus((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Instant instant31 = new org.joda.time.Instant();
        org.joda.time.Instant instant33 = instant31.withMillis(0L);
        org.joda.time.Duration duration34 = period29.toDurationTo((org.joda.time.ReadableInstant) instant33);
        mutableDateTime21.add((org.joda.time.ReadableDuration) duration34, 39);
        org.joda.time.MutableDateTime.Property property37 = mutableDateTime21.yearOfEra();
        mutableDateTime21.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property40 = mutableDateTime21.minuteOfDay();
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.UTC;
        long long44 = dateTimeZone41.convertLocalToUTC((long) (byte) 100, false);
        mutableDateTime21.setZone(dateTimeZone41);
        org.joda.time.LocalDate localDate46 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate48 = localDate46.minusMonths((int) ' ');
        org.joda.time.Chronology chronology49 = localDate46.getChronology();
        org.joda.time.DateTimeField dateTimeField50 = chronology49.minuteOfDay();
        org.joda.time.DurationField durationField51 = chronology49.days();
        org.joda.time.MutableDateTime mutableDateTime52 = new org.joda.time.MutableDateTime((java.lang.Object) mutableDateTime21, chronology49);
        org.joda.time.DateTimeField dateTimeField53 = chronology49.hourOfDay();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((long) 11, 345600000L, periodType18, chronology49);
        org.joda.time.DateTime dateTime55 = dateTime14.minus((org.joda.time.ReadablePeriod) mutablePeriod54);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime14 and instant31", (dateTime14.compareTo(instant31) == 0) == dateTime14.equals(instant31));
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test217");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime19 = mutableDateTime1.toMutableDateTime(dateTimeZone18);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.days();
        mutableDateTime19.add(durationFieldType20, 39267259);
        mutableDateTime19.setMonthOfYear(7);
        org.joda.time.DateTimeZone dateTimeZone27 = null;
        org.joda.time.LocalTime localTime28 = new org.joda.time.LocalTime(dateTimeZone27);
        org.joda.time.LocalTime localTime30 = localTime28.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime32 = localTime30.plusMillis((int) (byte) 100);
        org.joda.time.LocalTime localTime34 = localTime30.plusSeconds(40);
        int int35 = localTime30.getMillisOfSecond();
        org.joda.time.LocalTime localTime37 = localTime30.minusSeconds(86396191);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime(chronology38);
        int int40 = dateTime39.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter41 = null;
        java.lang.String str42 = dateTime39.toString(dateTimeFormatter41);
        org.joda.time.DateTime dateTime44 = dateTime39.plusMonths(86396191);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.DateTime dateTime48 = new org.joda.time.DateTime(chronology47);
        int int49 = dateTime48.getSecondOfMinute();
        boolean boolean50 = dateTime48.isEqualNow();
        int int51 = dateTime48.getDayOfYear();
        org.joda.time.Chronology chronology52 = dateTime48.getChronology();
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology52);
        org.joda.time.DateTime dateTime54 = dateTime44.toDateTime(chronology52);
        org.joda.time.DurationField durationField55 = chronology52.eras();
        boolean boolean56 = localTime30.equals((java.lang.Object) chronology52);
        org.joda.time.DateTimeField dateTimeField57 = chronology52.dayOfMonth();
        java.util.Locale locale58 = java.util.Locale.CANADA;
        java.lang.String str59 = locale58.getScript();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket62 = new org.joda.time.format.DateTimeParserBucket((long) 39282046, chronology52, locale58, (java.lang.Integer) 53670254, (int) 'a');
        java.lang.String str63 = mutableDateTime19.toString("53727217", locale58);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime39", (instant11.compareTo(dateTime39) == 0) == instant11.equals(dateTime39));
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test218");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 100, 1L, periodType14);
        org.joda.time.Period period16 = period11.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Duration duration20 = period15.toDurationTo((org.joda.time.ReadableInstant) instant19);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration20, 39);
        org.joda.time.MutableDateTime.Property property23 = mutableDateTime7.secondOfMinute();
        mutableDateTime7.addYears(3);
        java.lang.Object obj26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime(obj26);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime28.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime32 = localDateTime30.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField34 = localDateTime32.getField((int) (byte) 0);
        long long36 = dateTimeField34.roundHalfEven((long) 1);
        int int37 = dateTime27.get(dateTimeField34);
        boolean boolean38 = dateTime27.isBeforeNow();
        org.joda.time.DateTime.Property property39 = dateTime27.weekOfWeekyear();
        mutableDateTime7.setTime((org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Period period41 = duration5.toPeriodTo((org.joda.time.ReadableInstant) dateTime27);
        java.util.Date date42 = dateTime27.toDate();
        org.joda.time.LocalDate localDate43 = org.joda.time.LocalDate.fromDateFields(date42);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime27", (instant17.compareTo(dateTime27) == 0) == instant17.equals(dateTime27));
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test219");
        org.joda.time.LocalDate localDate0 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate2 = localDate0.minusMonths((int) ' ');
        int int3 = localDate0.size();
        org.joda.time.DateMidnight dateMidnight4 = localDate0.toDateMidnight();
        org.joda.time.LocalDate localDate6 = localDate0.withYearOfCentury(0);
        org.joda.time.MutableDateTime mutableDateTime8 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.Period period17 = period12.plus((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Instant instant18 = new org.joda.time.Instant();
        org.joda.time.Instant instant20 = instant18.withMillis(0L);
        org.joda.time.Duration duration21 = period16.toDurationTo((org.joda.time.ReadableInstant) instant20);
        mutableDateTime8.add((org.joda.time.ReadableDuration) duration21, 39);
        org.joda.time.MutableDateTime.Property property24 = mutableDateTime8.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone25 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime8.setZone(dateTimeZone25);
        org.joda.time.DateTime dateTime27 = localDate0.toDateTimeAtMidnight(dateTimeZone25);
        int int29 = dateTimeZone25.getStandardOffset((long) 97);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateMidnight4 and dateTime27", (dateMidnight4.compareTo(dateTime27) == 0) == dateMidnight4.equals(dateTime27));
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test220");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.MutableDateTime mutableDateTime6 = instant3.toMutableDateTimeISO();
        org.joda.time.Instant instant7 = instant3.toInstant();
        org.joda.time.Instant instant10 = instant7.withDurationAdded((long) (short) -1, 9);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and mutableDateTime6", (instant7.compareTo(mutableDateTime6) == 0) == instant7.equals(mutableDateTime6));
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test221");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime2 = localDateTime0.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property3 = localDateTime0.hourOfDay();
        org.joda.time.LocalDateTime localDateTime5 = localDateTime0.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str7 = dateTimeFieldType6.getName();
        int int8 = localDateTime0.indexOf(dateTimeFieldType6);
        org.joda.time.LocalDateTime localDateTime10 = localDateTime0.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime0.minusSeconds((int) '#');
        org.joda.time.DateTimeFieldType dateTimeFieldType13 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str14 = dateTimeFieldType13.getName();
        org.joda.time.LocalDateTime.Property property15 = localDateTime12.property(dateTimeFieldType13);
        int int16 = localDateTime12.getMinuteOfHour();
        org.joda.time.DateTime dateTime17 = localDateTime12.toDateTime();
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType35 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean36 = mutableDateTime19.isSupported(dateTimeFieldType35);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.DateTime dateTime41 = new org.joda.time.DateTime((long) (short) 1, chronology40);
        org.joda.time.DateTime dateTime42 = dateTime41.toDateTime();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.DateTime dateTime45 = new org.joda.time.DateTime((long) (short) 1, chronology44);
        org.joda.time.DateTime dateTime46 = dateTime45.toDateTime();
        int int47 = dateTime42.compareTo((org.joda.time.ReadableInstant) dateTime45);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime45, (org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration52 = duration38.withDurationAdded((org.joda.time.ReadableDuration) duration49, 10);
        org.joda.time.Duration duration53 = duration52.toDuration();
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration52);
        org.joda.time.DateTime dateTime55 = dateTime17.plus((org.joda.time.ReadableDuration) duration52);
        int int56 = dateTime55.getCenturyOfEra();
        org.joda.time.DateTime.Property property57 = dateTime55.millisOfSecond();
        org.joda.time.Chronology chronology59 = null;
        java.util.Locale locale60 = java.util.Locale.GERMAN;
        java.util.Locale locale61 = java.util.Locale.CANADA;
        java.lang.String str62 = locale60.getDisplayVariant(locale61);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket64 = new org.joda.time.format.DateTimeParserBucket((long) (-1), chronology59, locale61, (java.lang.Integer) 10);
        java.util.Set<java.lang.String> strSet65 = locale61.getUnicodeLocaleAttributes();
        java.lang.String str66 = property57.getAsText(locale61);
        org.joda.time.DateTime dateTime68 = new org.joda.time.DateTime((long) 21);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.DateTime dateTime70 = new org.joda.time.DateTime(chronology69);
        int int71 = dateTime70.getSecondOfMinute();
        org.joda.time.DateTime dateTime74 = dateTime70.withDurationAdded((long) 6, 12);
        boolean boolean75 = dateTime68.isBefore((org.joda.time.ReadableInstant) dateTime70);
        boolean boolean76 = property57.equals((java.lang.Object) boolean75);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant29 and dateTime70", (instant29.compareTo(dateTime70) == 0) == instant29.equals(dateTime70));
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test222");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.LocalTime localTime4 = new org.joda.time.LocalTime(dateTimeZone3);
        org.joda.time.LocalTime localTime6 = localTime4.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime8 = localTime6.plusMillis((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = dateTime2.withFields((org.joda.time.ReadablePartial) localTime8);
        org.joda.time.DateTime dateTime10 = dateTime2.toDateTimeISO();
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime((long) 100);
        org.joda.time.DateTime.Property property13 = dateTime12.monthOfYear();
        org.joda.time.DateTime dateTime14 = dateTime12.toDateTimeISO();
        boolean boolean15 = dateTime2.isAfter((org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.DateTime dateTime17 = dateTime14.withYearOfCentury(56);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Instant instant20 = new org.joda.time.Instant();
        org.joda.time.Instant instant22 = instant20.withMillis(0L);
        org.joda.time.Chronology chronology23 = instant22.getChronology();
        org.joda.time.DurationField durationField24 = chronology23.eras();
        org.joda.time.DateTimeField dateTimeField25 = chronology23.yearOfEra();
        org.joda.time.Period period26 = new org.joda.time.Period((long) ' ', chronology23);
        org.joda.time.DateTimeField dateTimeField27 = chronology23.halfdayOfDay();
        long long32 = chronology23.getDateTimeMillis(39239, (int) (byte) 1, 19, 751);
        boolean boolean33 = durationFieldType18.isSupported(chronology23);
        org.joda.time.DateTime dateTime34 = dateTime14.withChronology(chronology23);
        org.joda.time.DateTimeField dateTimeField35 = chronology23.minuteOfHour();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime12 and dateTime34", (dateTime12.compareTo(dateTime34) == 0) == dateTime12.equals(dateTime34));
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test223");
        org.joda.time.ReadableDuration readableDuration0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableDuration0, readableInstant1);
        org.joda.time.Period period4 = period2.withDays((int) (byte) 1);
        org.joda.time.Period period6 = period2.minusHours(39251167);
        org.joda.time.MutableDateTime mutableDateTime8 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime8.add((org.joda.time.ReadableDuration) duration10, (int) (short) 100);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.DateTime dateTime15 = new org.joda.time.DateTime((long) (short) 1, chronology14);
        org.joda.time.Instant instant16 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime15, (org.joda.time.ReadableInstant) instant16, periodType17);
        org.joda.time.LocalDate localDate19 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate21 = localDate19.minusMonths((int) ' ');
        org.joda.time.Chronology chronology22 = localDate19.getChronology();
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate25 = localDate19.withFieldAdded(durationFieldType23, (int) (byte) 100);
        int int26 = periodType17.indexOf(durationFieldType23);
        org.joda.time.Period period27 = duration10.toPeriod(periodType17);
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.days();
        org.joda.time.Period period30 = period27.withField(durationFieldType28, 49);
        org.joda.time.Period period32 = period2.withField(durationFieldType28, 53600069);
        org.joda.time.LocalDate localDate33 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate35 = localDate33.minusMonths((int) ' ');
        org.joda.time.Chronology chronology36 = localDate33.getChronology();
        org.joda.time.DateTimeField dateTimeField37 = chronology36.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField38 = chronology36.minuteOfHour();
        org.joda.time.DurationField durationField39 = chronology36.weekyears();
        org.joda.time.DateTimeField dateTimeField40 = chronology36.minuteOfDay();
        java.lang.String str41 = chronology36.toString();
        org.joda.time.DurationField durationField42 = chronology36.years();
        org.joda.time.DurationField durationField43 = durationFieldType28.getField(chronology36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField39 and durationField42", (durationField39.compareTo(durationField42) == 0) == durationField39.equals(durationField42));
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test224");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Chronology chronology12 = instant11.getChronology();
        org.joda.time.DurationField durationField13 = chronology12.eras();
        java.util.Locale locale14 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket16 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology12, locale14, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate17 = new org.joda.time.LocalDate((long) 53, chronology12);
        org.joda.time.DateTimeField dateTimeField18 = chronology12.dayOfYear();
        org.joda.time.DateTimeField dateTimeField19 = chronology12.monthOfYear();
        org.joda.time.Period period20 = duration1.toPeriod(periodType6, chronology12);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.DateTime dateTime22 = new org.joda.time.DateTime(chronology21);
        int int23 = dateTime22.getSecondOfMinute();
        boolean boolean24 = dateTime22.isEqualNow();
        int int25 = dateTime22.getDayOfYear();
        org.joda.time.Chronology chronology26 = dateTime22.getChronology();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.DateTime dateTime29 = dateTime22.plus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.MutableDateTime mutableDateTime31 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime31.add((org.joda.time.ReadableDuration) duration33, (int) (short) 100);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.DateTime dateTime37 = new org.joda.time.DateTime(chronology36);
        int int38 = dateTime37.getYearOfCentury();
        org.joda.time.Interval interval39 = duration33.toIntervalTo((org.joda.time.ReadableInstant) dateTime37);
        int int40 = duration28.compareTo((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Minutes minutes41 = duration33.toStandardMinutes();
        org.joda.time.Duration duration42 = duration1.plus((org.joda.time.ReadableDuration) duration33);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime22", (instant9.compareTo(dateTime22) == 0) == instant9.equals(dateTime22));
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test225");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.MutableDateTime mutableDateTime6 = instant3.toMutableDateTimeISO();
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) 100, 1L, periodType9);
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.Period period15 = period10.plus((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Instant instant16 = new org.joda.time.Instant();
        org.joda.time.Instant instant18 = instant16.withMillis(0L);
        org.joda.time.Duration duration19 = period14.toDurationTo((org.joda.time.ReadableInstant) instant18);
        org.joda.time.Instant instant21 = instant18.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime22 = instant18.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType24 = dateTimeFieldType23.getRangeDurationType();
        org.joda.time.DateTime.Property property25 = dateTime22.property(dateTimeFieldType23);
        boolean boolean26 = mutableDateTime6.isSupported(dateTimeFieldType23);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant18 and dateTime22", (instant18.compareTo(dateTime22) == 0) == instant18.equals(dateTime22));
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test226");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 42, (long) 49, chronology2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.Period period12 = period7.plus((org.joda.time.ReadablePeriod) period11);
        org.joda.time.Instant instant13 = new org.joda.time.Instant();
        org.joda.time.Instant instant15 = instant13.withMillis(0L);
        org.joda.time.Duration duration16 = period11.toDurationTo((org.joda.time.ReadableInstant) instant15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) 100, 1L, periodType23);
        org.joda.time.Period period25 = period20.plus((org.joda.time.ReadablePeriod) period24);
        org.joda.time.Instant instant26 = new org.joda.time.Instant();
        org.joda.time.Instant instant28 = instant26.withMillis(0L);
        org.joda.time.Duration duration29 = period24.toDurationTo((org.joda.time.ReadableInstant) instant28);
        boolean boolean30 = instant15.isEqual((org.joda.time.ReadableInstant) instant28);
        org.joda.time.MutableDateTime mutableDateTime32 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((long) 100, 1L, periodType35);
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((long) 100, 1L, periodType39);
        org.joda.time.Period period41 = period36.plus((org.joda.time.ReadablePeriod) period40);
        org.joda.time.Instant instant42 = new org.joda.time.Instant();
        org.joda.time.Instant instant44 = instant42.withMillis(0L);
        org.joda.time.Duration duration45 = period40.toDurationTo((org.joda.time.ReadableInstant) instant44);
        mutableDateTime32.add((org.joda.time.ReadableDuration) duration45, 39);
        org.joda.time.MutableDateTime.Property property48 = mutableDateTime32.secondOfMinute();
        java.lang.Object obj49 = null;
        org.joda.time.DateTime dateTime50 = new org.joda.time.DateTime(obj49);
        org.joda.time.LocalDateTime localDateTime51 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime53 = localDateTime51.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime55 = localDateTime53.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField57 = localDateTime55.getField((int) (byte) 0);
        long long59 = dateTimeField57.roundHalfEven((long) 1);
        int int60 = dateTime50.get(dateTimeField57);
        mutableDateTime32.setRounding(dateTimeField57);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInstant) instant15, (org.joda.time.ReadableInstant) mutableDateTime32);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant13 and dateTime50", (instant13.compareTo(dateTime50) == 0) == instant13.equals(dateTime50));
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test227");
        org.joda.time.DateTimeZone dateTimeZone0 = null;
        org.joda.time.LocalTime localTime1 = new org.joda.time.LocalTime(dateTimeZone0);
        org.joda.time.LocalTime localTime3 = localTime1.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime5 = localTime3.plusMillis((int) (byte) 100);
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 100, 1L, periodType14);
        org.joda.time.Period period16 = period11.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Duration duration20 = period15.toDurationTo((org.joda.time.ReadableInstant) instant19);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration20, 39);
        org.joda.time.MutableDateTime.Property property23 = mutableDateTime7.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime7.setZone(dateTimeZone24);
        int int26 = mutableDateTime7.getYearOfEra();
        int int27 = mutableDateTime7.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property28 = mutableDateTime7.year();
        org.joda.time.MutableDateTime mutableDateTime29 = property28.roundHalfEven();
        org.joda.time.DateTime dateTime30 = localTime5.toDateTime((org.joda.time.ReadableInstant) mutableDateTime29);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.Instant instant34 = instant32.withMillis(0L);
        org.joda.time.Chronology chronology35 = instant34.getChronology();
        org.joda.time.DurationField durationField36 = chronology35.eras();
        java.util.Locale locale37 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket39 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology35, locale37, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology41 = null;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.CANADA;
        java.lang.String str44 = locale42.getDisplayVariant(locale43);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket45 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology41, locale43);
        org.joda.time.DateTimeZone dateTimeZone46 = dateTimeParserBucket45.getZone();
        org.joda.time.Chronology chronology47 = chronology35.withZone(dateTimeZone46);
        org.joda.time.DateTimeField dateTimeField48 = chronology47.hourOfDay();
        org.joda.time.DateTime dateTime49 = dateTime30.withChronology(chronology47);
        boolean boolean51 = dateTime49.isBefore((long) 49);
        org.joda.time.DateTime.Property property52 = dateTime49.dayOfWeek();
        org.joda.time.DateTime dateTime53 = property52.withMaximumValue();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime30 and dateTime49", (dateTime30.compareTo(dateTime49) == 0) == dateTime30.equals(dateTime49));
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test228");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime2 = localDateTime0.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime4 = localDateTime2.withHourOfDay(10);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) 100, 1L, periodType7);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.Period period13 = period8.plus((org.joda.time.ReadablePeriod) period12);
        org.joda.time.Instant instant14 = new org.joda.time.Instant();
        org.joda.time.Instant instant16 = instant14.withMillis(0L);
        org.joda.time.Duration duration17 = period12.toDurationTo((org.joda.time.ReadableInstant) instant16);
        org.joda.time.LocalDateTime localDateTime18 = localDateTime4.plus((org.joda.time.ReadablePeriod) period12);
        org.joda.time.LocalDateTime localDateTime20 = localDateTime18.minusYears(6);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(readableInstant21, readableInstant22, periodType23);
        mutablePeriod24.setYears((int) '#');
        org.joda.time.Chronology chronology28 = null;
        mutablePeriod24.add((long) 1, chronology28);
        mutablePeriod24.addDays((int) 'a');
        org.joda.time.LocalDateTime localDateTime32 = localDateTime18.minus((org.joda.time.ReadablePeriod) mutablePeriod24);
        int int33 = localDateTime18.size();
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime34.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property37 = localDateTime34.hourOfDay();
        org.joda.time.LocalDateTime localDateTime39 = localDateTime34.plusMillis((int) (byte) 0);
        org.joda.time.DateTime dateTime40 = localDateTime34.toDateTime();
        org.joda.time.LocalDateTime localDateTime41 = localDateTime18.withFields((org.joda.time.ReadablePartial) localDateTime34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime40", (instant14.compareTo(dateTime40) == 0) == instant14.equals(dateTime40));
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test229");
        java.lang.Object obj0 = null;
        org.joda.time.DateTimeZone dateTimeZone2 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime3 = new org.joda.time.MutableDateTime(0L, dateTimeZone2);
        int int5 = dateTimeZone2.getOffsetFromLocal((long) (byte) 1);
        org.joda.time.DateTime dateTime6 = new org.joda.time.DateTime(obj0, dateTimeZone2);
        java.util.TimeZone timeZone7 = dateTimeZone2.toTimeZone();
        org.joda.time.MutableDateTime mutableDateTime9 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime9.add((org.joda.time.ReadableDuration) duration11, (int) (short) 100);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.DateTime dateTime15 = new org.joda.time.DateTime(chronology14);
        int int16 = dateTime15.getYearOfCentury();
        org.joda.time.Interval interval17 = duration11.toIntervalTo((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime15, (org.joda.time.ReadableInstant) mutableDateTime19);
        mutableDateTime19.setSecondOfDay(81);
        boolean boolean23 = dateTimeZone2.equals((java.lang.Object) mutableDateTime19);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime6 and dateTime15", (dateTime6.compareTo(dateTime15) == 0) == dateTime6.equals(dateTime15));
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test230");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.millisOfDay();
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime23.add((org.joda.time.ReadableDuration) duration25, (int) (short) 100);
        mutableDateTime23.setYear(10);
        mutableDateTime23.addSeconds((int) (short) 0);
        org.joda.time.MutableDateTime.Property property32 = mutableDateTime23.minuteOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = property32.getFieldType();
        org.joda.time.DateTime.Property property34 = dateTime1.property(dateTimeFieldType33);
        org.joda.time.DateTime dateTime35 = property34.roundFloorCopy();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test231");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.LocalTime localTime4 = new org.joda.time.LocalTime(dateTimeZone3);
        org.joda.time.LocalTime localTime6 = localTime4.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime8 = localTime6.plusMillis((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = dateTime2.withFields((org.joda.time.ReadablePartial) localTime8);
        org.joda.time.DateTime dateTime10 = dateTime2.toDateTimeISO();
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime((long) 100);
        org.joda.time.DateTime.Property property13 = dateTime12.monthOfYear();
        org.joda.time.DateTime dateTime14 = dateTime12.toDateTimeISO();
        boolean boolean15 = dateTime2.isAfter((org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.DateTime dateTime17 = dateTime14.withYearOfCentury(56);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Instant instant20 = new org.joda.time.Instant();
        org.joda.time.Instant instant22 = instant20.withMillis(0L);
        org.joda.time.Chronology chronology23 = instant22.getChronology();
        org.joda.time.DurationField durationField24 = chronology23.eras();
        org.joda.time.DateTimeField dateTimeField25 = chronology23.yearOfEra();
        org.joda.time.Period period26 = new org.joda.time.Period((long) ' ', chronology23);
        org.joda.time.DateTimeField dateTimeField27 = chronology23.halfdayOfDay();
        long long32 = chronology23.getDateTimeMillis(39239, (int) (byte) 1, 19, 751);
        boolean boolean33 = durationFieldType18.isSupported(chronology23);
        org.joda.time.DateTime dateTime34 = dateTime14.withChronology(chronology23);
        org.joda.time.DateTime.Property property35 = dateTime14.era();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime14 and dateTime34", (dateTime14.compareTo(dateTime34) == 0) == dateTime14.equals(dateTime34));
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test232");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        boolean boolean3 = dateTime1.isEqualNow();
        int int4 = dateTime1.getDayOfYear();
        org.joda.time.Chronology chronology5 = dateTime1.getChronology();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.DateTime dateTime8 = dateTime1.plus((org.joda.time.ReadableDuration) duration7);
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration12, (int) (short) 100);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        int int17 = dateTime16.getYearOfCentury();
        org.joda.time.Interval interval18 = duration12.toIntervalTo((org.joda.time.ReadableInstant) dateTime16);
        int int19 = duration7.compareTo((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardSeconds(10L);
        boolean boolean22 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.DateTime dateTime25 = new org.joda.time.DateTime((long) (short) 1, chronology24);
        org.joda.time.DateTimeZone dateTimeZone26 = null;
        org.joda.time.LocalTime localTime27 = new org.joda.time.LocalTime(dateTimeZone26);
        org.joda.time.LocalTime localTime29 = localTime27.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime31 = localTime29.plusMillis((int) (byte) 100);
        org.joda.time.DateTime dateTime32 = dateTime25.withFields((org.joda.time.ReadablePartial) localTime31);
        org.joda.time.DateTime dateTime33 = dateTime25.toDateTimeISO();
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime((long) 100);
        org.joda.time.DateTime.Property property36 = dateTime35.monthOfYear();
        org.joda.time.DateTime dateTime37 = dateTime35.toDateTimeISO();
        boolean boolean38 = dateTime25.isAfter((org.joda.time.ReadableInstant) dateTime37);
        org.joda.time.DateTime dateTime40 = dateTime37.withYearOfCentury(56);
        org.joda.time.DateTime dateTime42 = dateTime40.plusSeconds(54);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period44 = duration12.toPeriodFrom((org.joda.time.ReadableInstant) dateTime40, periodType43);
        org.joda.time.MutableDateTime mutableDateTime46 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.MutableDateTime.Property property47 = mutableDateTime46.minuteOfHour();
        mutableDateTime46.setMonthOfYear(12);
        org.joda.time.MutableDateTime mutableDateTime51 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((long) 100, 1L, periodType54);
        org.joda.time.PeriodType periodType58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((long) 100, 1L, periodType58);
        org.joda.time.Period period60 = period55.plus((org.joda.time.ReadablePeriod) period59);
        org.joda.time.Instant instant61 = new org.joda.time.Instant();
        org.joda.time.Instant instant63 = instant61.withMillis(0L);
        org.joda.time.Duration duration64 = period59.toDurationTo((org.joda.time.ReadableInstant) instant63);
        mutableDateTime51.add((org.joda.time.ReadableDuration) duration64, 39);
        org.joda.time.MutableDateTime.Property property67 = mutableDateTime51.yearOfEra();
        mutableDateTime51.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property70 = mutableDateTime51.minuteOfDay();
        org.joda.time.DateTimeZone dateTimeZone71 = org.joda.time.DateTimeZone.UTC;
        long long74 = dateTimeZone71.convertLocalToUTC((long) (byte) 100, false);
        mutableDateTime51.setZone(dateTimeZone71);
        mutableDateTime46.setZoneRetainFields(dateTimeZone71);
        org.joda.time.DateTime dateTime77 = dateTime40.withZone(dateTimeZone71);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant61", (dateTime1.compareTo(instant61) == 0) == dateTime1.equals(instant61));
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test233");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration3, (int) (short) 100);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DateTime dateTime7 = new org.joda.time.DateTime(chronology6);
        int int8 = dateTime7.getYearOfCentury();
        org.joda.time.Interval interval9 = duration3.toIntervalTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.LocalDate localDate11 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate13 = localDate11.minusMonths((int) ' ');
        int int14 = localDate11.size();
        org.joda.time.LocalDate.Property property15 = localDate11.weekOfWeekyear();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime18 = new org.joda.time.MutableDateTime(0L, dateTimeZone17);
        long long21 = dateTimeZone17.convertLocalToUTC((long) 3, true);
        org.joda.time.MutableDateTime mutableDateTime22 = new org.joda.time.MutableDateTime(dateTimeZone17);
        org.joda.time.DateTime dateTime23 = localDate11.toDateTimeAtStartOfDay(dateTimeZone17);
        java.lang.String str25 = dateTimeZone17.getShortName((long) 50);
        long long27 = dateTimeZone17.convertUTCToLocal((long) 39251167);
        org.joda.time.MutableDateTime mutableDateTime28 = new org.joda.time.MutableDateTime(3600L, dateTimeZone17);
        org.joda.time.LocalDate localDate29 = new org.joda.time.LocalDate(dateTimeZone17);
        java.lang.String str31 = dateTimeZone17.getName((long) '4');
        org.joda.time.DateTime dateTime32 = dateTime7.withZone(dateTimeZone17);
        org.joda.time.DateTime dateTime34 = dateTime32.withYearOfEra(53);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and mutableDateTime22", (dateTime7.compareTo(mutableDateTime22) == 0) == dateTime7.equals(mutableDateTime22));
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test234");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.Instant instant17 = instant11.withMillis(0L);
        org.joda.time.Instant instant18 = instant11.toInstant();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime15 and instant18", (dateTime15.compareTo(instant18) == 0) == dateTime15.equals(instant18));
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test235");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology5);
        org.joda.time.DurationField durationField8 = chronology5.eras();
        org.joda.time.DateTimeField dateTimeField9 = chronology5.dayOfWeek();
        org.joda.time.DurationField durationField10 = chronology5.minutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField10, and durationField6", !(durationField6.compareTo(durationField10) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField10.compareTo(durationField6))));
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test236");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        boolean boolean2 = dateTime1.isBeforeNow();
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.DateTime dateTime4 = dateTime1.withZoneRetainFields(dateTimeZone3);
        org.joda.time.DateTimeZone dateTimeZone6 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime(0L, dateTimeZone6);
        int int9 = dateTimeZone6.getOffsetFromLocal((long) (byte) 1);
        java.lang.String str10 = dateTimeZone6.getID();
        org.joda.time.MutableDateTime mutableDateTime13 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((long) 100, 1L, periodType16);
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((long) 100, 1L, periodType20);
        org.joda.time.Period period22 = period17.plus((org.joda.time.ReadablePeriod) period21);
        org.joda.time.Instant instant23 = new org.joda.time.Instant();
        org.joda.time.Instant instant25 = instant23.withMillis(0L);
        org.joda.time.Duration duration26 = period21.toDurationTo((org.joda.time.ReadableInstant) instant25);
        mutableDateTime13.add((org.joda.time.ReadableDuration) duration26, 39);
        org.joda.time.MutableDateTime.Property property29 = mutableDateTime13.secondOfMinute();
        org.joda.time.MutableDateTime.Property property30 = mutableDateTime13.minuteOfHour();
        java.lang.String str31 = property30.getAsShortText();
        java.util.Locale locale32 = java.util.Locale.GERMAN;
        java.util.Locale locale33 = locale32.stripExtensions();
        int int34 = property30.getMaximumTextLength(locale33);
        java.lang.String str35 = dateTimeZone6.getName((long) 3, locale33);
        org.joda.time.DateTime dateTime36 = dateTime4.withZoneRetainFields(dateTimeZone6);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime4 and instant23", (dateTime4.compareTo(instant23) == 0) == dateTime4.equals(instant23));
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test237");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime1.setZone(dateTimeZone18);
        int int20 = mutableDateTime1.getYearOfEra();
        mutableDateTime1.addMonths(41);
        org.joda.time.MutableDateTime mutableDateTime23 = mutableDateTime1.toMutableDateTimeISO();
        mutableDateTime1.setMinuteOfDay(47);
        mutableDateTime1.setWeekOfWeekyear(1);
        org.joda.time.MutableDateTime.Property property28 = mutableDateTime1.weekOfWeekyear();
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.weeks();
        mutableDateTime1.add(durationFieldType29, 1);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.Instant instant34 = instant32.withMillis(0L);
        org.joda.time.Chronology chronology35 = instant34.getChronology();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period38 = duration37.toPeriod();
        org.joda.time.Duration duration40 = duration37.plus(1L);
        org.joda.time.MutableDateTime mutableDateTime42 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((long) 100, 1L, periodType45);
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((long) 100, 1L, periodType49);
        org.joda.time.Period period51 = period46.plus((org.joda.time.ReadablePeriod) period50);
        org.joda.time.Instant instant52 = new org.joda.time.Instant();
        org.joda.time.Instant instant54 = instant52.withMillis(0L);
        org.joda.time.Duration duration55 = period50.toDurationTo((org.joda.time.ReadableInstant) instant54);
        mutableDateTime42.add((org.joda.time.ReadableDuration) duration55, 39);
        int int58 = duration37.compareTo((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Instant instant60 = instant34.withDurationAdded((org.joda.time.ReadableDuration) duration55, 0);
        org.joda.time.Instant instant61 = instant34.toInstant();
        org.joda.time.DateTime dateTime62 = instant61.toDateTime();
        mutableDateTime1.setMillis((org.joda.time.ReadableInstant) instant61);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant13 and dateTime62", (instant13.compareTo(dateTime62) == 0) == instant13.equals(dateTime62));
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test238");
        org.joda.time.LocalDate localDate1 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate3 = localDate1.minusMonths((int) ' ');
        int int4 = localDate1.size();
        org.joda.time.LocalDate.Property property5 = localDate1.era();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.yearDayTime();
        boolean boolean7 = localDate1.equals((java.lang.Object) periodType6);
        org.joda.time.PeriodType periodType8 = periodType6.withMonthsRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withYearsRemoved();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(chronology10);
        int int12 = dateTime11.getSecondOfMinute();
        int int13 = dateTime11.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str19 = mutablePeriod18.toString();
        org.joda.time.DateTime dateTime20 = dateTime11.plus((org.joda.time.ReadablePeriod) mutablePeriod18);
        org.joda.time.MutableDateTime mutableDateTime22 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) 100, 1L, periodType25);
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) 100, 1L, periodType29);
        org.joda.time.Period period31 = period26.plus((org.joda.time.ReadablePeriod) period30);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.Instant instant34 = instant32.withMillis(0L);
        org.joda.time.Duration duration35 = period30.toDurationTo((org.joda.time.ReadableInstant) instant34);
        mutableDateTime22.add((org.joda.time.ReadableDuration) duration35, 39);
        org.joda.time.MutableDateTime.Property property38 = mutableDateTime22.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime22.setZone(dateTimeZone39);
        int int41 = mutableDateTime22.getYearOfEra();
        int int42 = mutableDateTime22.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property43 = mutableDateTime22.year();
        org.joda.time.LocalDate localDate44 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate46 = localDate44.minusMonths((int) ' ');
        org.joda.time.Chronology chronology47 = localDate44.getChronology();
        mutableDateTime22.setChronology(chronology47);
        boolean boolean49 = dateTime11.isBefore((org.joda.time.ReadableInstant) mutableDateTime22);
        int int50 = dateTime11.getWeekyear();
        org.joda.time.Chronology chronology51 = dateTime11.getChronology();
        org.joda.time.DurationField durationField52 = chronology51.weeks();
        org.joda.time.Period period53 = new org.joda.time.Period((long) 7, periodType9, chronology51);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime11 and instant32", (dateTime11.compareTo(instant32) == 0) == dateTime11.equals(instant32));
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test239");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate((long) 53, chronology5);
        org.joda.time.DateTimeField dateTimeField11 = chronology5.dayOfYear();
        org.joda.time.DateTimeField dateTimeField12 = chronology5.monthOfYear();
        org.joda.time.DateTimeField dateTimeField13 = chronology5.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone14 = null;
        org.joda.time.LocalTime localTime15 = new org.joda.time.LocalTime(dateTimeZone14);
        org.joda.time.LocalTime localTime17 = localTime15.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime19 = localTime17.plusMillis((int) (byte) 100);
        org.joda.time.LocalTime localTime21 = localTime17.minusSeconds(46);
        org.joda.time.LocalDate localDate22 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate24 = localDate22.minusMonths((int) ' ');
        org.joda.time.Chronology chronology25 = localDate22.getChronology();
        org.joda.time.DateTimeField dateTimeField26 = chronology25.minuteOfDay();
        org.joda.time.DurationField durationField27 = chronology25.days();
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period(readableDuration28, readableInstant29);
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((long) 100, 1L, periodType33);
        org.joda.time.Period period36 = period34.minusSeconds((-1));
        java.lang.String str37 = period34.toString();
        org.joda.time.Period period38 = period34.toPeriod();
        org.joda.time.PeriodType periodType39 = period34.getPeriodType();
        org.joda.time.Period period40 = period30.normalizedStandard(periodType39);
        org.joda.time.Period period42 = period40.multipliedBy((int) (short) 100);
        org.joda.time.Seconds seconds43 = period42.toStandardSeconds();
        org.joda.time.Period period45 = period42.minusWeeks(58);
        int[] intArray47 = chronology25.get((org.joda.time.ReadablePeriod) period45, (long) 59);
        int int48 = dateTimeField13.getMaximumValue((org.joda.time.ReadablePartial) localTime17, intArray47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField6 and durationField27", Math.signum(durationField6.compareTo(durationField27)) == -Math.signum(durationField27.compareTo(durationField6)));
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test240");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.DateTimeField dateTimeField9 = chronology4.yearOfCentury();
        org.joda.time.DurationField durationField10 = dateTimeField9.getLeapDurationField();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = dateTimeField9.getType();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getSecondOfMinute();
        boolean boolean15 = dateTime13.isEqualNow();
        int int16 = dateTime13.getDayOfYear();
        org.joda.time.LocalTime localTime17 = dateTime13.toLocalTime();
        org.joda.time.LocalTime localTime19 = localTime17.plusSeconds(38);
        int int20 = dateTimeField9.getMaximumValue((org.joda.time.ReadablePartial) localTime17);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant1 and dateTime13", (instant1.compareTo(dateTime13) == 0) == instant1.equals(dateTime13));
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test241");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration9, (int) (short) 100);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getYearOfCentury();
        org.joda.time.Interval interval15 = duration9.toIntervalTo((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Duration duration16 = duration5.minus((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Period period17 = duration16.toPeriod();
        org.joda.time.Period period19 = period17.plusMillis((int) (short) 10);
        org.joda.time.format.PeriodFormatter periodFormatter20 = null;
        java.lang.String str21 = period17.toString(periodFormatter20);
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period32 = period27.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.Instant instant35 = instant33.withMillis(0L);
        org.joda.time.Duration duration36 = period31.toDurationTo((org.joda.time.ReadableInstant) instant35);
        mutableDateTime23.add((org.joda.time.ReadableDuration) duration36, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean40 = mutableDateTime23.isSupported(dateTimeFieldType39);
        boolean boolean41 = mutableDateTime23.isBeforeNow();
        int int42 = mutableDateTime23.getSecondOfDay();
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime((long) 100);
        org.joda.time.DateTime.Property property45 = dateTime44.monthOfYear();
        org.joda.time.DateTime dateTime46 = dateTime44.toDateTimeISO();
        mutableDateTime23.setMillis((org.joda.time.ReadableInstant) dateTime44);
        mutableDateTime23.addSeconds(6);
        org.joda.time.LocalDate localDate52 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate54 = localDate52.plusMonths(43);
        org.joda.time.LocalDate localDate56 = localDate54.withDayOfYear(12);
        org.joda.time.LocalDate localDate57 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate59 = localDate57.minusMonths((int) ' ');
        org.joda.time.ReadableDuration readableDuration60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period(readableDuration60, readableInstant61);
        org.joda.time.Period period64 = period62.withDays((int) (byte) 1);
        org.joda.time.LocalDate localDate65 = localDate59.plus((org.joda.time.ReadablePeriod) period64);
        org.joda.time.LocalDate localDate67 = localDate65.minusMonths((-292275054));
        org.joda.time.LocalDate localDate69 = localDate65.minusYears(21);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.PeriodType periodType71 = periodType70.withMonthsRemoved();
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadablePartial) localDate56, (org.joda.time.ReadablePartial) localDate69, periodType70);
        org.joda.time.PeriodType periodType73 = periodType70.withHoursRemoved();
        org.joda.time.PeriodType periodType74 = periodType70.withDaysRemoved();
        org.joda.time.LocalDate localDate76 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate78 = localDate76.minusMonths((int) ' ');
        org.joda.time.Chronology chronology79 = localDate76.getChronology();
        java.util.Locale locale80 = null;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket83 = new org.joda.time.format.DateTimeParserBucket(0L, chronology79, locale80, (java.lang.Integer) 59, 12);
        long long87 = chronology79.add((long) '#', (long) 1970, 6);
        org.joda.time.Period period88 = new org.joda.time.Period((long) 1, (long) 365, periodType74, chronology79);
        org.joda.time.DurationFieldType durationFieldType89 = org.joda.time.DurationFieldType.minutes();
        int int90 = periodType74.indexOf(durationFieldType89);
        mutableDateTime23.add(durationFieldType89, 654);
        boolean boolean93 = period17.isSupported(durationFieldType89);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and instant33", (dateTime13.compareTo(instant33) == 0) == dateTime13.equals(instant33));
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test242");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.Instant instant17 = instant11.withMillis(0L);
        org.joda.time.DateTimeZone dateTimeZone18 = null;
        org.joda.time.LocalTime localTime19 = new org.joda.time.LocalTime(dateTimeZone18);
        org.joda.time.LocalTime localTime21 = localTime19.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime23 = localTime21.plusMillis((int) (byte) 100);
        org.joda.time.MutableDateTime mutableDateTime25 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.Period period34 = period29.plus((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Instant instant35 = new org.joda.time.Instant();
        org.joda.time.Instant instant37 = instant35.withMillis(0L);
        org.joda.time.Duration duration38 = period33.toDurationTo((org.joda.time.ReadableInstant) instant37);
        mutableDateTime25.add((org.joda.time.ReadableDuration) duration38, 39);
        org.joda.time.MutableDateTime.Property property41 = mutableDateTime25.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone42 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime25.setZone(dateTimeZone42);
        int int44 = mutableDateTime25.getYearOfEra();
        int int45 = mutableDateTime25.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property46 = mutableDateTime25.year();
        org.joda.time.MutableDateTime mutableDateTime47 = property46.roundHalfEven();
        org.joda.time.DateTime dateTime48 = localTime23.toDateTime((org.joda.time.ReadableInstant) mutableDateTime47);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.DateTime dateTime53 = new org.joda.time.DateTime((long) (short) 1, chronology52);
        org.joda.time.DateTime dateTime54 = dateTime53.toDateTime();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.DateTime dateTime57 = new org.joda.time.DateTime((long) (short) 1, chronology56);
        org.joda.time.DateTime dateTime58 = dateTime57.toDateTime();
        int int59 = dateTime54.compareTo((org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime57, (org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration64 = duration50.withDurationAdded((org.joda.time.ReadableDuration) duration61, 10);
        long long65 = duration64.getMillis();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period68 = duration67.toPeriod();
        org.joda.time.Duration duration71 = duration67.withDurationAdded((long) 38, (int) 'a');
        int int72 = duration64.compareTo((org.joda.time.ReadableDuration) duration71);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.PeriodType periodType74 = periodType73.withSecondsRemoved();
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableInstant) mutableDateTime47, (org.joda.time.ReadableDuration) duration64, periodType74);
        org.joda.time.Instant instant76 = instant17.plus((org.joda.time.ReadableDuration) duration64);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime15", (instant17.compareTo(dateTime15) == 0) == instant17.equals(dateTime15));
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test243");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.DateTimeZone dateTimeZone4 = dateTime1.getZone();
        org.joda.time.MutableDateTime mutableDateTime6 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) 100, 1L, periodType9);
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.Period period15 = period10.plus((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Instant instant16 = new org.joda.time.Instant();
        org.joda.time.Instant instant18 = instant16.withMillis(0L);
        org.joda.time.Duration duration19 = period14.toDurationTo((org.joda.time.ReadableInstant) instant18);
        mutableDateTime6.add((org.joda.time.ReadableDuration) duration19, 39);
        mutableDateTime6.setDayOfYear(22);
        boolean boolean24 = dateTime1.isEqual((org.joda.time.ReadableInstant) mutableDateTime6);
        org.joda.time.DateTime dateTime26 = dateTime1.withYearOfEra(50);
        org.joda.time.LocalTime localTime27 = dateTime1.toLocalTime();
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime28.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property31 = localDateTime28.hourOfDay();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime28.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str35 = dateTimeFieldType34.getName();
        int int36 = localDateTime28.indexOf(dateTimeFieldType34);
        org.joda.time.LocalDateTime localDateTime38 = localDateTime28.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime40 = localDateTime28.minusSeconds((int) '#');
        org.joda.time.Chronology chronology41 = localDateTime40.getChronology();
        org.joda.time.ReadableDuration readableDuration42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period(readableDuration42, readableInstant43);
        org.joda.time.PeriodType periodType47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((long) 100, 1L, periodType47);
        org.joda.time.Period period50 = period48.minusSeconds((-1));
        java.lang.String str51 = period48.toString();
        org.joda.time.Period period52 = period48.toPeriod();
        org.joda.time.PeriodType periodType53 = period48.getPeriodType();
        org.joda.time.Period period54 = period44.normalizedStandard(periodType53);
        org.joda.time.Period period56 = period54.multipliedBy((int) (short) 100);
        int[] intArray58 = chronology41.get((org.joda.time.ReadablePeriod) period54, 2629746000L);
        org.joda.time.Period period59 = period54.toPeriod();
        org.joda.time.LocalTime localTime60 = localTime27.plus((org.joda.time.ReadablePeriod) period54);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant16", (dateTime1.compareTo(instant16) == 0) == dateTime1.equals(instant16));
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test244");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 100, 1L, periodType14);
        org.joda.time.Period period16 = period11.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Duration duration20 = period15.toDurationTo((org.joda.time.ReadableInstant) instant19);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration20, 39);
        org.joda.time.MutableDateTime.Property property23 = mutableDateTime7.secondOfMinute();
        mutableDateTime7.addYears(3);
        java.lang.Object obj26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime(obj26);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime28.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime32 = localDateTime30.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField34 = localDateTime32.getField((int) (byte) 0);
        long long36 = dateTimeField34.roundHalfEven((long) 1);
        int int37 = dateTime27.get(dateTimeField34);
        boolean boolean38 = dateTime27.isBeforeNow();
        org.joda.time.DateTime.Property property39 = dateTime27.weekOfWeekyear();
        mutableDateTime7.setTime((org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Period period41 = duration5.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime7);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and dateTime27", (instant17.compareTo(dateTime27) == 0) == instant17.equals(dateTime27));
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test245");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration3, (int) (short) 100);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DateTime dateTime7 = new org.joda.time.DateTime(chronology6);
        int int8 = dateTime7.getYearOfCentury();
        org.joda.time.Interval interval9 = duration3.toIntervalTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.LocalDate localDate11 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate13 = localDate11.minusMonths((int) ' ');
        int int14 = localDate11.size();
        org.joda.time.LocalDate.Property property15 = localDate11.weekOfWeekyear();
        org.joda.time.DateTimeZone dateTimeZone17 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime18 = new org.joda.time.MutableDateTime(0L, dateTimeZone17);
        long long21 = dateTimeZone17.convertLocalToUTC((long) 3, true);
        org.joda.time.MutableDateTime mutableDateTime22 = new org.joda.time.MutableDateTime(dateTimeZone17);
        org.joda.time.DateTime dateTime23 = localDate11.toDateTimeAtStartOfDay(dateTimeZone17);
        java.lang.String str25 = dateTimeZone17.getShortName((long) 50);
        long long27 = dateTimeZone17.convertUTCToLocal((long) 39251167);
        org.joda.time.MutableDateTime mutableDateTime28 = new org.joda.time.MutableDateTime(3600L, dateTimeZone17);
        org.joda.time.LocalDate localDate29 = new org.joda.time.LocalDate(dateTimeZone17);
        java.lang.String str31 = dateTimeZone17.getName((long) '4');
        org.joda.time.DateTime dateTime32 = dateTime7.withZone(dateTimeZone17);
        int int34 = dateTimeZone17.getOffset((long) 39297002);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and mutableDateTime22", (dateTime7.compareTo(mutableDateTime22) == 0) == dateTime7.equals(mutableDateTime22));
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test246");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant14.toDateTimeISO();
        org.joda.time.MutableDateTime mutableDateTime16 = instant14.toMutableDateTime();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 1);
        long long19 = duration18.getStandardSeconds();
        org.joda.time.Days days20 = duration18.toStandardDays();
        org.joda.time.MutableDateTime mutableDateTime22 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime22.add((org.joda.time.ReadableDuration) duration24, (int) (short) 100);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.DateTime dateTime28 = new org.joda.time.DateTime(chronology27);
        int int29 = dateTime28.getYearOfCentury();
        org.joda.time.Interval interval30 = duration24.toIntervalTo((org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration36 = duration32.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration36, readableInstant37);
        long long39 = duration36.getStandardDays();
        org.joda.time.Duration duration40 = duration36.toDuration();
        org.joda.time.Duration duration41 = duration24.minus((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration42 = duration18.minus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration45 = duration24.withDurationAdded((-1511999969L), (int) (short) 1);
        org.joda.time.Instant instant46 = instant14.minus((org.joda.time.ReadableDuration) duration24);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime28", (instant9.compareTo(dateTime28) == 0) == instant9.equals(dateTime28));
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test247");
        org.joda.time.LocalTime localTime2 = new org.joda.time.LocalTime(6, 0);
        org.joda.time.LocalTime localTime4 = localTime2.plusMinutes(3);
        org.joda.time.LocalTime localTime6 = localTime4.minusSeconds(86396);
        int int7 = localTime6.size();
        org.joda.time.Instant instant8 = new org.joda.time.Instant();
        org.joda.time.Instant instant10 = instant8.withMillis(0L);
        org.joda.time.Chronology chronology11 = instant10.getChronology();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period14 = duration13.toPeriod();
        org.joda.time.Duration duration16 = duration13.plus(1L);
        org.joda.time.MutableDateTime mutableDateTime18 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((long) 100, 1L, periodType21);
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) 100, 1L, periodType25);
        org.joda.time.Period period27 = period22.plus((org.joda.time.ReadablePeriod) period26);
        org.joda.time.Instant instant28 = new org.joda.time.Instant();
        org.joda.time.Instant instant30 = instant28.withMillis(0L);
        org.joda.time.Duration duration31 = period26.toDurationTo((org.joda.time.ReadableInstant) instant30);
        mutableDateTime18.add((org.joda.time.ReadableDuration) duration31, 39);
        int int34 = duration13.compareTo((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Instant instant36 = instant10.withDurationAdded((org.joda.time.ReadableDuration) duration31, 0);
        org.joda.time.Instant instant37 = instant10.toInstant();
        org.joda.time.DateTime dateTime38 = instant10.toDateTime();
        int int39 = dateTime38.getMillisOfSecond();
        org.joda.time.DateTime dateTime40 = localTime6.toDateTime((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.LocalTime.Property property41 = localTime6.secondOfMinute();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant10 and dateTime38", (instant10.compareTo(dateTime38) == 0) == instant10.equals(dateTime38));
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test248");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.Chronology chronology18 = localDateTime15.getChronology();
        org.joda.time.DurationField durationField19 = chronology18.days();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField19, and durationField5", !(durationField5.compareTo(durationField19) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField19.compareTo(durationField5))));
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test249");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate((long) 53, chronology5);
        org.joda.time.DateTimeField dateTimeField11 = chronology5.dayOfYear();
        org.joda.time.DateTimeField dateTimeField12 = chronology5.monthOfYear();
        org.joda.time.DurationField durationField13 = dateTimeField12.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField13, and durationField6", !(durationField6.compareTo(durationField13) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField13.compareTo(durationField6))));
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test250");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.DateTimeField dateTimeField9 = chronology4.yearOfCentury();
        org.joda.time.DurationField durationField10 = dateTimeField9.getLeapDurationField();
        org.joda.time.DurationField durationField11 = dateTimeField9.getDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField11, and durationField5", !(durationField5.compareTo(durationField11) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField11.compareTo(durationField5))));
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test251");
        java.lang.Object obj0 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        int int5 = dateTime4.getSecondOfMinute();
        boolean boolean6 = dateTime4.isEqualNow();
        int int7 = dateTime4.getDayOfYear();
        org.joda.time.Chronology chronology8 = dateTime4.getChronology();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology8);
        org.joda.time.DurationField durationField10 = chronology8.hours();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.dayOfWeek();
        org.joda.time.LocalDate localDate12 = new org.joda.time.LocalDate(obj0, chronology8);
        org.joda.time.Instant instant15 = new org.joda.time.Instant();
        org.joda.time.Instant instant17 = instant15.withMillis(0L);
        org.joda.time.Chronology chronology18 = instant17.getChronology();
        org.joda.time.DurationField durationField19 = chronology18.eras();
        java.util.Locale locale20 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket22 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology18, locale20, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate23 = new org.joda.time.LocalDate((long) 53, chronology18);
        org.joda.time.DateTimeField dateTimeField24 = chronology18.dayOfYear();
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = dateTimeField24.getType();
        int int26 = localDate12.get(dateTimeFieldType25);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField10 and durationField19", Math.signum(durationField10.compareTo(durationField19)) == -Math.signum(durationField19.compareTo(durationField10)));
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test252");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.DurationField durationField9 = chronology4.hours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField9, and durationField5", !(durationField5.compareTo(durationField9) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField9.compareTo(durationField5))));
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test253");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime10 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property13 = localDateTime10.hourOfDay();
        org.joda.time.DateTimeField dateTimeField14 = property13.getField();
        int int15 = property13.get();
        org.joda.time.LocalDateTime localDateTime16 = property13.roundHalfFloorCopy();
        long long18 = chronology5.set((org.joda.time.ReadablePartial) localDateTime16, (long) 2022);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(chronology5);
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology5);
        org.joda.time.DurationField durationField21 = chronology5.eras();
        java.util.Locale locale25 = new java.util.Locale("hi!", "clockhourOfDay", "java.io.IOException");
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket26 = new org.joda.time.format.DateTimeParserBucket((long) 42, chronology5, locale25);
        org.joda.time.DurationField durationField27 = chronology5.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField27, and durationField6", !(durationField6.compareTo(durationField27) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField27.compareTo(durationField6))));
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test254");
        org.joda.time.Chronology chronology1 = null;
        java.util.Locale locale2 = java.util.Locale.GERMAN;
        java.util.Locale locale3 = java.util.Locale.CANADA;
        java.lang.String str4 = locale2.getDisplayVariant(locale3);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket5 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology1, locale3);
        org.joda.time.DateTimeZone dateTimeZone6 = dateTimeParserBucket5.getZone();
        org.joda.time.MutableDateTime mutableDateTime8 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.Period period17 = period12.plus((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Instant instant18 = new org.joda.time.Instant();
        org.joda.time.Instant instant20 = instant18.withMillis(0L);
        org.joda.time.Duration duration21 = period16.toDurationTo((org.joda.time.ReadableInstant) instant20);
        mutableDateTime8.add((org.joda.time.ReadableDuration) duration21, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean25 = mutableDateTime8.isSupported(dateTimeFieldType24);
        org.joda.time.DurationFieldType durationFieldType26 = dateTimeFieldType24.getDurationType();
        java.util.Locale locale28 = java.util.Locale.CANADA;
        dateTimeParserBucket5.saveField(dateTimeFieldType24, "2022", locale28);
        org.joda.time.Instant instant30 = new org.joda.time.Instant();
        org.joda.time.Instant instant32 = instant30.withMillis(0L);
        org.joda.time.Chronology chronology33 = instant32.getChronology();
        org.joda.time.DurationField durationField34 = chronology33.eras();
        org.joda.time.DateTimeField dateTimeField35 = dateTimeFieldType24.getField(chronology33);
        org.joda.time.DurationField durationField36 = chronology33.years();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField34, durationField36, and durationField34", !(durationField34.compareTo(durationField36) == 0) || (Math.signum(durationField34.compareTo(durationField34)) == Math.signum(durationField36.compareTo(durationField34))));
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test255");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.DateTimeField dateTimeField9 = chronology4.yearOfCentury();
        org.joda.time.DurationField durationField10 = dateTimeField9.getLeapDurationField();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = dateTimeField9.getType();
        int int13 = dateTimeField9.getMaximumValue(55123200000L);
        org.joda.time.DurationField durationField14 = dateTimeField9.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField14, and durationField5", !(durationField5.compareTo(durationField14) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField14.compareTo(durationField5))));
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test256");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        mutablePeriod3.setYears((int) '#');
        org.joda.time.Instant instant8 = new org.joda.time.Instant();
        org.joda.time.Instant instant10 = instant8.withMillis(0L);
        org.joda.time.Chronology chronology11 = instant10.getChronology();
        org.joda.time.DurationField durationField12 = chronology11.eras();
        java.util.Locale locale13 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket15 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology11, locale13, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime16 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime18 = localDateTime16.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property19 = localDateTime16.hourOfDay();
        org.joda.time.DateTimeField dateTimeField20 = property19.getField();
        int int21 = property19.get();
        org.joda.time.LocalDateTime localDateTime22 = property19.roundHalfFloorCopy();
        long long24 = chronology11.set((org.joda.time.ReadablePartial) localDateTime22, (long) 2022);
        mutablePeriod3.setPeriod((long) ' ', chronology11);
        org.joda.time.DurationField durationField26 = chronology11.millis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField12, durationField26, and durationField12", !(durationField12.compareTo(durationField26) == 0) || (Math.signum(durationField12.compareTo(durationField12)) == Math.signum(durationField26.compareTo(durationField12))));
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test257");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.DurationField durationField4 = chronology3.eras();
        java.lang.String str5 = durationField4.getName();
        boolean boolean6 = durationField4.isSupported();
        boolean boolean7 = durationField4.isPrecise();
        org.joda.time.LocalDate localDate8 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate10 = localDate8.minusMonths((int) ' ');
        org.joda.time.Chronology chronology11 = localDate8.getChronology();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate14 = localDate8.withFieldAdded(durationFieldType12, (int) (byte) 100);
        org.joda.time.LocalDate.Property property15 = localDate8.dayOfWeek();
        org.joda.time.DurationField durationField16 = property15.getRangeDurationField();
        boolean boolean17 = durationField16.isPrecise();
        int int18 = durationField4.compareTo(durationField16);
        org.joda.time.Instant instant21 = new org.joda.time.Instant();
        org.joda.time.Instant instant23 = instant21.withMillis(0L);
        org.joda.time.Chronology chronology24 = instant23.getChronology();
        org.joda.time.DurationField durationField25 = chronology24.eras();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology24);
        org.joda.time.DurationField durationField27 = chronology24.eras();
        int int28 = durationField4.compareTo(durationField27);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField16 and durationField4", Math.signum(durationField16.compareTo(durationField4)) == -Math.signum(durationField4.compareTo(durationField16)));
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test258");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusHours(4);
        org.joda.time.DateTime.Property property23 = dateTime1.millisOfSecond();
        org.joda.time.DurationField durationField24 = property23.getDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField7, durationField24, and durationField7", !(durationField7.compareTo(durationField24) == 0) || (Math.signum(durationField7.compareTo(durationField7)) == Math.signum(durationField24.compareTo(durationField7))));
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test259");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime2 = new org.joda.time.MutableDateTime(0L, dateTimeZone1);
        long long5 = dateTimeZone1.convertLocalToUTC((long) 3, true);
        org.joda.time.MutableDateTime mutableDateTime6 = new org.joda.time.MutableDateTime(dateTimeZone1);
        mutableDateTime6.setWeekyear(19);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField15 = localDateTime13.getField((int) (byte) 0);
        long long17 = dateTimeField15.roundHalfEven((long) 1);
        long long20 = dateTimeField15.add((long) '#', (long) 100);
        int int22 = dateTimeField15.getMinimumValue(31536000000L);
        mutableDateTime6.setRounding(dateTimeField15);
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.Instant instant27 = instant25.withMillis(0L);
        org.joda.time.Chronology chronology28 = instant27.getChronology();
        org.joda.time.DurationField durationField29 = chronology28.eras();
        java.util.Locale locale30 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket32 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology28, locale30, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime33 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime35 = localDateTime33.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property36 = localDateTime33.hourOfDay();
        org.joda.time.DateTimeField dateTimeField37 = property36.getField();
        int int38 = property36.get();
        org.joda.time.LocalDateTime localDateTime39 = property36.roundHalfFloorCopy();
        long long41 = chronology28.set((org.joda.time.ReadablePartial) localDateTime39, (long) 2022);
        org.joda.time.LocalDateTime localDateTime42 = org.joda.time.LocalDateTime.now(chronology28);
        org.joda.time.DateTime dateTime43 = new org.joda.time.DateTime(chronology28);
        org.joda.time.DurationField durationField44 = chronology28.eras();
        org.joda.time.DateTimeField dateTimeField45 = chronology28.weekyearOfCentury();
        mutableDateTime6.setChronology(chronology28);
        org.joda.time.DurationField durationField47 = chronology28.millis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField29, durationField47, and durationField29", !(durationField29.compareTo(durationField47) == 0) || (Math.signum(durationField29.compareTo(durationField29)) == Math.signum(durationField47.compareTo(durationField29))));
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test260");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        org.joda.time.DateTimeField dateTimeField6 = chronology4.yearOfEra();
        org.joda.time.DateTimeField dateTimeField7 = chronology4.millisOfSecond();
        org.joda.time.LocalDate localDate8 = new org.joda.time.LocalDate((long) (short) -1, chronology4);
        org.joda.time.DateTimeField dateTimeField9 = chronology4.halfdayOfDay();
        org.joda.time.DurationField durationField10 = chronology4.hours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField10, and durationField5", !(durationField5.compareTo(durationField10) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField10.compareTo(durationField5))));
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test261");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.DateTimeField dateTimeField18 = chronology4.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField19 = chronology4.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField20 = chronology4.centuryOfEra();
        org.joda.time.DurationField durationField21 = chronology4.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField21, and durationField5", !(durationField5.compareTo(durationField21) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField21.compareTo(durationField5))));
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test262");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutableDateTime mutableDateTime4 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) 100, 1L, periodType7);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.Period period13 = period8.plus((org.joda.time.ReadablePeriod) period12);
        org.joda.time.Instant instant14 = new org.joda.time.Instant();
        org.joda.time.Instant instant16 = instant14.withMillis(0L);
        org.joda.time.Duration duration17 = period12.toDurationTo((org.joda.time.ReadableInstant) instant16);
        mutableDateTime4.add((org.joda.time.ReadableDuration) duration17, 39);
        org.joda.time.MutableDateTime.Property property20 = mutableDateTime4.yearOfEra();
        mutableDateTime4.setWeekOfWeekyear(14);
        org.joda.time.LocalDate localDate23 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate25 = localDate23.minusMonths((int) ' ');
        org.joda.time.Chronology chronology26 = localDate23.getChronology();
        org.joda.time.DateTimeField dateTimeField27 = chronology26.minuteOfDay();
        mutableDateTime4.setChronology(chronology26);
        org.joda.time.DurationField durationField29 = chronology26.days();
        org.joda.time.DurationField durationField30 = chronology26.eras();
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) 505, (-1900799884L), periodType2, chronology26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField29 and durationField30", Math.signum(durationField29.compareTo(durationField30)) == -Math.signum(durationField30.compareTo(durationField29)));
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test263");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.DurationField durationField4 = chronology3.eras();
        java.lang.String str5 = durationField4.getName();
        boolean boolean6 = durationField4.isSupported();
        boolean boolean7 = durationField4.isPrecise();
        org.joda.time.LocalDate localDate8 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate10 = localDate8.minusMonths((int) ' ');
        org.joda.time.Chronology chronology11 = localDate8.getChronology();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate14 = localDate8.withFieldAdded(durationFieldType12, (int) (byte) 100);
        org.joda.time.LocalDate.Property property15 = localDate8.dayOfWeek();
        org.joda.time.DurationField durationField16 = property15.getRangeDurationField();
        boolean boolean17 = durationField16.isPrecise();
        int int18 = durationField4.compareTo(durationField16);
        long long20 = durationField16.getMillis(0);
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField4, durationField16, and durationField4", !(durationField4.compareTo(durationField16) == 0) || (Math.signum(durationField4.compareTo(durationField4)) == Math.signum(durationField16.compareTo(durationField4))));
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test264");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.millis();
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime10 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property13 = localDateTime10.hourOfDay();
        org.joda.time.DateTimeField dateTimeField14 = property13.getField();
        int int15 = property13.get();
        org.joda.time.LocalDateTime localDateTime16 = property13.roundHalfFloorCopy();
        long long18 = chronology5.set((org.joda.time.ReadablePartial) localDateTime16, (long) 2022);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(chronology5);
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology5);
        org.joda.time.DurationField durationField21 = chronology5.eras();
        org.joda.time.DateTimeField dateTimeField22 = chronology5.weekyearOfCentury();
        boolean boolean23 = durationFieldType0.isSupported(chronology5);
        org.joda.time.LocalDate localDate24 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate26 = localDate24.minusMonths((int) ' ');
        org.joda.time.Chronology chronology27 = localDate24.getChronology();
        org.joda.time.DateTimeField dateTimeField28 = chronology27.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField29 = chronology27.minuteOfHour();
        org.joda.time.DurationField durationField30 = chronology27.weekyears();
        org.joda.time.DateTimeField dateTimeField31 = chronology27.hourOfHalfday();
        org.joda.time.DateTimeField dateTimeField32 = chronology27.secondOfDay();
        long long36 = chronology27.add(417600000L, (long) 22, (-198));
        boolean boolean37 = durationFieldType0.isSupported(chronology27);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField6 and durationField30", Math.signum(durationField6.compareTo(durationField30)) == -Math.signum(durationField30.compareTo(durationField6)));
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test265");
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTimeField dateTimeField20 = chronology6.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField21 = chronology6.minuteOfHour();
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 100, 1L, periodType24);
        org.joda.time.Period period27 = period25.minusSeconds((-1));
        java.lang.String str28 = period25.toString();
        org.joda.time.Period period29 = period25.negated();
        int[] intArray31 = chronology6.get((org.joda.time.ReadablePeriod) period29, (long) 1969);
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.monthOfYear();
        java.util.Locale.Category category34 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale35 = java.util.Locale.getDefault(category34);
        org.joda.time.LocalDateTime localDateTime36 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime38 = localDateTime36.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property39 = localDateTime36.hourOfDay();
        java.util.Locale locale40 = java.util.Locale.US;
        java.lang.String str41 = property39.getAsShortText(locale40);
        java.util.Locale.setDefault(category34, locale40);
        int int43 = property33.getMaximumTextLength(locale40);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket46 = new org.joda.time.format.DateTimeParserBucket((long) 9, chronology6, locale40, (java.lang.Integer) 15, 8);
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((long) 736226, chronology6);
        org.joda.time.DurationField durationField48 = chronology6.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField7, durationField48, and durationField7", !(durationField7.compareTo(durationField48) == 0) || (Math.signum(durationField7.compareTo(durationField7)) == Math.signum(durationField48.compareTo(durationField7))));
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test266");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int7 = instant3.get(dateTimeFieldType6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 10, (long) 3);
        org.joda.time.Instant instant12 = instant3.withDurationAdded((org.joda.time.ReadableDuration) duration10, 0);
        org.joda.time.Instant instant13 = new org.joda.time.Instant();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant13);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Chronology chronology20 = instant19.getChronology();
        org.joda.time.DurationField durationField21 = chronology20.eras();
        java.util.Locale locale22 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket24 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology20, locale22, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime25.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property28 = localDateTime25.hourOfDay();
        org.joda.time.DateTimeField dateTimeField29 = property28.getField();
        int int30 = property28.get();
        org.joda.time.LocalDateTime localDateTime31 = property28.roundHalfFloorCopy();
        long long33 = chronology20.set((org.joda.time.ReadablePartial) localDateTime31, (long) 2022);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(chronology20);
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology20);
        org.joda.time.DurationField durationField36 = chronology20.eras();
        org.joda.time.MutableDateTime mutableDateTime37 = new org.joda.time.MutableDateTime(chronology20);
        mutablePeriod14.setPeriod((long) (short) -1, chronology20);
        org.joda.time.LocalDate localDate39 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate41 = localDate39.minusMonths((int) ' ');
        org.joda.time.Chronology chronology42 = localDate39.getChronology();
        org.joda.time.DateTimeField dateTimeField43 = chronology42.minuteOfDay();
        org.joda.time.DurationField durationField44 = chronology42.days();
        org.joda.time.ReadableDuration readableDuration45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period(readableDuration45, readableInstant46);
        org.joda.time.PeriodType periodType50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((long) 100, 1L, periodType50);
        org.joda.time.Period period53 = period51.minusSeconds((-1));
        java.lang.String str54 = period51.toString();
        org.joda.time.Period period55 = period51.toPeriod();
        org.joda.time.PeriodType periodType56 = period51.getPeriodType();
        org.joda.time.Period period57 = period47.normalizedStandard(periodType56);
        org.joda.time.Period period59 = period57.multipliedBy((int) (short) 100);
        org.joda.time.Seconds seconds60 = period59.toStandardSeconds();
        org.joda.time.Period period62 = period59.minusWeeks(58);
        int[] intArray64 = chronology42.get((org.joda.time.ReadablePeriod) period62, (long) 59);
        int int65 = period62.getMinutes();
        int int66 = period62.getMonths();
        mutablePeriod14.setPeriod((org.joda.time.ReadablePeriod) period62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField21 and durationField44", Math.signum(durationField21.compareTo(durationField44)) == -Math.signum(durationField44.compareTo(durationField21)));
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test267");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int7 = instant3.get(dateTimeFieldType6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 10, (long) 3);
        org.joda.time.Instant instant12 = instant3.withDurationAdded((org.joda.time.ReadableDuration) duration10, 0);
        org.joda.time.Instant instant13 = new org.joda.time.Instant();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant13);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Chronology chronology20 = instant19.getChronology();
        org.joda.time.DurationField durationField21 = chronology20.eras();
        java.util.Locale locale22 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket24 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology20, locale22, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime25.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property28 = localDateTime25.hourOfDay();
        org.joda.time.DateTimeField dateTimeField29 = property28.getField();
        int int30 = property28.get();
        org.joda.time.LocalDateTime localDateTime31 = property28.roundHalfFloorCopy();
        long long33 = chronology20.set((org.joda.time.ReadablePartial) localDateTime31, (long) 2022);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(chronology20);
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology20);
        org.joda.time.DurationField durationField36 = chronology20.eras();
        org.joda.time.MutableDateTime mutableDateTime37 = new org.joda.time.MutableDateTime(chronology20);
        mutablePeriod14.setPeriod((long) (short) -1, chronology20);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime41 = localDateTime39.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property42 = localDateTime39.hourOfDay();
        org.joda.time.LocalDateTime localDateTime44 = localDateTime39.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str46 = dateTimeFieldType45.getName();
        int int47 = localDateTime39.indexOf(dateTimeFieldType45);
        org.joda.time.LocalDateTime localDateTime49 = localDateTime39.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime51 = localDateTime39.minusSeconds((int) '#');
        org.joda.time.LocalDateTime localDateTime52 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime54 = localDateTime52.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property55 = localDateTime52.hourOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime52.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str59 = dateTimeFieldType58.getName();
        int int60 = localDateTime52.indexOf(dateTimeFieldType58);
        org.joda.time.LocalDateTime localDateTime62 = localDateTime52.minusSeconds(0);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.DateTime dateTime65 = new org.joda.time.DateTime((long) (short) 1, chronology64);
        org.joda.time.Instant instant66 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime65, (org.joda.time.ReadableInstant) instant66, periodType67);
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadablePartial) localDateTime39, (org.joda.time.ReadablePartial) localDateTime62, periodType67);
        org.joda.time.DateTimeZone dateTimeZone70 = org.joda.time.DateTimeZone.UTC;
        long long73 = dateTimeZone70.convertLocalToUTC((long) (byte) 100, false);
        org.joda.time.LocalDateTime localDateTime74 = new org.joda.time.LocalDateTime(dateTimeZone70);
        org.joda.time.DateTime dateTime75 = localDateTime39.toDateTime(dateTimeZone70);
        org.joda.time.LocalDateTime localDateTime77 = localDateTime39.minusDays(2);
        java.lang.String str78 = localDateTime77.toString();
        int int79 = localDateTime77.getWeekyear();
        org.joda.time.LocalDateTime localDateTime81 = localDateTime77.minusYears((int) (short) 1);
        java.lang.String str82 = localDateTime77.toString();
        int[] intArray84 = chronology20.get((org.joda.time.ReadablePartial) localDateTime77, 0L);
        org.joda.time.Chronology chronology85 = chronology20.withUTC();
        org.joda.time.DurationField durationField86 = chronology20.halfdays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField21, durationField86, and durationField21", !(durationField21.compareTo(durationField86) == 0) || (Math.signum(durationField21.compareTo(durationField21)) == Math.signum(durationField86.compareTo(durationField21))));
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test268");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int7 = instant3.get(dateTimeFieldType6);
        java.lang.String str8 = dateTimeFieldType6.getName();
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Chronology chronology14 = instant13.getChronology();
        org.joda.time.DurationField durationField15 = chronology14.eras();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology14);
        org.joda.time.DateTimeField dateTimeField17 = dateTimeFieldType6.getField(chronology14);
        org.joda.time.DateTimeField dateTimeField18 = chronology14.hourOfDay();
        org.joda.time.DurationField durationField19 = chronology14.weekyears();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField15, durationField19, and durationField15", !(durationField15.compareTo(durationField19) == 0) || (Math.signum(durationField15.compareTo(durationField15)) == Math.signum(durationField19.compareTo(durationField15))));
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test269");
        org.joda.time.DateTimeZone dateTimeZone0 = null;
        org.joda.time.LocalTime localTime1 = new org.joda.time.LocalTime(dateTimeZone0);
        org.joda.time.LocalTime localTime3 = localTime1.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime5 = localTime3.plusMillis((int) (byte) 100);
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 100, 1L, periodType14);
        org.joda.time.Period period16 = period11.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Duration duration20 = period15.toDurationTo((org.joda.time.ReadableInstant) instant19);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration20, 39);
        org.joda.time.MutableDateTime.Property property23 = mutableDateTime7.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime7.setZone(dateTimeZone24);
        int int26 = mutableDateTime7.getYearOfEra();
        int int27 = mutableDateTime7.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property28 = mutableDateTime7.year();
        org.joda.time.MutableDateTime mutableDateTime29 = property28.roundHalfEven();
        org.joda.time.DateTime dateTime30 = localTime5.toDateTime((org.joda.time.ReadableInstant) mutableDateTime29);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.Instant instant34 = instant32.withMillis(0L);
        org.joda.time.Chronology chronology35 = instant34.getChronology();
        org.joda.time.DurationField durationField36 = chronology35.eras();
        java.util.Locale locale37 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket39 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology35, locale37, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology41 = null;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.CANADA;
        java.lang.String str44 = locale42.getDisplayVariant(locale43);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket45 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology41, locale43);
        org.joda.time.DateTimeZone dateTimeZone46 = dateTimeParserBucket45.getZone();
        org.joda.time.Chronology chronology47 = chronology35.withZone(dateTimeZone46);
        org.joda.time.DateTimeField dateTimeField48 = chronology47.hourOfDay();
        org.joda.time.DateTime dateTime49 = dateTime30.withChronology(chronology47);
        org.joda.time.DurationField durationField50 = chronology47.centuries();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField36, durationField50, and durationField36", !(durationField36.compareTo(durationField50) == 0) || (Math.signum(durationField36.compareTo(durationField36)) == Math.signum(durationField50.compareTo(durationField36))));
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test270");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology5);
        org.joda.time.DateTimeField dateTimeField8 = chronology5.monthOfYear();
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.LocalDateTime localDateTime14 = localDateTime9.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str16 = dateTimeFieldType15.getName();
        int int17 = localDateTime9.indexOf(dateTimeFieldType15);
        org.joda.time.LocalDateTime localDateTime19 = localDateTime9.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime21 = localDateTime9.minusSeconds((int) '#');
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str23 = dateTimeFieldType22.getName();
        org.joda.time.LocalDateTime.Property property24 = localDateTime21.property(dateTimeFieldType22);
        int int25 = localDateTime21.getMinuteOfHour();
        org.joda.time.LocalDateTime localDateTime26 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime28 = localDateTime26.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property29 = localDateTime26.hourOfDay();
        org.joda.time.LocalDateTime localDateTime31 = localDateTime26.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType32 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str33 = dateTimeFieldType32.getName();
        int int34 = localDateTime26.indexOf(dateTimeFieldType32);
        org.joda.time.LocalDateTime localDateTime36 = localDateTime26.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime38 = localDateTime26.minusSeconds((int) '#');
        org.joda.time.DateTimeFieldType dateTimeFieldType39 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str40 = dateTimeFieldType39.getName();
        org.joda.time.LocalDateTime.Property property41 = localDateTime38.property(dateTimeFieldType39);
        int int42 = localDateTime38.getMinuteOfHour();
        int int43 = localDateTime38.getMillisOfDay();
        org.joda.time.LocalDateTime localDateTime45 = localDateTime38.plusMillis((int) '4');
        org.joda.time.LocalDateTime localDateTime46 = localDateTime21.withFields((org.joda.time.ReadablePartial) localDateTime45);
        int int47 = localDateTime46.getMillisOfDay();
        int int48 = dateTimeField8.getMaximumValue((org.joda.time.ReadablePartial) localDateTime46);
        long long51 = dateTimeField8.add((long) 210, 39316455);
        org.joda.time.DurationField durationField52 = dateTimeField8.getDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField52, and durationField6", !(durationField6.compareTo(durationField52) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField52.compareTo(durationField6))));
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test271");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int7 = instant3.get(dateTimeFieldType6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 10, (long) 3);
        org.joda.time.Instant instant12 = instant3.withDurationAdded((org.joda.time.ReadableDuration) duration10, 0);
        org.joda.time.Instant instant13 = new org.joda.time.Instant();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant13);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Chronology chronology20 = instant19.getChronology();
        org.joda.time.DurationField durationField21 = chronology20.eras();
        java.util.Locale locale22 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket24 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology20, locale22, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime25.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property28 = localDateTime25.hourOfDay();
        org.joda.time.DateTimeField dateTimeField29 = property28.getField();
        int int30 = property28.get();
        org.joda.time.LocalDateTime localDateTime31 = property28.roundHalfFloorCopy();
        long long33 = chronology20.set((org.joda.time.ReadablePartial) localDateTime31, (long) 2022);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(chronology20);
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology20);
        org.joda.time.DurationField durationField36 = chronology20.eras();
        org.joda.time.MutableDateTime mutableDateTime37 = new org.joda.time.MutableDateTime(chronology20);
        mutablePeriod14.setPeriod((long) (short) -1, chronology20);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime41 = localDateTime39.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property42 = localDateTime39.hourOfDay();
        org.joda.time.LocalDateTime localDateTime44 = localDateTime39.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str46 = dateTimeFieldType45.getName();
        int int47 = localDateTime39.indexOf(dateTimeFieldType45);
        org.joda.time.LocalDateTime localDateTime49 = localDateTime39.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime51 = localDateTime39.minusSeconds((int) '#');
        org.joda.time.LocalDateTime localDateTime52 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime54 = localDateTime52.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property55 = localDateTime52.hourOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime52.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str59 = dateTimeFieldType58.getName();
        int int60 = localDateTime52.indexOf(dateTimeFieldType58);
        org.joda.time.LocalDateTime localDateTime62 = localDateTime52.minusSeconds(0);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.DateTime dateTime65 = new org.joda.time.DateTime((long) (short) 1, chronology64);
        org.joda.time.Instant instant66 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime65, (org.joda.time.ReadableInstant) instant66, periodType67);
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadablePartial) localDateTime39, (org.joda.time.ReadablePartial) localDateTime62, periodType67);
        org.joda.time.DateTimeZone dateTimeZone70 = org.joda.time.DateTimeZone.UTC;
        long long73 = dateTimeZone70.convertLocalToUTC((long) (byte) 100, false);
        org.joda.time.LocalDateTime localDateTime74 = new org.joda.time.LocalDateTime(dateTimeZone70);
        org.joda.time.DateTime dateTime75 = localDateTime39.toDateTime(dateTimeZone70);
        org.joda.time.LocalDateTime localDateTime77 = localDateTime39.minusDays(2);
        java.lang.String str78 = localDateTime77.toString();
        int int79 = localDateTime77.getWeekyear();
        org.joda.time.LocalDateTime localDateTime81 = localDateTime77.minusYears((int) (short) 1);
        java.lang.String str82 = localDateTime77.toString();
        int[] intArray84 = chronology20.get((org.joda.time.ReadablePartial) localDateTime77, 0L);
        org.joda.time.Chronology chronology85 = chronology20.withUTC();
        org.joda.time.DurationField durationField86 = chronology85.millis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField21, durationField86, and durationField21", !(durationField21.compareTo(durationField86) == 0) || (Math.signum(durationField21.compareTo(durationField21)) == Math.signum(durationField86.compareTo(durationField21))));
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test272");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology10 = null;
        java.util.Locale locale11 = java.util.Locale.GERMAN;
        java.util.Locale locale12 = java.util.Locale.CANADA;
        java.lang.String str13 = locale11.getDisplayVariant(locale12);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket14 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology10, locale12);
        org.joda.time.DateTimeZone dateTimeZone15 = dateTimeParserBucket14.getZone();
        org.joda.time.Chronology chronology16 = chronology4.withZone(dateTimeZone15);
        org.joda.time.LocalTime localTime17 = org.joda.time.LocalTime.now(chronology16);
        org.joda.time.DateTimeField dateTimeField18 = chronology16.weekOfWeekyear();
        org.joda.time.DurationField durationField19 = chronology16.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField19, and durationField5", !(durationField5.compareTo(durationField19) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField19.compareTo(durationField5))));
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test273");
        org.joda.time.LocalDate localDate0 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate2 = localDate0.minusMonths((int) ' ');
        org.joda.time.Chronology chronology3 = localDate0.getChronology();
        org.joda.time.DateTimeField dateTimeField4 = chronology3.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField5 = chronology3.minuteOfHour();
        org.joda.time.DurationField durationField6 = chronology3.weekyears();
        org.joda.time.DateTimeField dateTimeField7 = chronology3.minuteOfDay();
        org.joda.time.DurationField durationField8 = chronology3.hours();
        boolean boolean9 = durationField8.isSupported();
        org.joda.time.LocalDate localDate11 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate13 = localDate11.minusMonths((int) ' ');
        org.joda.time.Chronology chronology14 = localDate11.getChronology();
        java.util.Locale locale15 = null;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket18 = new org.joda.time.format.DateTimeParserBucket(0L, chronology14, locale15, (java.lang.Integer) 59, 12);
        org.joda.time.DurationField durationField19 = chronology14.years();
        long long20 = durationField19.getUnitMillis();
        int int21 = durationField8.compareTo(durationField19);
        java.lang.String str22 = durationField8.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField6 and durationField19", (durationField6.compareTo(durationField19) == 0) == durationField6.equals(durationField19));
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test274");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate((long) 53, chronology5);
        org.joda.time.DateTimeField dateTimeField11 = chronology5.clockhourOfHalfday();
        org.joda.time.DateTimeField dateTimeField12 = chronology5.halfdayOfDay();
        org.joda.time.DurationField durationField13 = chronology5.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField13, and durationField6", !(durationField6.compareTo(durationField13) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField13.compareTo(durationField6))));
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test275");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate((long) 53, chronology5);
        org.joda.time.DateTimeField dateTimeField11 = chronology5.dayOfYear();
        org.joda.time.DateTimeField dateTimeField12 = chronology5.monthOfYear();
        org.joda.time.DurationField durationField13 = dateTimeField12.getLeapDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField13, and durationField6", !(durationField6.compareTo(durationField13) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField13.compareTo(durationField6))));
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test276");
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(readableDuration2, readableInstant3);
        org.joda.time.Period period6 = period4.withDays((int) (byte) 1);
        org.joda.time.Period period8 = period6.minusWeeks(100);
        org.joda.time.Period period10 = period8.withMinutes((int) (short) 10);
        org.joda.time.ReadableDuration readableDuration11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period(readableDuration11, readableInstant12);
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((long) 100, 1L, periodType16);
        org.joda.time.Period period19 = period17.minusSeconds((-1));
        java.lang.String str20 = period17.toString();
        org.joda.time.Period period21 = period17.toPeriod();
        org.joda.time.PeriodType periodType22 = period17.getPeriodType();
        org.joda.time.Period period23 = period13.normalizedStandard(periodType22);
        org.joda.time.Period period25 = period13.plusSeconds(45);
        org.joda.time.Period period26 = period10.minus((org.joda.time.ReadablePeriod) period25);
        org.joda.time.MutableDateTime mutableDateTime28 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((long) 100, 1L, periodType31);
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((long) 100, 1L, periodType35);
        org.joda.time.Period period37 = period32.plus((org.joda.time.ReadablePeriod) period36);
        org.joda.time.Instant instant38 = new org.joda.time.Instant();
        org.joda.time.Instant instant40 = instant38.withMillis(0L);
        org.joda.time.Duration duration41 = period36.toDurationTo((org.joda.time.ReadableInstant) instant40);
        mutableDateTime28.add((org.joda.time.ReadableDuration) duration41, 39);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period46 = duration45.toPeriod();
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.centuries();
        int int48 = period46.get(durationFieldType47);
        mutableDateTime28.add((org.joda.time.ReadablePeriod) period46, 54);
        org.joda.time.Period period51 = period26.withFields((org.joda.time.ReadablePeriod) period46);
        org.joda.time.DurationFieldType[] durationFieldTypeArray52 = period26.getFieldTypes();
        org.joda.time.PeriodType periodType53 = period26.getPeriodType();
        org.joda.time.PeriodType periodType54 = periodType53.withYearsRemoved();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period57 = duration56.toPeriod();
        org.joda.time.Duration duration60 = duration56.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType61 = null;
        org.joda.time.Instant instant64 = new org.joda.time.Instant();
        org.joda.time.Instant instant66 = instant64.withMillis(0L);
        org.joda.time.Chronology chronology67 = instant66.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.eras();
        java.util.Locale locale69 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket71 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology67, locale69, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate72 = new org.joda.time.LocalDate((long) 53, chronology67);
        org.joda.time.DateTimeField dateTimeField73 = chronology67.dayOfYear();
        org.joda.time.DateTimeField dateTimeField74 = chronology67.monthOfYear();
        org.joda.time.Period period75 = duration56.toPeriod(periodType61, chronology67);
        org.joda.time.Period period76 = new org.joda.time.Period((long) 86396, (long) 53644753, periodType54, chronology67);
        org.joda.time.DurationField durationField77 = chronology67.days();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField68, durationField77, and durationField68", !(durationField68.compareTo(durationField77) == 0) || (Math.signum(durationField68.compareTo(durationField68)) == Math.signum(durationField77.compareTo(durationField68))));
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test277");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime((long) (short) 1, chronology4);
        org.joda.time.Instant instant6 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime5, (org.joda.time.ReadableInstant) instant6, periodType7);
        org.joda.time.LocalDate localDate9 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate11 = localDate9.minusMonths((int) ' ');
        org.joda.time.Chronology chronology12 = localDate9.getChronology();
        org.joda.time.Period period13 = new org.joda.time.Period((long) (byte) 1, periodType7, chronology12);
        org.joda.time.LocalDate localDate14 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate16 = localDate14.minusMonths((int) ' ');
        org.joda.time.Chronology chronology17 = localDate14.getChronology();
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate20 = localDate14.withFieldAdded(durationFieldType18, (int) (byte) 100);
        boolean boolean21 = periodType7.isSupported(durationFieldType18);
        org.joda.time.PeriodType periodType22 = periodType7.withDaysRemoved();
        org.joda.time.LocalDate localDate23 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property24 = localDate23.dayOfMonth();
        org.joda.time.Chronology chronology25 = localDate23.getChronology();
        org.joda.time.Period period26 = new org.joda.time.Period((long) 43, periodType7, chronology25);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period29 = duration28.toPeriod();
        org.joda.time.Duration duration32 = duration28.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.Instant instant36 = new org.joda.time.Instant();
        org.joda.time.Instant instant38 = instant36.withMillis(0L);
        org.joda.time.Chronology chronology39 = instant38.getChronology();
        org.joda.time.DurationField durationField40 = chronology39.eras();
        java.util.Locale locale41 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket43 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology39, locale41, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate44 = new org.joda.time.LocalDate((long) 53, chronology39);
        org.joda.time.DateTimeField dateTimeField45 = chronology39.dayOfYear();
        org.joda.time.DateTimeField dateTimeField46 = chronology39.monthOfYear();
        org.joda.time.Period period47 = duration28.toPeriod(periodType33, chronology39);
        org.joda.time.Period period48 = new org.joda.time.Period((long) '#', periodType7, chronology39);
        org.joda.time.DateTimeField dateTimeField49 = chronology39.weekOfWeekyear();
        org.joda.time.DateTimeZone dateTimeZone50 = chronology39.getZone();
        org.joda.time.DateTimeField dateTimeField51 = chronology39.dayOfMonth();
        org.joda.time.DurationField durationField52 = chronology39.minutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField40, durationField52, and durationField40", !(durationField40.compareTo(durationField52) == 0) || (Math.signum(durationField40.compareTo(durationField40)) == Math.signum(durationField52.compareTo(durationField40))));
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test278");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.DateTimeField dateTimeField18 = chronology4.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField19 = chronology4.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField20 = chronology4.millisOfSecond();
        long long23 = dateTimeField20.getDifferenceAsLong((long) 48, (long) 28);
        java.lang.String str24 = dateTimeField20.toString();
        org.joda.time.DurationField durationField25 = dateTimeField20.getLeapDurationField();
        org.joda.time.DurationField durationField26 = dateTimeField20.getDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField26, and durationField5", !(durationField5.compareTo(durationField26) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField26.compareTo(durationField5))));
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test279");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate((long) 53, chronology5);
        org.joda.time.DateTimeField dateTimeField11 = chronology5.dayOfYear();
        org.joda.time.DateTimeField dateTimeField12 = chronology5.hourOfHalfday();
        org.joda.time.DurationField durationField13 = chronology5.millis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField13, and durationField6", !(durationField6.compareTo(durationField13) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField13.compareTo(durationField6))));
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test280");
        org.joda.time.MutableDateTime mutableDateTime2 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.MutableDateTime.Property property3 = mutableDateTime2.minuteOfHour();
        org.joda.time.DateTimeFieldType dateTimeFieldType4 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType5 = dateTimeFieldType4.getRangeDurationType();
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.dayOfYear();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTime dateTime9 = new org.joda.time.DateTime(chronology8);
        int int10 = dateTime9.getSecondOfMinute();
        boolean boolean11 = dateTime9.isEqualNow();
        int int12 = dateTime9.getDayOfYear();
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        java.util.Locale locale14 = java.util.Locale.SIMPLIFIED_CHINESE;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket15 = new org.joda.time.format.DateTimeParserBucket(315532800097L, chronology13, locale14);
        org.joda.time.DateTimeField dateTimeField16 = dateTimeFieldType6.getField(chronology13);
        org.joda.time.DurationField durationField17 = durationFieldType5.getField(chronology13);
        mutableDateTime2.setChronology(chronology13);
        org.joda.time.LocalTime localTime19 = org.joda.time.LocalTime.fromMillisOfDay(39217210L, chronology13);
        org.joda.time.DateTimeField dateTimeField20 = chronology13.clockhourOfHalfday();
        org.joda.time.LocalDate localDate21 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate23 = localDate21.minusMonths((int) ' ');
        int int24 = localDate21.size();
        org.joda.time.LocalDate.Property property25 = localDate21.era();
        org.joda.time.DateTimeField dateTimeField26 = property25.getField();
        boolean boolean27 = property25.isLeap();
        org.joda.time.DurationField durationField28 = property25.getLeapDurationField();
        org.joda.time.LocalDate localDate29 = property25.roundCeilingCopy();
        org.joda.time.LocalDate localDate31 = property25.addWrapFieldToCopy(20);
        org.joda.time.LocalDate localDate32 = property25.withMinimumValue();
        org.joda.time.LocalDate localDate33 = property25.roundHalfCeilingCopy();
        org.joda.time.LocalDate localDate35 = localDate33.plusYears(0);
        org.joda.time.Instant instant38 = new org.joda.time.Instant();
        org.joda.time.Instant instant40 = instant38.withMillis(0L);
        org.joda.time.Chronology chronology41 = instant40.getChronology();
        org.joda.time.DurationField durationField42 = chronology41.eras();
        java.util.Locale locale43 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket45 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology41, locale43, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime46 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime48 = localDateTime46.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property49 = localDateTime46.hourOfDay();
        org.joda.time.DateTimeField dateTimeField50 = property49.getField();
        int int51 = property49.get();
        org.joda.time.LocalDateTime localDateTime52 = property49.roundHalfFloorCopy();
        long long54 = chronology41.set((org.joda.time.ReadablePartial) localDateTime52, (long) 2022);
        org.joda.time.DateTimeField dateTimeField55 = chronology41.weekOfWeekyear();
        int int56 = dateTimeField55.getMaximumValue();
        org.joda.time.LocalDateTime localDateTime58 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime60 = localDateTime58.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime62 = localDateTime60.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField64 = localDateTime62.getField((int) (byte) 0);
        java.util.Locale locale66 = java.util.Locale.CANADA;
        java.lang.String str67 = dateTimeField64.getAsShortText((long) (byte) 1, locale66);
        java.lang.String str68 = dateTimeField55.getAsText((int) (byte) -1, locale66);
        java.lang.String str69 = locale66.getLanguage();
        java.lang.String str70 = dateTimeField20.getAsShortText((org.joda.time.ReadablePartial) localDate35, 3, locale66);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField17 and durationField42", Math.signum(durationField17.compareTo(durationField42)) == -Math.signum(durationField42.compareTo(durationField17)));
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test281");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology10 = null;
        java.util.Locale locale11 = java.util.Locale.GERMAN;
        java.util.Locale locale12 = java.util.Locale.CANADA;
        java.lang.String str13 = locale11.getDisplayVariant(locale12);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket14 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology10, locale12);
        org.joda.time.DateTimeZone dateTimeZone15 = dateTimeParserBucket14.getZone();
        org.joda.time.Chronology chronology16 = chronology4.withZone(dateTimeZone15);
        org.joda.time.DateTimeField dateTimeField17 = chronology16.hourOfDay();
        java.util.Locale locale19 = null;
        java.lang.String str20 = dateTimeField17.getAsText((long) 29, locale19);
        org.joda.time.DurationField durationField21 = dateTimeField17.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField21, and durationField5", !(durationField5.compareTo(durationField21) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField21.compareTo(durationField5))));
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test282");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology5);
        org.joda.time.DateTimeField dateTimeField8 = chronology5.monthOfYear();
        long long11 = dateTimeField8.getDifferenceAsLong((long) 8, 86400L);
        org.joda.time.DurationField durationField12 = dateTimeField8.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField12, and durationField6", !(durationField6.compareTo(durationField12) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField12.compareTo(durationField6))));
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test283");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology10 = null;
        java.util.Locale locale11 = java.util.Locale.GERMAN;
        java.util.Locale locale12 = java.util.Locale.CANADA;
        java.lang.String str13 = locale11.getDisplayVariant(locale12);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket14 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology10, locale12);
        org.joda.time.DateTimeZone dateTimeZone15 = dateTimeParserBucket14.getZone();
        org.joda.time.Chronology chronology16 = chronology4.withZone(dateTimeZone15);
        org.joda.time.LocalTime localTime17 = org.joda.time.LocalTime.now(chronology16);
        org.joda.time.DateTimeField dateTimeField18 = chronology16.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField19 = chronology16.dayOfYear();
        org.joda.time.DateTimeField dateTimeField20 = chronology16.minuteOfHour();
        org.joda.time.DurationField durationField21 = chronology16.hours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField21, and durationField5", !(durationField5.compareTo(durationField21) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField21.compareTo(durationField5))));
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test284");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(chronology4);
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DurationField durationField20 = chronology4.eras();
        org.joda.time.DateTimeField dateTimeField21 = chronology4.weekyear();
        org.joda.time.Chronology chronology22 = chronology4.withUTC();
        org.joda.time.DurationField durationField23 = chronology4.centuries();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField23, and durationField5", !(durationField5.compareTo(durationField23) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField23.compareTo(durationField5))));
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test285");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        int int5 = dateTime4.getSecondOfMinute();
        boolean boolean6 = dateTime4.isEqualNow();
        int int7 = dateTime4.getDayOfYear();
        org.joda.time.Chronology chronology8 = dateTime4.getChronology();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology8);
        org.joda.time.DurationField durationField10 = chronology8.hours();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.dayOfWeek();
        java.util.Locale.Builder builder12 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder13 = builder12.clear();
        java.util.Locale locale14 = builder12.build();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket17 = new org.joda.time.format.DateTimeParserBucket((long) 39321381, chronology8, locale14, (java.lang.Integer) 0, 1970);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime20 = localDateTime18.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property21 = localDateTime18.hourOfDay();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime18.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str25 = dateTimeFieldType24.getName();
        int int26 = localDateTime18.indexOf(dateTimeFieldType24);
        org.joda.time.LocalDateTime localDateTime28 = localDateTime18.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime30 = localDateTime18.minusSeconds((int) '#');
        org.joda.time.LocalDateTime.Property property31 = localDateTime30.year();
        org.joda.time.LocalDateTime.Property property32 = localDateTime30.yearOfEra();
        org.joda.time.Instant instant34 = new org.joda.time.Instant();
        org.joda.time.Instant instant36 = instant34.withMillis(0L);
        org.joda.time.Chronology chronology37 = instant36.getChronology();
        org.joda.time.DurationField durationField38 = chronology37.eras();
        java.util.Locale locale39 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket41 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology37, locale39, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime42 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime44 = localDateTime42.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property45 = localDateTime42.hourOfDay();
        org.joda.time.DateTimeField dateTimeField46 = property45.getField();
        int int47 = property45.get();
        org.joda.time.LocalDateTime localDateTime48 = property45.roundHalfFloorCopy();
        long long50 = chronology37.set((org.joda.time.ReadablePartial) localDateTime48, (long) 2022);
        org.joda.time.LocalDateTime localDateTime51 = org.joda.time.LocalDateTime.now(chronology37);
        org.joda.time.DateTime dateTime52 = new org.joda.time.DateTime(chronology37);
        org.joda.time.DurationField durationField53 = chronology37.eras();
        org.joda.time.MutableDateTime mutableDateTime54 = new org.joda.time.MutableDateTime(chronology37);
        org.joda.time.DateTimeZone dateTimeZone55 = mutableDateTime54.getZone();
        java.lang.String str57 = dateTimeZone55.getNameKey((long) 39297267);
        org.joda.time.DateTime dateTime58 = localDateTime30.toDateTime(dateTimeZone55);
        org.joda.time.LocalDateTime localDateTime59 = org.joda.time.LocalDateTime.now(dateTimeZone55);
        dateTimeParserBucket17.setZone(dateTimeZone55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField10 and durationField38", Math.signum(durationField10.compareTo(durationField38)) == -Math.signum(durationField38.compareTo(durationField10)));
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test286");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate((long) 53, chronology5);
        org.joda.time.DateTimeField dateTimeField11 = chronology5.dayOfYear();
        org.joda.time.DurationField durationField12 = chronology5.halfdays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField12, and durationField6", !(durationField6.compareTo(durationField12) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField12.compareTo(durationField6))));
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test287");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(chronology4);
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DurationField durationField20 = chronology4.eras();
        org.joda.time.DateTimeField dateTimeField21 = chronology4.weekyear();
        org.joda.time.Chronology chronology22 = chronology4.withUTC();
        org.joda.time.DurationField durationField23 = chronology22.hours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField23, and durationField5", !(durationField5.compareTo(durationField23) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField23.compareTo(durationField5))));
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test288");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(chronology4);
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DurationField durationField20 = chronology4.eras();
        org.joda.time.DateTimeField dateTimeField21 = chronology4.weekyear();
        org.joda.time.Chronology chronology22 = chronology4.withUTC();
        org.joda.time.DurationField durationField23 = chronology22.weeks();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField23, and durationField5", !(durationField5.compareTo(durationField23) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField23.compareTo(durationField5))));
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test289");
        org.joda.time.LocalDate localDate0 = new org.joda.time.LocalDate();
        int int1 = localDate0.getDayOfMonth();
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(readableDuration2, readableInstant3);
        org.joda.time.Period period6 = period4.withDays((int) (byte) 1);
        org.joda.time.Period period8 = period6.minusWeeks(100);
        org.joda.time.Period period10 = period8.withDays(1);
        org.joda.time.LocalDate localDate12 = localDate0.withPeriodAdded((org.joda.time.ReadablePeriod) period8, 642);
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        mutablePeriod17.addYears(59);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Chronology chronology25 = instant24.getChronology();
        org.joda.time.DurationField durationField26 = chronology25.eras();
        java.util.Locale locale27 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket29 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology25, locale27, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate30 = new org.joda.time.LocalDate((long) 53, chronology25);
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period(readableDuration31, readableInstant32);
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 100, 1L, periodType36);
        org.joda.time.Period period39 = period37.minusSeconds((-1));
        java.lang.String str40 = period37.toString();
        org.joda.time.Period period41 = period37.toPeriod();
        org.joda.time.PeriodType periodType42 = period37.getPeriodType();
        org.joda.time.Period period43 = period33.normalizedStandard(periodType42);
        boolean boolean44 = localDate30.equals((java.lang.Object) period33);
        org.joda.time.Interval interval45 = localDate30.toInterval();
        mutablePeriod17.add((org.joda.time.ReadableInterval) interval45);
        org.joda.time.LocalDate localDate47 = localDate0.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        mutablePeriod17.addMonths(11);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.DateTime dateTime53 = new org.joda.time.DateTime(chronology52);
        int int54 = dateTime53.getSecondOfMinute();
        boolean boolean55 = dateTime53.isEqualNow();
        int int56 = dateTime53.getDayOfYear();
        org.joda.time.Chronology chronology57 = dateTime53.getChronology();
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology57);
        org.joda.time.DateTimeField dateTimeField59 = chronology57.year();
        org.joda.time.DateTimeField dateTimeField60 = chronology57.dayOfMonth();
        org.joda.time.DurationField durationField61 = chronology57.halfdays();
        long long64 = durationField61.subtract((long) 31, (long) '#');
        long long67 = durationField61.subtract(654L, 819);
        long long70 = durationField61.getValueAsLong((long) 27, 86396L);
        long long73 = durationField61.getValueAsLong(3155760003135L, (long) 6);
        org.joda.time.Duration duration74 = new org.joda.time.Duration((java.lang.Object) 3155760003135L);
        mutablePeriod17.add((org.joda.time.ReadableDuration) duration74);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField26 and durationField61", Math.signum(durationField26.compareTo(durationField61)) == -Math.signum(durationField61.compareTo(durationField26)));
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test290");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int7 = instant3.get(dateTimeFieldType6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 10, (long) 3);
        org.joda.time.Instant instant12 = instant3.withDurationAdded((org.joda.time.ReadableDuration) duration10, 0);
        org.joda.time.Instant instant13 = new org.joda.time.Instant();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant13);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Chronology chronology20 = instant19.getChronology();
        org.joda.time.DurationField durationField21 = chronology20.eras();
        java.util.Locale locale22 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket24 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology20, locale22, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime25.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property28 = localDateTime25.hourOfDay();
        org.joda.time.DateTimeField dateTimeField29 = property28.getField();
        int int30 = property28.get();
        org.joda.time.LocalDateTime localDateTime31 = property28.roundHalfFloorCopy();
        long long33 = chronology20.set((org.joda.time.ReadablePartial) localDateTime31, (long) 2022);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(chronology20);
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology20);
        org.joda.time.DurationField durationField36 = chronology20.eras();
        org.joda.time.MutableDateTime mutableDateTime37 = new org.joda.time.MutableDateTime(chronology20);
        mutablePeriod14.setPeriod((long) (short) -1, chronology20);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime41 = localDateTime39.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property42 = localDateTime39.hourOfDay();
        org.joda.time.LocalDateTime localDateTime44 = localDateTime39.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str46 = dateTimeFieldType45.getName();
        int int47 = localDateTime39.indexOf(dateTimeFieldType45);
        org.joda.time.LocalDateTime localDateTime49 = localDateTime39.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime51 = localDateTime39.minusSeconds((int) '#');
        org.joda.time.LocalDateTime localDateTime52 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime54 = localDateTime52.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property55 = localDateTime52.hourOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime52.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str59 = dateTimeFieldType58.getName();
        int int60 = localDateTime52.indexOf(dateTimeFieldType58);
        org.joda.time.LocalDateTime localDateTime62 = localDateTime52.minusSeconds(0);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.DateTime dateTime65 = new org.joda.time.DateTime((long) (short) 1, chronology64);
        org.joda.time.Instant instant66 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime65, (org.joda.time.ReadableInstant) instant66, periodType67);
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadablePartial) localDateTime39, (org.joda.time.ReadablePartial) localDateTime62, periodType67);
        org.joda.time.DateTimeZone dateTimeZone70 = org.joda.time.DateTimeZone.UTC;
        long long73 = dateTimeZone70.convertLocalToUTC((long) (byte) 100, false);
        org.joda.time.LocalDateTime localDateTime74 = new org.joda.time.LocalDateTime(dateTimeZone70);
        org.joda.time.DateTime dateTime75 = localDateTime39.toDateTime(dateTimeZone70);
        org.joda.time.LocalDateTime localDateTime77 = localDateTime39.minusDays(2);
        java.lang.String str78 = localDateTime77.toString();
        int int79 = localDateTime77.getWeekyear();
        org.joda.time.LocalDateTime localDateTime81 = localDateTime77.minusYears((int) (short) 1);
        java.lang.String str82 = localDateTime77.toString();
        int[] intArray84 = chronology20.get((org.joda.time.ReadablePartial) localDateTime77, 0L);
        org.joda.time.Chronology chronology85 = chronology20.withUTC();
        org.joda.time.MutableDateTime mutableDateTime86 = org.joda.time.MutableDateTime.now(chronology20);
        org.joda.time.DurationField durationField87 = chronology20.minutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField21, durationField87, and durationField21", !(durationField21.compareTo(durationField87) == 0) || (Math.signum(durationField21.compareTo(durationField21)) == Math.signum(durationField87.compareTo(durationField21))));
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test291");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology7);
        org.joda.time.DateTimeField dateTimeField9 = chronology7.year();
        org.joda.time.DateTimeField dateTimeField10 = chronology7.dayOfMonth();
        org.joda.time.DurationField durationField11 = chronology7.halfdays();
        org.joda.time.DateTimeField dateTimeField12 = chronology7.weekyear();
        org.joda.time.DurationField durationField13 = chronology7.eras();
        org.joda.time.DateTimeField dateTimeField14 = chronology7.year();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField11 and durationField13", Math.signum(durationField11.compareTo(durationField13)) == -Math.signum(durationField13.compareTo(durationField11)));
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test292");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology10 = null;
        java.util.Locale locale11 = java.util.Locale.GERMAN;
        java.util.Locale locale12 = java.util.Locale.CANADA;
        java.lang.String str13 = locale11.getDisplayVariant(locale12);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket14 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology10, locale12);
        org.joda.time.DateTimeZone dateTimeZone15 = dateTimeParserBucket14.getZone();
        org.joda.time.Chronology chronology16 = chronology4.withZone(dateTimeZone15);
        org.joda.time.DateTimeField dateTimeField17 = chronology16.hourOfDay();
        org.joda.time.DateTimeField dateTimeField18 = chronology16.clockhourOfHalfday();
        org.joda.time.DurationField durationField19 = chronology16.days();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField19, and durationField5", !(durationField5.compareTo(durationField19) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField19.compareTo(durationField5))));
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test293");
        org.joda.time.LocalDate localDate0 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate2 = localDate0.minusMonths((int) ' ');
        org.joda.time.Chronology chronology3 = localDate0.getChronology();
        org.joda.time.DateTimeField dateTimeField4 = chronology3.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField5 = chronology3.minuteOfHour();
        org.joda.time.DurationField durationField6 = chronology3.weekyears();
        org.joda.time.DateTimeField dateTimeField7 = chronology3.minuteOfDay();
        org.joda.time.DurationField durationField8 = chronology3.hours();
        boolean boolean9 = durationField8.isSupported();
        org.joda.time.LocalDate localDate11 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate13 = localDate11.minusMonths((int) ' ');
        org.joda.time.Chronology chronology14 = localDate11.getChronology();
        java.util.Locale locale15 = null;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket18 = new org.joda.time.format.DateTimeParserBucket(0L, chronology14, locale15, (java.lang.Integer) 59, 12);
        org.joda.time.DurationField durationField19 = chronology14.years();
        long long20 = durationField19.getUnitMillis();
        int int21 = durationField8.compareTo(durationField19);
        long long24 = durationField8.add((long) 53787332, (long) 896);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField6 and durationField19", (durationField6.compareTo(durationField19) == 0) == durationField6.equals(durationField19));
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test294");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        java.lang.Integer int9 = dateTimeParserBucket8.getOffsetInteger();
        int int10 = dateTimeParserBucket8.getOffset();
        org.joda.time.Instant instant12 = new org.joda.time.Instant();
        org.joda.time.Instant instant14 = instant12.withMillis(0L);
        org.joda.time.Chronology chronology15 = instant14.getChronology();
        org.joda.time.DurationField durationField16 = chronology15.eras();
        java.util.Locale locale17 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket19 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology15, locale17, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime20.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property23 = localDateTime20.hourOfDay();
        org.joda.time.DateTimeField dateTimeField24 = property23.getField();
        int int25 = property23.get();
        org.joda.time.LocalDateTime localDateTime26 = property23.roundHalfFloorCopy();
        long long28 = chronology15.set((org.joda.time.ReadablePartial) localDateTime26, (long) 2022);
        org.joda.time.DateTimeField dateTimeField29 = chronology15.weekOfWeekyear();
        int int30 = dateTimeField29.getMaximumValue();
        int int33 = dateTimeField29.getDifference((long) 642, (long) 31);
        boolean boolean35 = dateTimeField29.isLeap(39251167L);
        dateTimeParserBucket8.saveField(dateTimeField29, 3);
        org.joda.time.LocalDateTime localDateTime38 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime40 = localDateTime38.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property41 = localDateTime38.hourOfDay();
        org.joda.time.DateTimeField dateTimeField42 = property41.getField();
        boolean boolean43 = property41.isLeap();
        boolean boolean44 = property41.isLeap();
        org.joda.time.LocalDateTime localDateTime45 = property41.roundFloorCopy();
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = java.util.Locale.CANADA;
        java.lang.String str48 = locale46.getDisplayVariant(locale47);
        java.lang.String str49 = locale47.getCountry();
        java.lang.String str50 = locale47.getScript();
        java.lang.String str51 = dateTimeField29.getAsShortText((org.joda.time.ReadablePartial) localDateTime45, locale47);
        org.joda.time.MutableDateTime mutableDateTime53 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((long) 100, 1L, periodType56);
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((long) 100, 1L, periodType60);
        org.joda.time.Period period62 = period57.plus((org.joda.time.ReadablePeriod) period61);
        org.joda.time.Instant instant63 = new org.joda.time.Instant();
        org.joda.time.Instant instant65 = instant63.withMillis(0L);
        org.joda.time.Duration duration66 = period61.toDurationTo((org.joda.time.ReadableInstant) instant65);
        mutableDateTime53.add((org.joda.time.ReadableDuration) duration66, 39);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period71 = duration70.toPeriod();
        org.joda.time.DurationFieldType durationFieldType72 = org.joda.time.DurationFieldType.centuries();
        int int73 = period71.get(durationFieldType72);
        mutableDateTime53.add((org.joda.time.ReadablePeriod) period71, 54);
        mutableDateTime53.setMillisOfDay(0);
        org.joda.time.MutableDateTime.Property property78 = mutableDateTime53.centuryOfEra();
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardHours((long) (short) 1);
        org.joda.time.LocalDate localDate81 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate83 = localDate81.minusMonths((int) ' ');
        org.joda.time.Chronology chronology84 = localDate81.getChronology();
        org.joda.time.Period period85 = duration80.toPeriod(chronology84);
        org.joda.time.DateTime dateTime86 = mutableDateTime53.toDateTime(chronology84);
        org.joda.time.DurationField durationField87 = chronology84.hours();
        org.joda.time.LocalTime localTime88 = new org.joda.time.LocalTime((java.lang.Object) localDateTime45, chronology84);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField5 and durationField87", Math.signum(durationField5.compareTo(durationField87)) == -Math.signum(durationField87.compareTo(durationField5)));
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test295");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((long) 100, 1L, periodType12);
        org.joda.time.Period period14 = period9.plus((org.joda.time.ReadablePeriod) period13);
        org.joda.time.Instant instant15 = new org.joda.time.Instant();
        org.joda.time.Instant instant17 = instant15.withMillis(0L);
        org.joda.time.Duration duration18 = period13.toDurationTo((org.joda.time.ReadableInstant) instant17);
        long long19 = instant17.getMillis();
        org.joda.time.Interval interval20 = duration1.toIntervalTo((org.joda.time.ReadableInstant) instant17);
        org.joda.time.Instant instant21 = instant17.toInstant();
        org.joda.time.DateTimeZone dateTimeZone22 = instant17.getZone();
        org.joda.time.Instant instant24 = new org.joda.time.Instant();
        org.joda.time.Instant instant26 = instant24.withMillis(0L);
        org.joda.time.Chronology chronology27 = instant26.getChronology();
        org.joda.time.DurationField durationField28 = chronology27.eras();
        java.util.Locale locale29 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket31 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology27, locale29, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime32.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property35 = localDateTime32.hourOfDay();
        org.joda.time.DateTimeField dateTimeField36 = property35.getField();
        int int37 = property35.get();
        org.joda.time.LocalDateTime localDateTime38 = property35.roundHalfFloorCopy();
        long long40 = chronology27.set((org.joda.time.ReadablePartial) localDateTime38, (long) 2022);
        org.joda.time.LocalDateTime localDateTime41 = org.joda.time.LocalDateTime.now(chronology27);
        org.joda.time.DateTimeField dateTimeField42 = chronology27.era();
        org.joda.time.MutableDateTime mutableDateTime43 = instant17.toMutableDateTime(chronology27);
        org.joda.time.Chronology chronology44 = chronology27.withUTC();
        org.joda.time.DurationField durationField45 = chronology27.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField28, durationField45, and durationField28", !(durationField28.compareTo(durationField45) == 0) || (Math.signum(durationField28.compareTo(durationField28)) == Math.signum(durationField45.compareTo(durationField28))));
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test296");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.weekyears();
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        org.joda.time.DateTimeField dateTimeField7 = chronology5.yearOfEra();
        org.joda.time.Period period8 = new org.joda.time.Period((long) ' ', chronology5);
        org.joda.time.DateTimeField dateTimeField9 = chronology5.halfdayOfDay();
        long long14 = chronology5.getDateTimeMillis(39239, (int) (byte) 1, 19, 751);
        boolean boolean15 = durationFieldType0.isSupported(chronology5);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        int int18 = dateTime17.getSecondOfMinute();
        boolean boolean19 = dateTime17.isEqualNow();
        int int20 = dateTime17.getDayOfYear();
        org.joda.time.Chronology chronology21 = dateTime17.getChronology();
        org.joda.time.DateTimeField dateTimeField22 = chronology21.dayOfYear();
        org.joda.time.DateTimeField dateTimeField23 = chronology21.year();
        org.joda.time.DurationField durationField24 = chronology21.months();
        org.joda.time.DurationField durationField25 = durationFieldType0.getField(chronology21);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField6 and durationField24", Math.signum(durationField6.compareTo(durationField24)) == -Math.signum(durationField24.compareTo(durationField6)));
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test297");
        org.joda.time.LocalDate localDate1 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate3 = localDate1.minusMonths((int) ' ');
        org.joda.time.Chronology chronology4 = localDate1.getChronology();
        org.joda.time.DateTimeFieldType dateTimeFieldType5 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        org.joda.time.LocalDate localDate7 = localDate1.withField(dateTimeFieldType5, 6);
        org.joda.time.LocalDate localDate8 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property9 = localDate8.dayOfMonth();
        org.joda.time.Chronology chronology10 = localDate8.getChronology();
        org.joda.time.LocalDate.Property property11 = localDate8.dayOfWeek();
        org.joda.time.LocalDate localDate13 = localDate8.plusWeeks(56);
        org.joda.time.LocalDate localDate15 = localDate8.plusMonths(41);
        org.joda.time.LocalDate localDate17 = localDate15.minusMonths(16);
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime19.secondOfMinute();
        org.joda.time.MutableDateTime.Property property36 = mutableDateTime19.minuteOfHour();
        org.joda.time.MutableDateTime mutableDateTime38 = property36.addWrapField(6);
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.UTC;
        java.lang.String str41 = dateTimeZone39.getNameKey((long) (byte) 0);
        mutableDateTime38.setZoneRetainFields(dateTimeZone39);
        java.lang.String str44 = dateTimeZone39.getNameKey((long) 3);
        org.joda.time.DateTime dateTime45 = localDate15.toDateTimeAtStartOfDay(dateTimeZone39);
        org.joda.time.DateMidnight dateMidnight46 = localDate1.toDateMidnight(dateTimeZone39);
        java.util.TimeZone timeZone47 = dateTimeZone39.toTimeZone();
        org.joda.time.MutableDateTime mutableDateTime48 = new org.joda.time.MutableDateTime(86500000L, dateTimeZone39);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.DateTime dateTime52 = new org.joda.time.DateTime(chronology51);
        int int53 = dateTime52.getSecondOfMinute();
        boolean boolean54 = dateTime52.isEqualNow();
        int int55 = dateTime52.getDayOfYear();
        org.joda.time.Chronology chronology56 = dateTime52.getChronology();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology56);
        org.joda.time.DateTimeField dateTimeField58 = chronology56.year();
        org.joda.time.DateTimeField dateTimeField59 = chronology56.dayOfMonth();
        org.joda.time.DurationField durationField60 = chronology56.halfdays();
        org.joda.time.DateTimeField dateTimeField61 = chronology56.weekyear();
        org.joda.time.DurationField durationField62 = chronology56.eras();
        mutableDateTime48.setChronology(chronology56);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField60 and durationField62", Math.signum(durationField60.compareTo(durationField62)) == -Math.signum(durationField62.compareTo(durationField60)));
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test298");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.DurationField durationField4 = chronology3.eras();
        org.joda.time.DateTimeField dateTimeField5 = chronology3.yearOfEra();
        org.joda.time.DateTimeField dateTimeField6 = chronology3.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField7 = chronology3.halfdayOfDay();
        org.joda.time.DurationField durationField8 = chronology3.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField4, durationField8, and durationField4", !(durationField4.compareTo(durationField8) == 0) || (Math.signum(durationField4.compareTo(durationField4)) == Math.signum(durationField8.compareTo(durationField4))));
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test299");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(chronology4);
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DurationField durationField20 = chronology4.eras();
        org.joda.time.DateTimeField dateTimeField21 = chronology4.weekyear();
        org.joda.time.Chronology chronology22 = chronology4.withUTC();
        org.joda.time.Chronology chronology23 = chronology22.withUTC();
        org.joda.time.DurationField durationField24 = chronology23.halfdays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField24, and durationField5", !(durationField5.compareTo(durationField24) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField24.compareTo(durationField5))));
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test300");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.DurationField durationField4 = chronology3.eras();
        org.joda.time.DateTimeField dateTimeField5 = chronology3.yearOfEra();
        org.joda.time.DateTimeField dateTimeField6 = chronology3.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField7 = chronology3.halfdayOfDay();
        org.joda.time.DurationField durationField8 = chronology3.days();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField4, durationField8, and durationField4", !(durationField4.compareTo(durationField8) == 0) || (Math.signum(durationField4.compareTo(durationField4)) == Math.signum(durationField8.compareTo(durationField4))));
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test301");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.DateTimeField dateTimeField18 = chronology4.weekOfWeekyear();
        int int19 = dateTimeField18.getMaximumValue();
        int int22 = dateTimeField18.getDifference((long) 642, (long) 31);
        boolean boolean24 = dateTimeField18.isLeap(39251167L);
        org.joda.time.DurationField durationField25 = dateTimeField18.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField25, and durationField5", !(durationField5.compareTo(durationField25) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField25.compareTo(durationField5))));
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test302");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        mutablePeriod7.setYears(10);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Chronology chronology14 = instant13.getChronology();
        org.joda.time.DurationField durationField15 = chronology14.eras();
        org.joda.time.DateTimeField dateTimeField16 = chronology14.yearOfEra();
        org.joda.time.Period period17 = new org.joda.time.Period((long) ' ', chronology14);
        mutablePeriod7.mergePeriod((org.joda.time.ReadablePeriod) period17);
        mutablePeriod7.addWeeks(53722178);
        org.joda.time.LocalDate localDate21 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate23 = localDate21.minusMonths((int) ' ');
        org.joda.time.Chronology chronology24 = localDate21.getChronology();
        org.joda.time.DateTimeField dateTimeField25 = chronology24.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField26 = chronology24.minuteOfHour();
        org.joda.time.DurationField durationField27 = chronology24.weekyears();
        long long30 = durationField27.subtract(0L, 958);
        boolean boolean31 = durationField27.isPrecise();
        org.joda.time.DurationFieldType durationFieldType32 = durationField27.getType();
        boolean boolean33 = mutablePeriod7.isSupported(durationFieldType32);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField15 and durationField27", Math.signum(durationField15.compareTo(durationField27)) == -Math.signum(durationField27.compareTo(durationField15)));
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test303");
        org.joda.time.LocalDate localDate0 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate2 = localDate0.plusMonths(43);
        org.joda.time.LocalDate localDate4 = localDate2.withDayOfYear(12);
        org.joda.time.LocalDate localDate5 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate7 = localDate5.minusMonths((int) ' ');
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period(readableDuration8, readableInstant9);
        org.joda.time.Period period12 = period10.withDays((int) (byte) 1);
        org.joda.time.LocalDate localDate13 = localDate7.plus((org.joda.time.ReadablePeriod) period12);
        org.joda.time.LocalDate localDate15 = localDate13.minusMonths((-292275054));
        org.joda.time.LocalDate localDate17 = localDate13.minusYears(21);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.PeriodType periodType19 = periodType18.withMonthsRemoved();
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadablePartial) localDate4, (org.joda.time.ReadablePartial) localDate17, periodType18);
        org.joda.time.MutableDateTime mutableDateTime22 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) 100, 1L, periodType25);
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) 100, 1L, periodType29);
        org.joda.time.Period period31 = period26.plus((org.joda.time.ReadablePeriod) period30);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.Instant instant34 = instant32.withMillis(0L);
        org.joda.time.Duration duration35 = period30.toDurationTo((org.joda.time.ReadableInstant) instant34);
        mutableDateTime22.add((org.joda.time.ReadableDuration) duration35, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean39 = mutableDateTime22.isSupported(dateTimeFieldType38);
        int int40 = mutableDateTime22.getWeekOfWeekyear();
        org.joda.time.Instant instant42 = new org.joda.time.Instant();
        org.joda.time.Instant instant44 = instant42.withMillis(0L);
        org.joda.time.Chronology chronology45 = instant44.getChronology();
        org.joda.time.DurationField durationField46 = chronology45.eras();
        java.util.Locale locale47 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket49 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology45, locale47, (java.lang.Integer) 39221019);
        mutableDateTime22.setChronology(chronology45);
        java.lang.Object obj51 = mutableDateTime22.clone();
        org.joda.time.Chronology chronology52 = null;
        mutableDateTime22.setChronology(chronology52);
        org.joda.time.DateTime dateTime54 = localDate4.toDateTime((org.joda.time.ReadableInstant) mutableDateTime22);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((long) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableDuration) duration56);
        org.joda.time.DateTime.Property property58 = dateTime54.weekOfWeekyear();
        org.joda.time.DurationField durationField59 = property58.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField46, durationField59, and durationField46", !(durationField46.compareTo(durationField59) == 0) || (Math.signum(durationField46.compareTo(durationField46)) == Math.signum(durationField59.compareTo(durationField46))));
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test304");
        org.joda.time.DateTimeFieldType dateTimeFieldType1 = org.joda.time.DateTimeFieldType.secondOfDay();
        java.lang.String str2 = dateTimeFieldType1.toString();
        org.joda.time.Instant instant4 = new org.joda.time.Instant();
        org.joda.time.Instant instant6 = instant4.withMillis(0L);
        org.joda.time.Chronology chronology7 = instant6.getChronology();
        org.joda.time.DurationField durationField8 = chronology7.eras();
        java.util.Locale locale9 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket11 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology7, locale9, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime14 = localDateTime12.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property15 = localDateTime12.hourOfDay();
        org.joda.time.DateTimeField dateTimeField16 = property15.getField();
        int int17 = property15.get();
        org.joda.time.LocalDateTime localDateTime18 = property15.roundHalfFloorCopy();
        long long20 = chronology7.set((org.joda.time.ReadablePartial) localDateTime18, (long) 2022);
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now(chronology7);
        org.joda.time.DateTime dateTime22 = new org.joda.time.DateTime(chronology7);
        org.joda.time.DateTimeField dateTimeField23 = chronology7.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField24 = dateTimeFieldType1.getField(chronology7);
        java.lang.String str25 = chronology7.toString();
        org.joda.time.LocalDate localDate28 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate30 = localDate28.minusMonths((int) ' ');
        org.joda.time.Chronology chronology31 = localDate28.getChronology();
        java.util.Locale locale32 = null;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket35 = new org.joda.time.format.DateTimeParserBucket(0L, chronology31, locale32, (java.lang.Integer) 59, 12);
        long long39 = chronology31.add((long) '#', (long) 1970, 6);
        org.joda.time.DateTimeField dateTimeField40 = chronology31.millisOfSecond();
        org.joda.time.DurationField durationField41 = chronology31.minutes();
        org.joda.time.DurationField durationField42 = chronology31.millis();
        java.util.Locale locale43 = java.util.Locale.ROOT;
        java.lang.String str44 = locale43.getCountry();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket47 = new org.joda.time.format.DateTimeParserBucket(597770290756L, chronology31, locale43, (java.lang.Integer) 29, 16);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket50 = new org.joda.time.format.DateTimeParserBucket((long) 39326483, chronology7, locale43, (java.lang.Integer) 54039000, 925);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField8 and durationField41", Math.signum(durationField8.compareTo(durationField41)) == -Math.signum(durationField41.compareTo(durationField8)));
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test305");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(chronology4);
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTime dateTime21 = dateTime19.minusSeconds(69);
        org.joda.time.DateTime dateTime22 = dateTime19.withTimeAtStartOfDay();
        org.joda.time.MutableDateTime mutableDateTime23 = dateTime19.toMutableDateTimeISO();
        org.joda.time.LocalDateTime localDateTime24 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property25 = localDateTime24.monthOfYear();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime(chronology26);
        int int28 = dateTime27.getSecondOfMinute();
        boolean boolean29 = dateTime27.isEqualNow();
        int int30 = dateTime27.getDayOfYear();
        org.joda.time.Chronology chronology31 = dateTime27.getChronology();
        long long32 = property25.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.LocalDateTime localDateTime33 = property25.getLocalDateTime();
        org.joda.time.LocalDateTime localDateTime35 = localDateTime33.withYear((int) (byte) 100);
        org.joda.time.LocalDateTime localDateTime37 = localDateTime35.plusDays((int) (byte) 0);
        org.joda.time.LocalDateTime localDateTime39 = localDateTime37.withMinuteOfHour(43);
        org.joda.time.MutableDateTime mutableDateTime41 = new org.joda.time.MutableDateTime((long) 'x');
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = org.joda.time.DateTimeFieldType.millisOfDay();
        mutableDateTime41.set(dateTimeFieldType42, 35);
        org.joda.time.MutableDateTime mutableDateTime46 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((long) 100, 1L, periodType49);
        org.joda.time.PeriodType periodType53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((long) 100, 1L, periodType53);
        org.joda.time.Period period55 = period50.plus((org.joda.time.ReadablePeriod) period54);
        org.joda.time.Instant instant56 = new org.joda.time.Instant();
        org.joda.time.Instant instant58 = instant56.withMillis(0L);
        org.joda.time.Duration duration59 = period54.toDurationTo((org.joda.time.ReadableInstant) instant58);
        mutableDateTime46.add((org.joda.time.ReadableDuration) duration59, 39);
        org.joda.time.MutableDateTime.Property property62 = mutableDateTime46.secondOfMinute();
        mutableDateTime46.addYears(3);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period67 = duration66.toPeriod();
        org.joda.time.Duration duration70 = duration66.withDurationAdded((long) 38, (int) 'a');
        long long71 = duration66.getStandardMinutes();
        mutableDateTime46.add((org.joda.time.ReadableDuration) duration66);
        mutableDateTime41.setTime((org.joda.time.ReadableInstant) mutableDateTime46);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((-60494601599990L));
        org.joda.time.MutablePeriod mutablePeriod76 = mutablePeriod75.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType77 = org.joda.time.DurationFieldType.minutes();
        mutablePeriod75.add(durationFieldType77, 1970);
        mutableDateTime46.add(durationFieldType77, 54);
        org.joda.time.LocalDateTime localDateTime83 = localDateTime37.withFieldAdded(durationFieldType77, 737);
        mutableDateTime23.add(durationFieldType77, 8);
        org.joda.time.LocalDate localDate87 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate89 = localDate87.minusMonths((int) ' ');
        org.joda.time.Chronology chronology90 = localDate87.getChronology();
        java.util.Locale locale91 = null;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket94 = new org.joda.time.format.DateTimeParserBucket(0L, chronology90, locale91, (java.lang.Integer) 59, 12);
        org.joda.time.DurationField durationField95 = chronology90.years();
        java.lang.String str96 = chronology90.toString();
        org.joda.time.DurationField durationField97 = durationFieldType77.getField(chronology90);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField5 and durationField95", Math.signum(durationField5.compareTo(durationField95)) == -Math.signum(durationField95.compareTo(durationField5)));
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test306");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime10 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property13 = localDateTime10.hourOfDay();
        org.joda.time.DateTimeField dateTimeField14 = property13.getField();
        int int15 = property13.get();
        org.joda.time.LocalDateTime localDateTime16 = property13.roundHalfFloorCopy();
        long long18 = chronology5.set((org.joda.time.ReadablePartial) localDateTime16, (long) 2022);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(chronology5);
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime((long) 39391192, chronology5);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) 100, 1L, periodType23);
        org.joda.time.Period period26 = period24.minusSeconds((-1));
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period29 = duration28.toPeriod();
        org.joda.time.DurationFieldType durationFieldType30 = org.joda.time.DurationFieldType.centuries();
        int int31 = period29.get(durationFieldType30);
        boolean boolean32 = period24.isSupported(durationFieldType30);
        org.joda.time.MutableDateTime mutableDateTime34 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((long) 100, 1L, periodType37);
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((long) 100, 1L, periodType41);
        org.joda.time.Period period43 = period38.plus((org.joda.time.ReadablePeriod) period42);
        org.joda.time.Instant instant44 = new org.joda.time.Instant();
        org.joda.time.Instant instant46 = instant44.withMillis(0L);
        org.joda.time.Duration duration47 = period42.toDurationTo((org.joda.time.ReadableInstant) instant46);
        mutableDateTime34.add((org.joda.time.ReadableDuration) duration47, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType50 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean51 = mutableDateTime34.isSupported(dateTimeFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = dateTimeFieldType50.getDurationType();
        int int53 = period24.get(durationFieldType52);
        org.joda.time.MutableDateTime mutableDateTime56 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.MutableDateTime.Property property57 = mutableDateTime56.minuteOfHour();
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType59 = dateTimeFieldType58.getRangeDurationType();
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = org.joda.time.DateTimeFieldType.dayOfYear();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.DateTime dateTime63 = new org.joda.time.DateTime(chronology62);
        int int64 = dateTime63.getSecondOfMinute();
        boolean boolean65 = dateTime63.isEqualNow();
        int int66 = dateTime63.getDayOfYear();
        org.joda.time.Chronology chronology67 = dateTime63.getChronology();
        java.util.Locale locale68 = java.util.Locale.SIMPLIFIED_CHINESE;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket69 = new org.joda.time.format.DateTimeParserBucket(315532800097L, chronology67, locale68);
        org.joda.time.DateTimeField dateTimeField70 = dateTimeFieldType60.getField(chronology67);
        org.joda.time.DurationField durationField71 = durationFieldType59.getField(chronology67);
        mutableDateTime56.setChronology(chronology67);
        org.joda.time.LocalTime localTime73 = org.joda.time.LocalTime.fromMillisOfDay(39217210L, chronology67);
        org.joda.time.DateTimeField dateTimeField74 = chronology67.weekOfWeekyear();
        boolean boolean75 = durationFieldType52.isSupported(chronology67);
        org.joda.time.DateTime dateTime77 = dateTime20.withFieldAdded(durationFieldType52, 6);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField6 and durationField71", Math.signum(durationField6.compareTo(durationField71)) == -Math.signum(durationField71.compareTo(durationField6)));
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test307");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        mutableDateTime1.setWeekOfWeekyear(14);
        org.joda.time.LocalDate localDate20 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate22 = localDate20.minusMonths((int) ' ');
        org.joda.time.Chronology chronology23 = localDate20.getChronology();
        org.joda.time.DateTimeField dateTimeField24 = chronology23.minuteOfDay();
        mutableDateTime1.setChronology(chronology23);
        org.joda.time.DurationField durationField26 = chronology23.days();
        org.joda.time.DurationField durationField27 = chronology23.eras();
        org.joda.time.DateTimeField dateTimeField28 = chronology23.secondOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField26 and durationField27", Math.signum(durationField26.compareTo(durationField27)) == -Math.signum(durationField27.compareTo(durationField26)));
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test308");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime((long) (short) 1, chronology4);
        org.joda.time.Instant instant6 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime5, (org.joda.time.ReadableInstant) instant6, periodType7);
        org.joda.time.LocalDate localDate9 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate11 = localDate9.minusMonths((int) ' ');
        org.joda.time.Chronology chronology12 = localDate9.getChronology();
        org.joda.time.Period period13 = new org.joda.time.Period((long) (byte) 1, periodType7, chronology12);
        org.joda.time.LocalDate localDate14 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate16 = localDate14.minusMonths((int) ' ');
        org.joda.time.Chronology chronology17 = localDate14.getChronology();
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate20 = localDate14.withFieldAdded(durationFieldType18, (int) (byte) 100);
        boolean boolean21 = periodType7.isSupported(durationFieldType18);
        org.joda.time.PeriodType periodType22 = periodType7.withDaysRemoved();
        org.joda.time.LocalDate localDate23 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property24 = localDate23.dayOfMonth();
        org.joda.time.Chronology chronology25 = localDate23.getChronology();
        org.joda.time.Period period26 = new org.joda.time.Period((long) 43, periodType7, chronology25);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period29 = duration28.toPeriod();
        org.joda.time.Duration duration32 = duration28.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.Instant instant36 = new org.joda.time.Instant();
        org.joda.time.Instant instant38 = instant36.withMillis(0L);
        org.joda.time.Chronology chronology39 = instant38.getChronology();
        org.joda.time.DurationField durationField40 = chronology39.eras();
        java.util.Locale locale41 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket43 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology39, locale41, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate44 = new org.joda.time.LocalDate((long) 53, chronology39);
        org.joda.time.DateTimeField dateTimeField45 = chronology39.dayOfYear();
        org.joda.time.DateTimeField dateTimeField46 = chronology39.monthOfYear();
        org.joda.time.Period period47 = duration28.toPeriod(periodType33, chronology39);
        org.joda.time.Period period48 = new org.joda.time.Period((long) '#', periodType7, chronology39);
        org.joda.time.DateTimeField dateTimeField49 = chronology39.weekOfWeekyear();
        org.joda.time.DateTimeZone dateTimeZone50 = chronology39.getZone();
        org.joda.time.MutableDateTime mutableDateTime51 = new org.joda.time.MutableDateTime(chronology39);
        org.joda.time.DateTimeField dateTimeField52 = chronology39.halfdayOfDay();
        org.joda.time.DurationField durationField53 = dateTimeField52.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField40, durationField53, and durationField40", !(durationField40.compareTo(durationField53) == 0) || (Math.signum(durationField40.compareTo(durationField40)) == Math.signum(durationField53.compareTo(durationField40))));
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test309");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        mutablePeriod3.setYears((int) '#');
        org.joda.time.Instant instant8 = new org.joda.time.Instant();
        org.joda.time.Instant instant10 = instant8.withMillis(0L);
        org.joda.time.Chronology chronology11 = instant10.getChronology();
        org.joda.time.DurationField durationField12 = chronology11.eras();
        java.util.Locale locale13 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket15 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology11, locale13, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime16 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime18 = localDateTime16.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property19 = localDateTime16.hourOfDay();
        org.joda.time.DateTimeField dateTimeField20 = property19.getField();
        int int21 = property19.get();
        org.joda.time.LocalDateTime localDateTime22 = property19.roundHalfFloorCopy();
        long long24 = chronology11.set((org.joda.time.ReadablePartial) localDateTime22, (long) 2022);
        mutablePeriod3.setPeriod((long) ' ', chronology11);
        org.joda.time.LocalDateTime localDateTime26 = new org.joda.time.LocalDateTime(chronology11);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.DateTime dateTime29 = new org.joda.time.DateTime((long) (short) 1, chronology28);
        org.joda.time.Instant instant30 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableInstant) instant30, periodType31);
        org.joda.time.DateTimeFieldType dateTimeFieldType33 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int34 = instant30.get(dateTimeFieldType33);
        java.lang.String str35 = dateTimeFieldType33.getName();
        int int36 = localDateTime26.get(dateTimeFieldType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.DateTime dateTime38 = new org.joda.time.DateTime(chronology37);
        int int39 = dateTime38.getSecondOfMinute();
        boolean boolean40 = dateTime38.isEqualNow();
        int int41 = dateTime38.getDayOfYear();
        org.joda.time.Chronology chronology42 = dateTime38.getChronology();
        org.joda.time.DateTimeField dateTimeField43 = chronology42.dayOfYear();
        org.joda.time.DateTimeField dateTimeField44 = chronology42.halfdayOfDay();
        org.joda.time.LocalDateTime localDateTime45 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime47 = localDateTime45.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime49 = localDateTime47.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime50 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime50.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property53 = localDateTime50.hourOfDay();
        org.joda.time.LocalDateTime localDateTime55 = localDateTime50.plusMillis((int) (byte) 0);
        int int56 = localDateTime49.compareTo((org.joda.time.ReadablePartial) localDateTime50);
        org.joda.time.LocalDateTime localDateTime58 = localDateTime49.withMillisOfSecond(12);
        org.joda.time.LocalDateTime localDateTime60 = localDateTime58.minusWeeks((int) '4');
        org.joda.time.LocalDateTime localDateTime62 = localDateTime58.minusYears(9722);
        long long64 = chronology42.set((org.joda.time.ReadablePartial) localDateTime62, 11855L);
        org.joda.time.DurationField durationField65 = chronology42.weekyears();
        boolean boolean66 = dateTimeFieldType33.isSupported(chronology42);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField12 and durationField65", Math.signum(durationField12.compareTo(durationField65)) == -Math.signum(durationField65.compareTo(durationField12)));
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test310");
        org.joda.time.format.DateTimePrinter dateTimePrinter0 = null;
        org.joda.time.format.DateTimeParser dateTimeParser1 = null;
        org.joda.time.format.DateTimeFormatter dateTimeFormatter2 = new org.joda.time.format.DateTimeFormatter(dateTimePrinter0, dateTimeParser1);
        org.joda.time.format.DateTimeParser dateTimeParser3 = dateTimeFormatter2.getParser();
        java.lang.Integer int4 = dateTimeFormatter2.getPivotYear();
        org.joda.time.format.DateTimePrinter dateTimePrinter5 = dateTimeFormatter2.getPrinter();
        boolean boolean6 = dateTimeFormatter2.isPrinter();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter7 = dateTimeFormatter2.withZoneUTC();
        org.joda.time.DateTimeZone dateTimeZone8 = dateTimeFormatter7.getZone();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Duration duration14 = duration10.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((long) 100, 1L, periodType21);
        org.joda.time.Period period23 = period18.plus((org.joda.time.ReadablePeriod) period22);
        org.joda.time.Instant instant24 = new org.joda.time.Instant();
        org.joda.time.Instant instant26 = instant24.withMillis(0L);
        org.joda.time.Duration duration27 = period22.toDurationTo((org.joda.time.ReadableInstant) instant26);
        long long28 = instant26.getMillis();
        org.joda.time.Interval interval29 = duration10.toIntervalTo((org.joda.time.ReadableInstant) instant26);
        org.joda.time.Instant instant30 = instant26.toInstant();
        org.joda.time.DateTimeZone dateTimeZone31 = instant26.getZone();
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.Instant instant35 = instant33.withMillis(0L);
        org.joda.time.Chronology chronology36 = instant35.getChronology();
        org.joda.time.DurationField durationField37 = chronology36.eras();
        java.util.Locale locale38 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket40 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology36, locale38, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime41 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime43 = localDateTime41.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property44 = localDateTime41.hourOfDay();
        org.joda.time.DateTimeField dateTimeField45 = property44.getField();
        int int46 = property44.get();
        org.joda.time.LocalDateTime localDateTime47 = property44.roundHalfFloorCopy();
        long long49 = chronology36.set((org.joda.time.ReadablePartial) localDateTime47, (long) 2022);
        org.joda.time.LocalDateTime localDateTime50 = org.joda.time.LocalDateTime.now(chronology36);
        org.joda.time.DateTimeField dateTimeField51 = chronology36.era();
        org.joda.time.MutableDateTime mutableDateTime52 = instant26.toMutableDateTime(chronology36);
        org.joda.time.Chronology chronology53 = chronology36.withUTC();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter54 = dateTimeFormatter7.withChronology(chronology53);
        org.joda.time.DurationField durationField55 = chronology53.weeks();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField37, durationField55, and durationField37", !(durationField37.compareTo(durationField55) == 0) || (Math.signum(durationField37.compareTo(durationField37)) == Math.signum(durationField55.compareTo(durationField37))));
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test311");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.centuries();
        int int4 = period2.get(durationFieldType3);
        org.joda.time.DateTimeZone dateTimeZone5 = org.joda.time.DateTimeZone.UTC;
        long long8 = dateTimeZone5.convertLocalToUTC((long) (byte) 100, false);
        org.joda.time.LocalDateTime localDateTime9 = new org.joda.time.LocalDateTime(dateTimeZone5);
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.plusSeconds(39);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.secondOfMinute();
        org.joda.time.LocalDateTime.Property property13 = localDateTime9.weekOfWeekyear();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime((long) (short) 1, chronology15);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime16, (org.joda.time.ReadableInstant) instant17, periodType18);
        org.joda.time.DateTimeFieldType dateTimeFieldType20 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int21 = instant17.get(dateTimeFieldType20);
        int int22 = localDateTime9.indexOf(dateTimeFieldType20);
        java.lang.String str23 = dateTimeFieldType20.toString();
        org.joda.time.Instant instant27 = new org.joda.time.Instant();
        org.joda.time.Instant instant29 = instant27.withMillis(0L);
        org.joda.time.Chronology chronology30 = instant29.getChronology();
        org.joda.time.DurationField durationField31 = chronology30.eras();
        java.util.Locale locale32 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket34 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology30, locale32, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime35.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property38 = localDateTime35.hourOfDay();
        org.joda.time.DateTimeField dateTimeField39 = property38.getField();
        int int40 = property38.get();
        org.joda.time.LocalDateTime localDateTime41 = property38.roundHalfFloorCopy();
        long long43 = chronology30.set((org.joda.time.ReadablePartial) localDateTime41, (long) 2022);
        org.joda.time.DateTimeField dateTimeField44 = chronology30.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField45 = chronology30.minuteOfHour();
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) 100, 1L, periodType48);
        org.joda.time.Period period51 = period49.minusSeconds((-1));
        java.lang.String str52 = period49.toString();
        org.joda.time.Period period53 = period49.negated();
        int[] intArray55 = chronology30.get((org.joda.time.ReadablePeriod) period53, (long) 1969);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property57 = localDateTime56.monthOfYear();
        java.util.Locale.Category category58 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale59 = java.util.Locale.getDefault(category58);
        org.joda.time.LocalDateTime localDateTime60 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime62 = localDateTime60.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property63 = localDateTime60.hourOfDay();
        java.util.Locale locale64 = java.util.Locale.US;
        java.lang.String str65 = property63.getAsShortText(locale64);
        java.util.Locale.setDefault(category58, locale64);
        int int67 = property57.getMaximumTextLength(locale64);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket70 = new org.joda.time.format.DateTimeParserBucket((long) 9, chronology30, locale64, (java.lang.Integer) 15, 8);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) 736226, chronology30);
        org.joda.time.DateTimeField dateTimeField72 = dateTimeFieldType20.getField(chronology30);
        boolean boolean73 = durationFieldType3.isSupported(chronology30);
        org.joda.time.DateTimeField dateTimeField74 = chronology30.yearOfEra();
        org.joda.time.DurationField durationField75 = chronology30.weeks();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField31, durationField75, and durationField31", !(durationField31.compareTo(durationField75) == 0) || (Math.signum(durationField31.compareTo(durationField31)) == Math.signum(durationField75.compareTo(durationField31))));
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test312");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.DurationField durationField4 = chronology3.eras();
        org.joda.time.DateTimeField dateTimeField5 = chronology3.yearOfEra();
        org.joda.time.DateTimeField dateTimeField6 = chronology3.millisOfSecond();
        org.joda.time.DateTimeField dateTimeField7 = chronology3.halfdayOfDay();
        org.joda.time.DurationField durationField8 = chronology3.weeks();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField4, durationField8, and durationField4", !(durationField4.compareTo(durationField8) == 0) || (Math.signum(durationField4.compareTo(durationField4)) == Math.signum(durationField8.compareTo(durationField4))));
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test313");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.dayOfMonth();
        org.joda.time.DateTime dateTime22 = dateTime1.withTimeAtStartOfDay();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.DateTime dateTime25 = new org.joda.time.DateTime((long) (short) 1, chronology24);
        org.joda.time.DateTime dateTime26 = dateTime25.toDateTime();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.DateTime dateTime29 = new org.joda.time.DateTime((long) (short) 1, chronology28);
        org.joda.time.DateTime dateTime30 = dateTime29.toDateTime();
        int int31 = dateTime26.compareTo((org.joda.time.ReadableInstant) dateTime29);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime29, (org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration35 = duration33.toDuration();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.DateTime dateTime38 = new org.joda.time.DateTime((long) (short) 1, chronology37);
        org.joda.time.DateTime dateTime39 = dateTime38.toDateTime();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.DateTime dateTime42 = new org.joda.time.DateTime((long) (short) 1, chronology41);
        org.joda.time.DateTime dateTime43 = dateTime42.toDateTime();
        int int44 = dateTime39.compareTo((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration48 = duration46.toDuration();
        org.joda.time.Duration duration50 = duration35.withDurationAdded((org.joda.time.ReadableDuration) duration48, 53644753);
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime1, (org.joda.time.ReadableDuration) duration50);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.DateTime dateTime57 = new org.joda.time.DateTime(chronology56);
        int int58 = dateTime57.getSecondOfMinute();
        boolean boolean59 = dateTime57.isEqualNow();
        int int60 = dateTime57.getDayOfYear();
        org.joda.time.Chronology chronology61 = dateTime57.getChronology();
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology61);
        org.joda.time.DurationField durationField63 = chronology61.hours();
        org.joda.time.DateTimeField dateTimeField64 = chronology61.dayOfWeek();
        org.joda.time.Period period65 = new org.joda.time.Period((long) 39246272, (long) 5, chronology61);
        org.joda.time.DurationField durationField66 = chronology61.millis();
        boolean boolean67 = durationField66.isPrecise();
        org.joda.time.DurationFieldType durationFieldType68 = durationField66.getType();
        org.joda.time.Period period70 = period51.withFieldAdded(durationFieldType68, 99);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField7 and durationField63", Math.signum(durationField7.compareTo(durationField63)) == -Math.signum(durationField63.compareTo(durationField7)));
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test314");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology5);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 100, 1L, periodType14);
        org.joda.time.Period period16 = period11.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.MutablePeriod mutablePeriod17 = period16.toMutablePeriod();
        java.lang.Object obj18 = mutablePeriod17.clone();
        org.joda.time.PeriodType periodType19 = mutablePeriod17.getPeriodType();
        org.joda.time.MutableDateTime mutableDateTime21 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 100, 1L, periodType24);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.Period period30 = period25.plus((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Instant instant31 = new org.joda.time.Instant();
        org.joda.time.Instant instant33 = instant31.withMillis(0L);
        org.joda.time.Duration duration34 = period29.toDurationTo((org.joda.time.ReadableInstant) instant33);
        mutableDateTime21.add((org.joda.time.ReadableDuration) duration34, 39);
        org.joda.time.MutableDateTime.Property property37 = mutableDateTime21.yearOfEra();
        mutableDateTime21.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property40 = mutableDateTime21.minuteOfDay();
        org.joda.time.DurationField durationField41 = property40.getRangeDurationField();
        org.joda.time.DurationFieldType durationFieldType42 = durationField41.getType();
        mutablePeriod17.set(durationFieldType42, 120);
        mutablePeriod7.set(durationFieldType42, 13);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField6 and durationField41", Math.signum(durationField6.compareTo(durationField41)) == -Math.signum(durationField41.compareTo(durationField6)));
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test315");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter3 = null;
        java.lang.String str4 = dateTime1.toString(dateTimeFormatter3);
        org.joda.time.DateTime dateTime6 = dateTime1.plusMonths(86396191);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(chronology9);
        int int11 = dateTime10.getSecondOfMinute();
        boolean boolean12 = dateTime10.isEqualNow();
        int int13 = dateTime10.getDayOfYear();
        org.joda.time.Chronology chronology14 = dateTime10.getChronology();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology14);
        org.joda.time.DateTime dateTime16 = dateTime6.toDateTime(chronology14);
        org.joda.time.DurationField durationField17 = chronology14.eras();
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime19.secondOfMinute();
        org.joda.time.MutableDateTime.Property property36 = mutableDateTime19.minuteOfHour();
        mutableDateTime19.setWeekyear(0);
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime41 = new org.joda.time.MutableDateTime(0L, dateTimeZone40);
        long long44 = dateTimeZone40.convertLocalToUTC((long) 3, true);
        org.joda.time.MutableDateTime mutableDateTime45 = new org.joda.time.MutableDateTime(dateTimeZone40);
        java.lang.String str46 = dateTimeZone40.toString();
        mutableDateTime19.setZone(dateTimeZone40);
        org.joda.time.Chronology chronology48 = chronology14.withZone(dateTimeZone40);
        org.joda.time.DurationField durationField49 = chronology14.millis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField17, durationField49, and durationField17", !(durationField17.compareTo(durationField49) == 0) || (Math.signum(durationField17.compareTo(durationField17)) == Math.signum(durationField49.compareTo(durationField17))));
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test316");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int7 = instant3.get(dateTimeFieldType6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 10, (long) 3);
        org.joda.time.Instant instant12 = instant3.withDurationAdded((org.joda.time.ReadableDuration) duration10, 0);
        org.joda.time.Instant instant13 = new org.joda.time.Instant();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant13);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Chronology chronology20 = instant19.getChronology();
        org.joda.time.DurationField durationField21 = chronology20.eras();
        java.util.Locale locale22 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket24 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology20, locale22, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime25.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property28 = localDateTime25.hourOfDay();
        org.joda.time.DateTimeField dateTimeField29 = property28.getField();
        int int30 = property28.get();
        org.joda.time.LocalDateTime localDateTime31 = property28.roundHalfFloorCopy();
        long long33 = chronology20.set((org.joda.time.ReadablePartial) localDateTime31, (long) 2022);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(chronology20);
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology20);
        org.joda.time.DurationField durationField36 = chronology20.eras();
        org.joda.time.MutableDateTime mutableDateTime37 = new org.joda.time.MutableDateTime(chronology20);
        mutablePeriod14.setPeriod((long) (short) -1, chronology20);
        org.joda.time.DurationField durationField39 = chronology20.halfdays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField21, durationField39, and durationField21", !(durationField21.compareTo(durationField39) == 0) || (Math.signum(durationField21.compareTo(durationField21)) == Math.signum(durationField39.compareTo(durationField21))));
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test317");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        org.joda.time.DateTimeField dateTimeField6 = chronology4.yearOfEra();
        org.joda.time.DateTimeField dateTimeField7 = chronology4.millisOfSecond();
        org.joda.time.LocalDate localDate8 = new org.joda.time.LocalDate((long) (short) -1, chronology4);
        org.joda.time.DurationField durationField9 = chronology4.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField9, and durationField5", !(durationField5.compareTo(durationField9) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField9.compareTo(durationField5))));
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test318");
        org.joda.time.MutableDateTime mutableDateTime2 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.MutableDateTime.Property property3 = mutableDateTime2.minuteOfHour();
        org.joda.time.DateTimeFieldType dateTimeFieldType4 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType5 = dateTimeFieldType4.getRangeDurationType();
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.dayOfYear();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTime dateTime9 = new org.joda.time.DateTime(chronology8);
        int int10 = dateTime9.getSecondOfMinute();
        boolean boolean11 = dateTime9.isEqualNow();
        int int12 = dateTime9.getDayOfYear();
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        java.util.Locale locale14 = java.util.Locale.SIMPLIFIED_CHINESE;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket15 = new org.joda.time.format.DateTimeParserBucket(315532800097L, chronology13, locale14);
        org.joda.time.DateTimeField dateTimeField16 = dateTimeFieldType6.getField(chronology13);
        org.joda.time.DurationField durationField17 = durationFieldType5.getField(chronology13);
        mutableDateTime2.setChronology(chronology13);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(48L, chronology13);
        int int20 = mutablePeriod19.getHours();
        org.joda.time.MutableDateTime mutableDateTime22 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) 100, 1L, periodType25);
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) 100, 1L, periodType29);
        org.joda.time.Period period31 = period26.plus((org.joda.time.ReadablePeriod) period30);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.Instant instant34 = instant32.withMillis(0L);
        org.joda.time.Duration duration35 = period30.toDurationTo((org.joda.time.ReadableInstant) instant34);
        mutableDateTime22.add((org.joda.time.ReadableDuration) duration35, 39);
        org.joda.time.MutableDateTime.Property property38 = mutableDateTime22.yearOfEra();
        mutableDateTime22.setDayOfYear((int) ' ');
        mutableDateTime22.add((long) 53);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter43 = null;
        java.lang.String str44 = mutableDateTime22.toString(dateTimeFormatter43);
        org.joda.time.Instant instant47 = new org.joda.time.Instant();
        org.joda.time.Instant instant49 = instant47.withMillis(0L);
        org.joda.time.Chronology chronology50 = instant49.getChronology();
        org.joda.time.DurationField durationField51 = chronology50.eras();
        java.util.Locale locale52 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket54 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology50, locale52, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime55 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime55.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property58 = localDateTime55.hourOfDay();
        org.joda.time.DateTimeField dateTimeField59 = property58.getField();
        int int60 = property58.get();
        org.joda.time.LocalDateTime localDateTime61 = property58.roundHalfFloorCopy();
        long long63 = chronology50.set((org.joda.time.ReadablePartial) localDateTime61, (long) 2022);
        org.joda.time.LocalDateTime localDateTime64 = org.joda.time.LocalDateTime.now(chronology50);
        org.joda.time.DateTime dateTime65 = new org.joda.time.DateTime(chronology50);
        org.joda.time.DurationField durationField66 = chronology50.eras();
        java.util.Locale locale70 = new java.util.Locale("hi!", "clockhourOfDay", "java.io.IOException");
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket71 = new org.joda.time.format.DateTimeParserBucket((long) 42, chronology50, locale70);
        org.joda.time.DateTimeZone dateTimeZone72 = dateTimeParserBucket71.getZone();
        int int74 = dateTimeZone72.getOffset((long) 40);
        mutableDateTime22.setZoneRetainFields(dateTimeZone72);
        int int76 = mutableDateTime22.getSecondOfDay();
        org.joda.time.Duration duration77 = mutablePeriod19.toDurationTo((org.joda.time.ReadableInstant) mutableDateTime22);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField17 and durationField51", Math.signum(durationField17.compareTo(durationField51)) == -Math.signum(durationField51.compareTo(durationField17)));
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test319");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        mutablePeriod7.setYears(10);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime(chronology10);
        int int12 = dateTime11.getSecondOfMinute();
        org.joda.time.DateTime dateTime15 = dateTime11.withDurationAdded((long) 6, 12);
        org.joda.time.DateTime dateTime17 = dateTime11.minusMillis(31);
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime19.yearOfEra();
        mutableDateTime19.addMillis(39221019);
        mutableDateTime19.setWeekyear(49);
        mutableDateTime19.addMinutes(39);
        mutablePeriod7.setPeriod((org.joda.time.ReadableInstant) dateTime11, (org.joda.time.ReadableInstant) mutableDateTime19);
        org.joda.time.MutableDateTime.Property property43 = mutableDateTime19.millisOfDay();
        org.joda.time.DurationField durationField44 = property43.getDurationField();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DateTime dateTime47 = new org.joda.time.DateTime((long) (short) 1, chronology46);
        int int48 = dateTime47.getMinuteOfHour();
        long long49 = property43.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.Instant instant53 = new org.joda.time.Instant();
        org.joda.time.Instant instant55 = instant53.withMillis(0L);
        org.joda.time.Chronology chronology56 = instant55.getChronology();
        org.joda.time.DurationField durationField57 = chronology56.eras();
        java.util.Locale locale58 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket60 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology56, locale58, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime61 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime63 = localDateTime61.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property64 = localDateTime61.hourOfDay();
        org.joda.time.DateTimeField dateTimeField65 = property64.getField();
        int int66 = property64.get();
        org.joda.time.LocalDateTime localDateTime67 = property64.roundHalfFloorCopy();
        long long69 = chronology56.set((org.joda.time.ReadablePartial) localDateTime67, (long) 2022);
        org.joda.time.DateTimeField dateTimeField70 = chronology56.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField71 = chronology56.minuteOfHour();
        org.joda.time.PeriodType periodType74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((long) 100, 1L, periodType74);
        org.joda.time.Period period77 = period75.minusSeconds((-1));
        java.lang.String str78 = period75.toString();
        org.joda.time.Period period79 = period75.negated();
        int[] intArray81 = chronology56.get((org.joda.time.ReadablePeriod) period79, (long) 1969);
        org.joda.time.LocalDateTime localDateTime82 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property83 = localDateTime82.monthOfYear();
        java.util.Locale.Category category84 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale85 = java.util.Locale.getDefault(category84);
        org.joda.time.LocalDateTime localDateTime86 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime88 = localDateTime86.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property89 = localDateTime86.hourOfDay();
        java.util.Locale locale90 = java.util.Locale.US;
        java.lang.String str91 = property89.getAsShortText(locale90);
        java.util.Locale.setDefault(category84, locale90);
        int int93 = property83.getMaximumTextLength(locale90);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket96 = new org.joda.time.format.DateTimeParserBucket((long) 9, chronology56, locale90, (java.lang.Integer) 15, 8);
        org.joda.time.MutableDateTime mutableDateTime97 = property43.set("53773861", locale90);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField44 and durationField57", Math.signum(durationField44.compareTo(durationField57)) == -Math.signum(durationField57.compareTo(durationField44)));
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test320");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTime dateTime3 = dateTime2.toDateTime();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.DateTime dateTime6 = new org.joda.time.DateTime((long) (short) 1, chronology5);
        org.joda.time.DateTime dateTime7 = dateTime6.toDateTime();
        int int8 = dateTime3.compareTo((org.joda.time.ReadableInstant) dateTime6);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime6, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.Seconds seconds12 = duration10.toStandardSeconds();
        org.joda.time.LocalDate localDate13 = new org.joda.time.LocalDate();
        int int14 = localDate13.getDayOfMonth();
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period(readableDuration15, readableInstant16);
        org.joda.time.Period period19 = period17.withDays((int) (byte) 1);
        org.joda.time.Period period21 = period19.minusWeeks(100);
        org.joda.time.Period period23 = period21.withDays(1);
        org.joda.time.LocalDate localDate25 = localDate13.withPeriodAdded((org.joda.time.ReadablePeriod) period21, 642);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        mutablePeriod30.addYears(59);
        org.joda.time.Instant instant35 = new org.joda.time.Instant();
        org.joda.time.Instant instant37 = instant35.withMillis(0L);
        org.joda.time.Chronology chronology38 = instant37.getChronology();
        org.joda.time.DurationField durationField39 = chronology38.eras();
        java.util.Locale locale40 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket42 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology38, locale40, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate43 = new org.joda.time.LocalDate((long) 53, chronology38);
        org.joda.time.ReadableDuration readableDuration44 = null;
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period(readableDuration44, readableInstant45);
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((long) 100, 1L, periodType49);
        org.joda.time.Period period52 = period50.minusSeconds((-1));
        java.lang.String str53 = period50.toString();
        org.joda.time.Period period54 = period50.toPeriod();
        org.joda.time.PeriodType periodType55 = period50.getPeriodType();
        org.joda.time.Period period56 = period46.normalizedStandard(periodType55);
        boolean boolean57 = localDate43.equals((java.lang.Object) period46);
        org.joda.time.Interval interval58 = localDate43.toInterval();
        mutablePeriod30.add((org.joda.time.ReadableInterval) interval58);
        org.joda.time.LocalDate localDate60 = localDate13.plus((org.joda.time.ReadablePeriod) mutablePeriod30);
        org.joda.time.DateMidnight dateMidnight61 = localDate13.toDateMidnight();
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateMidnight61);
        int int63 = mutablePeriod62.getHours();
        org.joda.time.PeriodType periodType66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period((long) 100, 1L, periodType66);
        org.joda.time.PeriodType periodType70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period((long) 100, 1L, periodType70);
        org.joda.time.Period period72 = period67.plus((org.joda.time.ReadablePeriod) period71);
        org.joda.time.Instant instant73 = new org.joda.time.Instant();
        org.joda.time.Instant instant75 = instant73.withMillis(0L);
        org.joda.time.Duration duration76 = period71.toDurationTo((org.joda.time.ReadableInstant) instant75);
        java.util.Locale locale77 = java.util.Locale.ITALY;
        boolean boolean78 = duration76.equals((java.lang.Object) locale77);
        org.joda.time.LocalDate localDate80 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate82 = localDate80.minusMonths((int) ' ');
        org.joda.time.Chronology chronology83 = localDate80.getChronology();
        java.util.Locale locale84 = null;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket87 = new org.joda.time.format.DateTimeParserBucket(0L, chronology83, locale84, (java.lang.Integer) 59, 12);
        org.joda.time.DurationField durationField88 = chronology83.years();
        java.lang.String str89 = chronology83.toString();
        org.joda.time.DateTimeField dateTimeField90 = chronology83.minuteOfHour();
        mutablePeriod62.setPeriod((org.joda.time.ReadableDuration) duration76, chronology83);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField39 and durationField88", Math.signum(durationField39.compareTo(durationField88)) == -Math.signum(durationField88.compareTo(durationField39)));
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test321");
        org.joda.time.MutableDateTime mutableDateTime2 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((long) 100, 1L, periodType5);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) 100, 1L, periodType9);
        org.joda.time.Period period11 = period6.plus((org.joda.time.ReadablePeriod) period10);
        org.joda.time.Instant instant12 = new org.joda.time.Instant();
        org.joda.time.Instant instant14 = instant12.withMillis(0L);
        org.joda.time.Duration duration15 = period10.toDurationTo((org.joda.time.ReadableInstant) instant14);
        mutableDateTime2.add((org.joda.time.ReadableDuration) duration15, 39);
        org.joda.time.MutableDateTime.Property property18 = mutableDateTime2.yearOfEra();
        mutableDateTime2.setWeekOfWeekyear(14);
        org.joda.time.LocalDate localDate21 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate23 = localDate21.minusMonths((int) ' ');
        org.joda.time.Chronology chronology24 = localDate21.getChronology();
        org.joda.time.DateTimeField dateTimeField25 = chronology24.minuteOfDay();
        mutableDateTime2.setChronology(chronology24);
        org.joda.time.DateTimeZone dateTimeZone27 = chronology24.getZone();
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((long) 100, 1L, periodType31);
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((long) 100, 1L, periodType35);
        org.joda.time.Period period37 = period32.plus((org.joda.time.ReadablePeriod) period36);
        org.joda.time.Instant instant38 = new org.joda.time.Instant();
        org.joda.time.Instant instant40 = instant38.withMillis(0L);
        org.joda.time.Duration duration41 = period36.toDurationTo((org.joda.time.ReadableInstant) instant40);
        org.joda.time.Instant instant43 = instant40.plus((long) (byte) -1);
        org.joda.time.Instant instant46 = instant43.withDurationAdded(1L, (int) (short) -1);
        org.joda.time.Chronology chronology47 = instant43.getChronology();
        org.joda.time.Chronology chronology49 = null;
        java.util.Locale locale50 = java.util.Locale.GERMAN;
        java.util.Locale locale51 = locale50.stripExtensions();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket54 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology49, locale50, (java.lang.Integer) 45, (int) '4');
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket56 = new org.joda.time.format.DateTimeParserBucket(0L, chronology47, locale50, (java.lang.Integer) 1970);
        java.util.Locale locale57 = java.util.Locale.ITALY;
        java.lang.String str58 = locale50.getDisplayScript(locale57);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket60 = new org.joda.time.format.DateTimeParserBucket((long) 16, chronology24, locale50, (java.lang.Integer) 2022);
        java.lang.Object obj61 = dateTimeParserBucket60.saveState();
        org.joda.time.Chronology chronology62 = dateTimeParserBucket60.getChronology();
        org.joda.time.Instant instant64 = new org.joda.time.Instant();
        org.joda.time.Instant instant66 = instant64.withMillis(0L);
        org.joda.time.Chronology chronology67 = instant66.getChronology();
        org.joda.time.DurationField durationField68 = chronology67.eras();
        org.joda.time.DateTimeField dateTimeField69 = chronology67.yearOfEra();
        org.joda.time.Period period70 = new org.joda.time.Period((long) ' ', chronology67);
        org.joda.time.DateTimeField dateTimeField71 = chronology67.halfdayOfDay();
        boolean boolean72 = dateTimeParserBucket60.restoreState((java.lang.Object) chronology67);
        org.joda.time.LocalDate localDate73 = new org.joda.time.LocalDate(chronology67);
        org.joda.time.DurationField durationField74 = chronology67.millis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField68, durationField74, and durationField68", !(durationField68.compareTo(durationField74) == 0) || (Math.signum(durationField68.compareTo(durationField68)) == Math.signum(durationField74.compareTo(durationField68))));
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test322");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        mutableDateTime1.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property20 = mutableDateTime1.minuteOfDay();
        org.joda.time.DurationField durationField21 = property20.getRangeDurationField();
        org.joda.time.MutableDateTime mutableDateTime23 = property20.add((long) 39251167);
        mutableDateTime23.addMonths(18);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.DateTime dateTime31 = new org.joda.time.DateTime((long) (short) 1, chronology30);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableInstant) instant32, periodType33);
        org.joda.time.LocalDate localDate35 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate37 = localDate35.minusMonths((int) ' ');
        org.joda.time.Chronology chronology38 = localDate35.getChronology();
        org.joda.time.Period period39 = new org.joda.time.Period((long) (byte) 1, periodType33, chronology38);
        org.joda.time.LocalDate localDate40 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate42 = localDate40.minusMonths((int) ' ');
        org.joda.time.Chronology chronology43 = localDate40.getChronology();
        org.joda.time.DurationFieldType durationFieldType44 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate46 = localDate40.withFieldAdded(durationFieldType44, (int) (byte) 100);
        boolean boolean47 = periodType33.isSupported(durationFieldType44);
        org.joda.time.PeriodType periodType48 = periodType33.withDaysRemoved();
        org.joda.time.LocalDate localDate49 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property50 = localDate49.dayOfMonth();
        org.joda.time.Chronology chronology51 = localDate49.getChronology();
        org.joda.time.Period period52 = new org.joda.time.Period((long) 43, periodType33, chronology51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period55 = duration54.toPeriod();
        org.joda.time.Duration duration58 = duration54.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType59 = null;
        org.joda.time.Instant instant62 = new org.joda.time.Instant();
        org.joda.time.Instant instant64 = instant62.withMillis(0L);
        org.joda.time.Chronology chronology65 = instant64.getChronology();
        org.joda.time.DurationField durationField66 = chronology65.eras();
        java.util.Locale locale67 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket69 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology65, locale67, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate70 = new org.joda.time.LocalDate((long) 53, chronology65);
        org.joda.time.DateTimeField dateTimeField71 = chronology65.dayOfYear();
        org.joda.time.DateTimeField dateTimeField72 = chronology65.monthOfYear();
        org.joda.time.Period period73 = duration54.toPeriod(periodType59, chronology65);
        org.joda.time.Period period74 = new org.joda.time.Period((long) '#', periodType33, chronology65);
        org.joda.time.DateTimeField dateTimeField75 = chronology65.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField76 = chronology65.hourOfDay();
        mutableDateTime23.setChronology(chronology65);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField21 and durationField66", Math.signum(durationField21.compareTo(durationField66)) == -Math.signum(durationField66.compareTo(durationField21)));
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test323");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter3 = null;
        java.lang.String str4 = dateTime1.toString(dateTimeFormatter3);
        org.joda.time.DateTime dateTime6 = dateTime1.plusMonths(86396191);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(chronology9);
        int int11 = dateTime10.getSecondOfMinute();
        boolean boolean12 = dateTime10.isEqualNow();
        int int13 = dateTime10.getDayOfYear();
        org.joda.time.Chronology chronology14 = dateTime10.getChronology();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology14);
        org.joda.time.DateTime dateTime16 = dateTime6.toDateTime(chronology14);
        org.joda.time.DateTime dateTime18 = dateTime6.plusMillis((-12));
        org.joda.time.DateTime dateTime20 = dateTime18.plusHours(9722);
        org.joda.time.DateTimeZone dateTimeZone22 = org.joda.time.DateTimeZone.forOffsetMillis(893);
        java.lang.String str23 = dateTimeZone22.toString();
        org.joda.time.MutableDateTime mutableDateTime24 = dateTime20.toMutableDateTime(dateTimeZone22);
        long long26 = dateTimeZone22.previousTransition(2354616720000L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime20 and mutableDateTime24", (dateTime20.compareTo(mutableDateTime24) == 0) == dateTime20.equals(mutableDateTime24));
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test324");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter3 = null;
        java.lang.String str4 = dateTime1.toString(dateTimeFormatter3);
        org.joda.time.DateTime dateTime6 = dateTime1.plusMonths(86396191);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(chronology9);
        int int11 = dateTime10.getSecondOfMinute();
        boolean boolean12 = dateTime10.isEqualNow();
        int int13 = dateTime10.getDayOfYear();
        org.joda.time.Chronology chronology14 = dateTime10.getChronology();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology14);
        org.joda.time.DateTime dateTime16 = dateTime6.toDateTime(chronology14);
        org.joda.time.DateTime dateTime18 = dateTime6.plusMillis((-12));
        org.joda.time.DateTime dateTime20 = dateTime18.plusHours(9722);
        org.joda.time.DateTimeZone dateTimeZone22 = org.joda.time.DateTimeZone.forOffsetMillis(893);
        java.lang.String str23 = dateTimeZone22.toString();
        org.joda.time.MutableDateTime mutableDateTime24 = dateTime20.toMutableDateTime(dateTimeZone22);
        java.util.Locale locale26 = null;
        java.lang.String str27 = dateTimeZone22.getName((long) 39338268, locale26);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime20 and mutableDateTime24", (dateTime20.compareTo(mutableDateTime24) == 0) == dateTime20.equals(mutableDateTime24));
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test325");
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.DateTime dateTime6 = new org.joda.time.DateTime((long) (short) 1, chronology5);
        org.joda.time.Instant instant7 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime6, (org.joda.time.ReadableInstant) instant7, periodType8);
        org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate12 = localDate10.minusMonths((int) ' ');
        org.joda.time.Chronology chronology13 = localDate10.getChronology();
        org.joda.time.Period period14 = new org.joda.time.Period((long) (byte) 1, periodType8, chronology13);
        org.joda.time.LocalDate localDate15 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate17 = localDate15.minusMonths((int) ' ');
        org.joda.time.Chronology chronology18 = localDate15.getChronology();
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate21 = localDate15.withFieldAdded(durationFieldType19, (int) (byte) 100);
        boolean boolean22 = periodType8.isSupported(durationFieldType19);
        org.joda.time.PeriodType periodType23 = periodType8.withDaysRemoved();
        org.joda.time.LocalDate localDate24 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property25 = localDate24.dayOfMonth();
        org.joda.time.Chronology chronology26 = localDate24.getChronology();
        org.joda.time.Period period27 = new org.joda.time.Period((long) 43, periodType8, chronology26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period30 = duration29.toPeriod();
        org.joda.time.Duration duration33 = duration29.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Instant instant37 = new org.joda.time.Instant();
        org.joda.time.Instant instant39 = instant37.withMillis(0L);
        org.joda.time.Chronology chronology40 = instant39.getChronology();
        org.joda.time.DurationField durationField41 = chronology40.eras();
        java.util.Locale locale42 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket44 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology40, locale42, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate45 = new org.joda.time.LocalDate((long) 53, chronology40);
        org.joda.time.DateTimeField dateTimeField46 = chronology40.dayOfYear();
        org.joda.time.DateTimeField dateTimeField47 = chronology40.monthOfYear();
        org.joda.time.Period period48 = duration29.toPeriod(periodType34, chronology40);
        org.joda.time.Period period49 = new org.joda.time.Period((long) '#', periodType8, chronology40);
        org.joda.time.LocalDate localDate50 = new org.joda.time.LocalDate(chronology40);
        org.joda.time.MutableDateTime mutableDateTime51 = new org.joda.time.MutableDateTime(35L, chronology40);
        org.joda.time.DateTimeField dateTimeField52 = chronology40.dayOfYear();
        org.joda.time.DurationField durationField53 = chronology40.minutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField41, durationField53, and durationField41", !(durationField41.compareTo(durationField53) == 0) || (Math.signum(durationField41.compareTo(durationField41)) == Math.signum(durationField53.compareTo(durationField41))));
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test326");
        org.joda.time.DateTimeFieldType dateTimeFieldType0 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        org.joda.time.DurationFieldType durationFieldType1 = dateTimeFieldType0.getRangeDurationType();
        java.lang.String str2 = durationFieldType1.getName();
        org.joda.time.MutableDateTime mutableDateTime6 = new org.joda.time.MutableDateTime((long) '4');
        mutableDateTime6.addWeeks((int) (short) 0);
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration12, (int) (short) 100);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType17);
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableInstant) mutableDateTime6, (org.joda.time.ReadableInstant) mutableDateTime10, periodType17);
        java.lang.Object obj20 = null;
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period(readableDuration21, readableInstant22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period29 = period27.minusSeconds((-1));
        java.lang.String str30 = period27.toString();
        org.joda.time.Period period31 = period27.toPeriod();
        org.joda.time.PeriodType periodType32 = period27.getPeriodType();
        org.joda.time.Period period33 = period23.normalizedStandard(periodType32);
        org.joda.time.Period period34 = new org.joda.time.Period(obj20, periodType32);
        org.joda.time.Period period35 = period19.withPeriodType(periodType32);
        org.joda.time.Instant instant37 = new org.joda.time.Instant();
        org.joda.time.Instant instant39 = instant37.withMillis(0L);
        org.joda.time.Chronology chronology40 = instant39.getChronology();
        org.joda.time.DurationField durationField41 = chronology40.eras();
        java.util.Locale locale42 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket44 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology40, locale42, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology46 = null;
        java.util.Locale locale47 = java.util.Locale.GERMAN;
        java.util.Locale locale48 = java.util.Locale.CANADA;
        java.lang.String str49 = locale47.getDisplayVariant(locale48);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket50 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology46, locale48);
        org.joda.time.DateTimeZone dateTimeZone51 = dateTimeParserBucket50.getZone();
        org.joda.time.Chronology chronology52 = chronology40.withZone(dateTimeZone51);
        org.joda.time.DateTimeField dateTimeField53 = chronology52.hourOfDay();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(20199L, (long) 69, periodType32, chronology52);
        org.joda.time.DateTimeField dateTimeField55 = chronology52.weekyear();
        org.joda.time.DurationField durationField56 = durationFieldType1.getField(chronology52);
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField41, durationField56, and durationField41", !(durationField41.compareTo(durationField56) == 0) || (Math.signum(durationField41.compareTo(durationField41)) == Math.signum(durationField56.compareTo(durationField41))));
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test327");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.MutableDateTime.Property property18 = mutableDateTime1.minuteOfHour();
        org.joda.time.MutableDateTime mutableDateTime20 = property18.addWrapField(6);
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period32 = period27.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.Instant instant35 = instant33.withMillis(0L);
        org.joda.time.Duration duration36 = period31.toDurationTo((org.joda.time.ReadableInstant) instant35);
        mutableDateTime23.add((org.joda.time.ReadableDuration) duration36, 39);
        org.joda.time.MutableDateTime.Property property39 = mutableDateTime23.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime23.setZone(dateTimeZone40);
        org.joda.time.MutableDateTime mutableDateTime42 = new org.joda.time.MutableDateTime(55123200000L, dateTimeZone40);
        mutableDateTime20.setZone(dateTimeZone40);
        org.joda.time.Instant instant46 = new org.joda.time.Instant();
        org.joda.time.Instant instant48 = instant46.withMillis(0L);
        org.joda.time.Chronology chronology49 = instant48.getChronology();
        org.joda.time.DurationField durationField50 = chronology49.eras();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology49);
        org.joda.time.DateTimeField dateTimeField52 = chronology49.monthOfYear();
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = dateTimeField52.getType();
        mutableDateTime20.setRounding(dateTimeField52);
        org.joda.time.DurationField durationField55 = dateTimeField52.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField50, durationField55, and durationField50", !(durationField50.compareTo(durationField55) == 0) || (Math.signum(durationField50.compareTo(durationField50)) == Math.signum(durationField55.compareTo(durationField50))));
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test328");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology5);
        org.joda.time.DurationField durationField8 = chronology5.eras();
        org.joda.time.LocalDate localDate9 = org.joda.time.LocalDate.now(chronology5);
        org.joda.time.DurationField durationField10 = chronology5.centuries();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField10, and durationField6", !(durationField6.compareTo(durationField10) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField10.compareTo(durationField6))));
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test329");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime(chronology1);
        int int3 = dateTime2.getSecondOfMinute();
        boolean boolean4 = dateTime2.isEqualNow();
        int int5 = dateTime2.getDayOfYear();
        org.joda.time.Chronology chronology6 = dateTime2.getChronology();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (-3268332), chronology6);
        mutablePeriod7.addSeconds(467);
        org.joda.time.LocalDate localDate11 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate13 = localDate11.minusMonths((int) ' ');
        org.joda.time.Chronology chronology14 = localDate11.getChronology();
        org.joda.time.DateTimeField dateTimeField15 = chronology14.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField16 = chronology14.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField17 = chronology14.millisOfDay();
        org.joda.time.MutableDateTime mutableDateTime18 = org.joda.time.MutableDateTime.now(chronology14);
        org.joda.time.DurationField durationField19 = chronology14.hours();
        org.joda.time.DateTimeField dateTimeField20 = chronology14.centuryOfEra();
        mutablePeriod7.setPeriod((long) 2712, chronology14);
        mutablePeriod7.add((-292275054L));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime2 and mutableDateTime18", (dateTime2.compareTo(mutableDateTime18) == 0) == dateTime2.equals(mutableDateTime18));
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test330");
        org.joda.time.LocalDate localDate0 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate2 = localDate0.minusMonths((int) ' ');
        org.joda.time.Chronology chronology3 = localDate0.getChronology();
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate6 = localDate0.withFieldAdded(durationFieldType4, (int) (byte) 100);
        org.joda.time.LocalDate.Property property7 = localDate0.dayOfWeek();
        org.joda.time.LocalDate localDate9 = property7.addWrapFieldToCopy(3);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getSecondOfMinute();
        boolean boolean15 = dateTime13.isEqualNow();
        int int16 = dateTime13.getDayOfYear();
        org.joda.time.Chronology chronology17 = dateTime13.getChronology();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology17);
        org.joda.time.DateTimeField dateTimeField19 = chronology17.year();
        org.joda.time.DateTimeZone dateTimeZone20 = chronology17.getZone();
        org.joda.time.DateTime dateTime21 = localDate9.toDateTimeAtCurrentTime(dateTimeZone20);
        org.joda.time.LocalDate localDate23 = localDate9.plusWeeks(21);
        org.joda.time.MutableDateTime mutableDateTime25 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime25.add((org.joda.time.ReadableDuration) duration27, (int) (short) 100);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.DateTime dateTime31 = new org.joda.time.DateTime(chronology30);
        int int32 = dateTime31.getYearOfCentury();
        org.joda.time.Interval interval33 = duration27.toIntervalTo((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.LocalDate localDate35 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate37 = localDate35.minusMonths((int) ' ');
        int int38 = localDate35.size();
        org.joda.time.LocalDate.Property property39 = localDate35.weekOfWeekyear();
        org.joda.time.DateTimeZone dateTimeZone41 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime42 = new org.joda.time.MutableDateTime(0L, dateTimeZone41);
        long long45 = dateTimeZone41.convertLocalToUTC((long) 3, true);
        org.joda.time.MutableDateTime mutableDateTime46 = new org.joda.time.MutableDateTime(dateTimeZone41);
        org.joda.time.DateTime dateTime47 = localDate35.toDateTimeAtStartOfDay(dateTimeZone41);
        java.lang.String str49 = dateTimeZone41.getShortName((long) 50);
        long long51 = dateTimeZone41.convertUTCToLocal((long) 39251167);
        org.joda.time.MutableDateTime mutableDateTime52 = new org.joda.time.MutableDateTime(3600L, dateTimeZone41);
        org.joda.time.LocalDate localDate53 = new org.joda.time.LocalDate(dateTimeZone41);
        java.lang.String str55 = dateTimeZone41.getName((long) '4');
        org.joda.time.DateTime dateTime56 = dateTime31.withZone(dateTimeZone41);
        long long59 = dateTimeZone41.convertLocalToUTC((long) 367, false);
        org.joda.time.Interval interval60 = localDate23.toInterval(dateTimeZone41);
        org.joda.time.LocalDate.Property property61 = localDate23.yearOfCentury();
        org.joda.time.LocalDate localDate62 = property61.roundHalfEvenCopy();
        org.joda.time.LocalDate localDate64 = localDate62.minusDays(6);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and mutableDateTime46", (dateTime13.compareTo(mutableDateTime46) == 0) == dateTime13.equals(mutableDateTime46));
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test331");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.DateTime dateTime3 = dateTime1.plusWeeks(40);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration9 = duration5.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime11 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime11.add((org.joda.time.ReadableDuration) duration13, (int) (short) 100);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime(chronology16);
        int int18 = dateTime17.getYearOfCentury();
        org.joda.time.Interval interval19 = duration13.toIntervalTo((org.joda.time.ReadableInstant) dateTime17);
        org.joda.time.Duration duration20 = duration9.minus((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime((long) (short) 1, chronology22);
        org.joda.time.DateTime dateTime24 = dateTime23.toDateTime();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime((long) (short) 1, chronology26);
        org.joda.time.DateTime dateTime28 = dateTime27.toDateTime();
        int int29 = dateTime24.compareTo((org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType31 = periodType30.withDaysRemoved();
        org.joda.time.Period period32 = duration13.toPeriodTo((org.joda.time.ReadableInstant) dateTime27, periodType30);
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime3, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.DateTime.Property property34 = dateTime3.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField35 = property34.getField();
        int int37 = dateTimeField35.get((long) 34);
        org.joda.time.LocalDate localDate38 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property39 = localDate38.dayOfMonth();
        org.joda.time.LocalDate localDate41 = localDate38.withWeekyear(52);
        org.joda.time.Interval interval42 = localDate38.toInterval();
        org.joda.time.LocalDate localDate44 = localDate38.plusWeeks(2022);
        org.joda.time.LocalDate localDate46 = localDate38.minusMonths(39297267);
        org.joda.time.Instant instant49 = new org.joda.time.Instant();
        org.joda.time.Instant instant51 = instant49.withMillis(0L);
        org.joda.time.Chronology chronology52 = instant51.getChronology();
        org.joda.time.DurationField durationField53 = chronology52.eras();
        java.util.Locale locale54 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket56 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology52, locale54, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate57 = new org.joda.time.LocalDate((long) 53, chronology52);
        org.joda.time.DateTimeField dateTimeField58 = chronology52.dayOfYear();
        org.joda.time.DateTimeFieldType dateTimeFieldType59 = dateTimeField58.getType();
        int int60 = localDate46.get(dateTimeFieldType59);
        int int61 = dateTimeField35.getMinimumValue((org.joda.time.ReadablePartial) localDate46);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant49", (dateTime1.compareTo(instant49) == 0) == dateTime1.equals(instant49));
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test332");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.LocalTime localTime4 = dateTime1.toLocalTime();
        org.joda.time.MutableDateTime mutableDateTime6 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) 100, 1L, periodType9);
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.Period period15 = period10.plus((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Instant instant16 = new org.joda.time.Instant();
        org.joda.time.Instant instant18 = instant16.withMillis(0L);
        org.joda.time.Duration duration19 = period14.toDurationTo((org.joda.time.ReadableInstant) instant18);
        mutableDateTime6.add((org.joda.time.ReadableDuration) duration19, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType22 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean23 = mutableDateTime6.isSupported(dateTimeFieldType22);
        int int24 = mutableDateTime6.getWeekOfWeekyear();
        org.joda.time.Instant instant26 = new org.joda.time.Instant();
        org.joda.time.Instant instant28 = instant26.withMillis(0L);
        org.joda.time.Chronology chronology29 = instant28.getChronology();
        org.joda.time.DurationField durationField30 = chronology29.eras();
        java.util.Locale locale31 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket33 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology29, locale31, (java.lang.Integer) 39221019);
        mutableDateTime6.setChronology(chronology29);
        org.joda.time.MutableDateTime mutableDateTime36 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((long) 100, 1L, periodType39);
        org.joda.time.PeriodType periodType43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((long) 100, 1L, periodType43);
        org.joda.time.Period period45 = period40.plus((org.joda.time.ReadablePeriod) period44);
        org.joda.time.Instant instant46 = new org.joda.time.Instant();
        org.joda.time.Instant instant48 = instant46.withMillis(0L);
        org.joda.time.Duration duration49 = period44.toDurationTo((org.joda.time.ReadableInstant) instant48);
        mutableDateTime36.add((org.joda.time.ReadableDuration) duration49, 39);
        org.joda.time.MutableDateTime.Property property52 = mutableDateTime36.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone53 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime36.setZone(dateTimeZone53);
        org.joda.time.MutableDateTime mutableDateTime55 = new org.joda.time.MutableDateTime((java.lang.Object) mutableDateTime6, dateTimeZone53);
        org.joda.time.DateTime dateTime56 = dateTime1.withZone(dateTimeZone53);
        org.joda.time.DateTime dateTime58 = dateTime56.plusMillis(276);
        org.joda.time.DateTime.Property property59 = dateTime56.weekOfWeekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant16", (dateTime1.compareTo(instant16) == 0) == dateTime1.equals(instant16));
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test333");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusHours(4);
        org.joda.time.DateTime.Property property23 = dateTime1.millisOfSecond();
        org.joda.time.DateTime dateTime24 = property23.roundHalfCeilingCopy();
        org.joda.time.DateTimeField dateTimeField25 = property23.getField();
        org.joda.time.DateTime dateTime26 = property23.roundHalfEvenCopy();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime26 and instant3", (dateTime26.compareTo(instant3) == 0) == dateTime26.equals(instant3));
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test334");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        int int5 = dateTime4.getSecondOfMinute();
        boolean boolean6 = dateTime4.isEqualNow();
        int int7 = dateTime4.getDayOfYear();
        org.joda.time.Chronology chronology8 = dateTime4.getChronology();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology8);
        org.joda.time.DateTimeField dateTimeField10 = chronology8.year();
        org.joda.time.DateTimeField dateTimeField11 = chronology8.dayOfMonth();
        java.lang.Object obj12 = null;
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime15 = new org.joda.time.MutableDateTime(0L, dateTimeZone14);
        int int17 = dateTimeZone14.getOffsetFromLocal((long) (byte) 1);
        org.joda.time.DateTime dateTime18 = new org.joda.time.DateTime(obj12, dateTimeZone14);
        java.lang.String str19 = dateTimeZone14.toString();
        org.joda.time.Chronology chronology20 = chronology8.withZone(dateTimeZone14);
        org.joda.time.LocalDateTime localDateTime21 = new org.joda.time.LocalDateTime((long) (short) 1, chronology8);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property23 = localDateTime22.monthOfYear();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.DateTime dateTime25 = new org.joda.time.DateTime(chronology24);
        int int26 = dateTime25.getSecondOfMinute();
        boolean boolean27 = dateTime25.isEqualNow();
        int int28 = dateTime25.getDayOfYear();
        org.joda.time.Chronology chronology29 = dateTime25.getChronology();
        long long30 = property23.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.LocalDateTime localDateTime31 = property23.roundFloorCopy();
        org.joda.time.LocalDateTime localDateTime33 = new org.joda.time.LocalDateTime((-1511999969L));
        org.joda.time.LocalDateTime localDateTime34 = localDateTime31.withFields((org.joda.time.ReadablePartial) localDateTime33);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime35.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property38 = localDateTime35.hourOfDay();
        org.joda.time.DateTimeField dateTimeField39 = property38.getField();
        org.joda.time.LocalDateTime localDateTime40 = property38.withMinimumValue();
        int int41 = localDateTime31.compareTo((org.joda.time.ReadablePartial) localDateTime40);
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadablePartial) localDateTime21, (org.joda.time.ReadablePartial) localDateTime40);
        org.joda.time.Period period44 = period42.withMinutes(53839074);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime4 and dateTime18", (dateTime4.compareTo(dateTime18) == 0) == dateTime4.equals(dateTime18));
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test335");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime1.setZone(dateTimeZone18);
        int int20 = mutableDateTime1.getYearOfEra();
        mutableDateTime1.addMonths(41);
        org.joda.time.MutableDateTime mutableDateTime23 = mutableDateTime1.toMutableDateTimeISO();
        mutableDateTime1.addHours(4);
        org.joda.time.MutableDateTime mutableDateTime27 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((long) 100, 1L, periodType34);
        org.joda.time.Period period36 = period31.plus((org.joda.time.ReadablePeriod) period35);
        org.joda.time.Instant instant37 = new org.joda.time.Instant();
        org.joda.time.Instant instant39 = instant37.withMillis(0L);
        org.joda.time.Duration duration40 = period35.toDurationTo((org.joda.time.ReadableInstant) instant39);
        mutableDateTime27.add((org.joda.time.ReadableDuration) duration40, 39);
        org.joda.time.MutableDateTime.Property property43 = mutableDateTime27.secondOfMinute();
        org.joda.time.MutableDateTime.Property property44 = mutableDateTime27.minuteOfHour();
        org.joda.time.MutableDateTime mutableDateTime46 = property44.addWrapField(6);
        mutableDateTime1.setDate((org.joda.time.ReadableInstant) mutableDateTime46);
        org.joda.time.LocalDate localDate48 = new org.joda.time.LocalDate();
        int int49 = localDate48.getDayOfMonth();
        org.joda.time.LocalDate localDate51 = localDate48.plusYears(1);
        org.joda.time.LocalDate localDate53 = localDate51.plusYears((int) (short) -1);
        org.joda.time.DateTime dateTime54 = localDate53.toDateTimeAtStartOfDay();
        org.joda.time.DateTime.Property property55 = dateTime54.secondOfDay();
        org.joda.time.DateTime dateTime57 = dateTime54.withHourOfDay(6);
        org.joda.time.DateTime dateTime59 = dateTime57.withMillis((long) 31);
        org.joda.time.DateTimeZone dateTimeZone61 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime62 = new org.joda.time.MutableDateTime(0L, dateTimeZone61);
        long long65 = dateTimeZone61.convertLocalToUTC((long) 3, true);
        org.joda.time.MutableDateTime mutableDateTime66 = new org.joda.time.MutableDateTime(dateTimeZone61);
        java.lang.String str67 = dateTimeZone61.toString();
        org.joda.time.MutableDateTime mutableDateTime68 = new org.joda.time.MutableDateTime(dateTimeZone61);
        org.joda.time.DateTime dateTime69 = dateTime59.withZone(dateTimeZone61);
        org.joda.time.LocalDate localDate70 = new org.joda.time.LocalDate((java.lang.Object) mutableDateTime1, dateTimeZone61);
        int int72 = dateTimeZone61.getStandardOffset(252000000L);
        boolean boolean73 = dateTimeZone61.isFixed();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime59 and dateTime69", (dateTime59.compareTo(dateTime69) == 0) == dateTime59.equals(dateTime69));
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test336");
        org.joda.time.DateTimeZone dateTimeZone0 = null;
        org.joda.time.LocalTime localTime1 = new org.joda.time.LocalTime(dateTimeZone0);
        org.joda.time.LocalTime localTime3 = localTime1.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime5 = localTime3.plusMillis((int) (byte) 100);
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 100, 1L, periodType14);
        org.joda.time.Period period16 = period11.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Duration duration20 = period15.toDurationTo((org.joda.time.ReadableInstant) instant19);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration20, 39);
        org.joda.time.MutableDateTime.Property property23 = mutableDateTime7.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime7.setZone(dateTimeZone24);
        int int26 = mutableDateTime7.getYearOfEra();
        int int27 = mutableDateTime7.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property28 = mutableDateTime7.year();
        org.joda.time.MutableDateTime mutableDateTime29 = property28.roundHalfEven();
        org.joda.time.DateTime dateTime30 = localTime5.toDateTime((org.joda.time.ReadableInstant) mutableDateTime29);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.Instant instant34 = instant32.withMillis(0L);
        org.joda.time.Chronology chronology35 = instant34.getChronology();
        org.joda.time.DurationField durationField36 = chronology35.eras();
        java.util.Locale locale37 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket39 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology35, locale37, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology41 = null;
        java.util.Locale locale42 = java.util.Locale.GERMAN;
        java.util.Locale locale43 = java.util.Locale.CANADA;
        java.lang.String str44 = locale42.getDisplayVariant(locale43);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket45 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology41, locale43);
        org.joda.time.DateTimeZone dateTimeZone46 = dateTimeParserBucket45.getZone();
        org.joda.time.Chronology chronology47 = chronology35.withZone(dateTimeZone46);
        org.joda.time.DateTimeField dateTimeField48 = chronology47.hourOfDay();
        org.joda.time.DateTime dateTime49 = dateTime30.withChronology(chronology47);
        org.joda.time.DateTimeField dateTimeField50 = chronology47.millisOfDay();
        long long52 = dateTimeField50.roundHalfCeiling((long) 53914278);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime30 and dateTime49", (dateTime30.compareTo(dateTime49) == 0) == dateTime30.equals(dateTime49));
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test337");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTime dateTime3 = dateTime2.toDateTime();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.DateTime dateTime6 = new org.joda.time.DateTime((long) (short) 1, chronology5);
        org.joda.time.DateTime dateTime7 = dateTime6.toDateTime();
        int int8 = dateTime3.compareTo((org.joda.time.ReadableInstant) dateTime6);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime6, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.DateMidnight dateMidnight12 = dateTime6.toDateMidnight();
        org.joda.time.LocalDate localDate13 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate15 = localDate13.minusMonths((int) ' ');
        org.joda.time.Chronology chronology16 = localDate13.getChronology();
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate19 = localDate13.withFieldAdded(durationFieldType17, (int) (byte) 100);
        org.joda.time.LocalDate localDate21 = localDate19.minusMonths(55);
        boolean boolean22 = dateTime6.equals((java.lang.Object) localDate19);
        org.joda.time.DateTime dateTime24 = dateTime6.withSecondOfMinute(12);
        org.joda.time.DateTime dateTime26 = dateTime6.plusYears((int) (short) 1);
        org.joda.time.DateTime.Property property27 = dateTime6.millisOfDay();
        org.joda.time.MutableDateTime mutableDateTime29 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 100, 1L, periodType36);
        org.joda.time.Period period38 = period33.plus((org.joda.time.ReadablePeriod) period37);
        org.joda.time.Instant instant39 = new org.joda.time.Instant();
        org.joda.time.Instant instant41 = instant39.withMillis(0L);
        org.joda.time.Duration duration42 = period37.toDurationTo((org.joda.time.ReadableInstant) instant41);
        mutableDateTime29.add((org.joda.time.ReadableDuration) duration42, 39);
        org.joda.time.MutableDateTime.Property property45 = mutableDateTime29.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone46 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime29.setZone(dateTimeZone46);
        int int48 = mutableDateTime29.getYearOfEra();
        int int49 = mutableDateTime29.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property50 = mutableDateTime29.year();
        org.joda.time.DateTimeZone dateTimeZone52 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime53 = new org.joda.time.MutableDateTime(0L, dateTimeZone52);
        long long56 = dateTimeZone52.convertLocalToUTC((long) 3, true);
        org.joda.time.MutableDateTime mutableDateTime57 = new org.joda.time.MutableDateTime(dateTimeZone52);
        mutableDateTime29.setZoneRetainFields(dateTimeZone52);
        java.lang.String str59 = dateTimeZone52.toString();
        org.joda.time.MutableDateTime mutableDateTime60 = dateTime6.toMutableDateTime(dateTimeZone52);
        java.lang.String str62 = dateTimeZone52.getNameKey(597600120L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime2 and mutableDateTime60", (dateTime2.compareTo(mutableDateTime60) == 0) == dateTime2.equals(mutableDateTime60));
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test338");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property1 = localDateTime0.monthOfYear();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime((long) (short) 1, chronology3);
        org.joda.time.Instant instant5 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime4, (org.joda.time.ReadableInstant) instant5, periodType6);
        org.joda.time.DateTimeFieldType dateTimeFieldType8 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int9 = instant5.get(dateTimeFieldType8);
        org.joda.time.LocalDateTime localDateTime11 = localDateTime0.withField(dateTimeFieldType8, 39);
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.minusSeconds(52);
        int int14 = localDateTime13.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime16 = localDateTime13.plusWeeks(22);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime((long) (short) 1, chronology18);
        org.joda.time.Instant instant20 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime19, (org.joda.time.ReadableInstant) instant20, periodType21);
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int24 = instant20.get(dateTimeFieldType23);
        java.lang.String str25 = dateTimeFieldType23.getName();
        java.lang.String str26 = dateTimeFieldType23.toString();
        int int27 = localDateTime16.indexOf(dateTimeFieldType23);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime28.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property31 = localDateTime28.hourOfDay();
        org.joda.time.DateTimeField dateTimeField32 = property31.getField();
        boolean boolean34 = property31.equals((java.lang.Object) '#');
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(chronology35);
        int int37 = dateTime36.getSecondOfMinute();
        int int38 = dateTime36.getYearOfEra();
        int int39 = property31.getDifference((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.LocalDateTime localDateTime40 = property31.roundHalfFloorCopy();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime40.minusMinutes(54);
        org.joda.time.LocalDateTime localDateTime44 = localDateTime42.plusDays(50);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = org.joda.time.DateTimeFieldType.secondOfDay();
        java.lang.String str46 = dateTimeFieldType45.toString();
        org.joda.time.Instant instant48 = new org.joda.time.Instant();
        org.joda.time.Instant instant50 = instant48.withMillis(0L);
        org.joda.time.Chronology chronology51 = instant50.getChronology();
        org.joda.time.DurationField durationField52 = chronology51.eras();
        java.util.Locale locale53 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket55 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology51, locale53, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime56 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime58 = localDateTime56.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property59 = localDateTime56.hourOfDay();
        org.joda.time.DateTimeField dateTimeField60 = property59.getField();
        int int61 = property59.get();
        org.joda.time.LocalDateTime localDateTime62 = property59.roundHalfFloorCopy();
        long long64 = chronology51.set((org.joda.time.ReadablePartial) localDateTime62, (long) 2022);
        org.joda.time.LocalDateTime localDateTime65 = org.joda.time.LocalDateTime.now(chronology51);
        org.joda.time.DateTime dateTime66 = new org.joda.time.DateTime(chronology51);
        org.joda.time.DateTimeField dateTimeField67 = chronology51.dayOfWeek();
        org.joda.time.DateTimeField dateTimeField68 = dateTimeFieldType45.getField(chronology51);
        boolean boolean69 = localDateTime44.isSupported(dateTimeFieldType45);
        int int70 = localDateTime16.compareTo((org.joda.time.ReadablePartial) localDateTime44);
        org.joda.time.LocalDateTime localDateTime72 = localDateTime16.plusDays(39427651);
        org.joda.time.LocalTime localTime73 = localDateTime72.toLocalTime();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant5 and dateTime36", (instant5.compareTo(dateTime36) == 0) == instant5.equals(dateTime36));
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test339");
        org.joda.time.MutableDateTime mutableDateTime2 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((long) 100, 1L, periodType5);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) 100, 1L, periodType9);
        org.joda.time.Period period11 = period6.plus((org.joda.time.ReadablePeriod) period10);
        org.joda.time.Instant instant12 = new org.joda.time.Instant();
        org.joda.time.Instant instant14 = instant12.withMillis(0L);
        org.joda.time.Duration duration15 = period10.toDurationTo((org.joda.time.ReadableInstant) instant14);
        mutableDateTime2.add((org.joda.time.ReadableDuration) duration15, 39);
        org.joda.time.MutableDateTime.Property property18 = mutableDateTime2.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime2.setZone(dateTimeZone19);
        int int21 = mutableDateTime2.getYearOfEra();
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period32 = period27.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.Instant instant35 = instant33.withMillis(0L);
        org.joda.time.Duration duration36 = period31.toDurationTo((org.joda.time.ReadableInstant) instant35);
        mutableDateTime23.add((org.joda.time.ReadableDuration) duration36, 39);
        org.joda.time.MutableDateTime.Property property39 = mutableDateTime23.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime23.setZone(dateTimeZone40);
        org.joda.time.Chronology chronology43 = null;
        java.util.Locale locale44 = java.util.Locale.GERMAN;
        java.util.Locale locale45 = locale44.stripExtensions();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket48 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology43, locale44, (java.lang.Integer) 45, (int) '4');
        org.joda.time.DateTimeZone dateTimeZone49 = dateTimeParserBucket48.getZone();
        long long51 = dateTimeZone40.getMillisKeepLocal(dateTimeZone49, 315532800097L);
        mutableDateTime2.setZone(dateTimeZone49);
        org.joda.time.LocalDateTime localDateTime53 = org.joda.time.LocalDateTime.now(dateTimeZone49);
        org.joda.time.DateTime dateTime54 = org.joda.time.DateTime.now(dateTimeZone49);
        org.joda.time.MutableDateTime mutableDateTime55 = new org.joda.time.MutableDateTime((long) 53768216, dateTimeZone49);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime2 and mutableDateTime23", (mutableDateTime2.compareTo(mutableDateTime23) == 0) == mutableDateTime2.equals(mutableDateTime23));
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test340");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        mutableDateTime1.setWeekOfWeekyear(14);
        int int20 = mutableDateTime1.getRoundingMode();
        java.util.GregorianCalendar gregorianCalendar21 = mutableDateTime1.toGregorianCalendar();
        mutableDateTime1.setDayOfMonth(13);
        mutableDateTime1.setSecondOfDay(8);
        org.joda.time.MutableDateTime.Property property26 = mutableDateTime1.dayOfMonth();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardDays((-1L));
        org.joda.time.Duration duration31 = duration29.plus((long) 41);
        long long32 = duration29.getStandardHours();
        org.joda.time.LocalDateTime localDateTime33 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property34 = localDateTime33.monthOfYear();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(chronology35);
        int int37 = dateTime36.getSecondOfMinute();
        boolean boolean38 = dateTime36.isEqualNow();
        int int39 = dateTime36.getDayOfYear();
        org.joda.time.Chronology chronology40 = dateTime36.getChronology();
        long long41 = property34.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.DateTime dateTime43 = dateTime36.minusYears(0);
        org.joda.time.DateTime.Property property44 = dateTime43.secondOfDay();
        org.joda.time.DateTime dateTime46 = property44.addWrapFieldToCopy(23);
        org.joda.time.DateTime dateTime48 = property44.addToCopy(43200000L);
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period(readableDuration49, readableInstant50);
        org.joda.time.PeriodType periodType54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((long) 100, 1L, periodType54);
        org.joda.time.Period period57 = period55.minusSeconds((-1));
        java.lang.String str58 = period55.toString();
        org.joda.time.Period period59 = period55.toPeriod();
        org.joda.time.PeriodType periodType60 = period55.getPeriodType();
        org.joda.time.Period period61 = period51.normalizedStandard(periodType60);
        java.lang.String str62 = periodType60.getName();
        org.joda.time.PeriodType periodType63 = periodType60.withHoursRemoved();
        org.joda.time.PeriodType periodType64 = periodType60.withSecondsRemoved();
        org.joda.time.Period period65 = duration29.toPeriodTo((org.joda.time.ReadableInstant) dateTime48, periodType64);
        org.joda.time.DateTimeZone dateTimeZone66 = dateTime48.getZone();
        org.joda.time.MutableDateTime mutableDateTime67 = new org.joda.time.MutableDateTime((long) 57, dateTimeZone66);
        boolean boolean68 = property26.equals((java.lang.Object) mutableDateTime67);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime36", (instant11.compareTo(dateTime36) == 0) == instant11.equals(dateTime36));
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test341");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        mutableDateTime1.setDayOfYear(22);
        int int19 = mutableDateTime1.getYearOfCentury();
        mutableDateTime1.addMinutes(53639537);
        org.joda.time.MutableDateTime.Property property22 = mutableDateTime1.centuryOfEra();
        org.joda.time.LocalDateTime localDateTime23 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime23.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property26 = localDateTime23.hourOfDay();
        org.joda.time.LocalDateTime localDateTime28 = localDateTime23.plusMillis((int) (byte) 0);
        org.joda.time.DateTime dateTime29 = localDateTime23.toDateTime();
        java.lang.String str30 = localDateTime23.toString();
        org.joda.time.LocalDateTime.Property property31 = localDateTime23.weekyear();
        org.joda.time.LocalDateTime localDateTime32 = property31.roundHalfFloorCopy();
        org.joda.time.Instant instant35 = new org.joda.time.Instant();
        org.joda.time.Instant instant37 = instant35.withMillis(0L);
        org.joda.time.Chronology chronology38 = instant37.getChronology();
        org.joda.time.DurationField durationField39 = chronology38.eras();
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology38);
        org.joda.time.DateTimeField dateTimeField41 = chronology38.monthOfYear();
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = dateTimeField41.getType();
        boolean boolean43 = localDateTime32.isSupported(dateTimeFieldType42);
        int int44 = mutableDateTime1.get(dateTimeFieldType42);
        java.util.GregorianCalendar gregorianCalendar45 = mutableDateTime1.toGregorianCalendar();
        org.joda.time.LocalDateTime localDateTime46 = org.joda.time.LocalDateTime.fromCalendarFields((java.util.Calendar) gregorianCalendar45);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime29", (instant11.compareTo(dateTime29) == 0) == instant11.equals(dateTime29));
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test342");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime2 = localDateTime0.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime4 = localDateTime0.minusDays(1439);
        org.joda.time.LocalDateTime localDateTime6 = localDateTime0.withYearOfEra(239);
        int int7 = localDateTime0.getMillisOfSecond();
        java.lang.Object obj8 = null;
        org.joda.time.DateTime dateTime9 = new org.joda.time.DateTime(obj8);
        org.joda.time.LocalDateTime localDateTime10 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime14 = localDateTime12.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField16 = localDateTime14.getField((int) (byte) 0);
        long long18 = dateTimeField16.roundHalfEven((long) 1);
        int int19 = dateTime9.get(dateTimeField16);
        boolean boolean20 = dateTime9.isBeforeNow();
        int int21 = dateTime9.getWeekOfWeekyear();
        org.joda.time.DateTime dateTime23 = dateTime9.minusMinutes(21);
        org.joda.time.MutableDateTime mutableDateTime25 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.Period period34 = period29.plus((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Instant instant35 = new org.joda.time.Instant();
        org.joda.time.Instant instant37 = instant35.withMillis(0L);
        org.joda.time.Duration duration38 = period33.toDurationTo((org.joda.time.ReadableInstant) instant37);
        mutableDateTime25.add((org.joda.time.ReadableDuration) duration38, 39);
        org.joda.time.MutableDateTime.Property property41 = mutableDateTime25.yearOfEra();
        mutableDateTime25.setDayOfYear((int) ' ');
        mutableDateTime25.add((long) 53);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter46 = null;
        java.lang.String str47 = mutableDateTime25.toString(dateTimeFormatter46);
        org.joda.time.DateTimeZone dateTimeZone48 = org.joda.time.DateTimeZone.UTC;
        int int50 = dateTimeZone48.getStandardOffset((long) 894);
        mutableDateTime25.setZoneRetainFields(dateTimeZone48);
        java.util.Locale locale53 = java.util.Locale.GERMAN;
        java.util.Set<java.lang.String> strSet54 = locale53.getUnicodeLocaleAttributes();
        java.lang.String str55 = dateTimeZone48.getName((long) 8, locale53);
        org.joda.time.MutableDateTime mutableDateTime56 = dateTime9.toMutableDateTime(dateTimeZone48);
        int int58 = dateTimeZone48.getOffset((-35380799346L));
        org.joda.time.DateTime dateTime59 = localDateTime0.toDateTime(dateTimeZone48);
        org.joda.time.LocalTime localTime60 = new org.joda.time.LocalTime((java.lang.Object) dateTime59);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime9 and mutableDateTime56", (dateTime9.compareTo(mutableDateTime56) == 0) == dateTime9.equals(mutableDateTime56));
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test343");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.DateTime.Property property2 = dateTime1.millisOfDay();
        org.joda.time.LocalDateTime localDateTime3 = dateTime1.toLocalDateTime();
        org.joda.time.LocalDateTime.Property property4 = localDateTime3.weekyear();
        org.joda.time.LocalDateTime localDateTime6 = property4.setCopy((int) ' ');
        org.joda.time.MutableDateTime mutableDateTime8 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.Period period17 = period12.plus((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Instant instant18 = new org.joda.time.Instant();
        org.joda.time.Instant instant20 = instant18.withMillis(0L);
        org.joda.time.Duration duration21 = period16.toDurationTo((org.joda.time.ReadableInstant) instant20);
        mutableDateTime8.add((org.joda.time.ReadableDuration) duration21, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType24 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean25 = mutableDateTime8.isSupported(dateTimeFieldType24);
        int int26 = mutableDateTime8.getWeekOfWeekyear();
        org.joda.time.Instant instant28 = new org.joda.time.Instant();
        org.joda.time.Instant instant30 = instant28.withMillis(0L);
        org.joda.time.Chronology chronology31 = instant30.getChronology();
        org.joda.time.DurationField durationField32 = chronology31.eras();
        java.util.Locale locale33 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket35 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology31, locale33, (java.lang.Integer) 39221019);
        mutableDateTime8.setChronology(chronology31);
        org.joda.time.MutableDateTime mutableDateTime38 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((long) 100, 1L, periodType41);
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((long) 100, 1L, periodType45);
        org.joda.time.Period period47 = period42.plus((org.joda.time.ReadablePeriod) period46);
        org.joda.time.Instant instant48 = new org.joda.time.Instant();
        org.joda.time.Instant instant50 = instant48.withMillis(0L);
        org.joda.time.Duration duration51 = period46.toDurationTo((org.joda.time.ReadableInstant) instant50);
        mutableDateTime38.add((org.joda.time.ReadableDuration) duration51, 39);
        org.joda.time.MutableDateTime.Property property54 = mutableDateTime38.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone55 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime38.setZone(dateTimeZone55);
        org.joda.time.MutableDateTime mutableDateTime57 = new org.joda.time.MutableDateTime((java.lang.Object) mutableDateTime8, dateTimeZone55);
        org.joda.time.DurationFieldType durationFieldType58 = org.joda.time.DurationFieldType.days();
        mutableDateTime8.add(durationFieldType58, 13);
        org.joda.time.LocalDateTime localDateTime62 = localDateTime6.withFieldAdded(durationFieldType58, (int) (short) 10);
        org.joda.time.LocalDateTime localDateTime64 = localDateTime62.minusMillis(40407436);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant18", (dateTime1.compareTo(instant18) == 0) == dateTime1.equals(instant18));
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test344");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int7 = instant3.get(dateTimeFieldType6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 10, (long) 3);
        org.joda.time.Instant instant12 = instant3.withDurationAdded((org.joda.time.ReadableDuration) duration10, 0);
        org.joda.time.LocalDateTime localDateTime13 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property14 = localDateTime13.monthOfYear();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period17 = duration16.toPeriod();
        org.joda.time.Duration duration20 = duration16.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime22 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime22.add((org.joda.time.ReadableDuration) duration24, (int) (short) 100);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.DateTime dateTime28 = new org.joda.time.DateTime(chronology27);
        int int29 = dateTime28.getYearOfCentury();
        org.joda.time.Interval interval30 = duration24.toIntervalTo((org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.Duration duration31 = duration20.minus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.LocalDateTime localDateTime32 = localDateTime13.plus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.LocalDateTime localDateTime33 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime35 = localDateTime33.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property36 = localDateTime33.hourOfDay();
        org.joda.time.DateTimeField dateTimeField37 = property36.getField();
        boolean boolean39 = property36.equals((java.lang.Object) '#');
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.DateTime dateTime41 = new org.joda.time.DateTime(chronology40);
        int int42 = dateTime41.getSecondOfMinute();
        int int43 = dateTime41.getYearOfEra();
        int int44 = property36.getDifference((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.MutableDateTime mutableDateTime45 = dateTime41.toMutableDateTimeISO();
        int int46 = mutableDateTime45.getHourOfDay();
        org.joda.time.Period period47 = duration24.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime45);
        org.joda.time.Instant instant49 = instant12.withDurationAdded((org.joda.time.ReadableDuration) duration24, 10);
        java.util.Date date50 = instant12.toDate();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant12 and dateTime28", (instant12.compareTo(dateTime28) == 0) == instant12.equals(dateTime28));
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test345");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        mutablePeriod3.setYears((int) '#');
        org.joda.time.Instant instant8 = new org.joda.time.Instant();
        org.joda.time.Instant instant10 = instant8.withMillis(0L);
        org.joda.time.Chronology chronology11 = instant10.getChronology();
        org.joda.time.DurationField durationField12 = chronology11.eras();
        java.util.Locale locale13 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket15 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology11, locale13, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime16 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime18 = localDateTime16.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property19 = localDateTime16.hourOfDay();
        org.joda.time.DateTimeField dateTimeField20 = property19.getField();
        int int21 = property19.get();
        org.joda.time.LocalDateTime localDateTime22 = property19.roundHalfFloorCopy();
        long long24 = chronology11.set((org.joda.time.ReadablePartial) localDateTime22, (long) 2022);
        mutablePeriod3.setPeriod((long) ' ', chronology11);
        org.joda.time.LocalDateTime localDateTime26 = new org.joda.time.LocalDateTime(chronology11);
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) 100, 1L, periodType29);
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((long) 100, 1L, periodType33);
        org.joda.time.Period period35 = period30.plus((org.joda.time.ReadablePeriod) period34);
        org.joda.time.Instant instant36 = new org.joda.time.Instant();
        org.joda.time.Instant instant38 = instant36.withMillis(0L);
        org.joda.time.Duration duration39 = period34.toDurationTo((org.joda.time.ReadableInstant) instant38);
        org.joda.time.Instant instant41 = instant38.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime42 = instant38.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType43 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType44 = dateTimeFieldType43.getRangeDurationType();
        org.joda.time.DateTime.Property property45 = dateTime42.property(dateTimeFieldType43);
        boolean boolean47 = dateTime42.isEqual((long) 53);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period50 = duration49.toPeriod();
        org.joda.time.DateTime dateTime52 = dateTime42.withDurationAdded((org.joda.time.ReadableDuration) duration49, (-292275054));
        org.joda.time.Seconds seconds53 = duration49.toStandardSeconds();
        org.joda.time.Duration duration55 = duration49.plus((long) 409);
        org.joda.time.LocalDateTime localDateTime57 = localDateTime26.withDurationAdded((org.joda.time.ReadableDuration) duration55, 9);
        org.joda.time.Period period58 = duration55.toPeriod();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant10 and dateTime42", (instant10.compareTo(dateTime42) == 0) == instant10.equals(dateTime42));
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test346");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology10 = null;
        java.util.Locale locale11 = java.util.Locale.GERMAN;
        java.util.Locale locale12 = java.util.Locale.CANADA;
        java.lang.String str13 = locale11.getDisplayVariant(locale12);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket14 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology10, locale12);
        org.joda.time.DateTimeZone dateTimeZone15 = dateTimeParserBucket14.getZone();
        org.joda.time.Chronology chronology16 = chronology4.withZone(dateTimeZone15);
        org.joda.time.DateTimeField dateTimeField17 = chronology16.hourOfDay();
        org.joda.time.DurationField durationField18 = chronology16.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField18, and durationField5", !(durationField5.compareTo(durationField18) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField18.compareTo(durationField5))));
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test347");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime2 = localDateTime0.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property3 = localDateTime0.hourOfDay();
        org.joda.time.LocalDateTime localDateTime5 = localDateTime0.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str7 = dateTimeFieldType6.getName();
        int int8 = localDateTime0.indexOf(dateTimeFieldType6);
        org.joda.time.LocalDateTime localDateTime10 = localDateTime0.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime12 = localDateTime0.minusSeconds((int) '#');
        org.joda.time.LocalDateTime localDateTime13 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime13.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property16 = localDateTime13.hourOfDay();
        org.joda.time.LocalDateTime localDateTime18 = localDateTime13.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str20 = dateTimeFieldType19.getName();
        int int21 = localDateTime13.indexOf(dateTimeFieldType19);
        org.joda.time.LocalDateTime localDateTime23 = localDateTime13.minusSeconds(0);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.DateTime dateTime26 = new org.joda.time.DateTime((long) (short) 1, chronology25);
        org.joda.time.Instant instant27 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime26, (org.joda.time.ReadableInstant) instant27, periodType28);
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadablePartial) localDateTime0, (org.joda.time.ReadablePartial) localDateTime23, periodType28);
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.UTC;
        long long34 = dateTimeZone31.convertLocalToUTC((long) (byte) 100, false);
        org.joda.time.LocalDateTime localDateTime35 = new org.joda.time.LocalDateTime(dateTimeZone31);
        org.joda.time.DateTime dateTime36 = localDateTime0.toDateTime(dateTimeZone31);
        org.joda.time.LocalDateTime localDateTime38 = localDateTime0.minusDays(2013);
        java.lang.Object obj39 = null;
        org.joda.time.DateTime dateTime40 = new org.joda.time.DateTime(obj39);
        org.joda.time.DateTime.Property property41 = dateTime40.millisOfDay();
        org.joda.time.DateTimeField dateTimeField42 = property41.getField();
        org.joda.time.DateTime dateTime43 = property41.withMinimumValue();
        org.joda.time.DateTime dateTime45 = dateTime43.minusHours(2023);
        org.joda.time.DateTime dateTime46 = dateTime45.withTimeAtStartOfDay();
        java.lang.String str48 = dateTime45.toString("1");
        boolean boolean49 = localDateTime38.equals((java.lang.Object) str48);
        int int50 = localDateTime38.getDayOfMonth();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant27 and dateTime40", (instant27.compareTo(dateTime40) == 0) == instant27.equals(dateTime40));
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test348");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant6);
        org.joda.time.Duration duration8 = duration5.toDuration();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period11 = duration10.toPeriod();
        org.joda.time.Duration duration14 = duration10.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((long) 100, 1L, periodType21);
        org.joda.time.Period period23 = period18.plus((org.joda.time.ReadablePeriod) period22);
        org.joda.time.Instant instant24 = new org.joda.time.Instant();
        org.joda.time.Instant instant26 = instant24.withMillis(0L);
        org.joda.time.Duration duration27 = period22.toDurationTo((org.joda.time.ReadableInstant) instant26);
        org.joda.time.Instant instant29 = instant26.plus((long) (byte) -1);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime((long) (short) 1, chronology31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) instant33, periodType34);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant26, periodType34);
        int int37 = duration5.compareTo((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration39 = duration5.withMillis((long) (short) 1);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.DateTime dateTime42 = new org.joda.time.DateTime((long) (short) 1, chronology41);
        org.joda.time.DateTime dateTime43 = dateTime42.toDateTime();
        int int44 = dateTime42.getYear();
        org.joda.time.DateTime dateTime45 = dateTime42.toDateTimeISO();
        org.joda.time.DateTime dateTime47 = dateTime45.withYear(39324);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 1);
        long long50 = duration49.getStandardSeconds();
        org.joda.time.Days days51 = duration49.toStandardDays();
        org.joda.time.MutableDateTime mutableDateTime53 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime53.add((org.joda.time.ReadableDuration) duration55, (int) (short) 100);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.DateTime dateTime59 = new org.joda.time.DateTime(chronology58);
        int int60 = dateTime59.getYearOfCentury();
        org.joda.time.Interval interval61 = duration55.toIntervalTo((org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period64 = duration63.toPeriod();
        org.joda.time.Duration duration67 = duration63.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration67, readableInstant68);
        long long70 = duration67.getStandardDays();
        org.joda.time.Duration duration71 = duration67.toDuration();
        org.joda.time.Duration duration72 = duration55.minus((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration73 = duration49.minus((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration76 = duration55.withDurationAdded((-1511999969L), (int) (short) 1);
        org.joda.time.DateTime dateTime77 = dateTime45.plus((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Duration duration79 = duration39.withDurationAdded((org.joda.time.ReadableDuration) duration76, 53644753);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant24 and dateTime59", (instant24.compareTo(dateTime59) == 0) == instant24.equals(dateTime59));
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test349");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.plus(1L);
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.Period period19 = period14.plus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Instant instant20 = new org.joda.time.Instant();
        org.joda.time.Instant instant22 = instant20.withMillis(0L);
        org.joda.time.Duration duration23 = period18.toDurationTo((org.joda.time.ReadableInstant) instant22);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration23, 39);
        int int26 = duration5.compareTo((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Instant instant28 = instant2.withDurationAdded((org.joda.time.ReadableDuration) duration23, 0);
        org.joda.time.Instant instant29 = instant2.toInstant();
        org.joda.time.DateTime dateTime30 = instant29.toDateTime();
        org.joda.time.LocalTime localTime31 = dateTime30.toLocalTime();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.DateTime dateTime33 = new org.joda.time.DateTime(chronology32);
        int int34 = dateTime33.getSecondOfMinute();
        boolean boolean35 = dateTime33.isEqualNow();
        int int36 = dateTime33.getDayOfYear();
        org.joda.time.Chronology chronology37 = dateTime33.getChronology();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.DateTime dateTime40 = dateTime33.plus((org.joda.time.ReadableDuration) duration39);
        org.joda.time.MutableDateTime mutableDateTime42 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime42.add((org.joda.time.ReadableDuration) duration44, (int) (short) 100);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.DateTime dateTime48 = new org.joda.time.DateTime(chronology47);
        int int49 = dateTime48.getYearOfCentury();
        org.joda.time.Interval interval50 = duration44.toIntervalTo((org.joda.time.ReadableInstant) dateTime48);
        int int51 = duration39.compareTo((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardSeconds(10L);
        boolean boolean54 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.DateTime dateTime57 = new org.joda.time.DateTime((long) (short) 1, chronology56);
        org.joda.time.DateTimeZone dateTimeZone58 = null;
        org.joda.time.LocalTime localTime59 = new org.joda.time.LocalTime(dateTimeZone58);
        org.joda.time.LocalTime localTime61 = localTime59.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime63 = localTime61.plusMillis((int) (byte) 100);
        org.joda.time.DateTime dateTime64 = dateTime57.withFields((org.joda.time.ReadablePartial) localTime63);
        org.joda.time.DateTime dateTime65 = dateTime57.toDateTimeISO();
        org.joda.time.DateTime dateTime67 = new org.joda.time.DateTime((long) 100);
        org.joda.time.DateTime.Property property68 = dateTime67.monthOfYear();
        org.joda.time.DateTime dateTime69 = dateTime67.toDateTimeISO();
        boolean boolean70 = dateTime57.isAfter((org.joda.time.ReadableInstant) dateTime69);
        org.joda.time.DateTime dateTime72 = dateTime69.withYearOfCentury(56);
        org.joda.time.DateTime dateTime74 = dateTime72.plusSeconds(54);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period76 = duration44.toPeriodFrom((org.joda.time.ReadableInstant) dateTime72, periodType75);
        org.joda.time.LocalTime localTime78 = localTime31.withPeriodAdded((org.joda.time.ReadablePeriod) period76, 163);
        org.joda.time.LocalTime.Property property79 = localTime78.minuteOfHour();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime30", (instant2.compareTo(dateTime30) == 0) == instant2.equals(dateTime30));
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test350");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration9, (int) (short) 100);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getYearOfCentury();
        org.joda.time.Interval interval15 = duration9.toIntervalTo((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Duration duration16 = duration5.minus((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Hours hours17 = duration5.toStandardHours();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.DateTime dateTime21 = new org.joda.time.DateTime(chronology20);
        int int22 = dateTime21.getSecondOfMinute();
        boolean boolean23 = dateTime21.isEqualNow();
        int int24 = dateTime21.getDayOfYear();
        org.joda.time.Chronology chronology25 = dateTime21.getChronology();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology25);
        org.joda.time.DateTimeField dateTimeField27 = chronology25.year();
        org.joda.time.DateTimeZone dateTimeZone28 = chronology25.getZone();
        org.joda.time.Period period29 = duration5.toPeriod(chronology25);
        org.joda.time.DateTimeZone dateTimeZone30 = chronology25.getZone();
        java.lang.String str31 = chronology25.toString();
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now(chronology25);
        org.joda.time.MutableDateTime mutableDateTime34 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((long) 100, 1L, periodType37);
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((long) 100, 1L, periodType41);
        org.joda.time.Period period43 = period38.plus((org.joda.time.ReadablePeriod) period42);
        org.joda.time.Instant instant44 = new org.joda.time.Instant();
        org.joda.time.Instant instant46 = instant44.withMillis(0L);
        org.joda.time.Duration duration47 = period42.toDurationTo((org.joda.time.ReadableInstant) instant46);
        mutableDateTime34.add((org.joda.time.ReadableDuration) duration47, 39);
        org.joda.time.MutableDateTime.Property property50 = mutableDateTime34.yearOfEra();
        mutableDateTime34.setWeekOfWeekyear(14);
        int int53 = mutableDateTime34.getRoundingMode();
        java.util.GregorianCalendar gregorianCalendar54 = mutableDateTime34.toGregorianCalendar();
        org.joda.time.LocalTime localTime55 = org.joda.time.LocalTime.fromCalendarFields((java.util.Calendar) gregorianCalendar54);
        org.joda.time.DateTimeZone dateTimeZone56 = null;
        org.joda.time.LocalTime localTime57 = new org.joda.time.LocalTime(dateTimeZone56);
        org.joda.time.LocalTime localTime59 = localTime57.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime61 = localTime59.minusHours((-1));
        org.joda.time.LocalTime.Property property62 = localTime61.hourOfDay();
        org.joda.time.LocalTime localTime64 = localTime61.plusSeconds(893);
        boolean boolean65 = localTime55.isEqual((org.joda.time.ReadablePartial) localTime61);
        long long67 = chronology25.set((org.joda.time.ReadablePartial) localTime61, (long) 53941248);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and instant44", (dateTime13.compareTo(instant44) == 0) == dateTime13.equals(instant44));
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test351");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.DateTimeZone dateTimeZone4 = dateTime1.getZone();
        org.joda.time.MutableDateTime mutableDateTime6 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) 100, 1L, periodType9);
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.Period period15 = period10.plus((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Instant instant16 = new org.joda.time.Instant();
        org.joda.time.Instant instant18 = instant16.withMillis(0L);
        org.joda.time.Duration duration19 = period14.toDurationTo((org.joda.time.ReadableInstant) instant18);
        mutableDateTime6.add((org.joda.time.ReadableDuration) duration19, 39);
        mutableDateTime6.setDayOfYear(22);
        boolean boolean24 = dateTime1.isEqual((org.joda.time.ReadableInstant) mutableDateTime6);
        org.joda.time.MutableDateTime.Property property25 = mutableDateTime6.year();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant16", (dateTime1.compareTo(instant16) == 0) == dateTime1.equals(instant16));
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test352");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period19 = duration18.toPeriod();
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.centuries();
        int int21 = period19.get(durationFieldType20);
        mutableDateTime1.add((org.joda.time.ReadablePeriod) period19, 54);
        mutableDateTime1.setMillisOfDay(0);
        org.joda.time.MutableDateTime.Property property26 = mutableDateTime1.centuryOfEra();
        org.joda.time.Chronology chronology29 = null;
        java.util.Locale locale30 = java.util.Locale.GERMAN;
        java.util.Locale locale31 = java.util.Locale.CANADA;
        java.lang.String str32 = locale30.getDisplayVariant(locale31);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket33 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology29, locale31);
        org.joda.time.DateTimeZone dateTimeZone34 = dateTimeParserBucket33.getZone();
        java.lang.String str35 = dateTimeZone34.toString();
        org.joda.time.DateTime dateTime36 = new org.joda.time.DateTime(48L, dateTimeZone34);
        mutableDateTime1.setZone(dateTimeZone34);
        org.joda.time.MutableDateTime mutableDateTime38 = org.joda.time.MutableDateTime.now(dateTimeZone34);
        int int40 = dateTimeZone34.getOffset(49000L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and mutableDateTime38", (instant11.compareTo(mutableDateTime38) == 0) == instant11.equals(mutableDateTime38));
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test353");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        boolean boolean26 = instant11.isEqual((org.joda.time.ReadableInstant) instant24);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 1);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period31 = duration30.toPeriod();
        org.joda.time.Duration duration34 = duration30.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant35);
        org.joda.time.Duration duration37 = duration34.toDuration();
        int int38 = duration28.compareTo((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Instant instant39 = instant11.minus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.MutableDateTime mutableDateTime40 = instant39.toMutableDateTimeISO();
        org.joda.time.MutableDateTime mutableDateTime41 = instant39.toMutableDateTime();
        mutableDateTime41.add((long) 53861022);
        org.joda.time.Chronology chronology44 = mutableDateTime41.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant39 and mutableDateTime40", (instant39.compareTo(mutableDateTime40) == 0) == instant39.equals(mutableDateTime40));
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test354");
        org.joda.time.DurationFieldType durationFieldType0 = org.joda.time.DurationFieldType.millis();
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime10 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property13 = localDateTime10.hourOfDay();
        org.joda.time.DateTimeField dateTimeField14 = property13.getField();
        int int15 = property13.get();
        org.joda.time.LocalDateTime localDateTime16 = property13.roundHalfFloorCopy();
        long long18 = chronology5.set((org.joda.time.ReadablePartial) localDateTime16, (long) 2022);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(chronology5);
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology5);
        org.joda.time.DurationField durationField21 = chronology5.eras();
        org.joda.time.DateTimeField dateTimeField22 = chronology5.weekyearOfCentury();
        boolean boolean23 = durationFieldType0.isSupported(chronology5);
        org.joda.time.Chronology chronology25 = null;
        java.util.Locale locale26 = java.util.Locale.GERMAN;
        java.util.Locale locale27 = locale26.stripExtensions();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket30 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology25, locale26, (java.lang.Integer) 45, (int) '4');
        org.joda.time.DateTimeZone dateTimeZone31 = dateTimeParserBucket30.getZone();
        org.joda.time.LocalTime localTime32 = new org.joda.time.LocalTime(dateTimeZone31);
        org.joda.time.DateTime dateTime33 = localTime32.toDateTimeToday();
        org.joda.time.LocalTime.Property property34 = localTime32.secondOfMinute();
        org.joda.time.LocalTime localTime36 = property34.addNoWrapToCopy(46);
        org.joda.time.LocalTime localTime38 = localTime36.withSecondOfMinute(9);
        org.joda.time.Chronology chronology39 = localTime38.getChronology();
        org.joda.time.DurationField durationField40 = durationFieldType0.getField(chronology39);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime33", (instant2.compareTo(dateTime33) == 0) == instant2.equals(dateTime33));
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test355");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        boolean boolean3 = dateTime1.isEqualNow();
        int int4 = dateTime1.getDayOfYear();
        org.joda.time.Chronology chronology5 = dateTime1.getChronology();
        org.joda.time.DateTime dateTime6 = org.joda.time.DateTime.now(chronology5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period9 = duration8.toPeriod();
        org.joda.time.Duration duration12 = duration8.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        long long26 = instant24.getMillis();
        org.joda.time.Interval interval27 = duration8.toIntervalTo((org.joda.time.ReadableInstant) instant24);
        org.joda.time.Chronology chronology28 = instant24.getChronology();
        java.lang.String str29 = chronology28.toString();
        org.joda.time.MutableDateTime mutableDateTime30 = new org.joda.time.MutableDateTime((java.lang.Object) dateTime6, chronology28);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant22", (dateTime1.compareTo(instant22) == 0) == dateTime1.equals(instant22));
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test356");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology7);
        org.joda.time.DateTimeField dateTimeField9 = chronology7.year();
        org.joda.time.DateTimeField dateTimeField10 = chronology7.dayOfMonth();
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now(chronology7);
        org.joda.time.Instant instant14 = new org.joda.time.Instant();
        org.joda.time.Instant instant16 = instant14.withMillis(0L);
        org.joda.time.Chronology chronology17 = instant16.getChronology();
        org.joda.time.DurationField durationField18 = chronology17.eras();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology17);
        org.joda.time.DateTimeField dateTimeField20 = chronology17.monthOfYear();
        org.joda.time.DateTimeField dateTimeField21 = chronology17.dayOfMonth();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.LocalDateTime localDateTime24 = new org.joda.time.LocalDateTime((long) (byte) -1, chronology23);
        org.joda.time.LocalDateTime localDateTime26 = localDateTime24.withYear((int) (short) -1);
        int int27 = localDateTime24.getCenturyOfEra();
        int int28 = dateTimeField21.getMaximumValue((org.joda.time.ReadablePartial) localDateTime24);
        org.joda.time.LocalDateTime localDateTime30 = localDateTime24.withDayOfYear(5);
        org.joda.time.DateTimeField[] dateTimeFieldArray31 = localDateTime24.getFields();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime24.minusMonths(39243612);
        org.joda.time.LocalDateTime localDateTime35 = localDateTime33.withWeekOfWeekyear(27);
        boolean boolean36 = localDateTime11.isBefore((org.joda.time.ReadablePartial) localDateTime33);
        org.joda.time.LocalDateTime.Property property37 = localDateTime11.dayOfYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and instant14", (dateTime3.compareTo(instant14) == 0) == dateTime3.equals(instant14));
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test357");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) 39221019);
        org.joda.time.Instant instant3 = instant1.minus((long) 8);
        org.joda.time.Instant instant4 = instant1.toInstant();
        org.joda.time.DateTime dateTime5 = instant4.toDateTimeISO();
        org.joda.time.Instant instant6 = instant4.toInstant();
        long long7 = instant4.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and dateTime5", (instant4.compareTo(dateTime5) == 0) == instant4.equals(dateTime5));
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test358");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.Instant instant17 = instant14.withDurationAdded(1L, (int) (short) -1);
        long long18 = instant14.getMillis();
        org.joda.time.DateTime dateTime19 = instant14.toDateTimeISO();
        java.lang.Object obj20 = null;
        org.joda.time.DateTime dateTime21 = new org.joda.time.DateTime(obj20);
        org.joda.time.DateTime.Property property22 = dateTime21.millisOfDay();
        org.joda.time.LocalDateTime localDateTime23 = dateTime21.toLocalDateTime();
        org.joda.time.LocalDateTime.Property property24 = localDateTime23.weekyear();
        org.joda.time.LocalDateTime localDateTime26 = property24.setCopy((int) ' ');
        org.joda.time.MutableDateTime mutableDateTime28 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((long) 100, 1L, periodType31);
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((long) 100, 1L, periodType35);
        org.joda.time.Period period37 = period32.plus((org.joda.time.ReadablePeriod) period36);
        org.joda.time.Instant instant38 = new org.joda.time.Instant();
        org.joda.time.Instant instant40 = instant38.withMillis(0L);
        org.joda.time.Duration duration41 = period36.toDurationTo((org.joda.time.ReadableInstant) instant40);
        mutableDateTime28.add((org.joda.time.ReadableDuration) duration41, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType44 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean45 = mutableDateTime28.isSupported(dateTimeFieldType44);
        int int46 = mutableDateTime28.getWeekOfWeekyear();
        org.joda.time.Instant instant48 = new org.joda.time.Instant();
        org.joda.time.Instant instant50 = instant48.withMillis(0L);
        org.joda.time.Chronology chronology51 = instant50.getChronology();
        org.joda.time.DurationField durationField52 = chronology51.eras();
        java.util.Locale locale53 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket55 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology51, locale53, (java.lang.Integer) 39221019);
        mutableDateTime28.setChronology(chronology51);
        org.joda.time.MutableDateTime mutableDateTime58 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((long) 100, 1L, periodType61);
        org.joda.time.PeriodType periodType65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((long) 100, 1L, periodType65);
        org.joda.time.Period period67 = period62.plus((org.joda.time.ReadablePeriod) period66);
        org.joda.time.Instant instant68 = new org.joda.time.Instant();
        org.joda.time.Instant instant70 = instant68.withMillis(0L);
        org.joda.time.Duration duration71 = period66.toDurationTo((org.joda.time.ReadableInstant) instant70);
        mutableDateTime58.add((org.joda.time.ReadableDuration) duration71, 39);
        org.joda.time.MutableDateTime.Property property74 = mutableDateTime58.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone75 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime58.setZone(dateTimeZone75);
        org.joda.time.MutableDateTime mutableDateTime77 = new org.joda.time.MutableDateTime((java.lang.Object) mutableDateTime28, dateTimeZone75);
        org.joda.time.DurationFieldType durationFieldType78 = org.joda.time.DurationFieldType.days();
        mutableDateTime28.add(durationFieldType78, 13);
        org.joda.time.LocalDateTime localDateTime82 = localDateTime26.withFieldAdded(durationFieldType78, (int) (short) 10);
        org.joda.time.DateTime dateTime84 = dateTime19.withFieldAdded(durationFieldType78, 53756258);
        java.lang.String str85 = dateTime84.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime21", (instant9.compareTo(dateTime21) == 0) == instant9.equals(dateTime21));
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test359");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTime.Property property3 = dateTime2.dayOfWeek();
        org.joda.time.DateTime.Property property4 = dateTime2.weekOfWeekyear();
        boolean boolean6 = dateTime2.isAfter((long) 25);
        org.joda.time.MutableDateTime mutableDateTime8 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.Period period17 = period12.plus((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Instant instant18 = new org.joda.time.Instant();
        org.joda.time.Instant instant20 = instant18.withMillis(0L);
        org.joda.time.Duration duration21 = period16.toDurationTo((org.joda.time.ReadableInstant) instant20);
        mutableDateTime8.add((org.joda.time.ReadableDuration) duration21, 39);
        org.joda.time.MutableDateTime.Property property24 = mutableDateTime8.yearOfEra();
        mutableDateTime8.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property27 = mutableDateTime8.minuteOfDay();
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.UTC;
        long long31 = dateTimeZone28.convertLocalToUTC((long) (byte) 100, false);
        mutableDateTime8.setZone(dateTimeZone28);
        org.joda.time.DateTime dateTime33 = dateTime2.toDateTime(dateTimeZone28);
        org.joda.time.DateTimeZone dateTimeZone34 = org.joda.time.DateTimeZone.UTC;
        long long37 = dateTimeZone34.convertLocalToUTC((long) (byte) 100, false);
        org.joda.time.DateTime dateTime38 = dateTime2.withZoneRetainFields(dateTimeZone34);
        org.joda.time.DateTime.Property property39 = dateTime2.minuteOfHour();
        org.joda.time.DateTime.Property property40 = dateTime2.weekyear();
        org.joda.time.DateTime dateTime42 = property40.addWrapFieldToCopy(0);
        org.joda.time.DateTime dateTime44 = property40.addToCopy(654);
        org.joda.time.DateTime.Property property45 = dateTime44.secondOfMinute();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime2 and dateTime33", (dateTime2.compareTo(dateTime33) == 0) == dateTime2.equals(dateTime33));
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test360");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.LocalDateTime localDateTime2 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime4 = localDateTime2.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime6 = localDateTime4.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField8 = localDateTime6.getField((int) (byte) 0);
        long long10 = dateTimeField8.roundHalfEven((long) 1);
        int int11 = dateTime1.get(dateTimeField8);
        boolean boolean12 = dateTime1.isBeforeNow();
        org.joda.time.DateTime dateTime14 = dateTime1.minusWeeks((int) (byte) 0);
        int int15 = dateTime14.getDayOfYear();
        org.joda.time.DateTimeZone dateTimeZone16 = org.joda.time.DateTimeZone.UTC;
        long long19 = dateTimeZone16.convertLocalToUTC((long) (byte) 100, false);
        org.joda.time.LocalDateTime localDateTime20 = new org.joda.time.LocalDateTime(dateTimeZone16);
        int int22 = dateTimeZone16.getOffset((long) (short) 0);
        java.lang.String str24 = dateTimeZone16.getNameKey((long) (short) 1);
        org.joda.time.LocalDateTime localDateTime25 = new org.joda.time.LocalDateTime(dateTimeZone16);
        boolean boolean26 = dateTimeZone16.isFixed();
        org.joda.time.DateTime dateTime27 = dateTime14.withZone(dateTimeZone16);
        org.joda.time.DateTime.Property property28 = dateTime14.dayOfYear();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.DateTime dateTime34 = new org.joda.time.DateTime((long) (short) 1, chronology33);
        org.joda.time.Instant instant35 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) instant35, periodType36);
        org.joda.time.Instant instant39 = new org.joda.time.Instant();
        org.joda.time.Instant instant41 = instant39.withMillis(0L);
        org.joda.time.Chronology chronology42 = instant41.getChronology();
        org.joda.time.DurationField durationField43 = chronology42.eras();
        java.util.Locale locale44 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket46 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology42, locale44, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime47 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime49 = localDateTime47.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property50 = localDateTime47.hourOfDay();
        org.joda.time.DateTimeField dateTimeField51 = property50.getField();
        int int52 = property50.get();
        org.joda.time.LocalDateTime localDateTime53 = property50.roundHalfFloorCopy();
        long long55 = chronology42.set((org.joda.time.ReadablePartial) localDateTime53, (long) 2022);
        org.joda.time.DateTimeField dateTimeField56 = chronology42.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField57 = chronology42.minuteOfHour();
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((long) 100, 1L, periodType60);
        org.joda.time.Period period63 = period61.minusSeconds((-1));
        java.lang.String str64 = period61.toString();
        org.joda.time.Period period65 = period61.negated();
        int[] intArray67 = chronology42.get((org.joda.time.ReadablePeriod) period65, (long) 1969);
        org.joda.time.DateTimeField dateTimeField68 = chronology42.halfdayOfDay();
        org.joda.time.Period period69 = new org.joda.time.Period((long) 894, 48L, periodType36, chronology42);
        org.joda.time.DateTimeZone dateTimeZone71 = org.joda.time.DateTimeZone.forOffsetHours(22);
        java.util.Locale locale76 = new java.util.Locale("dayOfMonth", "en-CA", "2022-02-21T14:53:55.782Z");
        java.util.Set<java.lang.Character> charSet77 = locale76.getExtensionKeys();
        java.lang.String str78 = dateTimeZone71.getName((long) 365, locale76);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket80 = new org.joda.time.format.DateTimeParserBucket((long) 642, chronology42, locale76, (java.lang.Integer) 0);
        java.lang.String str81 = locale76.getVariant();
        int int82 = property28.getMaximumShortTextLength(locale76);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and dateTime27", (dateTime1.compareTo(dateTime27) == 0) == dateTime1.equals(dateTime27));
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test361");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration3, (int) (short) 100);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DateTime dateTime7 = new org.joda.time.DateTime(chronology6);
        int int8 = dateTime7.getYearOfCentury();
        org.joda.time.Interval interval9 = duration3.toIntervalTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period(readableDuration10, readableInstant11);
        org.joda.time.Period period14 = period12.withDays((int) (byte) 1);
        org.joda.time.Period period16 = period14.minusWeeks(100);
        org.joda.time.Period period18 = period14.minusWeeks(2023);
        org.joda.time.Duration duration19 = period14.toStandardDuration();
        boolean boolean20 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardDays((-1L));
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardDays((long) (byte) 1);
        java.lang.String str25 = duration24.toString();
        org.joda.time.Duration duration26 = duration22.plus((org.joda.time.ReadableDuration) duration24);
        int int27 = duration3.compareTo((org.joda.time.ReadableDuration) duration24);
        java.lang.String str28 = duration3.toString();
        org.joda.time.MutableDateTime mutableDateTime30 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((long) 100, 1L, periodType33);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((long) 100, 1L, periodType37);
        org.joda.time.Period period39 = period34.plus((org.joda.time.ReadablePeriod) period38);
        org.joda.time.Instant instant40 = new org.joda.time.Instant();
        org.joda.time.Instant instant42 = instant40.withMillis(0L);
        org.joda.time.Duration duration43 = period38.toDurationTo((org.joda.time.ReadableInstant) instant42);
        mutableDateTime30.add((org.joda.time.ReadableDuration) duration43, 39);
        org.joda.time.MutableDateTime.Property property46 = mutableDateTime30.yearOfEra();
        mutableDateTime30.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property49 = mutableDateTime30.minuteOfDay();
        org.joda.time.DateTimeZone dateTimeZone50 = org.joda.time.DateTimeZone.UTC;
        long long53 = dateTimeZone50.convertLocalToUTC((long) (byte) 100, false);
        mutableDateTime30.setZone(dateTimeZone50);
        org.joda.time.LocalDate localDate55 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate57 = localDate55.minusMonths((int) ' ');
        org.joda.time.Chronology chronology58 = localDate55.getChronology();
        org.joda.time.DateTimeField dateTimeField59 = chronology58.minuteOfDay();
        org.joda.time.DurationField durationField60 = chronology58.days();
        org.joda.time.MutableDateTime mutableDateTime61 = new org.joda.time.MutableDateTime((java.lang.Object) mutableDateTime30, chronology58);
        org.joda.time.PeriodType periodType64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((long) 100, 1L, periodType64);
        org.joda.time.PeriodType periodType68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((long) 100, 1L, periodType68);
        org.joda.time.Period period70 = period65.plus((org.joda.time.ReadablePeriod) period69);
        org.joda.time.Instant instant71 = new org.joda.time.Instant();
        org.joda.time.Instant instant73 = instant71.withMillis(0L);
        org.joda.time.Duration duration74 = period69.toDurationTo((org.joda.time.ReadableInstant) instant73);
        long long75 = instant73.getMillis();
        org.joda.time.Instant instant77 = instant73.minus((long) (byte) 1);
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardSeconds((long) 49);
        org.joda.time.Instant instant81 = instant77.withDurationAdded((org.joda.time.ReadableDuration) duration79, 16);
        org.joda.time.Chronology chronology82 = instant81.getChronology();
        org.joda.time.ReadableDuration readableDuration83 = null;
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Period period85 = new org.joda.time.Period(readableDuration83, readableInstant84);
        org.joda.time.Period period87 = period85.withDays((int) (byte) 1);
        org.joda.time.Duration duration88 = period87.toStandardDuration();
        long long89 = duration88.getStandardHours();
        long long90 = duration88.getStandardDays();
        org.joda.time.Instant instant91 = instant81.plus((org.joda.time.ReadableDuration) duration88);
        mutableDateTime61.add((org.joda.time.ReadableDuration) duration88);
        int int93 = mutableDateTime61.getEra();
        org.joda.time.Period period94 = duration3.toPeriodTo((org.joda.time.ReadableInstant) mutableDateTime61);
        org.joda.time.MutableDateTime.Property property95 = mutableDateTime61.weekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant40", (dateTime7.compareTo(instant40) == 0) == dateTime7.equals(instant40));
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test362");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, (int) '#', 47, 39277299, 56, 33, 1439, 75596);
        mutablePeriod8.addDays((int) (byte) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period13 = duration12.toPeriod();
        org.joda.time.Duration duration16 = duration12.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime18 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime18.add((org.joda.time.ReadableDuration) duration20, (int) (short) 100);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.DateTime dateTime24 = new org.joda.time.DateTime(chronology23);
        int int25 = dateTime24.getYearOfCentury();
        org.joda.time.Interval interval26 = duration20.toIntervalTo((org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.Duration duration27 = duration16.minus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period28 = duration27.toPeriod();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.DateTime dateTime33 = new org.joda.time.DateTime(chronology32);
        int int34 = dateTime33.getSecondOfMinute();
        boolean boolean35 = dateTime33.isEqualNow();
        int int36 = dateTime33.getDayOfYear();
        org.joda.time.Chronology chronology37 = dateTime33.getChronology();
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology37);
        org.joda.time.DateTimeField dateTimeField39 = chronology37.year();
        org.joda.time.DateTime dateTime40 = org.joda.time.DateTime.now(chronology37);
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) 53670254, chronology37);
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration27, chronology37);
        org.joda.time.DateTimeZone dateTimeZone43 = null;
        org.joda.time.LocalTime localTime44 = new org.joda.time.LocalTime(dateTimeZone43);
        org.joda.time.LocalTime localTime46 = localTime44.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime48 = localTime46.plusSeconds((int) (byte) 10);
        org.joda.time.LocalTime.Property property49 = localTime46.minuteOfHour();
        org.joda.time.LocalTime localTime51 = localTime46.minusMillis(39221019);
        org.joda.time.LocalTime localTime53 = localTime46.plusSeconds(53600069);
        org.joda.time.DateTimeFieldType dateTimeFieldType54 = org.joda.time.DateTimeFieldType.secondOfDay();
        java.lang.String str55 = dateTimeFieldType54.toString();
        int int56 = localTime46.indexOf(dateTimeFieldType54);
        java.lang.String str57 = dateTimeFieldType54.toString();
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((long) 100, 1L, periodType60);
        org.joda.time.PeriodType periodType64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((long) 100, 1L, periodType64);
        org.joda.time.Period period66 = period61.plus((org.joda.time.ReadablePeriod) period65);
        org.joda.time.Instant instant67 = new org.joda.time.Instant();
        org.joda.time.Instant instant69 = instant67.withMillis(0L);
        org.joda.time.Duration duration70 = period65.toDurationTo((org.joda.time.ReadableInstant) instant69);
        org.joda.time.Instant instant72 = instant69.plus((long) (byte) -1);
        org.joda.time.Instant instant75 = instant72.withDurationAdded(1L, (int) (short) -1);
        org.joda.time.Chronology chronology76 = instant72.getChronology();
        org.joda.time.DateTimeField dateTimeField77 = dateTimeFieldType54.getField(chronology76);
        org.joda.time.Period period78 = duration27.toPeriod(chronology76);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime24 and instant67", (dateTime24.compareTo(instant67) == 0) == dateTime24.equals(instant67));
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test363");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.Instant instant7 = instant3.withMillis(53684531L);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTime dateTime9 = new org.joda.time.DateTime(chronology8);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Chronology chronology14 = instant13.getChronology();
        org.joda.time.DurationField durationField15 = chronology14.eras();
        java.util.Locale locale16 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket18 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology14, locale16, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime21 = localDateTime19.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property22 = localDateTime19.hourOfDay();
        org.joda.time.DateTimeField dateTimeField23 = property22.getField();
        int int24 = property22.get();
        org.joda.time.LocalDateTime localDateTime25 = property22.roundHalfFloorCopy();
        long long27 = chronology14.set((org.joda.time.ReadablePartial) localDateTime25, (long) 2022);
        org.joda.time.DateTime dateTime28 = dateTime9.toDateTime(chronology14);
        org.joda.time.DateTime dateTime30 = dateTime9.plusDays(22);
        int int31 = dateTime9.getSecondOfMinute();
        org.joda.time.DateMidnight dateMidnight32 = dateTime9.toDateMidnight();
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period(readableDuration33, readableInstant34);
        org.joda.time.Period period37 = period35.withDays((int) (byte) 1);
        org.joda.time.Duration duration38 = period37.toStandardDuration();
        long long39 = duration38.getStandardHours();
        org.joda.time.DateTime dateTime41 = dateTime9.withDurationAdded((org.joda.time.ReadableDuration) duration38, 39277299);
        org.joda.time.Instant instant42 = instant3.plus((org.joda.time.ReadableDuration) duration38);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime9 and instant11", (dateTime9.compareTo(instant11) == 0) == dateTime9.equals(instant11));
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test364");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.LocalDateTime localDateTime2 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime4 = localDateTime2.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property5 = localDateTime2.hourOfDay();
        org.joda.time.DateTimeField dateTimeField6 = property5.getField();
        boolean boolean8 = property5.equals((java.lang.Object) '#');
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(chronology9);
        int int11 = dateTime10.getSecondOfMinute();
        int int12 = dateTime10.getYearOfEra();
        int int13 = property5.getDifference((org.joda.time.ReadableInstant) dateTime10);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime1, (org.joda.time.ReadableInstant) dateTime10);
        mutablePeriod14.setPeriod((long) 39221019, (long) (-1));
        org.joda.time.LocalDate localDate18 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate20 = localDate18.minusMonths((int) ' ');
        int int21 = localDate18.size();
        org.joda.time.DateMidnight dateMidnight22 = localDate18.toDateMidnight();
        org.joda.time.LocalDate localDate24 = localDate18.withYearOfCentury(0);
        org.joda.time.MutableDateTime mutableDateTime26 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) 100, 1L, periodType29);
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((long) 100, 1L, periodType33);
        org.joda.time.Period period35 = period30.plus((org.joda.time.ReadablePeriod) period34);
        org.joda.time.Instant instant36 = new org.joda.time.Instant();
        org.joda.time.Instant instant38 = instant36.withMillis(0L);
        org.joda.time.Duration duration39 = period34.toDurationTo((org.joda.time.ReadableInstant) instant38);
        mutableDateTime26.add((org.joda.time.ReadableDuration) duration39, 39);
        org.joda.time.MutableDateTime.Property property42 = mutableDateTime26.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone43 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime26.setZone(dateTimeZone43);
        org.joda.time.DateTime dateTime45 = localDate18.toDateTimeAtMidnight(dateTimeZone43);
        boolean boolean47 = dateTime45.isAfter(315532800097L);
        org.joda.time.Duration duration48 = mutablePeriod14.toDurationTo((org.joda.time.ReadableInstant) dateTime45);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant36", (dateTime1.compareTo(instant36) == 0) == dateTime1.equals(instant36));
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test365");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.LocalTime localTime4 = new org.joda.time.LocalTime(dateTimeZone3);
        org.joda.time.LocalTime localTime6 = localTime4.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime8 = localTime6.plusMillis((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = dateTime2.withFields((org.joda.time.ReadablePartial) localTime8);
        int int10 = localTime8.getHourOfDay();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.DateTime dateTime14 = new org.joda.time.DateTime(chronology13);
        int int15 = dateTime14.getSecondOfMinute();
        boolean boolean16 = dateTime14.isEqualNow();
        int int17 = dateTime14.getDayOfYear();
        org.joda.time.Chronology chronology18 = dateTime14.getChronology();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology18);
        mutablePeriod19.setDays(49);
        org.joda.time.LocalTime localTime22 = localTime8.minus((org.joda.time.ReadablePeriod) mutablePeriod19);
        org.joda.time.MutableDateTime mutableDateTime25 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.Period period34 = period29.plus((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Instant instant35 = new org.joda.time.Instant();
        org.joda.time.Instant instant37 = instant35.withMillis(0L);
        org.joda.time.Duration duration38 = period33.toDurationTo((org.joda.time.ReadableInstant) instant37);
        mutableDateTime25.add((org.joda.time.ReadableDuration) duration38, 39);
        org.joda.time.MutableDateTime.Property property41 = mutableDateTime25.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone42 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime25.setZone(dateTimeZone42);
        org.joda.time.Chronology chronology45 = null;
        java.util.Locale locale46 = java.util.Locale.GERMAN;
        java.util.Locale locale47 = locale46.stripExtensions();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket50 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology45, locale46, (java.lang.Integer) 45, (int) '4');
        org.joda.time.DateTimeZone dateTimeZone51 = dateTimeParserBucket50.getZone();
        long long53 = dateTimeZone42.getMillisKeepLocal(dateTimeZone51, 315532800097L);
        org.joda.time.LocalTime localTime54 = new org.joda.time.LocalTime((long) 31, dateTimeZone42);
        java.util.TimeZone timeZone55 = dateTimeZone42.toTimeZone();
        org.joda.time.DateTime dateTime56 = localTime22.toDateTimeToday(dateTimeZone42);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime14 and instant35", (dateTime14.compareTo(instant35) == 0) == dateTime14.equals(instant35));
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test366");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.MutableDateTime.Property property18 = mutableDateTime1.minuteOfHour();
        org.joda.time.MutableDateTime mutableDateTime20 = property18.addWrapField(6);
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period32 = period27.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.Instant instant35 = instant33.withMillis(0L);
        org.joda.time.Duration duration36 = period31.toDurationTo((org.joda.time.ReadableInstant) instant35);
        mutableDateTime23.add((org.joda.time.ReadableDuration) duration36, 39);
        org.joda.time.MutableDateTime.Property property39 = mutableDateTime23.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime23.setZone(dateTimeZone40);
        org.joda.time.MutableDateTime mutableDateTime42 = new org.joda.time.MutableDateTime(55123200000L, dateTimeZone40);
        mutableDateTime20.setZone(dateTimeZone40);
        org.joda.time.Instant instant46 = new org.joda.time.Instant();
        org.joda.time.Instant instant48 = instant46.withMillis(0L);
        org.joda.time.Chronology chronology49 = instant48.getChronology();
        org.joda.time.DurationField durationField50 = chronology49.eras();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology49);
        org.joda.time.DateTimeField dateTimeField52 = chronology49.monthOfYear();
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = dateTimeField52.getType();
        mutableDateTime20.setRounding(dateTimeField52);
        int int56 = dateTimeField52.getMinimumValue((long) 39250977);
        org.joda.time.DurationField durationField57 = dateTimeField52.getLeapDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField50, durationField57, and durationField50", !(durationField50.compareTo(durationField57) == 0) || (Math.signum(durationField50.compareTo(durationField50)) == Math.signum(durationField57.compareTo(durationField50))));
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test367");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property1 = localDateTime0.monthOfYear();
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period4 = duration3.toPeriod();
        org.joda.time.Duration duration7 = duration3.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime9 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime9.add((org.joda.time.ReadableDuration) duration11, (int) (short) 100);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.DateTime dateTime15 = new org.joda.time.DateTime(chronology14);
        int int16 = dateTime15.getYearOfCentury();
        org.joda.time.Interval interval17 = duration11.toIntervalTo((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.Duration duration18 = duration7.minus((org.joda.time.ReadableDuration) duration11);
        org.joda.time.LocalDateTime localDateTime19 = localDateTime0.plus((org.joda.time.ReadableDuration) duration11);
        org.joda.time.LocalDateTime.Property property20 = localDateTime19.monthOfYear();
        org.joda.time.LocalDateTime localDateTime21 = property20.withMinimumValue();
        org.joda.time.Chronology chronology23 = null;
        java.util.Locale locale24 = java.util.Locale.GERMAN;
        java.util.Locale locale25 = java.util.Locale.CANADA;
        java.lang.String str26 = locale24.getDisplayVariant(locale25);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket27 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology23, locale25);
        org.joda.time.DateTimeZone dateTimeZone28 = dateTimeParserBucket27.getZone();
        org.joda.time.MutableDateTime mutableDateTime30 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((long) 100, 1L, periodType33);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((long) 100, 1L, periodType37);
        org.joda.time.Period period39 = period34.plus((org.joda.time.ReadablePeriod) period38);
        org.joda.time.Instant instant40 = new org.joda.time.Instant();
        org.joda.time.Instant instant42 = instant40.withMillis(0L);
        org.joda.time.Duration duration43 = period38.toDurationTo((org.joda.time.ReadableInstant) instant42);
        mutableDateTime30.add((org.joda.time.ReadableDuration) duration43, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType46 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean47 = mutableDateTime30.isSupported(dateTimeFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = dateTimeFieldType46.getDurationType();
        java.util.Locale locale50 = java.util.Locale.CANADA;
        dateTimeParserBucket27.saveField(dateTimeFieldType46, "2022", locale50);
        org.joda.time.DurationFieldType durationFieldType52 = dateTimeFieldType46.getDurationType();
        org.joda.time.LocalDateTime localDateTime53 = org.joda.time.LocalDateTime.now();
        org.joda.time.Chronology chronology54 = localDateTime53.getChronology();
        org.joda.time.DurationField durationField55 = durationFieldType52.getField(chronology54);
        boolean boolean56 = localDateTime21.isSupported(durationFieldType52);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime15 and instant40", (dateTime15.compareTo(instant40) == 0) == dateTime15.equals(instant40));
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test368");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean18 = mutableDateTime1.isSupported(dateTimeFieldType17);
        mutableDateTime1.addSeconds(52);
        int int21 = mutableDateTime1.getWeekOfWeekyear();
        int int22 = mutableDateTime1.getMillisOfSecond();
        org.joda.time.LocalDateTime localDateTime23 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime23.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property26 = localDateTime23.hourOfDay();
        org.joda.time.LocalDateTime localDateTime28 = localDateTime23.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType29 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str30 = dateTimeFieldType29.getName();
        int int31 = localDateTime23.indexOf(dateTimeFieldType29);
        org.joda.time.LocalDateTime localDateTime33 = localDateTime23.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime35 = localDateTime23.minusSeconds((int) '#');
        org.joda.time.DateTimeFieldType dateTimeFieldType36 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str37 = dateTimeFieldType36.getName();
        org.joda.time.LocalDateTime.Property property38 = localDateTime35.property(dateTimeFieldType36);
        int int39 = localDateTime35.getMinuteOfHour();
        org.joda.time.LocalDateTime localDateTime41 = localDateTime35.withMillisOfDay(1);
        org.joda.time.Duration duration43 = org.joda.time.Duration.millis(1645455600000L);
        org.joda.time.Minutes minutes44 = duration43.toStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period47 = duration46.toPeriod();
        org.joda.time.Duration duration50 = duration46.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime52 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime52.add((org.joda.time.ReadableDuration) duration54, (int) (short) 100);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DateTime dateTime58 = new org.joda.time.DateTime(chronology57);
        int int59 = dateTime58.getYearOfCentury();
        org.joda.time.Interval interval60 = duration54.toIntervalTo((org.joda.time.ReadableInstant) dateTime58);
        org.joda.time.Duration duration61 = duration50.minus((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period64 = duration63.toPeriod();
        org.joda.time.Duration duration66 = duration50.withDurationAdded((org.joda.time.ReadableDuration) duration63, 54);
        org.joda.time.Duration duration67 = duration43.minus((org.joda.time.ReadableDuration) duration66);
        org.joda.time.LocalDateTime localDateTime68 = localDateTime35.plus((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.DateTime dateTime73 = new org.joda.time.DateTime((long) (short) 1, chronology72);
        org.joda.time.DateTime dateTime74 = dateTime73.toDateTime();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.DateTime dateTime77 = new org.joda.time.DateTime((long) (short) 1, chronology76);
        org.joda.time.DateTime dateTime78 = dateTime77.toDateTime();
        int int79 = dateTime74.compareTo((org.joda.time.ReadableInstant) dateTime77);
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime77, (org.joda.time.ReadableDuration) duration81);
        org.joda.time.Duration duration84 = duration70.withDurationAdded((org.joda.time.ReadableDuration) duration81, 10);
        long long85 = duration84.getMillis();
        org.joda.time.Duration duration86 = duration43.plus((org.joda.time.ReadableDuration) duration84);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration43);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime58", (instant11.compareTo(dateTime58) == 0) == instant11.equals(dateTime58));
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test369");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime1.setZone(dateTimeZone18);
        int int20 = mutableDateTime1.getYearOfEra();
        org.joda.time.MutableDateTime mutableDateTime22 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) 100, 1L, periodType25);
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) 100, 1L, periodType29);
        org.joda.time.Period period31 = period26.plus((org.joda.time.ReadablePeriod) period30);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.Instant instant34 = instant32.withMillis(0L);
        org.joda.time.Duration duration35 = period30.toDurationTo((org.joda.time.ReadableInstant) instant34);
        mutableDateTime22.add((org.joda.time.ReadableDuration) duration35, 39);
        org.joda.time.MutableDateTime.Property property38 = mutableDateTime22.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime22.setZone(dateTimeZone39);
        org.joda.time.Chronology chronology42 = null;
        java.util.Locale locale43 = java.util.Locale.GERMAN;
        java.util.Locale locale44 = locale43.stripExtensions();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket47 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology42, locale43, (java.lang.Integer) 45, (int) '4');
        org.joda.time.DateTimeZone dateTimeZone48 = dateTimeParserBucket47.getZone();
        long long50 = dateTimeZone39.getMillisKeepLocal(dateTimeZone48, 315532800097L);
        mutableDateTime1.setZone(dateTimeZone48);
        org.joda.time.LocalDateTime localDateTime52 = org.joda.time.LocalDateTime.now(dateTimeZone48);
        org.joda.time.DateTime dateTime53 = org.joda.time.DateTime.now(dateTimeZone48);
        int int54 = dateTime53.getMinuteOfHour();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime1 and mutableDateTime22", (mutableDateTime1.compareTo(mutableDateTime22) == 0) == mutableDateTime1.equals(mutableDateTime22));
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test370");
        org.joda.time.LocalDate localDate0 = new org.joda.time.LocalDate();
        int int1 = localDate0.getDayOfMonth();
        org.joda.time.LocalDate localDate3 = localDate0.plusYears(1);
        org.joda.time.LocalDate localDate5 = localDate3.plusYears((int) (short) -1);
        org.joda.time.DateTime dateTime6 = localDate5.toDateTimeAtStartOfDay();
        org.joda.time.DateTime.Property property7 = dateTime6.secondOfDay();
        org.joda.time.DateTime dateTime9 = dateTime6.withHourOfDay(6);
        org.joda.time.DateTime dateTime11 = dateTime9.withMillis((long) 31);
        org.joda.time.DateTimeZone dateTimeZone13 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime14 = new org.joda.time.MutableDateTime(0L, dateTimeZone13);
        long long17 = dateTimeZone13.convertLocalToUTC((long) 3, true);
        org.joda.time.MutableDateTime mutableDateTime18 = new org.joda.time.MutableDateTime(dateTimeZone13);
        java.lang.String str19 = dateTimeZone13.toString();
        org.joda.time.MutableDateTime mutableDateTime20 = new org.joda.time.MutableDateTime(dateTimeZone13);
        org.joda.time.DateTime dateTime21 = dateTime11.withZone(dateTimeZone13);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime(chronology22);
        org.joda.time.DateTime dateTime25 = dateTime23.plusDays(39361664);
        boolean boolean26 = dateTime11.isAfter((org.joda.time.ReadableInstant) dateTime25);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime18 and dateTime23", (mutableDateTime18.compareTo(dateTime23) == 0) == mutableDateTime18.equals(dateTime23));
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test371");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        org.joda.time.Instant instant16 = instant13.plus((long) (byte) -1);
        org.joda.time.Instant instant19 = instant16.withDurationAdded(1L, (int) (short) -1);
        org.joda.time.MutableDateTime mutableDateTime21 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime21.add((org.joda.time.ReadableDuration) duration23, (int) (short) 100);
        mutableDateTime21.setYear(10);
        mutableDateTime21.addSeconds((int) (short) 0);
        boolean boolean30 = instant16.isEqual((org.joda.time.ReadableInstant) mutableDateTime21);
        org.joda.time.MutableDateTime mutableDateTime31 = instant16.toMutableDateTime();
        org.joda.time.Instant instant33 = instant16.minus(39446190000L);
        boolean boolean34 = dateTime1.isEqual((org.joda.time.ReadableInstant) instant16);
        java.lang.String str35 = dateTime1.toString();
        org.joda.time.DateTime dateTime36 = dateTime1.withLaterOffsetAtOverlap();
        org.joda.time.DateTime dateTime38 = dateTime36.plusMonths(53979158);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime36 and instant11", (dateTime36.compareTo(instant11) == 0) == dateTime36.equals(instant11));
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test372");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean18 = mutableDateTime1.isSupported(dateTimeFieldType17);
        int int19 = mutableDateTime1.getWeekOfWeekyear();
        org.joda.time.Instant instant21 = new org.joda.time.Instant();
        org.joda.time.Instant instant23 = instant21.withMillis(0L);
        org.joda.time.Chronology chronology24 = instant23.getChronology();
        org.joda.time.DurationField durationField25 = chronology24.eras();
        java.util.Locale locale26 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket28 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology24, locale26, (java.lang.Integer) 39221019);
        mutableDateTime1.setChronology(chronology24);
        org.joda.time.MutableDateTime mutableDateTime31 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((long) 100, 1L, periodType34);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((long) 100, 1L, periodType38);
        org.joda.time.Period period40 = period35.plus((org.joda.time.ReadablePeriod) period39);
        org.joda.time.Instant instant41 = new org.joda.time.Instant();
        org.joda.time.Instant instant43 = instant41.withMillis(0L);
        org.joda.time.Duration duration44 = period39.toDurationTo((org.joda.time.ReadableInstant) instant43);
        mutableDateTime31.add((org.joda.time.ReadableDuration) duration44, 39);
        org.joda.time.MutableDateTime.Property property47 = mutableDateTime31.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone48 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime31.setZone(dateTimeZone48);
        org.joda.time.MutableDateTime mutableDateTime50 = new org.joda.time.MutableDateTime((java.lang.Object) mutableDateTime1, dateTimeZone48);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((long) 1969);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration52, 39246272);
        org.joda.time.Minutes minutes55 = duration52.toStandardMinutes();
        org.joda.time.Duration duration56 = duration52.toDuration();
        org.joda.time.Duration duration59 = duration56.withDurationAdded(129383503200000L, 258);
        org.joda.time.MutableDateTime mutableDateTime61 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((long) 100, 1L, periodType64);
        org.joda.time.PeriodType periodType68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((long) 100, 1L, periodType68);
        org.joda.time.Period period70 = period65.plus((org.joda.time.ReadablePeriod) period69);
        org.joda.time.Instant instant71 = new org.joda.time.Instant();
        org.joda.time.Instant instant73 = instant71.withMillis(0L);
        org.joda.time.Duration duration74 = period69.toDurationTo((org.joda.time.ReadableInstant) instant73);
        mutableDateTime61.add((org.joda.time.ReadableDuration) duration74, 39);
        org.joda.time.MutableDateTime.Property property77 = mutableDateTime61.secondOfMinute();
        boolean boolean78 = mutableDateTime61.isEqualNow();
        org.joda.time.Period period79 = duration56.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime61);
        long long80 = duration56.getStandardDays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime31 and mutableDateTime61", (mutableDateTime31.compareTo(mutableDateTime61) == 0) == mutableDateTime31.equals(mutableDateTime61));
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test373");
        org.joda.time.ReadableDuration readableDuration0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableDuration0, readableInstant1);
        org.joda.time.Period period4 = period2.withDays((int) (byte) 1);
        org.joda.time.Period period6 = period4.withMinutes(39);
        org.joda.time.Period period8 = period6.plusMinutes(39221019);
        org.joda.time.Instant instant10 = new org.joda.time.Instant();
        org.joda.time.Instant instant12 = instant10.withMillis(0L);
        org.joda.time.Chronology chronology13 = instant12.getChronology();
        org.joda.time.DurationField durationField14 = chronology13.eras();
        java.util.Locale locale15 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket17 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology13, locale15, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime20 = localDateTime18.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property21 = localDateTime18.hourOfDay();
        org.joda.time.DateTimeField dateTimeField22 = property21.getField();
        int int23 = property21.get();
        org.joda.time.LocalDateTime localDateTime24 = property21.roundHalfFloorCopy();
        long long26 = chronology13.set((org.joda.time.ReadablePartial) localDateTime24, (long) 2022);
        org.joda.time.LocalDateTime localDateTime27 = org.joda.time.LocalDateTime.now(chronology13);
        org.joda.time.DateTime dateTime28 = new org.joda.time.DateTime(chronology13);
        org.joda.time.DurationField durationField29 = chronology13.eras();
        org.joda.time.MutableDateTime mutableDateTime30 = new org.joda.time.MutableDateTime(chronology13);
        org.joda.time.DateTimeZone dateTimeZone31 = mutableDateTime30.getZone();
        org.joda.time.Duration duration32 = period8.toDurationFrom((org.joda.time.ReadableInstant) mutableDateTime30);
        org.joda.time.MutableDateTime.Property property33 = mutableDateTime30.millisOfDay();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology34);
        int int36 = dateTime35.getSecondOfMinute();
        boolean boolean37 = dateTime35.isEqualNow();
        int int38 = dateTime35.getDayOfYear();
        org.joda.time.Chronology chronology39 = dateTime35.getChronology();
        org.joda.time.DateTime dateTime40 = org.joda.time.DateTime.now(chronology39);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime(chronology43);
        int int45 = dateTime44.getSecondOfMinute();
        boolean boolean46 = dateTime44.isEqualNow();
        int int47 = dateTime44.getDayOfYear();
        org.joda.time.Chronology chronology48 = dateTime44.getChronology();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology48);
        int int50 = mutablePeriod49.getDays();
        org.joda.time.DateTime dateTime52 = dateTime40.withPeriodAdded((org.joda.time.ReadablePeriod) mutablePeriod49, (int) (byte) 0);
        boolean boolean53 = mutableDateTime30.isBefore((org.joda.time.ReadableInstant) dateTime52);
        java.lang.String str54 = mutableDateTime30.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant10 and dateTime35", (instant10.compareTo(dateTime35) == 0) == instant10.equals(dateTime35));
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test374");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) (byte) -1);
        java.util.Locale locale2 = java.util.Locale.GERMAN;
        java.lang.String str3 = locale2.getDisplayName();
        java.util.Calendar calendar4 = mutableDateTime1.toCalendar(locale2);
        mutableDateTime1.addMonths(20);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period9 = duration8.toPeriod();
        org.joda.time.Duration duration12 = duration8.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13);
        org.joda.time.Duration duration15 = duration12.toDuration();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period18 = duration17.toPeriod();
        org.joda.time.Duration duration21 = duration17.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 100, 1L, periodType24);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.Period period30 = period25.plus((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Instant instant31 = new org.joda.time.Instant();
        org.joda.time.Instant instant33 = instant31.withMillis(0L);
        org.joda.time.Duration duration34 = period29.toDurationTo((org.joda.time.ReadableInstant) instant33);
        org.joda.time.Instant instant36 = instant33.plus((long) (byte) -1);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime((long) (short) 1, chronology38);
        org.joda.time.Instant instant40 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableInstant) instant40, periodType41);
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration17, (org.joda.time.ReadableInstant) instant33, periodType41);
        int int44 = duration12.compareTo((org.joda.time.ReadableDuration) duration17);
        org.joda.time.LocalDateTime localDateTime45 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property46 = localDateTime45.monthOfYear();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.DateTime dateTime49 = new org.joda.time.DateTime((long) (short) 1, chronology48);
        org.joda.time.Instant instant50 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime49, (org.joda.time.ReadableInstant) instant50, periodType51);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int54 = instant50.get(dateTimeFieldType53);
        org.joda.time.LocalDateTime localDateTime56 = localDateTime45.withField(dateTimeFieldType53, 39);
        org.joda.time.LocalDateTime localDateTime58 = localDateTime56.minusSeconds(52);
        int int59 = localDateTime58.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime61 = localDateTime58.plusWeeks(22);
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period(readableDuration62, readableInstant63);
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((long) 100, 1L, periodType67);
        org.joda.time.Period period70 = period68.minusSeconds((-1));
        java.lang.String str71 = period68.toString();
        org.joda.time.Period period72 = period68.toPeriod();
        org.joda.time.PeriodType periodType73 = period68.getPeriodType();
        org.joda.time.Period period74 = period64.normalizedStandard(periodType73);
        org.joda.time.Period period76 = period74.withSeconds(10);
        int int77 = period74.size();
        org.joda.time.LocalDateTime localDateTime78 = localDateTime58.plus((org.joda.time.ReadablePeriod) period74);
        org.joda.time.PeriodType periodType79 = period74.getPeriodType();
        org.joda.time.PeriodType periodType80 = periodType79.withMonthsRemoved();
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableInstant) mutableDateTime1, (org.joda.time.ReadableDuration) duration12, periodType80);
        org.joda.time.LocalDateTime localDateTime82 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime84 = localDateTime82.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property85 = localDateTime82.hourOfDay();
        org.joda.time.LocalDateTime localDateTime87 = localDateTime82.plusMillis((int) (byte) 0);
        org.joda.time.DateTime dateTime88 = localDateTime82.toDateTime();
        org.joda.time.DateTime dateTime90 = dateTime88.withYear(53644753);
        int int91 = dateTime90.getMillisOfSecond();
        org.joda.time.DateTime dateTime93 = dateTime90.minusMinutes(365);
        org.joda.time.Duration duration95 = org.joda.time.Duration.standardSeconds((long) 49);
        org.joda.time.DateTime dateTime96 = dateTime90.minus((org.joda.time.ReadableDuration) duration95);
        org.joda.time.Period period97 = duration12.toPeriodFrom((org.joda.time.ReadableInstant) dateTime96);
        org.joda.time.DateTime.Property property98 = dateTime96.dayOfMonth();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant31 and dateTime88", (instant31.compareTo(dateTime88) == 0) == instant31.equals(dateTime88));
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test375");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration9, (int) (short) 100);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getYearOfCentury();
        org.joda.time.Interval interval15 = duration9.toIntervalTo((org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.Duration duration16 = duration5.minus((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration17 = duration16.toDuration();
        org.joda.time.Duration duration19 = duration16.withMillis((-540032677822L));
        org.joda.time.Minutes minutes20 = duration16.toStandardMinutes();
        org.joda.time.LocalDate localDate22 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate24 = localDate22.minusMonths((int) ' ');
        org.joda.time.Chronology chronology25 = localDate22.getChronology();
        org.joda.time.DateTimeFieldType dateTimeFieldType26 = org.joda.time.DateTimeFieldType.weekyearOfCentury();
        org.joda.time.LocalDate localDate28 = localDate22.withField(dateTimeFieldType26, 6);
        org.joda.time.LocalDate localDate29 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property30 = localDate29.dayOfMonth();
        org.joda.time.Chronology chronology31 = localDate29.getChronology();
        org.joda.time.LocalDate.Property property32 = localDate29.dayOfWeek();
        org.joda.time.LocalDate localDate34 = localDate29.plusWeeks(56);
        org.joda.time.LocalDate localDate36 = localDate29.plusMonths(41);
        org.joda.time.LocalDate localDate38 = localDate36.minusMonths(16);
        org.joda.time.MutableDateTime mutableDateTime40 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((long) 100, 1L, periodType43);
        org.joda.time.PeriodType periodType47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((long) 100, 1L, periodType47);
        org.joda.time.Period period49 = period44.plus((org.joda.time.ReadablePeriod) period48);
        org.joda.time.Instant instant50 = new org.joda.time.Instant();
        org.joda.time.Instant instant52 = instant50.withMillis(0L);
        org.joda.time.Duration duration53 = period48.toDurationTo((org.joda.time.ReadableInstant) instant52);
        mutableDateTime40.add((org.joda.time.ReadableDuration) duration53, 39);
        org.joda.time.MutableDateTime.Property property56 = mutableDateTime40.secondOfMinute();
        org.joda.time.MutableDateTime.Property property57 = mutableDateTime40.minuteOfHour();
        org.joda.time.MutableDateTime mutableDateTime59 = property57.addWrapField(6);
        org.joda.time.DateTimeZone dateTimeZone60 = org.joda.time.DateTimeZone.UTC;
        java.lang.String str62 = dateTimeZone60.getNameKey((long) (byte) 0);
        mutableDateTime59.setZoneRetainFields(dateTimeZone60);
        java.lang.String str65 = dateTimeZone60.getNameKey((long) 3);
        org.joda.time.DateTime dateTime66 = localDate36.toDateTimeAtStartOfDay(dateTimeZone60);
        org.joda.time.DateMidnight dateMidnight67 = localDate22.toDateMidnight(dateTimeZone60);
        java.util.TimeZone timeZone68 = dateTimeZone60.toTimeZone();
        org.joda.time.MutableDateTime mutableDateTime69 = new org.joda.time.MutableDateTime(86500000L, dateTimeZone60);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(readableInstant71, readableInstant72, periodType73);
        org.joda.time.PeriodType periodType75 = periodType73.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(86400L, periodType73);
        org.joda.time.PeriodType periodType77 = periodType73.withWeeksRemoved();
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, (org.joda.time.ReadableInstant) mutableDateTime69, periodType73);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and instant50", (dateTime13.compareTo(instant50) == 0) == dateTime13.equals(instant50));
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test376");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime19 = mutableDateTime1.toMutableDateTime(dateTimeZone18);
        org.joda.time.MutableDateTime.Property property20 = mutableDateTime19.millisOfSecond();
        org.joda.time.DateTimeZone dateTimeZone22 = org.joda.time.DateTimeZone.forOffsetMillis(39324);
        mutableDateTime19.setZoneRetainFields(dateTimeZone22);
        org.joda.time.MutableDateTime mutableDateTime25 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.Period period34 = period29.plus((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Instant instant35 = new org.joda.time.Instant();
        org.joda.time.Instant instant37 = instant35.withMillis(0L);
        org.joda.time.Duration duration38 = period33.toDurationTo((org.joda.time.ReadableInstant) instant37);
        mutableDateTime25.add((org.joda.time.ReadableDuration) duration38, 39);
        org.joda.time.MutableDateTime.Property property41 = mutableDateTime25.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone42 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime25.setZone(dateTimeZone42);
        int int44 = mutableDateTime25.getYearOfEra();
        int int45 = mutableDateTime25.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property46 = mutableDateTime25.year();
        org.joda.time.LocalDate localDate47 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate49 = localDate47.minusMonths((int) ' ');
        org.joda.time.Chronology chronology50 = localDate47.getChronology();
        mutableDateTime25.setChronology(chronology50);
        org.joda.time.MutableDateTime mutableDateTime53 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((long) 100, 1L, periodType56);
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((long) 100, 1L, periodType60);
        org.joda.time.Period period62 = period57.plus((org.joda.time.ReadablePeriod) period61);
        org.joda.time.Instant instant63 = new org.joda.time.Instant();
        org.joda.time.Instant instant65 = instant63.withMillis(0L);
        org.joda.time.Duration duration66 = period61.toDurationTo((org.joda.time.ReadableInstant) instant65);
        mutableDateTime53.add((org.joda.time.ReadableDuration) duration66, 39);
        org.joda.time.MutableDateTime.Property property69 = mutableDateTime53.yearOfEra();
        mutableDateTime53.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property72 = mutableDateTime53.minuteOfDay();
        org.joda.time.DateTimeZone dateTimeZone73 = org.joda.time.DateTimeZone.UTC;
        long long76 = dateTimeZone73.convertLocalToUTC((long) (byte) 100, false);
        mutableDateTime53.setZone(dateTimeZone73);
        mutableDateTime25.setZoneRetainFields(dateTimeZone73);
        org.joda.time.MutableDateTime mutableDateTime79 = new org.joda.time.MutableDateTime(dateTimeZone73);
        boolean boolean80 = mutableDateTime19.isBefore((org.joda.time.ReadableInstant) mutableDateTime79);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime1 and mutableDateTime25", (mutableDateTime1.compareTo(mutableDateTime25) == 0) == mutableDateTime1.equals(mutableDateTime25));
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test377");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 49);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime(chronology4);
        int int6 = dateTime5.getSecondOfMinute();
        boolean boolean7 = dateTime5.isEqualNow();
        int int8 = dateTime5.getDayOfYear();
        org.joda.time.Chronology chronology9 = dateTime5.getChronology();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology9);
        org.joda.time.DateTimeField dateTimeField11 = chronology9.year();
        org.joda.time.DateTimeField dateTimeField12 = chronology9.dayOfMonth();
        org.joda.time.LocalDateTime localDateTime13 = org.joda.time.LocalDateTime.now(chronology9);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = org.joda.time.DateTimeFieldType.hourOfDay();
        org.joda.time.DurationFieldType durationFieldType15 = dateTimeFieldType14.getDurationType();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime13.withFieldAdded(durationFieldType15, 14);
        org.joda.time.LocalDateTime localDateTime19 = localDateTime13.withYear(18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardDays((-1L));
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardDays((long) (byte) 1);
        java.lang.String str24 = duration23.toString();
        org.joda.time.Duration duration25 = duration21.plus((org.joda.time.ReadableDuration) duration23);
        org.joda.time.LocalDateTime localDateTime27 = localDateTime13.withDurationAdded((org.joda.time.ReadableDuration) duration23, 53813);
        boolean boolean28 = duration1.isEqual((org.joda.time.ReadableDuration) duration23);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((int) (short) 10, 38, 53600069, (int) (short) 10);
        org.joda.time.PeriodType periodType35 = mutablePeriod34.getPeriodType();
        org.joda.time.PeriodType periodType36 = mutablePeriod34.getPeriodType();
        org.joda.time.PeriodType periodType37 = periodType36.withMonthsRemoved();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.DateTime dateTime41 = new org.joda.time.DateTime(chronology40);
        int int42 = dateTime41.getSecondOfMinute();
        boolean boolean43 = dateTime41.isEqualNow();
        int int44 = dateTime41.getDayOfYear();
        org.joda.time.Chronology chronology45 = dateTime41.getChronology();
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology45);
        org.joda.time.DateTimeField dateTimeField47 = chronology45.year();
        org.joda.time.DateTimeField dateTimeField48 = chronology45.hourOfHalfday();
        org.joda.time.Period period49 = new org.joda.time.Period((long) 4017, periodType37, chronology45);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime((long) (short) 1, chronology53);
        org.joda.time.Instant instant55 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableInstant) instant55, periodType56);
        org.joda.time.Instant instant59 = new org.joda.time.Instant();
        org.joda.time.Instant instant61 = instant59.withMillis(0L);
        org.joda.time.Chronology chronology62 = instant61.getChronology();
        org.joda.time.DurationField durationField63 = chronology62.eras();
        java.util.Locale locale64 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket66 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology62, locale64, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime67 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime69 = localDateTime67.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property70 = localDateTime67.hourOfDay();
        org.joda.time.DateTimeField dateTimeField71 = property70.getField();
        int int72 = property70.get();
        org.joda.time.LocalDateTime localDateTime73 = property70.roundHalfFloorCopy();
        long long75 = chronology62.set((org.joda.time.ReadablePartial) localDateTime73, (long) 2022);
        org.joda.time.DateTimeField dateTimeField76 = chronology62.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField77 = chronology62.minuteOfHour();
        org.joda.time.PeriodType periodType80 = null;
        org.joda.time.Period period81 = new org.joda.time.Period((long) 100, 1L, periodType80);
        org.joda.time.Period period83 = period81.minusSeconds((-1));
        java.lang.String str84 = period81.toString();
        org.joda.time.Period period85 = period81.negated();
        int[] intArray87 = chronology62.get((org.joda.time.ReadablePeriod) period85, (long) 1969);
        org.joda.time.DateTimeField dateTimeField88 = chronology62.halfdayOfDay();
        org.joda.time.Period period89 = new org.joda.time.Period((long) 894, 48L, periodType56, chronology62);
        org.joda.time.DateTimeField dateTimeField90 = chronology62.millisOfDay();
        org.joda.time.Period period91 = duration1.toPeriod(periodType37, chronology62);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime5 and instant55", (dateTime5.compareTo(instant55) == 0) == dateTime5.equals(instant55));
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test378");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int7 = instant3.get(dateTimeFieldType6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 10, (long) 3);
        org.joda.time.Instant instant12 = instant3.withDurationAdded((org.joda.time.ReadableDuration) duration10, 0);
        org.joda.time.Instant instant13 = new org.joda.time.Instant();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant13);
        java.lang.String str15 = duration10.toString();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.DateTime dateTime18 = new org.joda.time.DateTime((long) (short) 1, chronology17);
        org.joda.time.Instant instant19 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime18, (org.joda.time.ReadableInstant) instant19, periodType20);
        org.joda.time.MutableDateTime mutableDateTime22 = instant19.toMutableDateTimeISO();
        org.joda.time.Instant instant23 = instant19.toInstant();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period26 = duration25.toPeriod();
        org.joda.time.Duration duration29 = duration25.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration29, readableInstant30);
        long long32 = duration29.getStandardDays();
        org.joda.time.Duration duration33 = duration29.toDuration();
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 100, 1L, periodType36);
        org.joda.time.Period period39 = period37.minusSeconds((-1));
        java.lang.String str40 = period37.toString();
        org.joda.time.Period period41 = period37.toPeriod();
        org.joda.time.PeriodType periodType42 = period37.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) instant19, (org.joda.time.ReadableDuration) duration29, periodType42);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((java.lang.Object) str15, periodType42);
        mutablePeriod44.setPeriod((long) 904);
        mutablePeriod44.addYears(177);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and mutableDateTime22", (instant3.compareTo(mutableDateTime22) == 0) == instant3.equals(mutableDateTime22));
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test379");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        boolean boolean26 = instant11.isEqual((org.joda.time.ReadableInstant) instant24);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 1);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period31 = duration30.toPeriod();
        org.joda.time.Duration duration34 = duration30.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant35);
        org.joda.time.Duration duration37 = duration34.toDuration();
        int int38 = duration28.compareTo((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Instant instant39 = instant11.minus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.MutableDateTime mutableDateTime40 = instant39.toMutableDateTimeISO();
        org.joda.time.DateTimeZone dateTimeZone41 = instant39.getZone();
        org.joda.time.DateTime dateTime42 = org.joda.time.DateTime.now(dateTimeZone41);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant39 and mutableDateTime40", (instant39.compareTo(mutableDateTime40) == 0) == instant39.equals(mutableDateTime40));
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test380");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime2 = localDateTime0.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property3 = localDateTime0.hourOfDay();
        org.joda.time.LocalDateTime localDateTime5 = localDateTime0.plusMillis((int) (byte) 0);
        org.joda.time.DateTime dateTime6 = localDateTime0.toDateTime();
        java.lang.String str7 = localDateTime0.toString();
        org.joda.time.LocalDateTime localDateTime9 = localDateTime0.minusWeeks(53828997);
        org.joda.time.MutableDateTime mutableDateTime11 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 100, 1L, periodType14);
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) 100, 1L, periodType18);
        org.joda.time.Period period20 = period15.plus((org.joda.time.ReadablePeriod) period19);
        org.joda.time.Instant instant21 = new org.joda.time.Instant();
        org.joda.time.Instant instant23 = instant21.withMillis(0L);
        org.joda.time.Duration duration24 = period19.toDurationTo((org.joda.time.ReadableInstant) instant23);
        mutableDateTime11.add((org.joda.time.ReadableDuration) duration24, 39);
        org.joda.time.MutableDateTime.Property property27 = mutableDateTime11.secondOfMinute();
        mutableDateTime11.addYears(3);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period32 = duration31.toPeriod();
        org.joda.time.Duration duration35 = duration31.withDurationAdded((long) 38, (int) 'a');
        long long36 = duration31.getStandardMinutes();
        mutableDateTime11.add((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableDuration readableDuration38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period(readableDuration38, readableInstant39);
        org.joda.time.Period period42 = period40.withDays((int) (byte) 1);
        org.joda.time.Duration duration43 = period42.toStandardDuration();
        org.joda.time.Duration duration44 = duration31.minus((org.joda.time.ReadableDuration) duration43);
        org.joda.time.LocalDateTime localDateTime45 = localDateTime9.minus((org.joda.time.ReadableDuration) duration44);
        org.joda.time.LocalDateTime.Property property46 = localDateTime45.weekOfWeekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime6 and instant21", (dateTime6.compareTo(instant21) == 0) == dateTime6.equals(instant21));
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test381");
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime((long) 100);
        int int2 = dateTime1.getCenturyOfEra();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime((long) (short) 1, chronology4);
        org.joda.time.Instant instant6 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime5, (org.joda.time.ReadableInstant) instant6, periodType7);
        org.joda.time.DateTimeFieldType dateTimeFieldType9 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int10 = instant6.get(dateTimeFieldType9);
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) 10, (long) 3);
        org.joda.time.Instant instant15 = instant6.withDurationAdded((org.joda.time.ReadableDuration) duration13, 0);
        org.joda.time.Instant instant16 = new org.joda.time.Instant();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, (org.joda.time.ReadableInstant) instant16);
        org.joda.time.DateTime dateTime19 = dateTime1.withPeriodAdded((org.joda.time.ReadablePeriod) mutablePeriod17, (int) '4');
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime20.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property23 = localDateTime20.hourOfDay();
        org.joda.time.DateTimeField dateTimeField24 = property23.getField();
        boolean boolean26 = property23.equals((java.lang.Object) '#');
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.DateTime dateTime28 = new org.joda.time.DateTime(chronology27);
        int int29 = dateTime28.getSecondOfMinute();
        int int30 = dateTime28.getYearOfEra();
        int int31 = property23.getDifference((org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.LocalDateTime localDateTime32 = property23.roundHalfFloorCopy();
        org.joda.time.LocalDateTime localDateTime34 = localDateTime32.minusMinutes(54);
        org.joda.time.LocalDateTime localDateTime36 = localDateTime34.plusDays((int) '4');
        org.joda.time.Chronology chronology37 = localDateTime34.getChronology();
        org.joda.time.LocalTime localTime38 = new org.joda.time.LocalTime((java.lang.Object) dateTime19, chronology37);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant6 and dateTime28", (instant6.compareTo(dateTime28) == 0) == instant6.equals(dateTime28));
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test382");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology7);
        org.joda.time.DateTimeField dateTimeField9 = chronology7.year();
        org.joda.time.DateTimeField dateTimeField10 = chronology7.dayOfMonth();
        java.util.Locale locale12 = java.util.Locale.GERMAN;
        java.util.Locale locale13 = java.util.Locale.CANADA;
        java.lang.String str14 = locale12.getDisplayVariant(locale13);
        java.lang.String str15 = locale12.getISO3Language();
        java.lang.String str16 = dateTimeField10.getAsShortText((int) (byte) 100, locale12);
        java.util.Locale.Category category18 = java.util.Locale.Category.FORMAT;
        org.joda.time.MutableDateTime mutableDateTime20 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) 100, 1L, periodType23);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((long) 100, 1L, periodType27);
        org.joda.time.Period period29 = period24.plus((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Instant instant30 = new org.joda.time.Instant();
        org.joda.time.Instant instant32 = instant30.withMillis(0L);
        org.joda.time.Duration duration33 = period28.toDurationTo((org.joda.time.ReadableInstant) instant32);
        mutableDateTime20.add((org.joda.time.ReadableDuration) duration33, 39);
        org.joda.time.MutableDateTime.Property property36 = mutableDateTime20.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone37 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime20.setZone(dateTimeZone37);
        java.lang.String str39 = dateTimeZone37.toString();
        org.joda.time.LocalDateTime localDateTime41 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime43 = localDateTime41.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime45 = localDateTime43.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField47 = localDateTime45.getField((int) (byte) 0);
        java.util.Locale locale49 = java.util.Locale.CANADA;
        java.lang.String str50 = dateTimeField47.getAsShortText((long) (byte) 1, locale49);
        java.lang.String str51 = locale49.getVariant();
        java.lang.String str52 = locale49.toLanguageTag();
        java.lang.String str53 = dateTimeZone37.getShortName((long) 47, locale49);
        java.util.Locale.setDefault(category18, locale49);
        java.util.Locale locale55 = java.util.Locale.getDefault(category18);
        java.util.Locale locale56 = java.util.Locale.getDefault(category18);
        java.lang.String str57 = dateTimeField10.getAsShortText((long) 44, locale56);
        long long59 = dateTimeField10.roundHalfFloor(20259590400000L);
        int int61 = dateTimeField10.getMinimumValue((long) 1970);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and instant30", (dateTime3.compareTo(instant30) == 0) == dateTime3.equals(instant30));
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test383");
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTimeField dateTimeField20 = chronology6.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField21 = chronology6.minuteOfHour();
        org.joda.time.DateTimeField dateTimeField22 = chronology6.centuryOfEra();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(0L, (long) 99, chronology6);
        org.joda.time.MutableDateTime mutableDateTime25 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime25.add((org.joda.time.ReadableDuration) duration27, (int) (short) 100);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.DateTime dateTime31 = new org.joda.time.DateTime(chronology30);
        int int32 = dateTime31.getYearOfCentury();
        org.joda.time.Interval interval33 = duration27.toIntervalTo((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.ReadableDuration readableDuration34 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period(readableDuration34, readableInstant35);
        org.joda.time.Period period38 = period36.withDays((int) (byte) 1);
        org.joda.time.Period period40 = period38.minusWeeks(100);
        org.joda.time.Period period42 = period38.minusWeeks(2023);
        org.joda.time.Duration duration43 = period38.toStandardDuration();
        boolean boolean44 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardDays((-1L));
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardDays((long) (byte) 1);
        java.lang.String str49 = duration48.toString();
        org.joda.time.Duration duration50 = duration46.plus((org.joda.time.ReadableDuration) duration48);
        int int51 = duration27.compareTo((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.DateTime dateTime53 = new org.joda.time.DateTime(chronology52);
        org.joda.time.Instant instant55 = new org.joda.time.Instant();
        org.joda.time.Instant instant57 = instant55.withMillis(0L);
        org.joda.time.Chronology chronology58 = instant57.getChronology();
        org.joda.time.DurationField durationField59 = chronology58.eras();
        java.util.Locale locale60 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket62 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology58, locale60, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime63 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime65 = localDateTime63.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property66 = localDateTime63.hourOfDay();
        org.joda.time.DateTimeField dateTimeField67 = property66.getField();
        int int68 = property66.get();
        org.joda.time.LocalDateTime localDateTime69 = property66.roundHalfFloorCopy();
        long long71 = chronology58.set((org.joda.time.ReadablePartial) localDateTime69, (long) 2022);
        org.joda.time.DateTime dateTime72 = dateTime53.toDateTime(chronology58);
        org.joda.time.DateTime.Property property73 = dateTime53.dayOfMonth();
        org.joda.time.Interval interval74 = duration27.toIntervalFrom((org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.millis();
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((long) 46, periodType78);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(0L, 0L, periodType78, chronology80);
        org.joda.time.MutablePeriod mutablePeriod82 = mutablePeriod81.copy();
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.DateTime dateTime87 = new org.joda.time.DateTime(chronology86);
        int int88 = dateTime87.getSecondOfMinute();
        boolean boolean89 = dateTime87.isEqualNow();
        int int90 = dateTime87.getDayOfYear();
        org.joda.time.Chronology chronology91 = dateTime87.getChronology();
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology91);
        org.joda.time.DateTimeField dateTimeField93 = chronology91.yearOfCentury();
        org.joda.time.LocalDateTime localDateTime94 = new org.joda.time.LocalDateTime(chronology91);
        mutablePeriod82.setPeriod((long) 21, chronology91);
        org.joda.time.DateTimeField dateTimeField96 = chronology91.minuteOfHour();
        mutablePeriod23.setPeriod((org.joda.time.ReadableDuration) duration27, chronology91);
        org.joda.time.DateTime dateTime98 = new org.joda.time.DateTime(chronology91);
        org.joda.time.DateTime.Property property99 = dateTime98.era();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and dateTime31", (instant3.compareTo(dateTime31) == 0) == instant3.equals(dateTime31));
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test384");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property1 = localDateTime0.monthOfYear();
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        long long8 = property1.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime3);
        org.joda.time.DateTime dateTime10 = dateTime3.plusMonths(53750205);
        org.joda.time.MutableDateTime mutableDateTime12 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        mutableDateTime12.add((org.joda.time.ReadableDuration) duration25, 39);
        mutableDateTime12.setDayOfYear(22);
        int int30 = mutableDateTime12.getYearOfCentury();
        mutableDateTime12.addMinutes(53639537);
        org.joda.time.MutableDateTime.Property property33 = mutableDateTime12.centuryOfEra();
        org.joda.time.DateTimeField dateTimeField34 = property33.getField();
        long long36 = dateTimeField34.roundHalfFloor(59997L);
        int int37 = dateTime3.get(dateTimeField34);
        long long40 = dateTimeField34.set(12626452536851167L, 341);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and instant22", (dateTime3.compareTo(instant22) == 0) == dateTime3.equals(instant22));
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test385");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        long long15 = instant11.getMillis();
        org.joda.time.Instant instant16 = instant11.toInstant();
        org.joda.time.Instant instant17 = instant11.toInstant();
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime19.yearOfEra();
        mutableDateTime19.setWeekOfWeekyear(14);
        int int38 = mutableDateTime19.getRoundingMode();
        java.util.GregorianCalendar gregorianCalendar39 = mutableDateTime19.toGregorianCalendar();
        org.joda.time.MutableDateTime mutableDateTime40 = mutableDateTime19.toMutableDateTime();
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period(readableDuration41, readableInstant42);
        int int44 = period43.getDays();
        int int45 = period43.getWeeks();
        mutableDateTime40.add((org.joda.time.ReadablePeriod) period43, 42);
        int int48 = mutableDateTime40.getCenturyOfEra();
        org.joda.time.MutableDateTime.Property property49 = mutableDateTime40.yearOfEra();
        int int50 = instant17.compareTo((org.joda.time.ReadableInstant) mutableDateTime40);
        org.joda.time.PeriodType periodType53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((long) 100, 1L, periodType53);
        org.joda.time.PeriodType periodType57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((long) 100, 1L, periodType57);
        org.joda.time.Period period59 = period54.plus((org.joda.time.ReadablePeriod) period58);
        org.joda.time.Instant instant60 = new org.joda.time.Instant();
        org.joda.time.Instant instant62 = instant60.withMillis(0L);
        org.joda.time.Duration duration63 = period58.toDurationTo((org.joda.time.ReadableInstant) instant62);
        org.joda.time.Instant instant65 = instant62.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime66 = instant62.toDateTime();
        org.joda.time.LocalDate localDate67 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate69 = localDate67.minusMonths((int) ' ');
        int int70 = localDate67.size();
        org.joda.time.DateMidnight dateMidnight71 = localDate67.toDateMidnight();
        boolean boolean72 = dateTime66.isBefore((org.joda.time.ReadableInstant) dateMidnight71);
        org.joda.time.DateTime dateTime74 = dateTime66.withWeekyear(39297267);
        int int75 = dateTime74.getDayOfYear();
        boolean boolean76 = mutableDateTime40.isEqual((org.joda.time.ReadableInstant) dateTime74);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime66", (instant11.compareTo(dateTime66) == 0) == instant11.equals(dateTime66));
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test386");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        mutablePeriod4.addDays(53);
        mutablePeriod4.setMillis(39250977);
        mutablePeriod4.setMinutes(51);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period13 = duration12.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period16 = duration15.toPeriod();
        org.joda.time.Duration duration19 = duration15.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.Duration duration23 = duration15.plus((org.joda.time.ReadableDuration) duration21);
        boolean boolean24 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Days days25 = duration12.toStandardDays();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period28 = duration27.toPeriod();
        org.joda.time.Duration duration31 = duration27.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration31, readableInstant32);
        mutablePeriod33.setYears(10);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.DateTime dateTime37 = new org.joda.time.DateTime(chronology36);
        int int38 = dateTime37.getSecondOfMinute();
        org.joda.time.DateTime dateTime41 = dateTime37.withDurationAdded((long) 6, 12);
        org.joda.time.DateTime dateTime43 = dateTime37.minusMillis(31);
        org.joda.time.MutableDateTime mutableDateTime45 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) 100, 1L, periodType48);
        org.joda.time.PeriodType periodType52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((long) 100, 1L, periodType52);
        org.joda.time.Period period54 = period49.plus((org.joda.time.ReadablePeriod) period53);
        org.joda.time.Instant instant55 = new org.joda.time.Instant();
        org.joda.time.Instant instant57 = instant55.withMillis(0L);
        org.joda.time.Duration duration58 = period53.toDurationTo((org.joda.time.ReadableInstant) instant57);
        mutableDateTime45.add((org.joda.time.ReadableDuration) duration58, 39);
        org.joda.time.MutableDateTime.Property property61 = mutableDateTime45.yearOfEra();
        mutableDateTime45.addMillis(39221019);
        mutableDateTime45.setWeekyear(49);
        mutableDateTime45.addMinutes(39);
        mutablePeriod33.setPeriod((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableInstant) mutableDateTime45);
        org.joda.time.Interval interval69 = duration12.toIntervalTo((org.joda.time.ReadableInstant) dateTime37);
        mutablePeriod4.setPeriod((org.joda.time.ReadableInterval) interval69);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime37 and instant55", (dateTime37.compareTo(instant55) == 0) == dateTime37.equals(instant55));
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test387");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime19 = mutableDateTime1.toMutableDateTime(dateTimeZone18);
        org.joda.time.MutableDateTime.Property property20 = mutableDateTime19.secondOfDay();
        int int21 = mutableDateTime19.getCenturyOfEra();
        org.joda.time.MutableDateTime.Property property22 = mutableDateTime19.millisOfDay();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.DateTime dateTime24 = new org.joda.time.DateTime(chronology23);
        int int25 = dateTime24.getSecondOfMinute();
        boolean boolean26 = dateTime24.isEqualNow();
        int int27 = dateTime24.getDayOfYear();
        org.joda.time.Chronology chronology28 = dateTime24.getChronology();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.DateTime dateTime31 = dateTime24.plus((org.joda.time.ReadableDuration) duration30);
        int int32 = dateTime31.getMonthOfYear();
        mutableDateTime19.setMillis((org.joda.time.ReadableInstant) dateTime31);
        mutableDateTime19.setWeekyear(39316455);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(periodType36);
        mutablePeriod37.setDays(57);
        mutablePeriod37.setHours(53818013);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.DateTime dateTime44 = new org.joda.time.DateTime(chronology43);
        int int45 = dateTime44.getSecondOfMinute();
        boolean boolean46 = dateTime44.isEqualNow();
        int int47 = dateTime44.getDayOfYear();
        org.joda.time.Chronology chronology48 = dateTime44.getChronology();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((long) 5, chronology48);
        org.joda.time.MutableDateTime mutableDateTime51 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime51.add((org.joda.time.ReadableDuration) duration53, (int) (short) 100);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.DateTime dateTime57 = new org.joda.time.DateTime(chronology56);
        int int58 = dateTime57.getYearOfCentury();
        org.joda.time.Interval interval59 = duration53.toIntervalTo((org.joda.time.ReadableInstant) dateTime57);
        long long60 = duration53.getStandardSeconds();
        mutablePeriod49.add((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Period period62 = mutablePeriod49.toPeriod();
        org.joda.time.DurationFieldType durationFieldType63 = org.joda.time.DurationFieldType.days();
        boolean boolean64 = period62.isSupported(durationFieldType63);
        mutablePeriod37.set(durationFieldType63, (int) (byte) 0);
        mutableDateTime19.add(durationFieldType63, 68365629);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime24", (instant11.compareTo(dateTime24) == 0) == instant11.equals(dateTime24));
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test388");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType17 = dateTimeFieldType16.getRangeDurationType();
        org.joda.time.DateTime.Property property18 = dateTime15.property(dateTimeFieldType16);
        org.joda.time.LocalTime localTime19 = dateTime15.toLocalTime();
        org.joda.time.DateTime dateTime21 = dateTime15.withHourOfDay(0);
        int int22 = dateTime21.getSecondOfDay();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.DateTime dateTime26 = new org.joda.time.DateTime(chronology25);
        int int27 = dateTime26.getSecondOfMinute();
        boolean boolean28 = dateTime26.isEqualNow();
        int int29 = dateTime26.getDayOfYear();
        org.joda.time.Chronology chronology30 = dateTime26.getChronology();
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology30);
        org.joda.time.DateTimeField dateTimeField32 = chronology30.year();
        org.joda.time.DateTimeField dateTimeField33 = chronology30.dayOfMonth();
        java.lang.Object obj34 = null;
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime37 = new org.joda.time.MutableDateTime(0L, dateTimeZone36);
        int int39 = dateTimeZone36.getOffsetFromLocal((long) (byte) 1);
        org.joda.time.DateTime dateTime40 = new org.joda.time.DateTime(obj34, dateTimeZone36);
        java.lang.String str41 = dateTimeZone36.toString();
        org.joda.time.Chronology chronology42 = chronology30.withZone(dateTimeZone36);
        org.joda.time.LocalDateTime localDateTime43 = org.joda.time.LocalDateTime.now(dateTimeZone36);
        org.joda.time.LocalDateTime localDateTime44 = new org.joda.time.LocalDateTime(dateTimeZone36);
        org.joda.time.DateTime dateTime45 = dateTime21.withZoneRetainFields(dateTimeZone36);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime26", (instant9.compareTo(dateTime26) == 0) == instant9.equals(dateTime26));
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test389");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTime dateTime3 = dateTime2.toDateTime();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.DateTime dateTime6 = new org.joda.time.DateTime((long) (short) 1, chronology5);
        org.joda.time.DateTime dateTime7 = dateTime6.toDateTime();
        int int8 = dateTime3.compareTo((org.joda.time.ReadableInstant) dateTime6);
        org.joda.time.DateTime.Property property9 = dateTime3.hourOfDay();
        org.joda.time.DateTime.Property property10 = dateTime3.centuryOfEra();
        org.joda.time.DateTime.Property property11 = dateTime3.minuteOfDay();
        org.joda.time.Instant instant14 = new org.joda.time.Instant();
        org.joda.time.Instant instant16 = instant14.withMillis(0L);
        org.joda.time.Chronology chronology17 = instant16.getChronology();
        org.joda.time.DurationField durationField18 = chronology17.eras();
        java.util.Locale locale19 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket21 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology17, locale19, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property25 = localDateTime22.hourOfDay();
        org.joda.time.DateTimeField dateTimeField26 = property25.getField();
        int int27 = property25.get();
        org.joda.time.LocalDateTime localDateTime28 = property25.roundHalfFloorCopy();
        long long30 = chronology17.set((org.joda.time.ReadablePartial) localDateTime28, (long) 2022);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now(chronology17);
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime(chronology17);
        org.joda.time.DurationField durationField33 = chronology17.eras();
        java.util.Locale locale37 = new java.util.Locale("hi!", "clockhourOfDay", "java.io.IOException");
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket38 = new org.joda.time.format.DateTimeParserBucket((long) 42, chronology17, locale37);
        org.joda.time.DateTimeZone dateTimeZone39 = dateTimeParserBucket38.getZone();
        int int41 = dateTimeZone39.getOffset((long) 40);
        java.lang.String str42 = dateTimeZone39.getID();
        org.joda.time.LocalDateTime localDateTime43 = new org.joda.time.LocalDateTime((java.lang.Object) dateTime3, dateTimeZone39);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.DateTime dateTime48 = new org.joda.time.DateTime(chronology47);
        int int49 = dateTime48.getSecondOfMinute();
        boolean boolean50 = dateTime48.isEqualNow();
        int int51 = dateTime48.getDayOfYear();
        org.joda.time.Chronology chronology52 = dateTime48.getChronology();
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology52);
        org.joda.time.DateTimeField dateTimeField54 = chronology52.year();
        org.joda.time.DateTimeZone dateTimeZone55 = chronology52.getZone();
        org.joda.time.Chronology chronology57 = null;
        java.util.Locale locale58 = java.util.Locale.GERMAN;
        java.util.Locale locale59 = java.util.Locale.CANADA;
        java.lang.String str60 = locale58.getDisplayVariant(locale59);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket61 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology57, locale59);
        org.joda.time.DateTimeZone dateTimeZone62 = dateTimeParserBucket61.getZone();
        long long64 = dateTimeZone55.getMillisKeepLocal(dateTimeZone62, (long) 56);
        org.joda.time.DateTime dateTime65 = new org.joda.time.DateTime((long) 13, dateTimeZone55);
        org.joda.time.DateTime dateTime66 = dateTime3.withZone(dateTimeZone55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime48", (instant14.compareTo(dateTime48) == 0) == instant14.equals(dateTime48));
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test390");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((long) 100, 1L, periodType12);
        org.joda.time.Period period14 = period9.plus((org.joda.time.ReadablePeriod) period13);
        org.joda.time.Instant instant15 = new org.joda.time.Instant();
        org.joda.time.Instant instant17 = instant15.withMillis(0L);
        org.joda.time.Duration duration18 = period13.toDurationTo((org.joda.time.ReadableInstant) instant17);
        long long19 = instant17.getMillis();
        org.joda.time.Interval interval20 = duration1.toIntervalTo((org.joda.time.ReadableInstant) instant17);
        org.joda.time.Instant instant21 = instant17.toInstant();
        org.joda.time.MutableDateTime mutableDateTime22 = instant21.toMutableDateTimeISO();
        org.joda.time.MutableDateTime mutableDateTime24 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime24.add((org.joda.time.ReadableDuration) duration26, (int) (short) 100);
        org.joda.time.LocalDateTime localDateTime29 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property30 = localDateTime29.monthOfYear();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.DateTime dateTime33 = new org.joda.time.DateTime((long) (short) 1, chronology32);
        org.joda.time.Instant instant34 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) instant34, periodType35);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int38 = instant34.get(dateTimeFieldType37);
        org.joda.time.LocalDateTime localDateTime40 = localDateTime29.withField(dateTimeFieldType37, 39);
        org.joda.time.LocalDateTime localDateTime42 = localDateTime40.minusSeconds(52);
        int int43 = localDateTime42.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime45 = localDateTime42.plusWeeks(22);
        org.joda.time.DateTime dateTime46 = localDateTime42.toDateTime();
        org.joda.time.MutableDateTime mutableDateTime48 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((long) 100, 1L, periodType51);
        org.joda.time.PeriodType periodType55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((long) 100, 1L, periodType55);
        org.joda.time.Period period57 = period52.plus((org.joda.time.ReadablePeriod) period56);
        org.joda.time.Instant instant58 = new org.joda.time.Instant();
        org.joda.time.Instant instant60 = instant58.withMillis(0L);
        org.joda.time.Duration duration61 = period56.toDurationTo((org.joda.time.ReadableInstant) instant60);
        mutableDateTime48.add((org.joda.time.ReadableDuration) duration61, 39);
        org.joda.time.MutableDateTime.Property property64 = mutableDateTime48.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone65 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime48.setZone(dateTimeZone65);
        org.joda.time.DateTime dateTime67 = dateTime46.withZone(dateTimeZone65);
        org.joda.time.Interval interval68 = duration26.toIntervalFrom((org.joda.time.ReadableInstant) dateTime67);
        boolean boolean69 = instant21.isAfter((org.joda.time.ReadableInstant) dateTime67);
        int int70 = dateTime67.getSecondOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and mutableDateTime22", (instant17.compareTo(mutableDateTime22) == 0) == instant17.equals(mutableDateTime22));
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test391");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.DateTime dateTime22 = new org.joda.time.DateTime((long) (short) 1, chronology21);
        org.joda.time.Instant instant23 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) instant23, periodType24);
        org.joda.time.LocalDate localDate26 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate28 = localDate26.minusMonths((int) ' ');
        org.joda.time.Chronology chronology29 = localDate26.getChronology();
        org.joda.time.Period period30 = new org.joda.time.Period((long) (byte) 1, periodType24, chronology29);
        org.joda.time.LocalDate localDate31 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate33 = localDate31.minusMonths((int) ' ');
        org.joda.time.Chronology chronology34 = localDate31.getChronology();
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate37 = localDate31.withFieldAdded(durationFieldType35, (int) (byte) 100);
        boolean boolean38 = periodType24.isSupported(durationFieldType35);
        org.joda.time.PeriodType periodType39 = periodType24.withDaysRemoved();
        org.joda.time.LocalDate localDate40 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property41 = localDate40.dayOfMonth();
        org.joda.time.Chronology chronology42 = localDate40.getChronology();
        org.joda.time.Period period43 = new org.joda.time.Period((long) 43, periodType24, chronology42);
        mutableDateTime1.setChronology(chronology42);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DateTime dateTime47 = new org.joda.time.DateTime((long) (short) 1, chronology46);
        org.joda.time.Instant instant48 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime47, (org.joda.time.ReadableInstant) instant48, periodType49);
        org.joda.time.DateTimeFieldType dateTimeFieldType51 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int52 = instant48.get(dateTimeFieldType51);
        boolean boolean53 = mutableDateTime1.isBefore((org.joda.time.ReadableInstant) instant48);
        org.joda.time.Instant instant54 = instant48.toInstant();
        org.joda.time.DateTime dateTime55 = instant48.toDateTime();
        org.joda.time.Chronology chronology56 = instant48.getChronology();
        org.joda.time.LocalTime localTime58 = org.joda.time.LocalTime.fromMillisOfDay(655L);
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.DateTime dateTime60 = new org.joda.time.DateTime(chronology59);
        int int61 = dateTime60.getSecondOfMinute();
        int int62 = dateTime60.getYearOfEra();
        org.joda.time.LocalTime localTime63 = dateTime60.toLocalTime();
        org.joda.time.LocalTime.Property property64 = localTime63.millisOfSecond();
        org.joda.time.Chronology chronology66 = null;
        java.util.Locale locale67 = java.util.Locale.GERMAN;
        java.util.Locale locale68 = locale67.stripExtensions();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket71 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology66, locale67, (java.lang.Integer) 45, (int) '4');
        org.joda.time.DateTimeZone dateTimeZone72 = dateTimeParserBucket71.getZone();
        org.joda.time.LocalTime localTime73 = new org.joda.time.LocalTime(dateTimeZone72);
        org.joda.time.DateTime dateTime74 = localTime73.toDateTimeToday();
        org.joda.time.LocalTime.Property property75 = localTime73.secondOfMinute();
        org.joda.time.LocalTime localTime77 = property75.addNoWrapToCopy(46);
        org.joda.time.LocalTime localTime79 = property75.addNoWrapToCopy(31);
        org.joda.time.LocalTime localTime80 = property75.roundHalfCeilingCopy();
        org.joda.time.DateTimeFieldType dateTimeFieldType81 = org.joda.time.DateTimeFieldType.dayOfYear();
        boolean boolean82 = localTime80.isSupported(dateTimeFieldType81);
        boolean boolean83 = localTime63.isSupported(dateTimeFieldType81);
        org.joda.time.Instant instant84 = new org.joda.time.Instant();
        org.joda.time.Instant instant86 = instant84.withMillis(0L);
        org.joda.time.Chronology chronology87 = instant86.getChronology();
        org.joda.time.DurationField durationField88 = chronology87.eras();
        long long92 = chronology87.add((long) 42996291, (long) 73, 53723651);
        org.joda.time.DateTimeField dateTimeField93 = chronology87.yearOfEra();
        org.joda.time.DateTimeField dateTimeField94 = chronology87.hourOfHalfday();
        boolean boolean95 = dateTimeFieldType81.isSupported(chronology87);
        int int96 = localTime58.indexOf(dateTimeFieldType81);
        boolean boolean97 = instant48.isSupported(dateTimeFieldType81);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime55", (instant11.compareTo(dateTime55) == 0) == instant11.equals(dateTime55));
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test392");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.plus(1L);
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.Period period19 = period14.plus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Instant instant20 = new org.joda.time.Instant();
        org.joda.time.Instant instant22 = instant20.withMillis(0L);
        org.joda.time.Duration duration23 = period18.toDurationTo((org.joda.time.ReadableInstant) instant22);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration23, 39);
        int int26 = duration5.compareTo((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Instant instant28 = instant2.withDurationAdded((org.joda.time.ReadableDuration) duration23, 0);
        org.joda.time.Instant instant29 = instant2.toInstant();
        org.joda.time.DateTime dateTime30 = instant29.toDateTime();
        org.joda.time.MutableDateTime mutableDateTime31 = instant29.toMutableDateTimeISO();
        org.joda.time.MutableDateTime.Property property32 = mutableDateTime31.dayOfMonth();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime30", (instant2.compareTo(dateTime30) == 0) == instant2.equals(dateTime30));
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test393");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology7);
        org.joda.time.DateTimeField dateTimeField9 = chronology7.year();
        org.joda.time.DateTimeField dateTimeField10 = chronology7.dayOfMonth();
        java.util.Locale locale12 = java.util.Locale.GERMAN;
        java.util.Locale locale13 = java.util.Locale.CANADA;
        java.lang.String str14 = locale12.getDisplayVariant(locale13);
        java.lang.String str15 = locale12.getISO3Language();
        java.lang.String str16 = dateTimeField10.getAsShortText((int) (byte) 100, locale12);
        java.util.Locale.Category category18 = java.util.Locale.Category.FORMAT;
        org.joda.time.MutableDateTime mutableDateTime20 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) 100, 1L, periodType23);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((long) 100, 1L, periodType27);
        org.joda.time.Period period29 = period24.plus((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Instant instant30 = new org.joda.time.Instant();
        org.joda.time.Instant instant32 = instant30.withMillis(0L);
        org.joda.time.Duration duration33 = period28.toDurationTo((org.joda.time.ReadableInstant) instant32);
        mutableDateTime20.add((org.joda.time.ReadableDuration) duration33, 39);
        org.joda.time.MutableDateTime.Property property36 = mutableDateTime20.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone37 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime20.setZone(dateTimeZone37);
        java.lang.String str39 = dateTimeZone37.toString();
        org.joda.time.LocalDateTime localDateTime41 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime43 = localDateTime41.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime45 = localDateTime43.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField47 = localDateTime45.getField((int) (byte) 0);
        java.util.Locale locale49 = java.util.Locale.CANADA;
        java.lang.String str50 = dateTimeField47.getAsShortText((long) (byte) 1, locale49);
        java.lang.String str51 = locale49.getVariant();
        java.lang.String str52 = locale49.toLanguageTag();
        java.lang.String str53 = dateTimeZone37.getShortName((long) 47, locale49);
        java.util.Locale.setDefault(category18, locale49);
        java.util.Locale locale55 = java.util.Locale.getDefault(category18);
        java.util.Locale locale56 = java.util.Locale.getDefault(category18);
        java.lang.String str57 = dateTimeField10.getAsShortText((long) 44, locale56);
        long long59 = dateTimeField10.roundHalfEven((long) 950);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and instant30", (dateTime3.compareTo(instant30) == 0) == dateTime3.equals(instant30));
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test394");
        org.joda.time.ReadableDuration readableDuration0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(readableDuration1, readableInstant2);
        org.joda.time.Period period5 = period3.withDays((int) (byte) 1);
        org.joda.time.Duration duration6 = period5.toStandardDuration();
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Chronology chronology12 = instant11.getChronology();
        org.joda.time.DurationField durationField13 = chronology12.eras();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology12);
        org.joda.time.DateTimeField dateTimeField15 = chronology12.monthOfYear();
        org.joda.time.DateTimeField dateTimeField16 = chronology12.dayOfMonth();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.LocalDateTime localDateTime19 = new org.joda.time.LocalDateTime((long) (byte) -1, chronology18);
        org.joda.time.LocalDateTime localDateTime21 = localDateTime19.withYear((int) (short) -1);
        int int22 = localDateTime19.getCenturyOfEra();
        int int23 = dateTimeField16.getMaximumValue((org.joda.time.ReadablePartial) localDateTime19);
        org.joda.time.LocalDateTime localDateTime25 = localDateTime19.withDayOfYear(5);
        org.joda.time.LocalDateTime localDateTime27 = localDateTime19.minusMillis(38);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period30 = duration29.toPeriod();
        org.joda.time.Duration duration32 = duration29.plus(1L);
        org.joda.time.MutableDateTime mutableDateTime34 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((long) 100, 1L, periodType37);
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((long) 100, 1L, periodType41);
        org.joda.time.Period period43 = period38.plus((org.joda.time.ReadablePeriod) period42);
        org.joda.time.Instant instant44 = new org.joda.time.Instant();
        org.joda.time.Instant instant46 = instant44.withMillis(0L);
        org.joda.time.Duration duration47 = period42.toDurationTo((org.joda.time.ReadableInstant) instant46);
        mutableDateTime34.add((org.joda.time.ReadableDuration) duration47, 39);
        int int50 = duration29.compareTo((org.joda.time.ReadableDuration) duration47);
        org.joda.time.LocalDateTime localDateTime52 = localDateTime19.withDurationAdded((org.joda.time.ReadableDuration) duration29, 52);
        org.joda.time.Duration duration54 = duration6.withDurationAdded((org.joda.time.ReadableDuration) duration29, 7);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.DateTime dateTime56 = new org.joda.time.DateTime(chronology55);
        int int57 = dateTime56.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter58 = null;
        java.lang.String str59 = dateTime56.toString(dateTimeFormatter58);
        org.joda.time.DateTime dateTime61 = dateTime56.plusMonths(86396191);
        org.joda.time.DateTime dateTime64 = dateTime61.withDurationAdded((long) 23, 21);
        org.joda.time.DateTime.Property property65 = dateTime64.monthOfYear();
        org.joda.time.LocalDateTime localDateTime66 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property67 = localDateTime66.monthOfYear();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.DateTime dateTime69 = new org.joda.time.DateTime(chronology68);
        int int70 = dateTime69.getSecondOfMinute();
        boolean boolean71 = dateTime69.isEqualNow();
        int int72 = dateTime69.getDayOfYear();
        org.joda.time.Chronology chronology73 = dateTime69.getChronology();
        long long74 = property67.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime69);
        org.joda.time.LocalDateTime localDateTime75 = property67.getLocalDateTime();
        org.joda.time.LocalDateTime localDateTime77 = localDateTime75.withYear((int) (byte) 100);
        org.joda.time.LocalDateTime localDateTime79 = localDateTime77.plusDays((int) (byte) 0);
        org.joda.time.LocalDateTime localDateTime81 = localDateTime79.withDayOfYear(9);
        org.joda.time.DateTime dateTime82 = dateTime64.withFields((org.joda.time.ReadablePartial) localDateTime79);
        org.joda.time.DateTime dateTime83 = dateTime82.toDateTimeISO();
        org.joda.time.Period period84 = duration54.toPeriodTo((org.joda.time.ReadableInstant) dateTime83);
        org.joda.time.Period period85 = new org.joda.time.Period(readableDuration0, (org.joda.time.ReadableInstant) dateTime83);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime56", (instant9.compareTo(dateTime56) == 0) == instant9.equals(dateTime56));
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test395");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusDays(22);
        int int23 = dateTime1.getSecondOfMinute();
        org.joda.time.DateMidnight dateMidnight24 = dateTime1.toDateMidnight();
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period(readableDuration25, readableInstant26);
        org.joda.time.Period period29 = period27.withDays((int) (byte) 1);
        org.joda.time.Duration duration30 = period29.toStandardDuration();
        long long31 = duration30.getStandardHours();
        org.joda.time.DateTime dateTime33 = dateTime1.withDurationAdded((org.joda.time.ReadableDuration) duration30, 39277299);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime34.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property37 = localDateTime34.hourOfDay();
        org.joda.time.LocalDateTime localDateTime39 = localDateTime34.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType40 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str41 = dateTimeFieldType40.getName();
        int int42 = localDateTime34.indexOf(dateTimeFieldType40);
        org.joda.time.LocalDateTime localDateTime44 = localDateTime34.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime46 = localDateTime34.minusSeconds((int) '#');
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str48 = dateTimeFieldType47.getName();
        org.joda.time.LocalDateTime.Property property49 = localDateTime46.property(dateTimeFieldType47);
        int int50 = localDateTime46.getMinuteOfHour();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime46.withMillisOfDay(1);
        org.joda.time.Duration duration54 = org.joda.time.Duration.millis(1645455600000L);
        org.joda.time.Minutes minutes55 = duration54.toStandardMinutes();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period58 = duration57.toPeriod();
        org.joda.time.Duration duration61 = duration57.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime63 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime63.add((org.joda.time.ReadableDuration) duration65, (int) (short) 100);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.DateTime dateTime69 = new org.joda.time.DateTime(chronology68);
        int int70 = dateTime69.getYearOfCentury();
        org.joda.time.Interval interval71 = duration65.toIntervalTo((org.joda.time.ReadableInstant) dateTime69);
        org.joda.time.Duration duration72 = duration61.minus((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period75 = duration74.toPeriod();
        org.joda.time.Duration duration77 = duration61.withDurationAdded((org.joda.time.ReadableDuration) duration74, 54);
        org.joda.time.Duration duration78 = duration54.minus((org.joda.time.ReadableDuration) duration77);
        org.joda.time.LocalDateTime localDateTime79 = localDateTime46.plus((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.DateTime dateTime84 = new org.joda.time.DateTime((long) (short) 1, chronology83);
        org.joda.time.DateTime dateTime85 = dateTime84.toDateTime();
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.DateTime dateTime88 = new org.joda.time.DateTime((long) (short) 1, chronology87);
        org.joda.time.DateTime dateTime89 = dateTime88.toDateTime();
        int int90 = dateTime85.compareTo((org.joda.time.ReadableInstant) dateTime88);
        org.joda.time.Duration duration92 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod93 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime88, (org.joda.time.ReadableDuration) duration92);
        org.joda.time.Duration duration95 = duration81.withDurationAdded((org.joda.time.ReadableDuration) duration92, 10);
        long long96 = duration95.getMillis();
        org.joda.time.Duration duration97 = duration54.plus((org.joda.time.ReadableDuration) duration95);
        boolean boolean98 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration97);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test396");
        org.joda.time.MutableDateTime mutableDateTime2 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((long) 100, 1L, periodType5);
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) 100, 1L, periodType9);
        org.joda.time.Period period11 = period6.plus((org.joda.time.ReadablePeriod) period10);
        org.joda.time.Instant instant12 = new org.joda.time.Instant();
        org.joda.time.Instant instant14 = instant12.withMillis(0L);
        org.joda.time.Duration duration15 = period10.toDurationTo((org.joda.time.ReadableInstant) instant14);
        mutableDateTime2.add((org.joda.time.ReadableDuration) duration15, 39);
        org.joda.time.MutableDateTime.Property property18 = mutableDateTime2.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone19 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime2.setZone(dateTimeZone19);
        int int21 = mutableDateTime2.getYearOfEra();
        int int22 = mutableDateTime2.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property23 = mutableDateTime2.year();
        org.joda.time.MutableDateTime mutableDateTime24 = property23.roundHalfEven();
        org.joda.time.Instant instant26 = new org.joda.time.Instant();
        org.joda.time.Instant instant28 = instant26.withMillis(0L);
        org.joda.time.Chronology chronology29 = instant28.getChronology();
        org.joda.time.DurationField durationField30 = chronology29.eras();
        java.util.Locale locale31 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket33 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology29, locale31, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology35 = null;
        java.util.Locale locale36 = java.util.Locale.GERMAN;
        java.util.Locale locale37 = java.util.Locale.CANADA;
        java.lang.String str38 = locale36.getDisplayVariant(locale37);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket39 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology35, locale37);
        org.joda.time.DateTimeZone dateTimeZone40 = dateTimeParserBucket39.getZone();
        org.joda.time.Chronology chronology41 = chronology29.withZone(dateTimeZone40);
        org.joda.time.LocalTime localTime42 = org.joda.time.LocalTime.now(chronology41);
        org.joda.time.MutableDateTime mutableDateTime43 = mutableDateTime24.toMutableDateTime(chronology41);
        org.joda.time.LocalDate localDate44 = new org.joda.time.LocalDate((-7391L), chronology41);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime2 and mutableDateTime43", (mutableDateTime2.compareTo(mutableDateTime43) == 0) == mutableDateTime2.equals(mutableDateTime43));
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test397");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 43, (long) 86398147);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        org.joda.time.Instant instant6 = new org.joda.time.Instant();
        org.joda.time.Instant instant8 = instant6.withMillis(0L);
        org.joda.time.Chronology chronology9 = instant8.getChronology();
        org.joda.time.DurationField durationField10 = chronology9.eras();
        java.util.Locale locale11 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket13 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology9, locale11, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime14 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime16 = localDateTime14.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property17 = localDateTime14.hourOfDay();
        org.joda.time.DateTimeField dateTimeField18 = property17.getField();
        int int19 = property17.get();
        org.joda.time.LocalDateTime localDateTime20 = property17.roundHalfFloorCopy();
        long long22 = chronology9.set((org.joda.time.ReadablePartial) localDateTime20, (long) 2022);
        org.joda.time.DateTime dateTime23 = dateTime4.toDateTime(chronology9);
        org.joda.time.DateTime dateTime25 = dateTime4.plusDays(22);
        int int26 = dateTime4.getSecondOfMinute();
        org.joda.time.DateMidnight dateMidnight27 = dateTime4.toDateMidnight();
        org.joda.time.ReadableDuration readableDuration28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period(readableDuration28, readableInstant29);
        org.joda.time.Period period32 = period30.withDays((int) (byte) 1);
        org.joda.time.Duration duration33 = period32.toStandardDuration();
        long long34 = duration33.getStandardHours();
        org.joda.time.DateTime dateTime36 = dateTime4.withDurationAdded((org.joda.time.ReadableDuration) duration33, 39277299);
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration33);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime4 and instant6", (dateTime4.compareTo(instant6) == 0) == dateTime4.equals(instant6));
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test398");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(1645455600000L);
        org.joda.time.Minutes minutes2 = duration1.toStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period5 = duration4.toPeriod();
        org.joda.time.Duration duration8 = duration4.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration12, (int) (short) 100);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(chronology15);
        int int17 = dateTime16.getYearOfCentury();
        org.joda.time.Interval interval18 = duration12.toIntervalTo((org.joda.time.ReadableInstant) dateTime16);
        org.joda.time.Duration duration19 = duration8.minus((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.Duration duration24 = duration8.withDurationAdded((org.joda.time.ReadableDuration) duration21, 54);
        org.joda.time.Duration duration25 = duration1.minus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.Period period34 = period29.plus((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Instant instant35 = new org.joda.time.Instant();
        org.joda.time.Instant instant37 = instant35.withMillis(0L);
        org.joda.time.Duration duration38 = period33.toDurationTo((org.joda.time.ReadableInstant) instant37);
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((long) 100, 1L, periodType41);
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((long) 100, 1L, periodType45);
        org.joda.time.Period period47 = period42.plus((org.joda.time.ReadablePeriod) period46);
        org.joda.time.Instant instant48 = new org.joda.time.Instant();
        org.joda.time.Instant instant50 = instant48.withMillis(0L);
        org.joda.time.Duration duration51 = period46.toDurationTo((org.joda.time.ReadableInstant) instant50);
        boolean boolean52 = instant37.isEqual((org.joda.time.ReadableInstant) instant50);
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, (org.joda.time.ReadableInstant) instant37);
        org.joda.time.LocalDateTime localDateTime54 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime56 = localDateTime54.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property57 = localDateTime54.hourOfDay();
        org.joda.time.LocalDateTime localDateTime59 = localDateTime54.plusMillis((int) (byte) 0);
        org.joda.time.DateTime dateTime60 = localDateTime59.toDateTime();
        java.util.Locale locale61 = java.util.Locale.CHINA;
        java.util.Calendar calendar62 = dateTime60.toCalendar(locale61);
        org.joda.time.Period period63 = duration24.toPeriodTo((org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.LocalDate localDate64 = dateTime60.toLocalDate();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime16 and instant35", (dateTime16.compareTo(instant35) == 0) == dateTime16.equals(instant35));
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test399");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 1);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period4 = duration3.toPeriod();
        org.joda.time.Duration duration7 = duration3.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8);
        org.joda.time.Duration duration10 = duration7.toDuration();
        int int11 = duration1.compareTo((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter15 = null;
        java.lang.String str16 = dateTime13.toString(dateTimeFormatter15);
        org.joda.time.DateTime dateTime18 = dateTime13.plusMonths(86396191);
        org.joda.time.DateTime dateTime20 = dateTime13.plusWeeks(45);
        org.joda.time.Instant instant23 = new org.joda.time.Instant();
        org.joda.time.Instant instant25 = instant23.withMillis(0L);
        org.joda.time.Chronology chronology26 = instant25.getChronology();
        org.joda.time.DurationField durationField27 = chronology26.eras();
        java.util.Locale locale28 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket30 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology26, locale28, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime33 = localDateTime31.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property34 = localDateTime31.hourOfDay();
        org.joda.time.DateTimeField dateTimeField35 = property34.getField();
        int int36 = property34.get();
        org.joda.time.LocalDateTime localDateTime37 = property34.roundHalfFloorCopy();
        long long39 = chronology26.set((org.joda.time.ReadablePartial) localDateTime37, (long) 2022);
        org.joda.time.LocalDateTime localDateTime40 = org.joda.time.LocalDateTime.now(chronology26);
        org.joda.time.DateTime dateTime41 = new org.joda.time.DateTime(chronology26);
        org.joda.time.DurationField durationField42 = chronology26.eras();
        java.util.Locale locale46 = new java.util.Locale("hi!", "clockhourOfDay", "java.io.IOException");
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket47 = new org.joda.time.format.DateTimeParserBucket((long) 42, chronology26, locale46);
        org.joda.time.DateTimeZone dateTimeZone48 = dateTimeParserBucket47.getZone();
        int int50 = dateTimeZone48.getOffset((long) 40);
        org.joda.time.DateTime dateTime51 = dateTime20.withZone(dateTimeZone48);
        boolean boolean52 = duration1.equals((java.lang.Object) dateTime20);
        org.joda.time.DateTime.Property property53 = dateTime20.yearOfCentury();
        int int54 = property53.get();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime13 and instant23", (dateTime13.compareTo(instant23) == 0) == dateTime13.equals(instant23));
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test400");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean18 = mutableDateTime1.isSupported(dateTimeFieldType17);
        boolean boolean19 = mutableDateTime1.isBeforeNow();
        int int20 = mutableDateTime1.getSecondOfDay();
        org.joda.time.LocalDateTime localDateTime21 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime23 = localDateTime21.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property24 = localDateTime21.hourOfDay();
        org.joda.time.DateTimeField dateTimeField25 = property24.getField();
        mutableDateTime1.setRounding(dateTimeField25);
        mutableDateTime1.setYear((int) (byte) 1);
        org.joda.time.MutableDateTime.Property property29 = mutableDateTime1.hourOfDay();
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(periodType32);
        org.joda.time.DateTimeZone dateTimeZone34 = null;
        org.joda.time.LocalTime localTime35 = new org.joda.time.LocalTime(dateTimeZone34);
        org.joda.time.LocalTime localTime37 = localTime35.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime39 = localTime37.plusMillis((int) (byte) 100);
        org.joda.time.LocalTime localTime41 = localTime37.plusSeconds(40);
        int int42 = localTime37.getMillisOfSecond();
        org.joda.time.LocalTime localTime44 = localTime37.minusSeconds(86396191);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.DateTime dateTime46 = new org.joda.time.DateTime(chronology45);
        int int47 = dateTime46.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter48 = null;
        java.lang.String str49 = dateTime46.toString(dateTimeFormatter48);
        org.joda.time.DateTime dateTime51 = dateTime46.plusMonths(86396191);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DateTime dateTime55 = new org.joda.time.DateTime(chronology54);
        int int56 = dateTime55.getSecondOfMinute();
        boolean boolean57 = dateTime55.isEqualNow();
        int int58 = dateTime55.getDayOfYear();
        org.joda.time.Chronology chronology59 = dateTime55.getChronology();
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology59);
        org.joda.time.DateTime dateTime61 = dateTime51.toDateTime(chronology59);
        org.joda.time.DurationField durationField62 = chronology59.eras();
        boolean boolean63 = localTime37.equals((java.lang.Object) chronology59);
        org.joda.time.DateTimeZone dateTimeZone64 = chronology59.getZone();
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(41L, 893L, periodType32, chronology59);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.DateTime dateTime69 = new org.joda.time.DateTime(chronology68);
        int int70 = dateTime69.getSecondOfMinute();
        boolean boolean71 = dateTime69.isEqualNow();
        int int72 = dateTime69.getDayOfYear();
        org.joda.time.Instant instant74 = new org.joda.time.Instant();
        org.joda.time.Instant instant76 = instant74.withMillis(0L);
        org.joda.time.Chronology chronology77 = instant76.getChronology();
        org.joda.time.DurationField durationField78 = chronology77.eras();
        java.util.Locale locale79 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket81 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology77, locale79, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology83 = null;
        java.util.Locale locale84 = java.util.Locale.GERMAN;
        java.util.Locale locale85 = java.util.Locale.CANADA;
        java.lang.String str86 = locale84.getDisplayVariant(locale85);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket87 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology83, locale85);
        org.joda.time.DateTimeZone dateTimeZone88 = dateTimeParserBucket87.getZone();
        org.joda.time.Chronology chronology89 = chronology77.withZone(dateTimeZone88);
        org.joda.time.LocalTime localTime90 = org.joda.time.LocalTime.now(chronology89);
        org.joda.time.LocalTime localTime92 = localTime90.plusMillis((int) (byte) -1);
        org.joda.time.Chronology chronology93 = localTime90.getChronology();
        org.joda.time.DateTime dateTime94 = dateTime69.withChronology(chronology93);
        mutablePeriod65.setPeriod((long) 2023, (long) 3, chronology93);
        mutableDateTime1.setChronology(chronology93);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime46", (instant11.compareTo(dateTime46) == 0) == instant11.equals(dateTime46));
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test401");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (-3268332), chronology7);
        org.joda.time.LocalTime localTime9 = org.joda.time.LocalTime.now(chronology7);
        org.joda.time.DateTimeField dateTimeField10 = chronology7.era();
        java.util.Locale locale11 = java.util.Locale.CHINA;
        org.joda.time.LocalDateTime localDateTime12 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime14 = localDateTime12.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property15 = localDateTime12.hourOfDay();
        org.joda.time.LocalDateTime localDateTime17 = localDateTime12.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str19 = dateTimeFieldType18.getName();
        int int20 = localDateTime12.indexOf(dateTimeFieldType18);
        org.joda.time.LocalDateTime localDateTime22 = localDateTime12.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime24 = localDateTime12.minusSeconds((int) '#');
        org.joda.time.DateTimeFieldType dateTimeFieldType25 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str26 = dateTimeFieldType25.getName();
        org.joda.time.LocalDateTime.Property property27 = localDateTime24.property(dateTimeFieldType25);
        int int28 = localDateTime24.getMinuteOfHour();
        org.joda.time.DateTime dateTime29 = localDateTime24.toDateTime();
        org.joda.time.MutableDateTime mutableDateTime31 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((long) 100, 1L, periodType34);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((long) 100, 1L, periodType38);
        org.joda.time.Period period40 = period35.plus((org.joda.time.ReadablePeriod) period39);
        org.joda.time.Instant instant41 = new org.joda.time.Instant();
        org.joda.time.Instant instant43 = instant41.withMillis(0L);
        org.joda.time.Duration duration44 = period39.toDurationTo((org.joda.time.ReadableInstant) instant43);
        mutableDateTime31.add((org.joda.time.ReadableDuration) duration44, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean48 = mutableDateTime31.isSupported(dateTimeFieldType47);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.DateTime dateTime53 = new org.joda.time.DateTime((long) (short) 1, chronology52);
        org.joda.time.DateTime dateTime54 = dateTime53.toDateTime();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.DateTime dateTime57 = new org.joda.time.DateTime((long) (short) 1, chronology56);
        org.joda.time.DateTime dateTime58 = dateTime57.toDateTime();
        int int59 = dateTime54.compareTo((org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime57, (org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration64 = duration50.withDurationAdded((org.joda.time.ReadableDuration) duration61, 10);
        org.joda.time.Duration duration65 = duration64.toDuration();
        mutableDateTime31.add((org.joda.time.ReadableDuration) duration64);
        org.joda.time.DateTime dateTime67 = dateTime29.plus((org.joda.time.ReadableDuration) duration64);
        int int68 = dateTime67.getCenturyOfEra();
        org.joda.time.DateTime.Property property69 = dateTime67.millisOfSecond();
        org.joda.time.Chronology chronology71 = null;
        java.util.Locale locale72 = java.util.Locale.GERMAN;
        java.util.Locale locale73 = java.util.Locale.CANADA;
        java.lang.String str74 = locale72.getDisplayVariant(locale73);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket76 = new org.joda.time.format.DateTimeParserBucket((long) (-1), chronology71, locale73, (java.lang.Integer) 10);
        java.util.Set<java.lang.String> strSet77 = locale73.getUnicodeLocaleAttributes();
        java.lang.String str78 = property69.getAsText(locale73);
        java.lang.String str79 = locale11.getDisplayVariant(locale73);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket80 = new org.joda.time.format.DateTimeParserBucket((long) 653, chronology7, locale73);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and instant41", (dateTime3.compareTo(instant41) == 0) == dateTime3.equals(instant41));
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test402");
        org.joda.time.DateTimeZone dateTimeZone0 = null;
        org.joda.time.LocalTime localTime1 = new org.joda.time.LocalTime(dateTimeZone0);
        org.joda.time.LocalTime localTime3 = localTime1.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime5 = localTime3.plusMillis((int) (byte) 100);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.eras();
        boolean boolean7 = localTime3.isSupported(durationFieldType6);
        org.joda.time.LocalTime localTime9 = localTime3.withMillisOfDay(4);
        java.lang.String str10 = localTime3.toString();
        org.joda.time.MutableDateTime mutableDateTime12 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime12.add((org.joda.time.ReadableDuration) duration14, (int) (short) 100);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.DateTime dateTime18 = new org.joda.time.DateTime(chronology17);
        int int19 = dateTime18.getYearOfCentury();
        org.joda.time.Interval interval20 = duration14.toIntervalTo((org.joda.time.ReadableInstant) dateTime18);
        org.joda.time.MutableDateTime mutableDateTime22 = new org.joda.time.MutableDateTime((long) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime18, (org.joda.time.ReadableInstant) mutableDateTime22);
        org.joda.time.LocalTime localTime24 = localTime3.plus((org.joda.time.ReadablePeriod) mutablePeriod23);
        mutablePeriod23.setMillis(58);
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period(readableDuration27, readableInstant28);
        org.joda.time.Period period31 = period29.multipliedBy(289);
        org.joda.time.MutableDateTime mutableDateTime33 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 100, 1L, periodType36);
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((long) 100, 1L, periodType40);
        org.joda.time.Period period42 = period37.plus((org.joda.time.ReadablePeriod) period41);
        org.joda.time.Instant instant43 = new org.joda.time.Instant();
        org.joda.time.Instant instant45 = instant43.withMillis(0L);
        org.joda.time.Duration duration46 = period41.toDurationTo((org.joda.time.ReadableInstant) instant45);
        mutableDateTime33.add((org.joda.time.ReadableDuration) duration46, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType49 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean50 = mutableDateTime33.isSupported(dateTimeFieldType49);
        int int51 = mutableDateTime33.getWeekOfWeekyear();
        org.joda.time.Instant instant53 = new org.joda.time.Instant();
        org.joda.time.Instant instant55 = instant53.withMillis(0L);
        org.joda.time.Chronology chronology56 = instant55.getChronology();
        org.joda.time.DurationField durationField57 = chronology56.eras();
        java.util.Locale locale58 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket60 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology56, locale58, (java.lang.Integer) 39221019);
        mutableDateTime33.setChronology(chronology56);
        org.joda.time.MutableDateTime mutableDateTime63 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period((long) 100, 1L, periodType66);
        org.joda.time.PeriodType periodType70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period((long) 100, 1L, periodType70);
        org.joda.time.Period period72 = period67.plus((org.joda.time.ReadablePeriod) period71);
        org.joda.time.Instant instant73 = new org.joda.time.Instant();
        org.joda.time.Instant instant75 = instant73.withMillis(0L);
        org.joda.time.Duration duration76 = period71.toDurationTo((org.joda.time.ReadableInstant) instant75);
        mutableDateTime63.add((org.joda.time.ReadableDuration) duration76, 39);
        org.joda.time.MutableDateTime.Property property79 = mutableDateTime63.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone80 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime63.setZone(dateTimeZone80);
        org.joda.time.MutableDateTime mutableDateTime82 = new org.joda.time.MutableDateTime((java.lang.Object) mutableDateTime33, dateTimeZone80);
        org.joda.time.DurationFieldType durationFieldType83 = org.joda.time.DurationFieldType.days();
        mutableDateTime33.add(durationFieldType83, 13);
        boolean boolean86 = period31.isSupported(durationFieldType83);
        boolean boolean87 = mutablePeriod23.isSupported(durationFieldType83);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime18 and instant43", (dateTime18.compareTo(instant43) == 0) == dateTime18.equals(instant43));
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test403");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration3, (int) (short) 100);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DateTime dateTime7 = new org.joda.time.DateTime(chronology6);
        int int8 = dateTime7.getYearOfCentury();
        org.joda.time.Interval interval9 = duration3.toIntervalTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.MutableDateTime mutableDateTime11 = new org.joda.time.MutableDateTime((long) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime7, (org.joda.time.ReadableInstant) mutableDateTime11);
        mutableDateTime11.addDays(2);
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        java.lang.String str16 = dateTimeFieldType15.toString();
        int int17 = mutableDateTime11.get(dateTimeFieldType15);
        mutableDateTime11.add((long) 75596);
        mutableDateTime11.setMillisOfDay(70);
        java.lang.String str23 = mutableDateTime11.toString("52");
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.DateTime dateTime26 = new org.joda.time.DateTime((long) (short) 1, chronology25);
        org.joda.time.Instant instant27 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime26, (org.joda.time.ReadableInstant) instant27, periodType28);
        org.joda.time.MutableDateTime mutableDateTime30 = instant27.toMutableDateTimeISO();
        org.joda.time.Instant instant31 = instant27.toInstant();
        mutableDateTime11.setDate((org.joda.time.ReadableInstant) instant27);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant27", (dateTime7.compareTo(instant27) == 0) == dateTime7.equals(instant27));
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test404");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str9 = mutablePeriod8.toString();
        org.joda.time.DateTime dateTime10 = dateTime1.plus((org.joda.time.ReadablePeriod) mutablePeriod8);
        mutablePeriod8.setDays(56);
        int int13 = mutablePeriod8.getMinutes();
        mutablePeriod8.setPeriod((long) 13, (long) 53750160);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Duration duration23 = duration19.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant24);
        long long26 = duration23.getStandardDays();
        org.joda.time.Duration duration27 = duration23.toDuration();
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period33 = period31.minusSeconds((-1));
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period36 = duration35.toPeriod();
        org.joda.time.DurationFieldType durationFieldType37 = org.joda.time.DurationFieldType.centuries();
        int int38 = period36.get(durationFieldType37);
        boolean boolean39 = period31.isSupported(durationFieldType37);
        org.joda.time.MutableDateTime mutableDateTime41 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((long) 100, 1L, periodType44);
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) 100, 1L, periodType48);
        org.joda.time.Period period50 = period45.plus((org.joda.time.ReadablePeriod) period49);
        org.joda.time.Instant instant51 = new org.joda.time.Instant();
        org.joda.time.Instant instant53 = instant51.withMillis(0L);
        org.joda.time.Duration duration54 = period49.toDurationTo((org.joda.time.ReadableInstant) instant53);
        mutableDateTime41.add((org.joda.time.ReadableDuration) duration54, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType57 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean58 = mutableDateTime41.isSupported(dateTimeFieldType57);
        org.joda.time.DurationFieldType durationFieldType59 = dateTimeFieldType57.getDurationType();
        int int60 = period31.get(durationFieldType59);
        org.joda.time.MutableDateTime mutableDateTime63 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.MutableDateTime.Property property64 = mutableDateTime63.minuteOfHour();
        org.joda.time.DateTimeFieldType dateTimeFieldType65 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType66 = dateTimeFieldType65.getRangeDurationType();
        org.joda.time.DateTimeFieldType dateTimeFieldType67 = org.joda.time.DateTimeFieldType.dayOfYear();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.DateTime dateTime70 = new org.joda.time.DateTime(chronology69);
        int int71 = dateTime70.getSecondOfMinute();
        boolean boolean72 = dateTime70.isEqualNow();
        int int73 = dateTime70.getDayOfYear();
        org.joda.time.Chronology chronology74 = dateTime70.getChronology();
        java.util.Locale locale75 = java.util.Locale.SIMPLIFIED_CHINESE;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket76 = new org.joda.time.format.DateTimeParserBucket(315532800097L, chronology74, locale75);
        org.joda.time.DateTimeField dateTimeField77 = dateTimeFieldType67.getField(chronology74);
        org.joda.time.DurationField durationField78 = durationFieldType66.getField(chronology74);
        mutableDateTime63.setChronology(chronology74);
        org.joda.time.LocalTime localTime80 = org.joda.time.LocalTime.fromMillisOfDay(39217210L, chronology74);
        org.joda.time.DateTimeField dateTimeField81 = chronology74.weekOfWeekyear();
        boolean boolean82 = durationFieldType59.isSupported(chronology74);
        org.joda.time.Period period83 = duration27.toPeriod(chronology74);
        mutablePeriod8.add((long) 39391192, chronology74);
        org.joda.time.DateTimeField dateTimeField85 = chronology74.yearOfEra();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant51", (dateTime1.compareTo(instant51) == 0) == dateTime1.equals(instant51));
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test405");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration3, (int) (short) 100);
        org.joda.time.LocalDateTime localDateTime6 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property7 = localDateTime6.monthOfYear();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime((long) (short) 1, chronology9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) instant11, periodType12);
        org.joda.time.DateTimeFieldType dateTimeFieldType14 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int15 = instant11.get(dateTimeFieldType14);
        org.joda.time.LocalDateTime localDateTime17 = localDateTime6.withField(dateTimeFieldType14, 39);
        org.joda.time.LocalDateTime localDateTime19 = localDateTime17.minusSeconds(52);
        int int20 = localDateTime19.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime19.plusWeeks(22);
        org.joda.time.DateTime dateTime23 = localDateTime19.toDateTime();
        org.joda.time.MutableDateTime mutableDateTime25 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.Period period34 = period29.plus((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Instant instant35 = new org.joda.time.Instant();
        org.joda.time.Instant instant37 = instant35.withMillis(0L);
        org.joda.time.Duration duration38 = period33.toDurationTo((org.joda.time.ReadableInstant) instant37);
        mutableDateTime25.add((org.joda.time.ReadableDuration) duration38, 39);
        org.joda.time.MutableDateTime.Property property41 = mutableDateTime25.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone42 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime25.setZone(dateTimeZone42);
        org.joda.time.DateTime dateTime44 = dateTime23.withZone(dateTimeZone42);
        org.joda.time.Interval interval45 = duration3.toIntervalFrom((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.DateTime dateTime50 = new org.joda.time.DateTime((long) (short) 1, chronology49);
        org.joda.time.DateTime dateTime51 = dateTime50.toDateTime();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime((long) (short) 1, chronology53);
        org.joda.time.DateTime dateTime55 = dateTime54.toDateTime();
        int int56 = dateTime51.compareTo((org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration61 = duration47.withDurationAdded((org.joda.time.ReadableDuration) duration58, 10);
        long long62 = duration61.getMillis();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period65 = duration64.toPeriod();
        org.joda.time.Duration duration68 = duration64.withDurationAdded((long) 38, (int) 'a');
        int int69 = duration61.compareTo((org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.MutableDateTime mutableDateTime72 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime72.add((org.joda.time.ReadableDuration) duration74, (int) (short) 100);
        mutableDateTime72.setYear(10);
        mutableDateTime72.addSeconds((int) (short) 0);
        org.joda.time.MutableDateTime.Property property81 = mutableDateTime72.minuteOfHour();
        org.joda.time.Period period82 = duration68.toPeriodFrom((org.joda.time.ReadableInstant) mutableDateTime72);
        org.joda.time.MutableDateTime mutableDateTime83 = mutableDateTime72.copy();
        mutableDateTime83.setMillisOfDay(1969);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime23 and dateTime44", (dateTime23.compareTo(dateTime44) == 0) == dateTime23.equals(dateTime44));
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test406");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        long long3 = dateTimeZone0.adjustOffset(0L, true);
        org.joda.time.DateTimeZone dateTimeZone5 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime6 = new org.joda.time.MutableDateTime(0L, dateTimeZone5);
        int int7 = dateTimeZone0.getOffset((org.joda.time.ReadableInstant) mutableDateTime6);
        mutableDateTime6.addMillis((int) '#');
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((long) 100, 1L, periodType12);
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((long) 100, 1L, periodType16);
        org.joda.time.Period period18 = period13.plus((org.joda.time.ReadablePeriod) period17);
        org.joda.time.MutablePeriod mutablePeriod19 = period18.toMutablePeriod();
        java.lang.Object obj20 = mutablePeriod19.clone();
        org.joda.time.PeriodType periodType21 = mutablePeriod19.getPeriodType();
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period32 = period27.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.Instant instant35 = instant33.withMillis(0L);
        org.joda.time.Duration duration36 = period31.toDurationTo((org.joda.time.ReadableInstant) instant35);
        mutableDateTime23.add((org.joda.time.ReadableDuration) duration36, 39);
        org.joda.time.MutableDateTime.Property property39 = mutableDateTime23.yearOfEra();
        mutableDateTime23.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property42 = mutableDateTime23.minuteOfDay();
        org.joda.time.DurationField durationField43 = property42.getRangeDurationField();
        org.joda.time.DurationFieldType durationFieldType44 = durationField43.getType();
        mutablePeriod19.set(durationFieldType44, 120);
        mutableDateTime6.add(durationFieldType44, 0);
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period(readableDuration49, readableInstant50);
        org.joda.time.PeriodType periodType54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((long) 100, 1L, periodType54);
        org.joda.time.Period period57 = period55.minusSeconds((-1));
        java.lang.String str58 = period55.toString();
        org.joda.time.Period period59 = period55.toPeriod();
        org.joda.time.PeriodType periodType60 = period55.getPeriodType();
        org.joda.time.Period period61 = period51.normalizedStandard(periodType60);
        org.joda.time.Period period63 = period61.withSeconds(10);
        org.joda.time.DurationFieldType durationFieldType64 = org.joda.time.DurationFieldType.millis();
        boolean boolean65 = period61.isSupported(durationFieldType64);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.DateTime dateTime69 = new org.joda.time.DateTime(chronology68);
        int int70 = dateTime69.getSecondOfMinute();
        boolean boolean71 = dateTime69.isEqualNow();
        int int72 = dateTime69.getDayOfYear();
        org.joda.time.Chronology chronology73 = dateTime69.getChronology();
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology73);
        org.joda.time.DateTimeField dateTimeField75 = chronology73.year();
        org.joda.time.DateTimeField dateTimeField76 = chronology73.dayOfMonth();
        org.joda.time.LocalDateTime localDateTime77 = org.joda.time.LocalDateTime.now(chronology73);
        org.joda.time.DateTimeField dateTimeField78 = chronology73.minuteOfDay();
        org.joda.time.DurationField durationField79 = durationFieldType64.getField(chronology73);
        org.joda.time.DateTimeField dateTimeField80 = chronology73.secondOfMinute();
        org.joda.time.MutableDateTime mutableDateTime81 = mutableDateTime6.toMutableDateTime(chronology73);
        mutableDateTime6.setYear(39413204);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant33 and dateTime69", (instant33.compareTo(dateTime69) == 0) == instant33.equals(dateTime69));
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test407");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.LocalTime localTime2 = new org.joda.time.LocalTime((long) (short) 100, chronology1);
        org.joda.time.DateTime dateTime3 = localTime2.toDateTimeToday();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) 39221019);
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.PeriodType periodType8 = periodType7.withSecondsRemoved();
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime3, (org.joda.time.ReadableDuration) duration5, periodType7);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime((long) (short) 1, chronology11);
        org.joda.time.DateTime.Property property13 = dateTime12.dayOfWeek();
        java.util.Locale locale14 = java.util.Locale.GERMAN;
        java.util.Locale locale15 = locale14.stripExtensions();
        int int16 = property13.getMaximumTextLength(locale14);
        org.joda.time.DateTime dateTime17 = property13.roundHalfCeilingCopy();
        java.lang.Object obj18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(obj18);
        boolean boolean21 = dateTime19.isBefore((long) (short) 100);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardDays((-1L));
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period32 = period27.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Period period34 = period32.withMillis(39251693);
        org.joda.time.ReadableDuration readableDuration35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period(readableDuration35, readableInstant36);
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((long) 100, 1L, periodType40);
        org.joda.time.Period period43 = period41.minusSeconds((-1));
        java.lang.String str44 = period41.toString();
        org.joda.time.Period period45 = period41.toPeriod();
        org.joda.time.PeriodType periodType46 = period41.getPeriodType();
        org.joda.time.Period period47 = period37.normalizedStandard(periodType46);
        java.lang.String str48 = periodType46.getName();
        org.joda.time.PeriodType periodType49 = periodType46.withMinutesRemoved();
        org.joda.time.PeriodType periodType50 = periodType49.withMonthsRemoved();
        org.joda.time.Period period51 = period34.normalizedStandard(periodType49);
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime19, (org.joda.time.ReadableDuration) duration23, periodType49);
        org.joda.time.DateTime dateTime53 = dateTime17.minus((org.joda.time.ReadableDuration) duration23);
        org.joda.time.PeriodType periodType56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((long) 100, 1L, periodType56);
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((long) 100, 1L, periodType60);
        org.joda.time.Period period62 = period57.plus((org.joda.time.ReadablePeriod) period61);
        org.joda.time.Instant instant63 = new org.joda.time.Instant();
        org.joda.time.Instant instant65 = instant63.withMillis(0L);
        org.joda.time.Duration duration66 = period61.toDurationTo((org.joda.time.ReadableInstant) instant65);
        org.joda.time.Seconds seconds67 = duration66.toStandardSeconds();
        boolean boolean68 = duration23.isEqual((org.joda.time.ReadableDuration) duration66);
        int int69 = duration5.compareTo((org.joda.time.ReadableDuration) duration23);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime19 and instant63", (dateTime19.compareTo(instant63) == 0) == dateTime19.equals(instant63));
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test408");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        boolean boolean26 = instant11.isEqual((org.joda.time.ReadableInstant) instant24);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 1);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period31 = duration30.toPeriod();
        org.joda.time.Duration duration34 = duration30.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant35);
        org.joda.time.Duration duration37 = duration34.toDuration();
        int int38 = duration28.compareTo((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Instant instant39 = instant11.minus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.DateTime dateTime41 = new org.joda.time.DateTime(chronology40);
        int int42 = dateTime41.getSecondOfMinute();
        int int43 = dateTime41.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str49 = mutablePeriod48.toString();
        org.joda.time.DateTime dateTime50 = dateTime41.plus((org.joda.time.ReadablePeriod) mutablePeriod48);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, (org.joda.time.ReadableInstant) dateTime41);
        mutablePeriod51.addHours(655);
        org.joda.time.DateTimeFieldType dateTimeFieldType54 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType55 = dateTimeFieldType54.getRangeDurationType();
        org.joda.time.DateTimeFieldType dateTimeFieldType56 = org.joda.time.DateTimeFieldType.dayOfYear();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.DateTime dateTime59 = new org.joda.time.DateTime(chronology58);
        int int60 = dateTime59.getSecondOfMinute();
        boolean boolean61 = dateTime59.isEqualNow();
        int int62 = dateTime59.getDayOfYear();
        org.joda.time.Chronology chronology63 = dateTime59.getChronology();
        java.util.Locale locale64 = java.util.Locale.SIMPLIFIED_CHINESE;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket65 = new org.joda.time.format.DateTimeParserBucket(315532800097L, chronology63, locale64);
        org.joda.time.DateTimeField dateTimeField66 = dateTimeFieldType56.getField(chronology63);
        org.joda.time.DurationField durationField67 = durationFieldType55.getField(chronology63);
        int int68 = mutablePeriod51.get(durationFieldType55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime41", (instant9.compareTo(dateTime41) == 0) == instant9.equals(dateTime41));
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test409");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.DateTime.Property property2 = dateTime1.millisOfDay();
        org.joda.time.DateTimeField dateTimeField3 = property2.getField();
        org.joda.time.DateTime dateTime4 = property2.withMinimumValue();
        java.util.Locale locale5 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str6 = property2.getAsShortText(locale5);
        org.joda.time.DateTimeField dateTimeField7 = property2.getField();
        int int8 = property2.getMaximumValueOverall();
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.Period period19 = period14.plus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Instant instant20 = new org.joda.time.Instant();
        org.joda.time.Instant instant22 = instant20.withMillis(0L);
        org.joda.time.Duration duration23 = period18.toDurationTo((org.joda.time.ReadableInstant) instant22);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration23, 39);
        org.joda.time.MutableDateTime.Property property26 = mutableDateTime10.yearOfEra();
        mutableDateTime10.setWeekOfWeekyear(14);
        org.joda.time.LocalDate localDate29 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate31 = localDate29.minusMonths((int) ' ');
        org.joda.time.Chronology chronology32 = localDate29.getChronology();
        org.joda.time.DateTimeField dateTimeField33 = chronology32.minuteOfDay();
        mutableDateTime10.setChronology(chronology32);
        org.joda.time.DateTimeZone dateTimeZone35 = chronology32.getZone();
        java.util.Locale locale37 = java.util.Locale.US;
        java.lang.String str38 = dateTimeZone35.getName(44L, locale37);
        int int39 = property2.getMaximumShortTextLength(locale37);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant20", (dateTime1.compareTo(instant20) == 0) == dateTime1.equals(instant20));
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test410");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) 'x');
        org.joda.time.DateTimeFieldType dateTimeFieldType2 = org.joda.time.DateTimeFieldType.millisOfDay();
        mutableDateTime1.set(dateTimeFieldType2, 35);
        org.joda.time.MutableDateTime mutableDateTime6 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) 100, 1L, periodType9);
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.Period period15 = period10.plus((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Instant instant16 = new org.joda.time.Instant();
        org.joda.time.Instant instant18 = instant16.withMillis(0L);
        org.joda.time.Duration duration19 = period14.toDurationTo((org.joda.time.ReadableInstant) instant18);
        mutableDateTime6.add((org.joda.time.ReadableDuration) duration19, 39);
        org.joda.time.MutableDateTime.Property property22 = mutableDateTime6.secondOfMinute();
        mutableDateTime6.addYears(3);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period27 = duration26.toPeriod();
        org.joda.time.Duration duration30 = duration26.withDurationAdded((long) 38, (int) 'a');
        long long31 = duration26.getStandardMinutes();
        mutableDateTime6.add((org.joda.time.ReadableDuration) duration26);
        mutableDateTime1.setTime((org.joda.time.ReadableInstant) mutableDateTime6);
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((-60494601599990L));
        org.joda.time.MutablePeriod mutablePeriod36 = mutablePeriod35.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType37 = org.joda.time.DurationFieldType.minutes();
        mutablePeriod35.add(durationFieldType37, 1970);
        mutableDateTime6.add(durationFieldType37, 54);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.DateTime dateTime43 = new org.joda.time.DateTime(chronology42);
        org.joda.time.Instant instant45 = new org.joda.time.Instant();
        org.joda.time.Instant instant47 = instant45.withMillis(0L);
        org.joda.time.Chronology chronology48 = instant47.getChronology();
        org.joda.time.DurationField durationField49 = chronology48.eras();
        java.util.Locale locale50 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket52 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology48, locale50, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime53 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime55 = localDateTime53.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property56 = localDateTime53.hourOfDay();
        org.joda.time.DateTimeField dateTimeField57 = property56.getField();
        int int58 = property56.get();
        org.joda.time.LocalDateTime localDateTime59 = property56.roundHalfFloorCopy();
        long long61 = chronology48.set((org.joda.time.ReadablePartial) localDateTime59, (long) 2022);
        org.joda.time.DateTime dateTime62 = dateTime43.toDateTime(chronology48);
        org.joda.time.DateTime.Property property63 = dateTime43.millisOfDay();
        org.joda.time.MutableDateTime mutableDateTime65 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime65.add((org.joda.time.ReadableDuration) duration67, (int) (short) 100);
        mutableDateTime65.setYear(10);
        mutableDateTime65.addSeconds((int) (short) 0);
        org.joda.time.MutableDateTime.Property property74 = mutableDateTime65.minuteOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType75 = property74.getFieldType();
        org.joda.time.DateTime.Property property76 = dateTime43.property(dateTimeFieldType75);
        mutableDateTime6.set(dateTimeFieldType75, 20);
        org.joda.time.MutableDateTime.Property property79 = mutableDateTime6.year();
        org.joda.time.MutableDateTime mutableDateTime81 = property79.add((long) 39324);
        mutableDateTime81.addHours(654);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant16 and dateTime43", (instant16.compareTo(dateTime43) == 0) == instant16.equals(dateTime43));
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test411");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) (byte) -1);
        java.util.Locale locale2 = java.util.Locale.GERMAN;
        java.lang.String str3 = locale2.getDisplayName();
        java.util.Calendar calendar4 = mutableDateTime1.toCalendar(locale2);
        mutableDateTime1.addMonths(20);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period9 = duration8.toPeriod();
        org.joda.time.Duration duration12 = duration8.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant13);
        org.joda.time.Duration duration15 = duration12.toDuration();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period18 = duration17.toPeriod();
        org.joda.time.Duration duration21 = duration17.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 100, 1L, periodType24);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.Period period30 = period25.plus((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Instant instant31 = new org.joda.time.Instant();
        org.joda.time.Instant instant33 = instant31.withMillis(0L);
        org.joda.time.Duration duration34 = period29.toDurationTo((org.joda.time.ReadableInstant) instant33);
        org.joda.time.Instant instant36 = instant33.plus((long) (byte) -1);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime((long) (short) 1, chronology38);
        org.joda.time.Instant instant40 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableInstant) instant40, periodType41);
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration17, (org.joda.time.ReadableInstant) instant33, periodType41);
        int int44 = duration12.compareTo((org.joda.time.ReadableDuration) duration17);
        org.joda.time.LocalDateTime localDateTime45 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property46 = localDateTime45.monthOfYear();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.DateTime dateTime49 = new org.joda.time.DateTime((long) (short) 1, chronology48);
        org.joda.time.Instant instant50 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime49, (org.joda.time.ReadableInstant) instant50, periodType51);
        org.joda.time.DateTimeFieldType dateTimeFieldType53 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int54 = instant50.get(dateTimeFieldType53);
        org.joda.time.LocalDateTime localDateTime56 = localDateTime45.withField(dateTimeFieldType53, 39);
        org.joda.time.LocalDateTime localDateTime58 = localDateTime56.minusSeconds(52);
        int int59 = localDateTime58.getYearOfCentury();
        org.joda.time.LocalDateTime localDateTime61 = localDateTime58.plusWeeks(22);
        org.joda.time.ReadableDuration readableDuration62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period(readableDuration62, readableInstant63);
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((long) 100, 1L, periodType67);
        org.joda.time.Period period70 = period68.minusSeconds((-1));
        java.lang.String str71 = period68.toString();
        org.joda.time.Period period72 = period68.toPeriod();
        org.joda.time.PeriodType periodType73 = period68.getPeriodType();
        org.joda.time.Period period74 = period64.normalizedStandard(periodType73);
        org.joda.time.Period period76 = period74.withSeconds(10);
        int int77 = period74.size();
        org.joda.time.LocalDateTime localDateTime78 = localDateTime58.plus((org.joda.time.ReadablePeriod) period74);
        org.joda.time.PeriodType periodType79 = period74.getPeriodType();
        org.joda.time.PeriodType periodType80 = periodType79.withMonthsRemoved();
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableInstant) mutableDateTime1, (org.joda.time.ReadableDuration) duration12, periodType80);
        org.joda.time.LocalDateTime localDateTime82 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime84 = localDateTime82.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property85 = localDateTime82.hourOfDay();
        org.joda.time.LocalDateTime localDateTime87 = localDateTime82.plusMillis((int) (byte) 0);
        org.joda.time.DateTime dateTime88 = localDateTime82.toDateTime();
        org.joda.time.DateTime dateTime90 = dateTime88.withYear(53644753);
        int int91 = dateTime90.getMillisOfSecond();
        org.joda.time.DateTime dateTime93 = dateTime90.minusMinutes(365);
        org.joda.time.Duration duration95 = org.joda.time.Duration.standardSeconds((long) 49);
        org.joda.time.DateTime dateTime96 = dateTime90.minus((org.joda.time.ReadableDuration) duration95);
        org.joda.time.Period period97 = duration12.toPeriodFrom((org.joda.time.ReadableInstant) dateTime96);
        org.joda.time.Period period99 = period97.minusHours(119);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant31 and dateTime88", (instant31.compareTo(dateTime88) == 0) == instant31.equals(dateTime88));
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test412");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration3, (int) (short) 100);
        mutableDateTime1.setYear(10);
        mutableDateTime1.addSeconds((int) (short) 0);
        org.joda.time.MutableDateTime.Property property10 = mutableDateTime1.minuteOfDay();
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = property10.getFieldType();
        org.joda.time.MutableDateTime mutableDateTime12 = property10.roundHalfEven();
        org.joda.time.MutableDateTime mutableDateTime14 = new org.joda.time.MutableDateTime((long) '4');
        mutableDateTime14.addWeeks((int) (short) 0);
        org.joda.time.MutableDateTime mutableDateTime17 = mutableDateTime14.copy();
        mutableDateTime17.add((long) 40);
        org.joda.time.MutableDateTime mutableDateTime22 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) 100, 1L, periodType25);
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) 100, 1L, periodType29);
        org.joda.time.Period period31 = period26.plus((org.joda.time.ReadablePeriod) period30);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.Instant instant34 = instant32.withMillis(0L);
        org.joda.time.Duration duration35 = period30.toDurationTo((org.joda.time.ReadableInstant) instant34);
        mutableDateTime22.add((org.joda.time.ReadableDuration) duration35, 39);
        org.joda.time.MutableDateTime.Property property38 = mutableDateTime22.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime22.setZone(dateTimeZone39);
        org.joda.time.Chronology chronology42 = null;
        java.util.Locale locale43 = java.util.Locale.GERMAN;
        java.util.Locale locale44 = locale43.stripExtensions();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket47 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology42, locale43, (java.lang.Integer) 45, (int) '4');
        org.joda.time.DateTimeZone dateTimeZone48 = dateTimeParserBucket47.getZone();
        long long50 = dateTimeZone39.getMillisKeepLocal(dateTimeZone48, 315532800097L);
        org.joda.time.LocalTime localTime51 = new org.joda.time.LocalTime((long) 31, dateTimeZone39);
        java.lang.String str53 = dateTimeZone39.getShortName((-1511999969L));
        org.joda.time.DateTime dateTime54 = mutableDateTime17.toDateTime(dateTimeZone39);
        mutableDateTime12.setMillis((org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.DateTime dateTime57 = dateTime54.minusMonths(53921);
        int int58 = dateTime57.getMinuteOfHour();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime1 and dateTime54", (mutableDateTime1.compareTo(dateTime54) == 0) == mutableDateTime1.equals(dateTime54));
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test413");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTime.Property property3 = dateTime2.dayOfWeek();
        org.joda.time.DateTime.Property property4 = dateTime2.weekOfWeekyear();
        boolean boolean6 = dateTime2.isAfter((long) 25);
        org.joda.time.MutableDateTime mutableDateTime8 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.Period period17 = period12.plus((org.joda.time.ReadablePeriod) period16);
        org.joda.time.Instant instant18 = new org.joda.time.Instant();
        org.joda.time.Instant instant20 = instant18.withMillis(0L);
        org.joda.time.Duration duration21 = period16.toDurationTo((org.joda.time.ReadableInstant) instant20);
        mutableDateTime8.add((org.joda.time.ReadableDuration) duration21, 39);
        org.joda.time.MutableDateTime.Property property24 = mutableDateTime8.yearOfEra();
        mutableDateTime8.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property27 = mutableDateTime8.minuteOfDay();
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.UTC;
        long long31 = dateTimeZone28.convertLocalToUTC((long) (byte) 100, false);
        mutableDateTime8.setZone(dateTimeZone28);
        org.joda.time.DateTime dateTime33 = dateTime2.toDateTime(dateTimeZone28);
        org.joda.time.DateTimeZone dateTimeZone34 = org.joda.time.DateTimeZone.UTC;
        long long37 = dateTimeZone34.convertLocalToUTC((long) (byte) 100, false);
        org.joda.time.DateTime dateTime38 = dateTime2.withZoneRetainFields(dateTimeZone34);
        org.joda.time.LocalDate localDate39 = new org.joda.time.LocalDate(dateTimeZone34);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime2 and dateTime33", (dateTime2.compareTo(dateTime33) == 0) == dateTime2.equals(dateTime33));
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test414");
        org.joda.time.Instant instant1 = new org.joda.time.Instant((long) 39221019);
        org.joda.time.Instant instant3 = instant1.minus((long) 8);
        org.joda.time.Instant instant4 = instant1.toInstant();
        org.joda.time.DateTime dateTime5 = instant4.toDateTimeISO();
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((long) 100, 1L, periodType12);
        org.joda.time.Period period14 = period9.plus((org.joda.time.ReadablePeriod) period13);
        org.joda.time.Period period16 = period14.withMillis(39251693);
        org.joda.time.Period period18 = period14.plusMinutes((int) (short) 100);
        java.lang.Object obj19 = null;
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(obj19);
        org.joda.time.DateTime.Property property21 = dateTime20.millisOfDay();
        org.joda.time.LocalDateTime localDateTime22 = dateTime20.toLocalDateTime();
        org.joda.time.MutableDateTime mutableDateTime23 = dateTime20.toMutableDateTime();
        mutableDateTime23.add(3161721603135L);
        org.joda.time.MutableDateTime.Property property26 = mutableDateTime23.hourOfDay();
        org.joda.time.Duration duration27 = period18.toDurationFrom((org.joda.time.ReadableInstant) mutableDateTime23);
        org.joda.time.Instant instant29 = instant4.withDurationAdded((org.joda.time.ReadableDuration) duration27, 152040);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and dateTime5", (instant4.compareTo(dateTime5) == 0) == instant4.equals(dateTime5));
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test415");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardDays((-1L));
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardDays((long) (byte) 1);
        java.lang.String str10 = duration9.toString();
        org.joda.time.Duration duration11 = duration7.plus((org.joda.time.ReadableDuration) duration9);
        int int12 = duration5.compareTo((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Instant instant13 = new org.joda.time.Instant();
        org.joda.time.Instant instant15 = instant13.withMillis(0L);
        org.joda.time.Chronology chronology16 = instant15.getChronology();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period19 = duration18.toPeriod();
        org.joda.time.Duration duration21 = duration18.plus(1L);
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period32 = period27.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.Instant instant35 = instant33.withMillis(0L);
        org.joda.time.Duration duration36 = period31.toDurationTo((org.joda.time.ReadableInstant) instant35);
        mutableDateTime23.add((org.joda.time.ReadableDuration) duration36, 39);
        int int39 = duration18.compareTo((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Instant instant41 = instant15.withDurationAdded((org.joda.time.ReadableDuration) duration36, 0);
        org.joda.time.Instant instant42 = instant15.toInstant();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DateTime dateTime47 = new org.joda.time.DateTime((long) (short) 1, chronology46);
        org.joda.time.DateTime dateTime48 = dateTime47.toDateTime();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.DateTime dateTime51 = new org.joda.time.DateTime((long) (short) 1, chronology50);
        org.joda.time.DateTime dateTime52 = dateTime51.toDateTime();
        int int53 = dateTime48.compareTo((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime51, (org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration58 = duration44.withDurationAdded((org.joda.time.ReadableDuration) duration55, 10);
        java.lang.String str59 = duration44.toString();
        org.joda.time.Instant instant60 = instant42.minus((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.DateTime dateTime63 = new org.joda.time.DateTime((long) (short) 1, chronology62);
        org.joda.time.Instant instant64 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) instant64, periodType65);
        org.joda.time.DateTimeFieldType dateTimeFieldType67 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int68 = instant64.get(dateTimeFieldType67);
        org.joda.time.Duration duration71 = new org.joda.time.Duration((long) 10, (long) 3);
        org.joda.time.Instant instant73 = instant64.withDurationAdded((org.joda.time.ReadableDuration) duration71, 0);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.seconds();
        org.joda.time.LocalDate localDate76 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate78 = localDate76.minusMonths((int) ' ');
        org.joda.time.Chronology chronology79 = localDate76.getChronology();
        java.util.Locale locale80 = null;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket83 = new org.joda.time.format.DateTimeParserBucket(0L, chronology79, locale80, (java.lang.Integer) 59, 12);
        long long87 = chronology79.add((long) '#', (long) 1970, 6);
        org.joda.time.DateTimeField dateTimeField88 = chronology79.millisOfSecond();
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((java.lang.Object) duration71, periodType74, chronology79);
        org.joda.time.PeriodType periodType90 = mutablePeriod89.getPeriodType();
        org.joda.time.Period period91 = duration9.toPeriodTo((org.joda.time.ReadableInstant) instant42, periodType90);
        org.joda.time.MutableDateTime mutableDateTime92 = instant42.toMutableDateTime();
        org.joda.time.Instant instant94 = instant42.minus((long) 20);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant42 and mutableDateTime92", (instant42.compareTo(mutableDateTime92) == 0) == instant42.equals(mutableDateTime92));
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test416");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        java.lang.Object obj18 = null;
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(obj18);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime20.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime24 = localDateTime22.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField26 = localDateTime24.getField((int) (byte) 0);
        long long28 = dateTimeField26.roundHalfEven((long) 1);
        int int29 = dateTime19.get(dateTimeField26);
        mutableDateTime1.setRounding(dateTimeField26);
        mutableDateTime1.addMillis(45);
        org.joda.time.MutableDateTime.Property property33 = mutableDateTime1.yearOfEra();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime19", (instant11.compareTo(dateTime19) == 0) == instant11.equals(dateTime19));
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test417");
        java.util.Locale.Category category0 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale1 = java.util.Locale.getDefault(category0);
        org.joda.time.LocalDateTime localDateTime2 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime4 = localDateTime2.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property5 = localDateTime2.hourOfDay();
        java.util.Locale locale6 = java.util.Locale.US;
        java.lang.String str7 = property5.getAsShortText(locale6);
        java.util.Locale.setDefault(category0, locale6);
        java.lang.String str9 = locale6.getDisplayCountry();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period12 = duration11.toPeriod();
        org.joda.time.Duration duration15 = duration11.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime17 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime17.add((org.joda.time.ReadableDuration) duration19, (int) (short) 100);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime(chronology22);
        int int24 = dateTime23.getYearOfCentury();
        org.joda.time.Interval interval25 = duration19.toIntervalTo((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration26 = duration15.minus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.DateTime dateTime29 = new org.joda.time.DateTime((long) (short) 1, chronology28);
        org.joda.time.DateTime dateTime30 = dateTime29.toDateTime();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.DateTime dateTime33 = new org.joda.time.DateTime((long) (short) 1, chronology32);
        org.joda.time.DateTime dateTime34 = dateTime33.toDateTime();
        int int35 = dateTime30.compareTo((org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType37 = periodType36.withDaysRemoved();
        org.joda.time.Period period38 = duration19.toPeriodTo((org.joda.time.ReadableInstant) dateTime33, periodType36);
        org.joda.time.Instant instant41 = new org.joda.time.Instant();
        org.joda.time.Instant instant43 = instant41.withMillis(0L);
        org.joda.time.Chronology chronology44 = instant43.getChronology();
        org.joda.time.DurationField durationField45 = chronology44.eras();
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology44);
        org.joda.time.DateTimeField dateTimeField47 = chronology44.monthOfYear();
        org.joda.time.DateTimeField dateTimeField48 = chronology44.dayOfMonth();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.LocalDateTime localDateTime51 = new org.joda.time.LocalDateTime((long) (byte) -1, chronology50);
        org.joda.time.LocalDateTime localDateTime53 = localDateTime51.withYear((int) (short) -1);
        int int54 = localDateTime51.getCenturyOfEra();
        int int55 = dateTimeField48.getMaximumValue((org.joda.time.ReadablePartial) localDateTime51);
        org.joda.time.LocalDateTime localDateTime57 = localDateTime51.withDayOfYear(5);
        org.joda.time.DateTimeField[] dateTimeFieldArray58 = localDateTime51.getFields();
        org.joda.time.LocalDateTime localDateTime60 = localDateTime51.minusMonths(39243612);
        org.joda.time.LocalDateTime localDateTime62 = localDateTime60.withWeekOfWeekyear(27);
        org.joda.time.LocalDateTime.Property property63 = localDateTime60.weekOfWeekyear();
        int int64 = localDateTime60.size();
        int int65 = localDateTime60.getYearOfCentury();
        org.joda.time.DateTime dateTime66 = dateTime33.withFields((org.joda.time.ReadablePartial) localDateTime60);
        org.joda.time.tz.NameProvider nameProvider67 = org.joda.time.DateTimeZone.getNameProvider();
        org.joda.time.DateTimeZone.setNameProvider(nameProvider67);
        java.util.Locale.Builder builder69 = new java.util.Locale.Builder();
        java.util.Locale.Builder builder70 = builder69.clear();
        java.util.Locale.Builder builder71 = builder69.clearExtensions();
        java.util.Locale locale73 = java.util.Locale.forLanguageTag("Mo");
        java.util.Locale.Builder builder74 = builder69.setLocale(locale73);
        java.lang.String str77 = nameProvider67.getShortName(locale73, "2022-02-21T14:55:51.167Z", "Greenwich Mean Time");
        java.util.Calendar calendar78 = dateTime66.toCalendar(locale73);
        java.lang.String str79 = locale6.getDisplayLanguage(locale73);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime23 and instant41", (dateTime23.compareTo(instant41) == 0) == dateTime23.equals(instant41));
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test418");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime2 = localDateTime0.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime4 = localDateTime2.withHourOfDay(10);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) 100, 1L, periodType7);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.Period period13 = period8.plus((org.joda.time.ReadablePeriod) period12);
        org.joda.time.Instant instant14 = new org.joda.time.Instant();
        org.joda.time.Instant instant16 = instant14.withMillis(0L);
        org.joda.time.Duration duration17 = period12.toDurationTo((org.joda.time.ReadableInstant) instant16);
        org.joda.time.LocalDateTime localDateTime18 = localDateTime4.plus((org.joda.time.ReadablePeriod) period12);
        org.joda.time.LocalDateTime localDateTime20 = localDateTime18.minusYears(6);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(readableInstant21, readableInstant22, periodType23);
        mutablePeriod24.setYears((int) '#');
        org.joda.time.Chronology chronology28 = null;
        mutablePeriod24.add((long) 1, chronology28);
        mutablePeriod24.addDays((int) 'a');
        org.joda.time.LocalDateTime localDateTime32 = localDateTime18.minus((org.joda.time.ReadablePeriod) mutablePeriod24);
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period(readableDuration33, readableInstant34);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((long) 100, 1L, periodType38);
        org.joda.time.Period period41 = period39.minusSeconds((-1));
        java.lang.String str42 = period39.toString();
        org.joda.time.Period period43 = period39.toPeriod();
        org.joda.time.PeriodType periodType44 = period39.getPeriodType();
        org.joda.time.Period period45 = period35.normalizedStandard(periodType44);
        org.joda.time.Period period47 = period45.withMillis(22);
        org.joda.time.Hours hours48 = period47.toStandardHours();
        mutablePeriod24.setPeriod((org.joda.time.ReadablePeriod) period47);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.DateTime dateTime51 = new org.joda.time.DateTime(chronology50);
        int int52 = dateTime51.getYearOfCentury();
        int int53 = dateTime51.getYear();
        org.joda.time.DateTime dateTime55 = dateTime51.plusMinutes(39321381);
        org.joda.time.Duration duration56 = period47.toDurationTo((org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.PeriodType periodType57 = period47.getPeriodType();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime51", (instant14.compareTo(dateTime51) == 0) == instant14.equals(dateTime51));
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test419");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime(chronology1);
        int int3 = dateTime2.getSecondOfMinute();
        boolean boolean4 = dateTime2.isEqualNow();
        int int5 = dateTime2.getDayOfYear();
        org.joda.time.Chronology chronology6 = dateTime2.getChronology();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) 5, chronology6);
        org.joda.time.MutableDateTime mutableDateTime9 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime9.add((org.joda.time.ReadableDuration) duration11, (int) (short) 100);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.DateTime dateTime15 = new org.joda.time.DateTime(chronology14);
        int int16 = dateTime15.getYearOfCentury();
        org.joda.time.Interval interval17 = duration11.toIntervalTo((org.joda.time.ReadableInstant) dateTime15);
        long long18 = duration11.getStandardSeconds();
        mutablePeriod7.add((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.Duration duration25 = duration21.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration25, readableInstant26);
        long long28 = duration25.getStandardDays();
        org.joda.time.Duration duration29 = duration25.toDuration();
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.Period period35 = period33.minusSeconds((-1));
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period38 = duration37.toPeriod();
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.centuries();
        int int40 = period38.get(durationFieldType39);
        boolean boolean41 = period33.isSupported(durationFieldType39);
        org.joda.time.MutableDateTime mutableDateTime43 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((long) 100, 1L, periodType46);
        org.joda.time.PeriodType periodType50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((long) 100, 1L, periodType50);
        org.joda.time.Period period52 = period47.plus((org.joda.time.ReadablePeriod) period51);
        org.joda.time.Instant instant53 = new org.joda.time.Instant();
        org.joda.time.Instant instant55 = instant53.withMillis(0L);
        org.joda.time.Duration duration56 = period51.toDurationTo((org.joda.time.ReadableInstant) instant55);
        mutableDateTime43.add((org.joda.time.ReadableDuration) duration56, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType59 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean60 = mutableDateTime43.isSupported(dateTimeFieldType59);
        org.joda.time.DurationFieldType durationFieldType61 = dateTimeFieldType59.getDurationType();
        int int62 = period33.get(durationFieldType61);
        org.joda.time.MutableDateTime mutableDateTime65 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.MutableDateTime.Property property66 = mutableDateTime65.minuteOfHour();
        org.joda.time.DateTimeFieldType dateTimeFieldType67 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType68 = dateTimeFieldType67.getRangeDurationType();
        org.joda.time.DateTimeFieldType dateTimeFieldType69 = org.joda.time.DateTimeFieldType.dayOfYear();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.DateTime dateTime72 = new org.joda.time.DateTime(chronology71);
        int int73 = dateTime72.getSecondOfMinute();
        boolean boolean74 = dateTime72.isEqualNow();
        int int75 = dateTime72.getDayOfYear();
        org.joda.time.Chronology chronology76 = dateTime72.getChronology();
        java.util.Locale locale77 = java.util.Locale.SIMPLIFIED_CHINESE;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket78 = new org.joda.time.format.DateTimeParserBucket(315532800097L, chronology76, locale77);
        org.joda.time.DateTimeField dateTimeField79 = dateTimeFieldType69.getField(chronology76);
        org.joda.time.DurationField durationField80 = durationFieldType68.getField(chronology76);
        mutableDateTime65.setChronology(chronology76);
        org.joda.time.LocalTime localTime82 = org.joda.time.LocalTime.fromMillisOfDay(39217210L, chronology76);
        org.joda.time.DateTimeField dateTimeField83 = chronology76.weekOfWeekyear();
        boolean boolean84 = durationFieldType61.isSupported(chronology76);
        org.joda.time.Period period85 = duration29.toPeriod(chronology76);
        org.joda.time.Duration duration86 = org.joda.time.Duration.ZERO;
        org.joda.time.Hours hours87 = duration86.toStandardHours();
        org.joda.time.Duration duration88 = duration86.toDuration();
        boolean boolean89 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration88);
        boolean boolean90 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration88);
        long long91 = duration11.getStandardMinutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant53 and dateTime72", (instant53.compareTo(dateTime72) == 0) == instant53.equals(dateTime72));
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test420");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.DateTime dateTime17 = new org.joda.time.DateTime((long) (short) 1, chronology16);
        org.joda.time.Instant instant18 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime17, (org.joda.time.ReadableInstant) instant18, periodType19);
        org.joda.time.DateTimeFieldType dateTimeFieldType21 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int22 = instant18.get(dateTimeFieldType21);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) 10, (long) 3);
        org.joda.time.Instant instant27 = instant18.withDurationAdded((org.joda.time.ReadableDuration) duration25, 0);
        org.joda.time.MutableDateTime mutableDateTime29 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime29.add((org.joda.time.ReadableDuration) duration31, (int) (short) 100);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology34);
        int int36 = dateTime35.getYearOfCentury();
        org.joda.time.Interval interval37 = duration31.toIntervalTo((org.joda.time.ReadableInstant) dateTime35);
        int int38 = dateTime35.getDayOfMonth();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.DateTime dateTime41 = new org.joda.time.DateTime((long) (short) 1, chronology40);
        org.joda.time.DateTime.Property property42 = dateTime41.dayOfWeek();
        org.joda.time.LocalDate localDate43 = dateTime41.toLocalDate();
        int int44 = dateTime35.compareTo((org.joda.time.ReadableInstant) dateTime41);
        int int45 = instant27.compareTo((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.DateTime dateTime47 = dateTime35.withMillis((long) 53650665);
        boolean boolean48 = instant11.isAfter((org.joda.time.ReadableInstant) dateTime47);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime35", (instant9.compareTo(dateTime35) == 0) == instant9.equals(dateTime35));
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test421");
        org.joda.time.LocalDateTime localDateTime1 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property2 = localDateTime1.monthOfYear();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        int int5 = dateTime4.getSecondOfMinute();
        boolean boolean6 = dateTime4.isEqualNow();
        int int7 = dateTime4.getDayOfYear();
        org.joda.time.Chronology chronology8 = dateTime4.getChronology();
        long long9 = property2.getDifferenceAsLong((org.joda.time.ReadableInstant) dateTime4);
        org.joda.time.DateTime dateTime11 = dateTime4.minusYears(0);
        org.joda.time.DateTime dateTime13 = dateTime11.withDayOfMonth((int) (byte) 10);
        org.joda.time.DateTime.Property property14 = dateTime11.year();
        java.lang.Object obj15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime(obj15);
        boolean boolean18 = dateTime16.isBefore((long) (short) 100);
        org.joda.time.Instant instant19 = new org.joda.time.Instant();
        org.joda.time.Instant instant21 = instant19.withMillis(0L);
        org.joda.time.Chronology chronology22 = instant21.getChronology();
        org.joda.time.DateTime dateTime23 = dateTime16.toDateTime(chronology22);
        org.joda.time.DateTime dateTime24 = dateTime11.withChronology(chronology22);
        org.joda.time.DateTimeZone dateTimeZone26 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime27 = new org.joda.time.MutableDateTime(0L, dateTimeZone26);
        long long30 = dateTimeZone26.convertLocalToUTC((long) 3, true);
        org.joda.time.MutableDateTime mutableDateTime31 = new org.joda.time.MutableDateTime(dateTimeZone26);
        java.lang.String str32 = dateTimeZone26.toString();
        org.joda.time.MutableDateTime mutableDateTime33 = new org.joda.time.MutableDateTime(dateTimeZone26);
        org.joda.time.MutableDateTime mutableDateTime34 = new org.joda.time.MutableDateTime(dateTimeZone26);
        long long36 = dateTimeZone26.nextTransition((long) (-292275051));
        org.joda.time.Chronology chronology37 = chronology22.withZone(dateTimeZone26);
        org.joda.time.MutableDateTime mutableDateTime38 = org.joda.time.MutableDateTime.now(dateTimeZone26);
        org.joda.time.Instant instant40 = new org.joda.time.Instant();
        org.joda.time.Instant instant42 = instant40.withMillis(0L);
        org.joda.time.Chronology chronology43 = instant42.getChronology();
        org.joda.time.DurationField durationField44 = chronology43.eras();
        java.util.Locale locale45 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket47 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology43, locale45, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime48 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime50 = localDateTime48.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property51 = localDateTime48.hourOfDay();
        org.joda.time.DateTimeField dateTimeField52 = property51.getField();
        int int53 = property51.get();
        org.joda.time.LocalDateTime localDateTime54 = property51.roundHalfFloorCopy();
        long long56 = chronology43.set((org.joda.time.ReadablePartial) localDateTime54, (long) 2022);
        org.joda.time.DateTimeField dateTimeField57 = chronology43.weekOfWeekyear();
        mutableDateTime38.setChronology(chronology43);
        org.joda.time.Instant instant61 = new org.joda.time.Instant();
        org.joda.time.Instant instant63 = instant61.withMillis(0L);
        org.joda.time.Chronology chronology64 = instant63.getChronology();
        org.joda.time.DurationField durationField65 = chronology64.eras();
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology64);
        org.joda.time.DateTimeField dateTimeField67 = chronology64.monthOfYear();
        org.joda.time.DateTimeField dateTimeField68 = chronology64.dayOfMonth();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.LocalDateTime localDateTime71 = new org.joda.time.LocalDateTime((long) (byte) -1, chronology70);
        org.joda.time.LocalDateTime localDateTime73 = localDateTime71.withYear((int) (short) -1);
        int int74 = localDateTime71.getCenturyOfEra();
        int int75 = dateTimeField68.getMaximumValue((org.joda.time.ReadablePartial) localDateTime71);
        java.util.Locale locale77 = java.util.Locale.CANADA;
        java.lang.String str78 = dateTimeField68.getAsText(39272321, locale77);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket80 = new org.joda.time.format.DateTimeParserBucket((-25371359999943L), chronology43, locale77, (java.lang.Integer) 54005297);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime4 and instant19", (dateTime4.compareTo(instant19) == 0) == dateTime4.equals(instant19));
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test422");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType17 = dateTimeFieldType16.getRangeDurationType();
        org.joda.time.DateTime.Property property18 = dateTime15.property(dateTimeFieldType16);
        org.joda.time.DateTime dateTime20 = dateTime15.withCenturyOfEra((int) 'a');
        org.joda.time.LocalTime localTime22 = org.joda.time.LocalTime.fromMillisOfDay(655L);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.DateTime dateTime24 = new org.joda.time.DateTime(chronology23);
        int int25 = dateTime24.getSecondOfMinute();
        int int26 = dateTime24.getYearOfEra();
        org.joda.time.LocalTime localTime27 = dateTime24.toLocalTime();
        org.joda.time.LocalTime.Property property28 = localTime27.millisOfSecond();
        org.joda.time.Chronology chronology30 = null;
        java.util.Locale locale31 = java.util.Locale.GERMAN;
        java.util.Locale locale32 = locale31.stripExtensions();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket35 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology30, locale31, (java.lang.Integer) 45, (int) '4');
        org.joda.time.DateTimeZone dateTimeZone36 = dateTimeParserBucket35.getZone();
        org.joda.time.LocalTime localTime37 = new org.joda.time.LocalTime(dateTimeZone36);
        org.joda.time.DateTime dateTime38 = localTime37.toDateTimeToday();
        org.joda.time.LocalTime.Property property39 = localTime37.secondOfMinute();
        org.joda.time.LocalTime localTime41 = property39.addNoWrapToCopy(46);
        org.joda.time.LocalTime localTime43 = property39.addNoWrapToCopy(31);
        org.joda.time.LocalTime localTime44 = property39.roundHalfCeilingCopy();
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = org.joda.time.DateTimeFieldType.dayOfYear();
        boolean boolean46 = localTime44.isSupported(dateTimeFieldType45);
        boolean boolean47 = localTime27.isSupported(dateTimeFieldType45);
        org.joda.time.Instant instant48 = new org.joda.time.Instant();
        org.joda.time.Instant instant50 = instant48.withMillis(0L);
        org.joda.time.Chronology chronology51 = instant50.getChronology();
        org.joda.time.DurationField durationField52 = chronology51.eras();
        long long56 = chronology51.add((long) 42996291, (long) 73, 53723651);
        org.joda.time.DateTimeField dateTimeField57 = chronology51.yearOfEra();
        org.joda.time.DateTimeField dateTimeField58 = chronology51.hourOfHalfday();
        boolean boolean59 = dateTimeFieldType45.isSupported(chronology51);
        int int60 = localTime22.indexOf(dateTimeFieldType45);
        int int61 = dateTime15.get(dateTimeFieldType45);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime24", (instant9.compareTo(dateTime24) == 0) == instant9.equals(dateTime24));
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test423");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        mutableDateTime1.addYears(3);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period22 = duration21.toPeriod();
        org.joda.time.Duration duration25 = duration21.withDurationAdded((long) 38, (int) 'a');
        long long26 = duration21.getStandardMinutes();
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableDuration readableDuration28 = null;
        boolean boolean29 = duration21.isEqual(readableDuration28);
        org.joda.time.MutableDateTime mutableDateTime31 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((long) 100, 1L, periodType34);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((long) 100, 1L, periodType38);
        org.joda.time.Period period40 = period35.plus((org.joda.time.ReadablePeriod) period39);
        org.joda.time.Instant instant41 = new org.joda.time.Instant();
        org.joda.time.Instant instant43 = instant41.withMillis(0L);
        org.joda.time.Duration duration44 = period39.toDurationTo((org.joda.time.ReadableInstant) instant43);
        mutableDateTime31.add((org.joda.time.ReadableDuration) duration44, 39);
        org.joda.time.MutableDateTime.Property property47 = mutableDateTime31.yearOfEra();
        mutableDateTime31.setDayOfYear((int) ' ');
        mutableDateTime31.add((long) 53);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter52 = null;
        java.lang.String str53 = mutableDateTime31.toString(dateTimeFormatter52);
        org.joda.time.DateTimeZone dateTimeZone54 = org.joda.time.DateTimeZone.UTC;
        int int56 = dateTimeZone54.getStandardOffset((long) 894);
        mutableDateTime31.setZoneRetainFields(dateTimeZone54);
        org.joda.time.MutableDateTime.Property property58 = mutableDateTime31.dayOfWeek();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.DateTime dateTime60 = new org.joda.time.DateTime(chronology59);
        int int61 = dateTime60.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter62 = null;
        java.lang.String str63 = dateTime60.toString(dateTimeFormatter62);
        org.joda.time.DateTime dateTime65 = dateTime60.plusMonths(86396191);
        org.joda.time.DateTime dateTime67 = dateTime60.plusWeeks(45);
        org.joda.time.LocalDate localDate68 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate70 = localDate68.minusMonths((int) ' ');
        int int71 = localDate68.size();
        org.joda.time.LocalDate.Property property72 = localDate68.era();
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.yearDayTime();
        boolean boolean74 = localDate68.equals((java.lang.Object) periodType73);
        org.joda.time.PeriodType periodType75 = periodType73.withMonthsRemoved();
        org.joda.time.PeriodType periodType76 = periodType75.withYearsRemoved();
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableInstant) mutableDateTime31, (org.joda.time.ReadableInstant) dateTime60, periodType76);
        int int78 = mutableDateTime31.getMinuteOfDay();
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod(readableDuration28, (org.joda.time.ReadableInstant) mutableDateTime31);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime60", (instant11.compareTo(dateTime60) == 0) == instant11.equals(dateTime60));
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test424");
        org.joda.time.DateTimeZone dateTimeZone0 = org.joda.time.DateTimeZone.getDefault();
        long long3 = dateTimeZone0.adjustOffset(0L, true);
        org.joda.time.DateTimeZone dateTimeZone5 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime6 = new org.joda.time.MutableDateTime(0L, dateTimeZone5);
        int int7 = dateTimeZone0.getOffset((org.joda.time.ReadableInstant) mutableDateTime6);
        mutableDateTime6.addMillis((int) '#');
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((long) 100, 1L, periodType12);
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((long) 100, 1L, periodType16);
        org.joda.time.Period period18 = period13.plus((org.joda.time.ReadablePeriod) period17);
        org.joda.time.MutablePeriod mutablePeriod19 = period18.toMutablePeriod();
        java.lang.Object obj20 = mutablePeriod19.clone();
        org.joda.time.PeriodType periodType21 = mutablePeriod19.getPeriodType();
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((long) 100, 1L, periodType30);
        org.joda.time.Period period32 = period27.plus((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Instant instant33 = new org.joda.time.Instant();
        org.joda.time.Instant instant35 = instant33.withMillis(0L);
        org.joda.time.Duration duration36 = period31.toDurationTo((org.joda.time.ReadableInstant) instant35);
        mutableDateTime23.add((org.joda.time.ReadableDuration) duration36, 39);
        org.joda.time.MutableDateTime.Property property39 = mutableDateTime23.yearOfEra();
        mutableDateTime23.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property42 = mutableDateTime23.minuteOfDay();
        org.joda.time.DurationField durationField43 = property42.getRangeDurationField();
        org.joda.time.DurationFieldType durationFieldType44 = durationField43.getType();
        mutablePeriod19.set(durationFieldType44, 120);
        mutableDateTime6.add(durationFieldType44, 0);
        org.joda.time.ReadableDuration readableDuration49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period(readableDuration49, readableInstant50);
        org.joda.time.PeriodType periodType54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((long) 100, 1L, periodType54);
        org.joda.time.Period period57 = period55.minusSeconds((-1));
        java.lang.String str58 = period55.toString();
        org.joda.time.Period period59 = period55.toPeriod();
        org.joda.time.PeriodType periodType60 = period55.getPeriodType();
        org.joda.time.Period period61 = period51.normalizedStandard(periodType60);
        org.joda.time.Period period63 = period61.withSeconds(10);
        org.joda.time.DurationFieldType durationFieldType64 = org.joda.time.DurationFieldType.millis();
        boolean boolean65 = period61.isSupported(durationFieldType64);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.DateTime dateTime69 = new org.joda.time.DateTime(chronology68);
        int int70 = dateTime69.getSecondOfMinute();
        boolean boolean71 = dateTime69.isEqualNow();
        int int72 = dateTime69.getDayOfYear();
        org.joda.time.Chronology chronology73 = dateTime69.getChronology();
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology73);
        org.joda.time.DateTimeField dateTimeField75 = chronology73.year();
        org.joda.time.DateTimeField dateTimeField76 = chronology73.dayOfMonth();
        org.joda.time.LocalDateTime localDateTime77 = org.joda.time.LocalDateTime.now(chronology73);
        org.joda.time.DateTimeField dateTimeField78 = chronology73.minuteOfDay();
        org.joda.time.DurationField durationField79 = durationFieldType64.getField(chronology73);
        org.joda.time.DateTimeField dateTimeField80 = chronology73.secondOfMinute();
        org.joda.time.MutableDateTime mutableDateTime81 = mutableDateTime6.toMutableDateTime(chronology73);
        mutableDateTime81.setWeekyear(164);
        mutableDateTime81.addYears((int) ' ');
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant33 and dateTime69", (instant33.compareTo(dateTime69) == 0) == instant33.equals(dateTime69));
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test425");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        mutableDateTime1.setWeekOfWeekyear(14);
        org.joda.time.LocalDate localDate20 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate22 = localDate20.minusMonths((int) ' ');
        org.joda.time.Chronology chronology23 = localDate20.getChronology();
        org.joda.time.DateTimeField dateTimeField24 = chronology23.minuteOfDay();
        mutableDateTime1.setChronology(chronology23);
        org.joda.time.DateTimeZone dateTimeZone26 = chronology23.getZone();
        org.joda.time.Instant instant27 = new org.joda.time.Instant();
        boolean boolean28 = instant27.isEqualNow();
        org.joda.time.Instant instant31 = instant27.withDurationAdded(12L, 457070);
        int int32 = dateTimeZone26.getOffset((org.joda.time.ReadableInstant) instant27);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime(chronology38);
        int int40 = dateTime39.getSecondOfMinute();
        boolean boolean41 = dateTime39.isEqualNow();
        int int42 = dateTime39.getDayOfYear();
        org.joda.time.Chronology chronology43 = dateTime39.getChronology();
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology43);
        org.joda.time.LocalDate localDate45 = new org.joda.time.LocalDate(69, 6, 12, chronology43);
        org.joda.time.MutableDateTime mutableDateTime46 = instant27.toMutableDateTime(chronology43);
        org.joda.time.DateTimeField dateTimeField47 = chronology43.minuteOfDay();
        long long49 = dateTimeField47.remainder((-768609115017776278L));
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime39", (instant11.compareTo(dateTime39) == 0) == instant11.equals(dateTime39));
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test426");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        int int3 = dateTime1.getYearOfEra();
        org.joda.time.DateTimeZone dateTimeZone4 = dateTime1.getZone();
        org.joda.time.MutableDateTime mutableDateTime6 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) 100, 1L, periodType9);
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.Period period15 = period10.plus((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Instant instant16 = new org.joda.time.Instant();
        org.joda.time.Instant instant18 = instant16.withMillis(0L);
        org.joda.time.Duration duration19 = period14.toDurationTo((org.joda.time.ReadableInstant) instant18);
        mutableDateTime6.add((org.joda.time.ReadableDuration) duration19, 39);
        mutableDateTime6.setDayOfYear(22);
        boolean boolean24 = dateTime1.isEqual((org.joda.time.ReadableInstant) mutableDateTime6);
        org.joda.time.DateTime dateTime26 = dateTime1.withYearOfEra(50);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 1);
        org.joda.time.LocalDate localDate29 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate31 = localDate29.minusMonths((int) ' ');
        org.joda.time.Chronology chronology32 = localDate29.getChronology();
        org.joda.time.Period period33 = duration28.toPeriod(chronology32);
        org.joda.time.Minutes minutes34 = duration28.toStandardMinutes();
        org.joda.time.DateTime dateTime36 = dateTime26.withDurationAdded((org.joda.time.ReadableDuration) duration28, 39297267);
        org.joda.time.DateTime dateTime38 = dateTime36.plusMillis(53896951);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant16", (dateTime1.compareTo(instant16) == 0) == dateTime1.equals(instant16));
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test427");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime19 = mutableDateTime1.toMutableDateTime(dateTimeZone18);
        boolean boolean21 = mutableDateTime1.isBefore((long) 100);
        boolean boolean23 = mutableDateTime1.isAfter(893L);
        org.joda.time.MutableDateTime.Property property24 = mutableDateTime1.minuteOfHour();
        org.joda.time.Instant instant25 = mutableDateTime1.toInstant();
        org.joda.time.Instant instant28 = instant25.withDurationAdded((long) 86396191, 53811508);
        org.joda.time.Instant instant30 = instant25.withMillis((-768609154915190278L));
        org.joda.time.Chronology chronology31 = instant30.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime1 and mutableDateTime19", (mutableDateTime1.compareTo(mutableDateTime19) == 0) == mutableDateTime1.equals(mutableDateTime19));
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test428");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology10 = null;
        java.util.Locale locale11 = java.util.Locale.GERMAN;
        java.util.Locale locale12 = java.util.Locale.CANADA;
        java.lang.String str13 = locale11.getDisplayVariant(locale12);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket14 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology10, locale12);
        org.joda.time.DateTimeZone dateTimeZone15 = dateTimeParserBucket14.getZone();
        org.joda.time.Chronology chronology16 = chronology4.withZone(dateTimeZone15);
        org.joda.time.LocalTime localTime17 = org.joda.time.LocalTime.now(chronology16);
        org.joda.time.LocalTime localTime19 = localTime17.plusMillis((int) (byte) -1);
        org.joda.time.LocalTime.Property property20 = localTime17.millisOfDay();
        org.joda.time.LocalTime.Property property21 = localTime17.minuteOfHour();
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period(readableDuration22, readableInstant23);
        org.joda.time.Period period26 = period24.withDays((int) (byte) 1);
        org.joda.time.Period period28 = period26.minusWeeks(100);
        org.joda.time.Period period30 = period26.minusWeeks(2023);
        org.joda.time.Duration duration31 = period26.toStandardDuration();
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.PeriodType periodType33 = periodType32.withSecondsRemoved();
        org.joda.time.DurationFieldType durationFieldType35 = periodType32.getFieldType((int) (byte) 1);
        org.joda.time.MutableDateTime mutableDateTime37 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((long) 100, 1L, periodType40);
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((long) 100, 1L, periodType44);
        org.joda.time.Period period46 = period41.plus((org.joda.time.ReadablePeriod) period45);
        org.joda.time.Instant instant47 = new org.joda.time.Instant();
        org.joda.time.Instant instant49 = instant47.withMillis(0L);
        org.joda.time.Duration duration50 = period45.toDurationTo((org.joda.time.ReadableInstant) instant49);
        mutableDateTime37.add((org.joda.time.ReadableDuration) duration50, 39);
        org.joda.time.MutableDateTime.Property property53 = mutableDateTime37.yearOfEra();
        mutableDateTime37.setWeekOfWeekyear(14);
        org.joda.time.LocalDate localDate56 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate58 = localDate56.minusMonths((int) ' ');
        org.joda.time.Chronology chronology59 = localDate56.getChronology();
        org.joda.time.DateTimeField dateTimeField60 = chronology59.minuteOfDay();
        mutableDateTime37.setChronology(chronology59);
        org.joda.time.Period period62 = duration31.toPeriod(periodType32, chronology59);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.DateTime dateTime70 = new org.joda.time.DateTime(chronology69);
        int int71 = dateTime70.getSecondOfMinute();
        boolean boolean72 = dateTime70.isEqualNow();
        int int73 = dateTime70.getDayOfYear();
        org.joda.time.Chronology chronology74 = dateTime70.getChronology();
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology74);
        org.joda.time.DurationField durationField76 = chronology74.hours();
        org.joda.time.DateTimeField dateTimeField77 = chronology74.dayOfWeek();
        org.joda.time.Period period78 = new org.joda.time.Period((long) 39246272, (long) 5, chronology74);
        org.joda.time.Period period79 = new org.joda.time.Period((long) 4017, 1645455600000L, chronology74);
        org.joda.time.PeriodType periodType80 = period79.getPeriodType();
        org.joda.time.LocalDate localDate81 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate83 = localDate81.plusMonths(43);
        org.joda.time.DurationFieldType durationFieldType84 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean85 = localDate83.isSupported(durationFieldType84);
        boolean boolean86 = periodType80.isSupported(durationFieldType84);
        int int87 = period62.get(durationFieldType84);
        boolean boolean88 = localTime17.isSupported(durationFieldType84);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField5 and durationField76", Math.signum(durationField5.compareTo(durationField76)) == -Math.signum(durationField76.compareTo(durationField5)));
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test429");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.Period period8 = new org.joda.time.Period((long) 5, (long) (byte) 100, chronology7);
        org.joda.time.DurationField durationField9 = chronology7.hours();
        org.joda.time.DurationField durationField10 = chronology7.eras();
        org.joda.time.DurationField durationField11 = chronology7.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField9 and durationField10", Math.signum(durationField9.compareTo(durationField10)) == -Math.signum(durationField10.compareTo(durationField9)));
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test430");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.PeriodType periodType3 = periodType2.withMonthsRemoved();
        org.joda.time.Instant instant5 = new org.joda.time.Instant();
        org.joda.time.Instant instant7 = instant5.withMillis(0L);
        org.joda.time.Chronology chronology8 = instant7.getChronology();
        org.joda.time.DurationField durationField9 = chronology8.eras();
        java.util.Locale locale10 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket12 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology8, locale10, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime13 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime13.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property16 = localDateTime13.hourOfDay();
        org.joda.time.DateTimeField dateTimeField17 = property16.getField();
        int int18 = property16.get();
        org.joda.time.LocalDateTime localDateTime19 = property16.roundHalfFloorCopy();
        long long21 = chronology8.set((org.joda.time.ReadablePartial) localDateTime19, (long) 2022);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(chronology8);
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime(chronology8);
        org.joda.time.DateTimeField dateTimeField24 = chronology8.dayOfWeek();
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) 39251693, (long) 292278993, periodType3, chronology8);
        org.joda.time.LocalDate localDate26 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate28 = localDate26.minusMonths((int) ' ');
        org.joda.time.Chronology chronology29 = localDate26.getChronology();
        org.joda.time.DateTimeField dateTimeField30 = chronology29.minuteOfDay();
        org.joda.time.DurationField durationField31 = chronology29.days();
        org.joda.time.DurationField durationField32 = chronology29.hours();
        org.joda.time.DurationFieldType durationFieldType33 = durationField32.getType();
        boolean boolean34 = periodType3.isSupported(durationFieldType33);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField9 and durationField31", Math.signum(durationField9.compareTo(durationField31)) == -Math.signum(durationField31.compareTo(durationField9)));
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test431");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType3 = periodType2.withDaysRemoved();
        org.joda.time.Instant instant5 = new org.joda.time.Instant();
        org.joda.time.Instant instant7 = instant5.withMillis(0L);
        org.joda.time.Chronology chronology8 = instant7.getChronology();
        org.joda.time.DurationField durationField9 = chronology8.eras();
        java.util.Locale locale10 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket12 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology8, locale10, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime13 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime13.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property16 = localDateTime13.hourOfDay();
        org.joda.time.DateTimeField dateTimeField17 = property16.getField();
        int int18 = property16.get();
        org.joda.time.LocalDateTime localDateTime19 = property16.roundHalfFloorCopy();
        long long21 = chronology8.set((org.joda.time.ReadablePartial) localDateTime19, (long) 2022);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(chronology8);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(0L, (long) 53, periodType3, chronology8);
        org.joda.time.MutableDateTime mutableDateTime25 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime25.add((org.joda.time.ReadableDuration) duration27, (int) (short) 100);
        org.joda.time.Period period30 = duration27.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime((long) (short) 1, chronology34);
        org.joda.time.DateTime dateTime36 = dateTime35.toDateTime();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime((long) (short) 1, chronology38);
        org.joda.time.DateTime dateTime40 = dateTime39.toDateTime();
        int int41 = dateTime36.compareTo((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration46 = duration32.withDurationAdded((org.joda.time.ReadableDuration) duration43, 10);
        org.joda.time.Duration duration48 = duration27.withDurationAdded((org.joda.time.ReadableDuration) duration43, 26);
        long long49 = duration48.getStandardDays();
        org.joda.time.Hours hours50 = duration48.toStandardHours();
        org.joda.time.MutableDateTime mutableDateTime52 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((long) 100, 1L, periodType55);
        org.joda.time.PeriodType periodType59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((long) 100, 1L, periodType59);
        org.joda.time.Period period61 = period56.plus((org.joda.time.ReadablePeriod) period60);
        org.joda.time.Instant instant62 = new org.joda.time.Instant();
        org.joda.time.Instant instant64 = instant62.withMillis(0L);
        org.joda.time.Duration duration65 = period60.toDurationTo((org.joda.time.ReadableInstant) instant64);
        mutableDateTime52.add((org.joda.time.ReadableDuration) duration65, 39);
        org.joda.time.MutableDateTime.Property property68 = mutableDateTime52.yearOfEra();
        mutableDateTime52.setWeekOfWeekyear(14);
        org.joda.time.LocalDate localDate71 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate73 = localDate71.minusMonths((int) ' ');
        org.joda.time.Chronology chronology74 = localDate71.getChronology();
        org.joda.time.DateTimeField dateTimeField75 = chronology74.minuteOfDay();
        mutableDateTime52.setChronology(chronology74);
        org.joda.time.DurationField durationField77 = chronology74.days();
        org.joda.time.MutableDateTime mutableDateTime78 = org.joda.time.MutableDateTime.now(chronology74);
        mutablePeriod23.setPeriod((org.joda.time.ReadableDuration) duration48, chronology74);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField9 and durationField77", Math.signum(durationField9.compareTo(durationField77)) == -Math.signum(durationField77.compareTo(durationField9)));
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test432");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean18 = mutableDateTime1.isSupported(dateTimeFieldType17);
        int int19 = mutableDateTime1.getWeekOfWeekyear();
        org.joda.time.Instant instant21 = new org.joda.time.Instant();
        org.joda.time.Instant instant23 = instant21.withMillis(0L);
        org.joda.time.Chronology chronology24 = instant23.getChronology();
        org.joda.time.DurationField durationField25 = chronology24.eras();
        java.util.Locale locale26 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket28 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology24, locale26, (java.lang.Integer) 39221019);
        mutableDateTime1.setChronology(chronology24);
        org.joda.time.MutableDateTime mutableDateTime31 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((long) 100, 1L, periodType34);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((long) 100, 1L, periodType38);
        org.joda.time.Period period40 = period35.plus((org.joda.time.ReadablePeriod) period39);
        org.joda.time.Instant instant41 = new org.joda.time.Instant();
        org.joda.time.Instant instant43 = instant41.withMillis(0L);
        org.joda.time.Duration duration44 = period39.toDurationTo((org.joda.time.ReadableInstant) instant43);
        mutableDateTime31.add((org.joda.time.ReadableDuration) duration44, 39);
        org.joda.time.MutableDateTime.Property property47 = mutableDateTime31.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone48 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime31.setZone(dateTimeZone48);
        org.joda.time.MutableDateTime mutableDateTime50 = new org.joda.time.MutableDateTime((java.lang.Object) mutableDateTime1, dateTimeZone48);
        org.joda.time.DurationFieldType durationFieldType51 = org.joda.time.DurationFieldType.days();
        mutableDateTime1.add(durationFieldType51, 13);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.DateTime dateTime56 = new org.joda.time.DateTime((long) (short) 1, chronology55);
        org.joda.time.DateTimeZone dateTimeZone57 = null;
        org.joda.time.LocalTime localTime58 = new org.joda.time.LocalTime(dateTimeZone57);
        org.joda.time.LocalTime localTime60 = localTime58.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime62 = localTime60.plusMillis((int) (byte) 100);
        org.joda.time.DateTime dateTime63 = dateTime56.withFields((org.joda.time.ReadablePartial) localTime62);
        org.joda.time.DateTime dateTime64 = dateTime56.toDateTimeISO();
        org.joda.time.DateTime dateTime66 = new org.joda.time.DateTime((long) 100);
        org.joda.time.DateTime.Property property67 = dateTime66.monthOfYear();
        org.joda.time.DateTime dateTime68 = dateTime66.toDateTimeISO();
        boolean boolean69 = dateTime56.isAfter((org.joda.time.ReadableInstant) dateTime68);
        org.joda.time.DateTime dateTime71 = dateTime68.withMillis((long) 39);
        org.joda.time.DateTime dateTime73 = dateTime71.withHourOfDay(0);
        org.joda.time.Instant instant74 = dateTime73.toInstant();
        org.joda.time.Chronology chronology75 = instant74.getChronology();
        org.joda.time.DateTimeField dateTimeField76 = chronology75.millisOfSecond();
        org.joda.time.DurationField durationField77 = durationFieldType51.getField(chronology75);
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField25, durationField77, and durationField25", !(durationField25.compareTo(durationField77) == 0) || (Math.signum(durationField25.compareTo(durationField25)) == Math.signum(durationField77.compareTo(durationField25))));
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test433");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.DateTime.Property property2 = dateTime1.millisOfDay();
        org.joda.time.DateTimeField dateTimeField3 = property2.getField();
        org.joda.time.DateTime dateTime4 = property2.withMinimumValue();
        java.util.Locale locale5 = java.util.Locale.SIMPLIFIED_CHINESE;
        java.lang.String str6 = property2.getAsShortText(locale5);
        org.joda.time.DateTime dateTime8 = property2.setCopy(53700016);
        java.lang.String str9 = property2.getAsText();
        int int10 = property2.get();
        org.joda.time.DateTime dateTime11 = property2.roundCeilingCopy();
        int int12 = dateTime11.getCenturyOfEra();
        java.lang.Object obj13 = null;
        org.joda.time.DateTimeZone dateTimeZone15 = org.joda.time.DateTimeZone.forOffsetMillis(39324);
        org.joda.time.LocalTime localTime16 = new org.joda.time.LocalTime(obj13, dateTimeZone15);
        org.joda.time.DateTime dateTime17 = dateTime11.toDateTime(dateTimeZone15);
        boolean boolean19 = dateTime11.isEqual(10109737501L);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime11 and dateTime17", (dateTime11.compareTo(dateTime17) == 0) == dateTime11.equals(dateTime17));
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test434");
        org.joda.time.MutableDateTime mutableDateTime2 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.MutableDateTime.Property property3 = mutableDateTime2.minuteOfHour();
        org.joda.time.DateTimeFieldType dateTimeFieldType4 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType5 = dateTimeFieldType4.getRangeDurationType();
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.dayOfYear();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTime dateTime9 = new org.joda.time.DateTime(chronology8);
        int int10 = dateTime9.getSecondOfMinute();
        boolean boolean11 = dateTime9.isEqualNow();
        int int12 = dateTime9.getDayOfYear();
        org.joda.time.Chronology chronology13 = dateTime9.getChronology();
        java.util.Locale locale14 = java.util.Locale.SIMPLIFIED_CHINESE;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket15 = new org.joda.time.format.DateTimeParserBucket(315532800097L, chronology13, locale14);
        org.joda.time.DateTimeField dateTimeField16 = dateTimeFieldType6.getField(chronology13);
        org.joda.time.DurationField durationField17 = durationFieldType5.getField(chronology13);
        mutableDateTime2.setChronology(chronology13);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(48L, chronology13);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Chronology chronology25 = instant24.getChronology();
        org.joda.time.DurationField durationField26 = chronology25.eras();
        mutablePeriod19.setPeriod(0L, (long) 969, chronology25);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField17 and durationField26", Math.signum(durationField17.compareTo(durationField26)) == -Math.signum(durationField26.compareTo(durationField17)));
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test435");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime10 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property13 = localDateTime10.hourOfDay();
        org.joda.time.DateTimeField dateTimeField14 = property13.getField();
        int int15 = property13.get();
        org.joda.time.LocalDateTime localDateTime16 = property13.roundHalfFloorCopy();
        long long18 = chronology5.set((org.joda.time.ReadablePartial) localDateTime16, (long) 2022);
        org.joda.time.LocalDateTime localDateTime19 = org.joda.time.LocalDateTime.now(chronology5);
        org.joda.time.DateTime dateTime20 = new org.joda.time.DateTime(chronology5);
        org.joda.time.DurationField durationField21 = chronology5.eras();
        org.joda.time.DateTimeField dateTimeField22 = chronology5.weekyear();
        org.joda.time.Chronology chronology23 = chronology5.withUTC();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.DateTimeField dateTimeField25 = chronology5.dayOfYear();
        org.joda.time.DurationField durationField26 = chronology5.seconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField26, and durationField6", !(durationField6.compareTo(durationField26) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField26.compareTo(durationField6))));
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test436");
        org.joda.time.DateTimeZone dateTimeZone1 = org.joda.time.DateTimeZone.forOffsetMillis(513);
        org.joda.time.MutableDateTime mutableDateTime2 = org.joda.time.MutableDateTime.now(dateTimeZone1);
        org.joda.time.LocalDate localDate3 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate5 = localDate3.minusMonths((int) ' ');
        org.joda.time.Chronology chronology6 = localDate3.getChronology();
        org.joda.time.LocalDate.Property property7 = localDate3.weekOfWeekyear();
        org.joda.time.LocalDate localDate8 = property7.withMinimumValue();
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration12, (int) (short) 100);
        mutableDateTime10.setYear(10);
        mutableDateTime10.addSeconds((int) (short) 0);
        org.joda.time.MutableDateTime.Property property19 = mutableDateTime10.minuteOfHour();
        mutableDateTime10.addWeeks(17);
        org.joda.time.DateTime dateTime22 = mutableDateTime10.toDateTime();
        org.joda.time.DateTimeZone dateTimeZone23 = dateTime22.getZone();
        org.joda.time.DateTime dateTime24 = localDate8.toDateTimeAtCurrentTime(dateTimeZone23);
        org.joda.time.MutableDateTime mutableDateTime25 = org.joda.time.MutableDateTime.now(dateTimeZone23);
        long long27 = dateTimeZone1.getMillisKeepLocal(dateTimeZone23, (long) 916);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime2 and mutableDateTime25", (mutableDateTime2.compareTo(mutableDateTime25) == 0) == mutableDateTime2.equals(mutableDateTime25));
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test437");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.DateTimeZone dateTimeZone3 = null;
        org.joda.time.LocalTime localTime4 = new org.joda.time.LocalTime(dateTimeZone3);
        org.joda.time.LocalTime localTime6 = localTime4.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime8 = localTime6.plusMillis((int) (byte) 100);
        org.joda.time.DateTime dateTime9 = dateTime2.withFields((org.joda.time.ReadablePartial) localTime8);
        org.joda.time.DateTime dateTime10 = dateTime2.toDateTimeISO();
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime((long) 100);
        org.joda.time.DateTime.Property property13 = dateTime12.monthOfYear();
        org.joda.time.DateTime dateTime14 = dateTime12.toDateTimeISO();
        boolean boolean15 = dateTime2.isAfter((org.joda.time.ReadableInstant) dateTime14);
        org.joda.time.DateTime dateTime17 = dateTime14.withYearOfCentury(56);
        org.joda.time.DateTime dateTime19 = dateTime17.plusSeconds(54);
        int int20 = dateTime17.getYear();
        org.joda.time.Chronology chronology21 = dateTime17.getChronology();
        org.joda.time.DateTimeZone dateTimeZone22 = null;
        org.joda.time.LocalTime localTime23 = new org.joda.time.LocalTime(dateTimeZone22);
        org.joda.time.DateTime dateTime24 = dateTime17.withFields((org.joda.time.ReadablePartial) localTime23);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((long) 100, 1L, periodType27);
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((long) 100, 1L, periodType31);
        org.joda.time.Period period33 = period28.plus((org.joda.time.ReadablePeriod) period32);
        org.joda.time.Instant instant34 = new org.joda.time.Instant();
        org.joda.time.Instant instant36 = instant34.withMillis(0L);
        org.joda.time.Duration duration37 = period32.toDurationTo((org.joda.time.ReadableInstant) instant36);
        org.joda.time.Instant instant39 = instant36.plus((long) (byte) -1);
        org.joda.time.Instant instant42 = instant39.withDurationAdded(1L, (int) (short) -1);
        org.joda.time.Chronology chronology44 = null;
        java.util.Locale locale45 = java.util.Locale.GERMAN;
        java.util.Locale locale46 = java.util.Locale.CANADA;
        java.lang.String str47 = locale45.getDisplayVariant(locale46);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket48 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology44, locale46);
        org.joda.time.DateTimeZone dateTimeZone49 = dateTimeParserBucket48.getZone();
        org.joda.time.MutableDateTime mutableDateTime51 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((long) 100, 1L, periodType54);
        org.joda.time.PeriodType periodType58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((long) 100, 1L, periodType58);
        org.joda.time.Period period60 = period55.plus((org.joda.time.ReadablePeriod) period59);
        org.joda.time.Instant instant61 = new org.joda.time.Instant();
        org.joda.time.Instant instant63 = instant61.withMillis(0L);
        org.joda.time.Duration duration64 = period59.toDurationTo((org.joda.time.ReadableInstant) instant63);
        mutableDateTime51.add((org.joda.time.ReadableDuration) duration64, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType67 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean68 = mutableDateTime51.isSupported(dateTimeFieldType67);
        org.joda.time.DurationFieldType durationFieldType69 = dateTimeFieldType67.getDurationType();
        java.util.Locale locale71 = java.util.Locale.CANADA;
        dateTimeParserBucket48.saveField(dateTimeFieldType67, "2022", locale71);
        org.joda.time.Instant instant73 = new org.joda.time.Instant();
        org.joda.time.Instant instant75 = instant73.withMillis(0L);
        org.joda.time.Chronology chronology76 = instant75.getChronology();
        org.joda.time.DurationField durationField77 = chronology76.eras();
        org.joda.time.DateTimeField dateTimeField78 = dateTimeFieldType67.getField(chronology76);
        int int79 = instant42.get(dateTimeFieldType67);
        java.lang.String str80 = dateTimeFieldType67.toString();
        org.joda.time.LocalTime.Property property81 = localTime23.property(dateTimeFieldType67);
        org.joda.time.DurationField durationField82 = property81.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField77, durationField82, and durationField77", !(durationField77.compareTo(durationField82) == 0) || (Math.signum(durationField77.compareTo(durationField77)) == Math.signum(durationField82.compareTo(durationField77))));
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test438");
        org.joda.time.ReadableDuration readableDuration0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableDuration0, readableInstant1);
        org.joda.time.Period period4 = period2.withDays((int) (byte) 1);
        org.joda.time.Period period6 = period4.withMinutes(39);
        org.joda.time.Period period8 = period6.plusMinutes(39221019);
        org.joda.time.Instant instant10 = new org.joda.time.Instant();
        org.joda.time.Instant instant12 = instant10.withMillis(0L);
        org.joda.time.Chronology chronology13 = instant12.getChronology();
        org.joda.time.DurationField durationField14 = chronology13.eras();
        java.util.Locale locale15 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket17 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology13, locale15, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime20 = localDateTime18.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property21 = localDateTime18.hourOfDay();
        org.joda.time.DateTimeField dateTimeField22 = property21.getField();
        int int23 = property21.get();
        org.joda.time.LocalDateTime localDateTime24 = property21.roundHalfFloorCopy();
        long long26 = chronology13.set((org.joda.time.ReadablePartial) localDateTime24, (long) 2022);
        org.joda.time.LocalDateTime localDateTime27 = org.joda.time.LocalDateTime.now(chronology13);
        org.joda.time.DateTime dateTime28 = new org.joda.time.DateTime(chronology13);
        org.joda.time.DurationField durationField29 = chronology13.eras();
        org.joda.time.MutableDateTime mutableDateTime30 = new org.joda.time.MutableDateTime(chronology13);
        org.joda.time.DateTimeZone dateTimeZone31 = mutableDateTime30.getZone();
        org.joda.time.Duration duration32 = period8.toDurationFrom((org.joda.time.ReadableInstant) mutableDateTime30);
        org.joda.time.DateTime dateTime33 = mutableDateTime30.toDateTimeISO();
        mutableDateTime30.setYear(7);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((-60494601599990L));
        org.joda.time.MutablePeriod mutablePeriod38 = mutablePeriod37.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.minutes();
        mutablePeriod37.add(durationFieldType39, 1970);
        org.joda.time.LocalDate localDate42 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property43 = localDate42.dayOfMonth();
        org.joda.time.Chronology chronology44 = localDate42.getChronology();
        org.joda.time.DurationField durationField45 = durationFieldType39.getField(chronology44);
        mutableDateTime30.add(durationFieldType39, 39409698);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField14 and durationField45", Math.signum(durationField14.compareTo(durationField45)) == -Math.signum(durationField45.compareTo(durationField14)));
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test439");
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.DateTime dateTime6 = new org.joda.time.DateTime((long) (short) 1, chronology5);
        org.joda.time.Instant instant7 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime6, (org.joda.time.ReadableInstant) instant7, periodType8);
        org.joda.time.LocalDate localDate10 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate12 = localDate10.minusMonths((int) ' ');
        org.joda.time.Chronology chronology13 = localDate10.getChronology();
        org.joda.time.Period period14 = new org.joda.time.Period((long) (byte) 1, periodType8, chronology13);
        org.joda.time.LocalDate localDate15 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate17 = localDate15.minusMonths((int) ' ');
        org.joda.time.Chronology chronology18 = localDate15.getChronology();
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate21 = localDate15.withFieldAdded(durationFieldType19, (int) (byte) 100);
        boolean boolean22 = periodType8.isSupported(durationFieldType19);
        org.joda.time.PeriodType periodType23 = periodType8.withDaysRemoved();
        org.joda.time.LocalDate localDate24 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate.Property property25 = localDate24.dayOfMonth();
        org.joda.time.Chronology chronology26 = localDate24.getChronology();
        org.joda.time.Period period27 = new org.joda.time.Period((long) 43, periodType8, chronology26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period30 = duration29.toPeriod();
        org.joda.time.Duration duration33 = duration29.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Instant instant37 = new org.joda.time.Instant();
        org.joda.time.Instant instant39 = instant37.withMillis(0L);
        org.joda.time.Chronology chronology40 = instant39.getChronology();
        org.joda.time.DurationField durationField41 = chronology40.eras();
        java.util.Locale locale42 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket44 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology40, locale42, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate45 = new org.joda.time.LocalDate((long) 53, chronology40);
        org.joda.time.DateTimeField dateTimeField46 = chronology40.dayOfYear();
        org.joda.time.DateTimeField dateTimeField47 = chronology40.monthOfYear();
        org.joda.time.Period period48 = duration29.toPeriod(periodType34, chronology40);
        org.joda.time.Period period49 = new org.joda.time.Period((long) '#', periodType8, chronology40);
        org.joda.time.LocalDate localDate50 = new org.joda.time.LocalDate(chronology40);
        org.joda.time.MutableDateTime mutableDateTime51 = new org.joda.time.MutableDateTime(35L, chronology40);
        org.joda.time.DurationField durationField52 = chronology40.hours();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField41, durationField52, and durationField41", !(durationField41.compareTo(durationField52) == 0) || (Math.signum(durationField41.compareTo(durationField41)) == Math.signum(durationField52.compareTo(durationField41))));
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test440");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(chronology4);
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DurationField durationField20 = chronology4.eras();
        org.joda.time.DateTimeField dateTimeField21 = chronology4.weekyear();
        org.joda.time.Chronology chronology22 = chronology4.withUTC();
        org.joda.time.DurationField durationField23 = chronology22.centuries();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField23, and durationField5", !(durationField5.compareTo(durationField23) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField23.compareTo(durationField5))));
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test441");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        long long13 = instant11.getMillis();
        org.joda.time.Instant instant15 = instant11.minus((long) (byte) 1);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardSeconds((long) 49);
        org.joda.time.Instant instant19 = instant15.withDurationAdded((org.joda.time.ReadableDuration) duration17, 16);
        org.joda.time.Chronology chronology20 = instant19.getChronology();
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period(readableDuration21, readableInstant22);
        org.joda.time.Period period25 = period23.withDays((int) (byte) 1);
        org.joda.time.Duration duration26 = period25.toStandardDuration();
        long long27 = duration26.getStandardHours();
        long long28 = duration26.getStandardDays();
        org.joda.time.Instant instant29 = instant19.plus((org.joda.time.ReadableDuration) duration26);
        org.joda.time.DateTimeZone dateTimeZone31 = org.joda.time.DateTimeZone.forOffsetMillis(1973);
        org.joda.time.LocalDate localDate32 = new org.joda.time.LocalDate(dateTimeZone31);
        org.joda.time.MutableDateTime mutableDateTime33 = new org.joda.time.MutableDateTime((java.lang.Object) instant29, dateTimeZone31);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(dateTimeZone31);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant29 and mutableDateTime33", (instant29.compareTo(mutableDateTime33) == 0) == instant29.equals(mutableDateTime33));
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test442");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.DurationField durationField4 = chronology3.eras();
        java.lang.String str5 = durationField4.getName();
        boolean boolean6 = durationField4.isSupported();
        boolean boolean7 = durationField4.isPrecise();
        org.joda.time.LocalDate localDate8 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate10 = localDate8.minusMonths((int) ' ');
        org.joda.time.Chronology chronology11 = localDate8.getChronology();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate14 = localDate8.withFieldAdded(durationFieldType12, (int) (byte) 100);
        org.joda.time.LocalDate.Property property15 = localDate8.dayOfWeek();
        org.joda.time.DurationField durationField16 = property15.getRangeDurationField();
        boolean boolean17 = durationField16.isPrecise();
        int int18 = durationField4.compareTo(durationField16);
        org.joda.time.MutableDateTime mutableDateTime20 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) 100, 1L, periodType23);
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((long) 100, 1L, periodType27);
        org.joda.time.Period period29 = period24.plus((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Instant instant30 = new org.joda.time.Instant();
        org.joda.time.Instant instant32 = instant30.withMillis(0L);
        org.joda.time.Duration duration33 = period28.toDurationTo((org.joda.time.ReadableInstant) instant32);
        mutableDateTime20.add((org.joda.time.ReadableDuration) duration33, 39);
        org.joda.time.MutableDateTime.Property property36 = mutableDateTime20.secondOfMinute();
        org.joda.time.MutableDateTime.Property property37 = mutableDateTime20.hourOfDay();
        org.joda.time.MutableDateTime.Property property38 = mutableDateTime20.dayOfWeek();
        org.joda.time.DurationField durationField39 = property38.getRangeDurationField();
        long long42 = durationField39.subtract((-1511989969L), 53639537);
        int int43 = durationField16.compareTo(durationField39);
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField4, durationField16, and durationField4", !(durationField4.compareTo(durationField16) == 0) || (Math.signum(durationField4.compareTo(durationField4)) == Math.signum(durationField16.compareTo(durationField4))));
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test443");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(chronology4);
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DurationField durationField20 = chronology4.eras();
        org.joda.time.DateTimeField dateTimeField21 = chronology4.weekyear();
        org.joda.time.Chronology chronology22 = chronology4.withUTC();
        org.joda.time.DurationField durationField23 = chronology22.minutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField23, and durationField5", !(durationField5.compareTo(durationField23) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField23.compareTo(durationField5))));
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test444");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(chronology4);
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DurationField durationField20 = chronology4.eras();
        org.joda.time.DateTimeField dateTimeField21 = chronology4.weekyear();
        org.joda.time.Chronology chronology22 = chronology4.withUTC();
        org.joda.time.DurationField durationField23 = chronology22.months();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField23, and durationField5", !(durationField5.compareTo(durationField23) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField23.compareTo(durationField5))));
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test445");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now(chronology4);
        org.joda.time.DateTime dateTime19 = new org.joda.time.DateTime(chronology4);
        org.joda.time.DateTimeField dateTimeField20 = chronology4.dayOfWeek();
        org.joda.time.Chronology chronology21 = chronology4.withUTC();
        org.joda.time.DurationField durationField22 = chronology4.days();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField22, and durationField5", !(durationField5.compareTo(durationField22) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField22.compareTo(durationField5))));
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test446");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        java.lang.Integer int9 = dateTimeParserBucket8.getOffsetInteger();
        int int10 = dateTimeParserBucket8.getOffset();
        org.joda.time.Instant instant12 = new org.joda.time.Instant();
        org.joda.time.Instant instant14 = instant12.withMillis(0L);
        org.joda.time.Chronology chronology15 = instant14.getChronology();
        org.joda.time.DurationField durationField16 = chronology15.eras();
        java.util.Locale locale17 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket19 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology15, locale17, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime20 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime22 = localDateTime20.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property23 = localDateTime20.hourOfDay();
        org.joda.time.DateTimeField dateTimeField24 = property23.getField();
        int int25 = property23.get();
        org.joda.time.LocalDateTime localDateTime26 = property23.roundHalfFloorCopy();
        long long28 = chronology15.set((org.joda.time.ReadablePartial) localDateTime26, (long) 2022);
        org.joda.time.DateTimeField dateTimeField29 = chronology15.weekOfWeekyear();
        int int30 = dateTimeField29.getMaximumValue();
        int int33 = dateTimeField29.getDifference((long) 642, (long) 31);
        boolean boolean35 = dateTimeField29.isLeap(39251167L);
        dateTimeParserBucket8.saveField(dateTimeField29, 3);
        org.joda.time.LocalDate localDate40 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate42 = localDate40.minusMonths((int) ' ');
        org.joda.time.Chronology chronology43 = localDate40.getChronology();
        java.util.Locale locale44 = null;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket47 = new org.joda.time.format.DateTimeParserBucket(0L, chronology43, locale44, (java.lang.Integer) 59, 12);
        long long51 = chronology43.add((long) '#', (long) 1970, 6);
        org.joda.time.DateTimeField dateTimeField52 = chronology43.millisOfSecond();
        org.joda.time.DurationField durationField53 = chronology43.minutes();
        org.joda.time.DurationField durationField54 = chronology43.millis();
        java.util.Locale locale55 = java.util.Locale.ROOT;
        java.lang.String str56 = locale55.getCountry();
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket59 = new org.joda.time.format.DateTimeParserBucket(597770290756L, chronology43, locale55, (java.lang.Integer) 29, 16);
        int int60 = dateTimeField29.getMaximumShortTextLength(locale55);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField5 and durationField53", Math.signum(durationField5.compareTo(durationField53)) == -Math.signum(durationField53.compareTo(durationField5)));
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test447");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.DateTime dateTime4 = new org.joda.time.DateTime(chronology3);
        int int5 = dateTime4.getSecondOfMinute();
        boolean boolean6 = dateTime4.isEqualNow();
        int int7 = dateTime4.getDayOfYear();
        org.joda.time.Chronology chronology8 = dateTime4.getChronology();
        org.joda.time.Period period9 = new org.joda.time.Period((long) 5, (long) (byte) 100, chronology8);
        org.joda.time.DurationField durationField10 = chronology8.hours();
        org.joda.time.DurationField durationField11 = chronology8.eras();
        org.joda.time.Period period12 = new org.joda.time.Period((long) 170, chronology8);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField10 and durationField11", Math.signum(durationField10.compareTo(durationField11)) == -Math.signum(durationField11.compareTo(durationField10)));
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test448");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.Instant instant14 = instant11.plus((long) (byte) -1);
        org.joda.time.DateTime dateTime15 = instant11.toDateTime();
        org.joda.time.DateTimeFieldType dateTimeFieldType16 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        org.joda.time.DurationFieldType durationFieldType17 = dateTimeFieldType16.getRangeDurationType();
        org.joda.time.DateTime.Property property18 = dateTime15.property(dateTimeFieldType16);
        boolean boolean20 = dateTime15.isEqual((long) 53);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period23 = duration22.toPeriod();
        org.joda.time.DateTime dateTime25 = dateTime15.withDurationAdded((org.joda.time.ReadableDuration) duration22, (-292275054));
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime28 = new org.joda.time.MutableDateTime(0L, dateTimeZone27);
        mutableDateTime28.addMillis(50);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime15, (org.joda.time.ReadableInstant) mutableDateTime28);
        org.joda.time.MutableDateTime mutableDateTime35 = new org.joda.time.MutableDateTime((long) '4');
        mutableDateTime35.addWeeks((int) (short) 0);
        org.joda.time.MutableDateTime mutableDateTime39 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime39.add((org.joda.time.ReadableDuration) duration41, (int) (short) 100);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(readableInstant44, readableInstant45, periodType46);
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableInstant) mutableDateTime35, (org.joda.time.ReadableInstant) mutableDateTime39, periodType46);
        java.lang.Object obj49 = null;
        org.joda.time.ReadableDuration readableDuration50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period(readableDuration50, readableInstant51);
        org.joda.time.PeriodType periodType55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((long) 100, 1L, periodType55);
        org.joda.time.Period period58 = period56.minusSeconds((-1));
        java.lang.String str59 = period56.toString();
        org.joda.time.Period period60 = period56.toPeriod();
        org.joda.time.PeriodType periodType61 = period56.getPeriodType();
        org.joda.time.Period period62 = period52.normalizedStandard(periodType61);
        org.joda.time.Period period63 = new org.joda.time.Period(obj49, periodType61);
        org.joda.time.Period period64 = period48.withPeriodType(periodType61);
        org.joda.time.Instant instant66 = new org.joda.time.Instant();
        org.joda.time.Instant instant68 = instant66.withMillis(0L);
        org.joda.time.Chronology chronology69 = instant68.getChronology();
        org.joda.time.DurationField durationField70 = chronology69.eras();
        java.util.Locale locale71 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket73 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology69, locale71, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology75 = null;
        java.util.Locale locale76 = java.util.Locale.GERMAN;
        java.util.Locale locale77 = java.util.Locale.CANADA;
        java.lang.String str78 = locale76.getDisplayVariant(locale77);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket79 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology75, locale77);
        org.joda.time.DateTimeZone dateTimeZone80 = dateTimeParserBucket79.getZone();
        org.joda.time.Chronology chronology81 = chronology69.withZone(dateTimeZone80);
        org.joda.time.DateTimeField dateTimeField82 = chronology81.hourOfDay();
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(20199L, (long) 69, periodType61, chronology81);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod31, chronology81);
        org.joda.time.DurationField durationField85 = chronology81.millis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField70, durationField85, and durationField70", !(durationField70.compareTo(durationField85) == 0) || (Math.signum(durationField70.compareTo(durationField70)) == Math.signum(durationField85.compareTo(durationField70))));
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test449");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.Chronology chronology10 = null;
        java.util.Locale locale11 = java.util.Locale.GERMAN;
        java.util.Locale locale12 = java.util.Locale.CANADA;
        java.lang.String str13 = locale11.getDisplayVariant(locale12);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket14 = new org.joda.time.format.DateTimeParserBucket((long) 'a', chronology10, locale12);
        org.joda.time.DateTimeZone dateTimeZone15 = dateTimeParserBucket14.getZone();
        org.joda.time.Chronology chronology16 = chronology4.withZone(dateTimeZone15);
        org.joda.time.DateTimeField dateTimeField17 = chronology16.hourOfDay();
        java.util.Locale locale19 = null;
        java.lang.String str20 = dateTimeField17.getAsText((long) 29, locale19);
        long long23 = dateTimeField17.add(24L, 402);
        int int24 = dateTimeField17.getMinimumValue();
        org.joda.time.DurationField durationField25 = dateTimeField17.getRangeDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField25, and durationField5", !(durationField5.compareTo(durationField25) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField25.compareTo(durationField5))));
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test450");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int7 = instant3.get(dateTimeFieldType6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 10, (long) 3);
        org.joda.time.Instant instant12 = instant3.withDurationAdded((org.joda.time.ReadableDuration) duration10, 0);
        org.joda.time.Instant instant13 = new org.joda.time.Instant();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) instant13);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Chronology chronology20 = instant19.getChronology();
        org.joda.time.DurationField durationField21 = chronology20.eras();
        java.util.Locale locale22 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket24 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology20, locale22, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime25.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property28 = localDateTime25.hourOfDay();
        org.joda.time.DateTimeField dateTimeField29 = property28.getField();
        int int30 = property28.get();
        org.joda.time.LocalDateTime localDateTime31 = property28.roundHalfFloorCopy();
        long long33 = chronology20.set((org.joda.time.ReadablePartial) localDateTime31, (long) 2022);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now(chronology20);
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime(chronology20);
        org.joda.time.DurationField durationField36 = chronology20.eras();
        org.joda.time.MutableDateTime mutableDateTime37 = new org.joda.time.MutableDateTime(chronology20);
        mutablePeriod14.setPeriod((long) (short) -1, chronology20);
        org.joda.time.LocalDateTime localDateTime39 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime41 = localDateTime39.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property42 = localDateTime39.hourOfDay();
        org.joda.time.LocalDateTime localDateTime44 = localDateTime39.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType45 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str46 = dateTimeFieldType45.getName();
        int int47 = localDateTime39.indexOf(dateTimeFieldType45);
        org.joda.time.LocalDateTime localDateTime49 = localDateTime39.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime51 = localDateTime39.minusSeconds((int) '#');
        org.joda.time.LocalDateTime localDateTime52 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime54 = localDateTime52.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property55 = localDateTime52.hourOfDay();
        org.joda.time.LocalDateTime localDateTime57 = localDateTime52.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType58 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str59 = dateTimeFieldType58.getName();
        int int60 = localDateTime52.indexOf(dateTimeFieldType58);
        org.joda.time.LocalDateTime localDateTime62 = localDateTime52.minusSeconds(0);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.DateTime dateTime65 = new org.joda.time.DateTime((long) (short) 1, chronology64);
        org.joda.time.Instant instant66 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime65, (org.joda.time.ReadableInstant) instant66, periodType67);
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadablePartial) localDateTime39, (org.joda.time.ReadablePartial) localDateTime62, periodType67);
        org.joda.time.DateTimeZone dateTimeZone70 = org.joda.time.DateTimeZone.UTC;
        long long73 = dateTimeZone70.convertLocalToUTC((long) (byte) 100, false);
        org.joda.time.LocalDateTime localDateTime74 = new org.joda.time.LocalDateTime(dateTimeZone70);
        org.joda.time.DateTime dateTime75 = localDateTime39.toDateTime(dateTimeZone70);
        org.joda.time.LocalDateTime localDateTime77 = localDateTime39.minusDays(2);
        java.lang.String str78 = localDateTime77.toString();
        int int79 = localDateTime77.getWeekyear();
        org.joda.time.LocalDateTime localDateTime81 = localDateTime77.minusYears((int) (short) 1);
        java.lang.String str82 = localDateTime77.toString();
        int[] intArray84 = chronology20.get((org.joda.time.ReadablePartial) localDateTime77, 0L);
        org.joda.time.Chronology chronology85 = chronology20.withUTC();
        org.joda.time.DurationField durationField86 = chronology85.days();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField21, durationField86, and durationField21", !(durationField21.compareTo(durationField86) == 0) || (Math.signum(durationField21.compareTo(durationField21)) == Math.signum(durationField86.compareTo(durationField21))));
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test451");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology5);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology12);
        int int14 = dateTime13.getSecondOfMinute();
        boolean boolean15 = dateTime13.isEqualNow();
        int int16 = dateTime13.getDayOfYear();
        org.joda.time.Chronology chronology17 = dateTime13.getChronology();
        org.joda.time.Period period18 = new org.joda.time.Period((long) 5, (long) (byte) 100, chronology17);
        org.joda.time.DurationField durationField19 = chronology17.hours();
        org.joda.time.DurationField durationField20 = chronology17.weekyears();
        mutablePeriod7.setPeriod((long) 36440272, (long) 86387081, chronology17);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField6 and durationField19", Math.signum(durationField6.compareTo(durationField19)) == -Math.signum(durationField19.compareTo(durationField6)));
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test452");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration5 = duration1.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Chronology chronology12 = instant11.getChronology();
        org.joda.time.DurationField durationField13 = chronology12.eras();
        java.util.Locale locale14 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket16 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology12, locale14, (java.lang.Integer) 39221019);
        org.joda.time.LocalDate localDate17 = new org.joda.time.LocalDate((long) 53, chronology12);
        org.joda.time.DateTimeField dateTimeField18 = chronology12.dayOfYear();
        org.joda.time.DateTimeField dateTimeField19 = chronology12.monthOfYear();
        org.joda.time.Period period20 = duration1.toPeriod(periodType6, chronology12);
        org.joda.time.Period period22 = period20.minusDays(48);
        org.joda.time.Period period24 = period20.plusSeconds(18);
        java.lang.Object obj27 = null;
        org.joda.time.DateTime dateTime28 = new org.joda.time.DateTime(obj27);
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((long) 100, 1L, periodType31);
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((long) 100, 1L, periodType35);
        org.joda.time.Period period37 = period32.plus((org.joda.time.ReadablePeriod) period36);
        org.joda.time.Instant instant38 = new org.joda.time.Instant();
        org.joda.time.Instant instant40 = instant38.withMillis(0L);
        org.joda.time.Duration duration41 = period36.toDurationTo((org.joda.time.ReadableInstant) instant40);
        org.joda.time.Instant instant43 = instant40.plus((long) (byte) -1);
        org.joda.time.Instant instant46 = instant43.withDurationAdded(1L, (int) (short) -1);
        org.joda.time.MutableDateTime mutableDateTime48 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime48.add((org.joda.time.ReadableDuration) duration50, (int) (short) 100);
        mutableDateTime48.setYear(10);
        mutableDateTime48.addSeconds((int) (short) 0);
        boolean boolean57 = instant43.isEqual((org.joda.time.ReadableInstant) mutableDateTime48);
        org.joda.time.MutableDateTime mutableDateTime58 = instant43.toMutableDateTime();
        org.joda.time.Instant instant60 = instant43.minus(39446190000L);
        boolean boolean61 = dateTime28.isEqual((org.joda.time.ReadableInstant) instant43);
        java.lang.String str62 = dateTime28.toString();
        org.joda.time.LocalDateTime localDateTime63 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime65 = localDateTime63.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime67 = localDateTime65.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField69 = localDateTime67.getField((int) (byte) 0);
        org.joda.time.LocalDateTime localDateTime71 = localDateTime67.plusMonths(53697431);
        org.joda.time.Chronology chronology72 = localDateTime67.getChronology();
        org.joda.time.MutableDateTime mutableDateTime73 = new org.joda.time.MutableDateTime(chronology72);
        org.joda.time.DateTime dateTime74 = dateTime28.toDateTime(chronology72);
        org.joda.time.LocalDateTime localDateTime75 = new org.joda.time.LocalDateTime(878255L, chronology72);
        org.joda.time.DurationField durationField76 = chronology72.months();
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((long) 655, chronology72);
        org.joda.time.Period period78 = period20.withFields((org.joda.time.ReadablePeriod) mutablePeriod77);
        org.junit.Assert.assertTrue("Contract failed: compareTo-anti-symmetric on durationField13 and durationField76", Math.signum(durationField13.compareTo(durationField76)) == -Math.signum(durationField76.compareTo(durationField13)));
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test453");
        org.joda.time.LocalDate localDate0 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate2 = localDate0.minusMonths((int) ' ');
        org.joda.time.Chronology chronology3 = localDate0.getChronology();
        org.joda.time.DateTimeField dateTimeField4 = chronology3.minuteOfDay();
        org.joda.time.DateTimeField dateTimeField5 = chronology3.minuteOfHour();
        org.joda.time.DurationField durationField6 = chronology3.weekyears();
        org.joda.time.DateTimeField dateTimeField7 = chronology3.minuteOfDay();
        java.lang.String str8 = chronology3.toString();
        org.joda.time.DurationField durationField9 = chronology3.years();
        org.joda.time.Chronology chronology10 = chronology3.withUTC();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on durationField6 and durationField9", (durationField6.compareTo(durationField9) == 0) == durationField6.equals(durationField9));
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test454");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.DurationField durationField4 = chronology3.eras();
        org.joda.time.LocalDateTime localDateTime5 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime7 = localDateTime5.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property8 = localDateTime5.hourOfDay();
        org.joda.time.LocalDateTime localDateTime10 = localDateTime5.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType11 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str12 = dateTimeFieldType11.getName();
        int int13 = localDateTime5.indexOf(dateTimeFieldType11);
        org.joda.time.LocalDateTime localDateTime15 = localDateTime5.minusSeconds(0);
        org.joda.time.LocalDateTime localDateTime17 = localDateTime5.minusSeconds((int) '#');
        org.joda.time.DateTimeFieldType dateTimeFieldType18 = org.joda.time.DateTimeFieldType.dayOfMonth();
        java.lang.String str19 = dateTimeFieldType18.getName();
        org.joda.time.LocalDateTime.Property property20 = localDateTime17.property(dateTimeFieldType18);
        int int21 = localDateTime17.getMinuteOfHour();
        org.joda.time.DateTime dateTime22 = localDateTime17.toDateTime();
        org.joda.time.LocalDateTime localDateTime23 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime23.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime27 = localDateTime25.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField29 = localDateTime27.getField((int) (byte) 0);
        org.joda.time.DateTimeField[] dateTimeFieldArray30 = localDateTime27.getFields();
        org.joda.time.PeriodType periodType33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((long) 100, 1L, periodType33);
        org.joda.time.Period period36 = period34.minusSeconds((-1));
        org.joda.time.LocalDateTime localDateTime37 = localDateTime27.plus((org.joda.time.ReadablePeriod) period36);
        int int38 = localDateTime17.compareTo((org.joda.time.ReadablePartial) localDateTime27);
        int[] intArray40 = chronology3.get((org.joda.time.ReadablePartial) localDateTime27, (long) 39266896);
        org.joda.time.DateTimeField dateTimeField41 = chronology3.dayOfYear();
        org.joda.time.DateTimeField dateTimeField42 = chronology3.weekyear();
        java.lang.String str44 = dateTimeField42.getAsText((long) 979);
        org.joda.time.DurationField durationField45 = dateTimeField42.getLeapDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField4, durationField45, and durationField4", !(durationField4.compareTo(durationField45) == 0) || (Math.signum(durationField4.compareTo(durationField4)) == Math.signum(durationField45.compareTo(durationField4))));
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test455");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        long long13 = instant11.getMillis();
        org.joda.time.Instant instant15 = instant11.minus((long) (byte) 1);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardSeconds((long) 49);
        org.joda.time.Instant instant19 = instant15.withDurationAdded((org.joda.time.ReadableDuration) duration17, 16);
        org.joda.time.Minutes minutes20 = duration17.toStandardMinutes();
        org.joda.time.Period period21 = duration17.toPeriod();
        org.joda.time.Minutes minutes22 = duration17.toStandardMinutes();
        org.joda.time.Duration duration24 = duration17.plus(212975660102399999L);
        org.joda.time.DateTime dateTime26 = new org.joda.time.DateTime(0L);
        org.joda.time.DateTime.Property property27 = dateTime26.secondOfDay();
        org.joda.time.DateTime dateTime29 = property27.addToCopy(73);
        org.joda.time.DateTime dateTime30 = dateTime29.withEarlierOffsetAtOverlap();
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period(readableDuration31, readableInstant32);
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 100, 1L, periodType36);
        org.joda.time.Period period39 = period37.minusSeconds((-1));
        java.lang.String str40 = period37.toString();
        org.joda.time.Period period41 = period37.toPeriod();
        org.joda.time.PeriodType periodType42 = period37.getPeriodType();
        org.joda.time.Period period43 = period33.normalizedStandard(periodType42);
        java.lang.String str44 = period33.toString();
        org.joda.time.PeriodType periodType45 = period33.getPeriodType();
        org.joda.time.PeriodType periodType46 = periodType45.withWeeksRemoved();
        org.joda.time.PeriodType periodType47 = periodType45.withYearsRemoved();
        org.joda.time.Period period48 = duration24.toPeriodFrom((org.joda.time.ReadableInstant) dateTime30, periodType45);
        int int49 = periodType45.size();
        java.lang.String str50 = periodType45.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime26", (instant11.compareTo(dateTime26) == 0) == instant11.equals(dateTime26));
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test456");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.Period period5 = period3.minusSeconds((-1));
        java.lang.String str6 = period3.toString();
        org.joda.time.Period period7 = period3.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod8 = period7.toMutablePeriod();
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.Period period19 = period14.plus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Instant instant20 = new org.joda.time.Instant();
        org.joda.time.Instant instant22 = instant20.withMillis(0L);
        org.joda.time.Duration duration23 = period18.toDurationTo((org.joda.time.ReadableInstant) instant22);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration23, 39);
        org.joda.time.MutableDateTime.Property property26 = mutableDateTime10.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime28 = mutableDateTime10.toMutableDateTime(dateTimeZone27);
        org.joda.time.MutableDateTime.Property property29 = mutableDateTime28.secondOfDay();
        org.joda.time.Duration duration30 = period7.toDurationFrom((org.joda.time.ReadableInstant) mutableDateTime28);
        org.joda.time.MutableDateTime.Property property31 = mutableDateTime28.monthOfYear();
        org.joda.time.LocalDateTime localDateTime32 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property33 = localDateTime32.monthOfYear();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period36 = duration35.toPeriod();
        org.joda.time.Duration duration39 = duration35.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime41 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime41.add((org.joda.time.ReadableDuration) duration43, (int) (short) 100);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DateTime dateTime47 = new org.joda.time.DateTime(chronology46);
        int int48 = dateTime47.getYearOfCentury();
        org.joda.time.Interval interval49 = duration43.toIntervalTo((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.Duration duration50 = duration39.minus((org.joda.time.ReadableDuration) duration43);
        org.joda.time.LocalDateTime localDateTime51 = localDateTime32.plus((org.joda.time.ReadableDuration) duration43);
        mutableDateTime28.add((org.joda.time.ReadableDuration) duration43, 66);
        long long54 = mutableDateTime28.getMillis();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant20 and dateTime47", (instant20.compareTo(dateTime47) == 0) == instant20.equals(dateTime47));
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test457");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime((long) (short) 1, chronology2);
        org.joda.time.Instant instant4 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime3, (org.joda.time.ReadableInstant) instant4, periodType5);
        org.joda.time.MutableDateTime mutableDateTime7 = instant4.toMutableDateTimeISO();
        org.joda.time.Instant instant8 = instant4.toInstant();
        org.joda.time.Instant instant10 = instant8.plus(3155760000035L);
        org.joda.time.Chronology chronology11 = instant8.getChronology();
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime(2351156191L, chronology11);
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime(chronology11);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant4 and mutableDateTime7", (instant4.compareTo(mutableDateTime7) == 0) == instant4.equals(mutableDateTime7));
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test458");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime1.setZone(dateTimeZone18);
        int int20 = mutableDateTime1.getYearOfEra();
        int int21 = mutableDateTime1.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property22 = mutableDateTime1.year();
        org.joda.time.DateTimeFieldType dateTimeFieldType23 = property22.getFieldType();
        int int24 = property22.getLeapAmount();
        org.joda.time.LocalDateTime localDateTime25 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime27 = localDateTime25.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property28 = localDateTime25.hourOfDay();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime25.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str32 = dateTimeFieldType31.getName();
        int int33 = localDateTime25.indexOf(dateTimeFieldType31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str35 = dateTimeFieldType34.getName();
        org.joda.time.LocalDateTime.Property property36 = localDateTime25.property(dateTimeFieldType34);
        int int37 = localDateTime25.getDayOfWeek();
        int int38 = localDateTime25.getWeekyear();
        org.joda.time.DateTime dateTime40 = new org.joda.time.DateTime((long) 100);
        int int41 = dateTime40.getCenturyOfEra();
        org.joda.time.DateTime dateTime43 = dateTime40.minusMonths(5);
        org.joda.time.DateTime dateTime44 = localDateTime25.toDateTime((org.joda.time.ReadableInstant) dateTime40);
        org.joda.time.DateTime.Property property45 = dateTime40.year();
        org.joda.time.DateTime dateTime46 = property45.roundHalfCeilingCopy();
        java.util.Locale locale48 = java.util.Locale.forLanguageTag("2022-02-21T14:56:02.799Z");
        java.lang.String str49 = property45.getAsShortText(locale48);
        int int50 = property22.getMaximumTextLength(locale48);
        int int51 = property22.getMinimumValueOverall();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime44", (instant11.compareTo(dateTime44) == 0) == instant11.equals(dateTime44));
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test459");
        org.joda.time.Period period4 = new org.joda.time.Period(30, 39236, 14, 12);
        org.joda.time.Period period6 = period4.withHours(467);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.DateTime dateTime8 = new org.joda.time.DateTime(chronology7);
        int int9 = dateTime8.getSecondOfMinute();
        int int10 = dateTime8.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str16 = mutablePeriod15.toString();
        org.joda.time.DateTime dateTime17 = dateTime8.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        mutablePeriod15.setDays(56);
        int int20 = mutablePeriod15.getMinutes();
        org.joda.time.MutableDateTime mutableDateTime22 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) 100, 1L, periodType25);
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) 100, 1L, periodType29);
        org.joda.time.Period period31 = period26.plus((org.joda.time.ReadablePeriod) period30);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.Instant instant34 = instant32.withMillis(0L);
        org.joda.time.Duration duration35 = period30.toDurationTo((org.joda.time.ReadableInstant) instant34);
        mutableDateTime22.add((org.joda.time.ReadableDuration) duration35, 39);
        org.joda.time.MutableDateTime.Property property38 = mutableDateTime22.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone39 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime22.setZone(dateTimeZone39);
        int int41 = mutableDateTime22.getYearOfEra();
        int int42 = mutableDateTime22.getMinuteOfHour();
        mutableDateTime22.addMinutes(45);
        org.joda.time.LocalDateTime localDateTime45 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime47 = localDateTime45.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime49 = localDateTime47.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime50 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime52 = localDateTime50.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property53 = localDateTime50.hourOfDay();
        org.joda.time.LocalDateTime localDateTime55 = localDateTime50.plusMillis((int) (byte) 0);
        int int56 = localDateTime49.compareTo((org.joda.time.ReadablePartial) localDateTime50);
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.millis();
        boolean boolean58 = localDateTime49.isSupported(durationFieldType57);
        mutableDateTime22.add(durationFieldType57, 39221019);
        mutablePeriod15.add(durationFieldType57, 1431020);
        boolean boolean63 = period6.isSupported(durationFieldType57);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime8 and instant32", (dateTime8.compareTo(instant32) == 0) == dateTime8.equals(instant32));
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test460");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean18 = mutableDateTime1.isSupported(dateTimeFieldType17);
        boolean boolean19 = mutableDateTime1.isBeforeNow();
        mutableDateTime1.add((long) 86396191);
        int int22 = mutableDateTime1.getMonthOfYear();
        int int23 = mutableDateTime1.getMillisOfSecond();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((long) 42, (long) 49, chronology26);
        mutablePeriod27.setPeriod((-1511999969L));
        mutablePeriod27.setSeconds(0);
        mutablePeriod27.add((int) 'x', 12022, 41, 86396, 1, 16, 15, (int) ' ');
        mutableDateTime1.add((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.PeriodType periodType42 = mutablePeriod27.getPeriodType();
        org.joda.time.MutableDateTime mutableDateTime45 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime45.add((org.joda.time.ReadableDuration) duration47, (int) (short) 100);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.DateTime dateTime51 = new org.joda.time.DateTime(chronology50);
        int int52 = dateTime51.getYearOfCentury();
        org.joda.time.Interval interval53 = duration47.toIntervalTo((org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.MutableDateTime mutableDateTime55 = new org.joda.time.MutableDateTime((long) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime51, (org.joda.time.ReadableInstant) mutableDateTime55);
        mutableDateTime55.addDays(2);
        org.joda.time.DateTimeFieldType dateTimeFieldType59 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        java.lang.String str60 = dateTimeFieldType59.toString();
        int int61 = mutableDateTime55.get(dateTimeFieldType59);
        mutableDateTime55.add((long) 75596);
        mutableDateTime55.setMillisOfDay(70);
        java.lang.String str67 = mutableDateTime55.toString("52");
        org.joda.time.Chronology chronology68 = mutableDateTime55.getChronology();
        mutablePeriod27.setPeriod((long) 504, chronology68);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime51", (instant11.compareTo(dateTime51) == 0) == instant11.equals(dateTime51));
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test461");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        boolean boolean3 = dateTime1.isBefore((long) (short) 100);
        org.joda.time.Instant instant4 = new org.joda.time.Instant();
        org.joda.time.Instant instant6 = instant4.withMillis(0L);
        org.joda.time.Chronology chronology7 = instant6.getChronology();
        org.joda.time.DateTime dateTime8 = dateTime1.toDateTime(chronology7);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.DateTime dateTime11 = new org.joda.time.DateTime((long) (short) 1, chronology10);
        org.joda.time.Instant instant12 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime11, (org.joda.time.ReadableInstant) instant12, periodType13);
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int16 = instant12.get(dateTimeFieldType15);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) 10, (long) 3);
        org.joda.time.Instant instant21 = instant12.withDurationAdded((org.joda.time.ReadableDuration) duration19, 0);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, (org.joda.time.ReadableInstant) instant22);
        java.lang.String str24 = duration19.toString();
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType26 = periodType25.withMillisRemoved();
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime8, (org.joda.time.ReadableDuration) duration19, periodType25);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.DateTime dateTime29 = new org.joda.time.DateTime(chronology28);
        int int30 = dateTime29.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter31 = null;
        java.lang.String str32 = dateTime29.toString(dateTimeFormatter31);
        org.joda.time.DateTime dateTime34 = dateTime29.plusMonths(86396191);
        org.joda.time.DateTime dateTime37 = dateTime34.withDurationAdded((long) 23, 21);
        org.joda.time.DateTime dateTime39 = dateTime37.minusMillis(44);
        boolean boolean40 = dateTime37.isEqualNow();
        int int41 = dateTime37.getMonthOfYear();
        org.joda.time.DateTime.Property property42 = dateTime37.hourOfDay();
        org.joda.time.DateTime dateTime43 = property42.roundFloorCopy();
        boolean boolean44 = duration19.equals((java.lang.Object) dateTime43);
        org.joda.time.LocalDate localDate45 = dateTime43.toLocalDate();
        java.lang.String str46 = dateTime43.toString();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant4", (dateTime1.compareTo(instant4) == 0) == dateTime1.equals(instant4));
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test462");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime(chronology1);
        int int3 = dateTime2.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter4 = null;
        java.lang.String str5 = dateTime2.toString(dateTimeFormatter4);
        org.joda.time.DateTime dateTime7 = dateTime2.plusMonths(86396191);
        org.joda.time.DateTime dateTime10 = dateTime7.withDurationAdded((long) 23, 21);
        org.joda.time.DateTime.Property property11 = dateTime10.secondOfMinute();
        int int12 = dateTime10.getDayOfYear();
        org.joda.time.DateTimeZone dateTimeZone14 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime15 = new org.joda.time.MutableDateTime(0L, dateTimeZone14);
        int int17 = dateTimeZone14.getOffsetFromLocal((long) (byte) 1);
        java.lang.String str18 = dateTimeZone14.getID();
        org.joda.time.MutableDateTime mutableDateTime21 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 100, 1L, periodType24);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.Period period30 = period25.plus((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Instant instant31 = new org.joda.time.Instant();
        org.joda.time.Instant instant33 = instant31.withMillis(0L);
        org.joda.time.Duration duration34 = period29.toDurationTo((org.joda.time.ReadableInstant) instant33);
        mutableDateTime21.add((org.joda.time.ReadableDuration) duration34, 39);
        org.joda.time.MutableDateTime.Property property37 = mutableDateTime21.secondOfMinute();
        org.joda.time.MutableDateTime.Property property38 = mutableDateTime21.minuteOfHour();
        java.lang.String str39 = property38.getAsShortText();
        java.util.Locale locale40 = java.util.Locale.GERMAN;
        java.util.Locale locale41 = locale40.stripExtensions();
        int int42 = property38.getMaximumTextLength(locale41);
        java.lang.String str43 = dateTimeZone14.getName((long) 3, locale41);
        java.util.Locale locale47 = new java.util.Locale("clockhourOfDay", "java.io.IOException", "");
        boolean boolean48 = dateTimeZone14.equals((java.lang.Object) locale47);
        long long52 = dateTimeZone14.convertLocalToUTC((long) 646, true, (long) 53768216);
        org.joda.time.DateTime dateTime53 = org.joda.time.DateTime.now(dateTimeZone14);
        int int55 = dateTimeZone14.getOffset(0L);
        org.joda.time.DateTime dateTime56 = dateTime10.toDateTime(dateTimeZone14);
        org.joda.time.LocalDateTime localDateTime57 = new org.joda.time.LocalDateTime((long) 600, dateTimeZone14);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime2 and instant31", (dateTime2.compareTo(instant31) == 0) == dateTime2.equals(instant31));
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test463");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime((long) (short) 1, chronology2);
        org.joda.time.DateTimeZone dateTimeZone4 = null;
        org.joda.time.LocalTime localTime5 = new org.joda.time.LocalTime(dateTimeZone4);
        org.joda.time.LocalTime localTime7 = localTime5.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime9 = localTime7.plusMillis((int) (byte) 100);
        org.joda.time.DateTime dateTime10 = dateTime3.withFields((org.joda.time.ReadablePartial) localTime9);
        org.joda.time.DateTime dateTime11 = dateTime3.toDateTimeISO();
        org.joda.time.DateTime dateTime13 = new org.joda.time.DateTime((long) 100);
        org.joda.time.DateTime.Property property14 = dateTime13.monthOfYear();
        org.joda.time.DateTime dateTime15 = dateTime13.toDateTimeISO();
        boolean boolean16 = dateTime3.isAfter((org.joda.time.ReadableInstant) dateTime15);
        org.joda.time.DateTime dateTime18 = dateTime15.withMillis((long) 39);
        org.joda.time.DateTime dateTime20 = dateTime18.withHourOfDay(0);
        org.joda.time.Instant instant21 = dateTime20.toInstant();
        org.joda.time.Chronology chronology22 = instant21.getChronology();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) 54017812, chronology22);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime20 and instant21", (dateTime20.compareTo(instant21) == 0) == dateTime20.equals(instant21));
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test464");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        mutableDateTime1.setDayOfYear(22);
        int int19 = mutableDateTime1.getYearOfCentury();
        mutableDateTime1.addMinutes(53639537);
        org.joda.time.MutableDateTime.Property property22 = mutableDateTime1.centuryOfEra();
        org.joda.time.LocalDateTime localDateTime23 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime25 = localDateTime23.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property26 = localDateTime23.hourOfDay();
        org.joda.time.LocalDateTime localDateTime28 = localDateTime23.plusMillis((int) (byte) 0);
        org.joda.time.DateTime dateTime29 = localDateTime23.toDateTime();
        java.lang.String str30 = localDateTime23.toString();
        org.joda.time.LocalDateTime.Property property31 = localDateTime23.weekyear();
        org.joda.time.LocalDateTime localDateTime32 = property31.roundHalfFloorCopy();
        org.joda.time.Instant instant35 = new org.joda.time.Instant();
        org.joda.time.Instant instant37 = instant35.withMillis(0L);
        org.joda.time.Chronology chronology38 = instant37.getChronology();
        org.joda.time.DurationField durationField39 = chronology38.eras();
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology38);
        org.joda.time.DateTimeField dateTimeField41 = chronology38.monthOfYear();
        org.joda.time.DateTimeFieldType dateTimeFieldType42 = dateTimeField41.getType();
        boolean boolean43 = localDateTime32.isSupported(dateTimeFieldType42);
        int int44 = mutableDateTime1.get(dateTimeFieldType42);
        org.joda.time.MutableDateTime.Property property45 = mutableDateTime1.minuteOfHour();
        org.joda.time.MutableDateTime mutableDateTime46 = property45.getMutableDateTime();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime29", (instant11.compareTo(dateTime29) == 0) == instant11.equals(dateTime29));
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test465");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        org.joda.time.LocalDateTime localDateTime2 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime4 = localDateTime2.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime6 = localDateTime4.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField8 = localDateTime6.getField((int) (byte) 0);
        long long10 = dateTimeField8.roundHalfEven((long) 1);
        int int11 = dateTime1.get(dateTimeField8);
        boolean boolean12 = dateTime1.isBeforeNow();
        int int13 = dateTime1.getWeekOfWeekyear();
        org.joda.time.DateTime dateTime15 = dateTime1.minusMinutes(21);
        org.joda.time.MutableDateTime mutableDateTime17 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((long) 100, 1L, periodType20);
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 100, 1L, periodType24);
        org.joda.time.Period period26 = period21.plus((org.joda.time.ReadablePeriod) period25);
        org.joda.time.Instant instant27 = new org.joda.time.Instant();
        org.joda.time.Instant instant29 = instant27.withMillis(0L);
        org.joda.time.Duration duration30 = period25.toDurationTo((org.joda.time.ReadableInstant) instant29);
        mutableDateTime17.add((org.joda.time.ReadableDuration) duration30, 39);
        org.joda.time.MutableDateTime.Property property33 = mutableDateTime17.yearOfEra();
        mutableDateTime17.setDayOfYear((int) ' ');
        mutableDateTime17.add((long) 53);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter38 = null;
        java.lang.String str39 = mutableDateTime17.toString(dateTimeFormatter38);
        org.joda.time.DateTimeZone dateTimeZone40 = org.joda.time.DateTimeZone.UTC;
        int int42 = dateTimeZone40.getStandardOffset((long) 894);
        mutableDateTime17.setZoneRetainFields(dateTimeZone40);
        java.util.Locale locale45 = java.util.Locale.GERMAN;
        java.util.Set<java.lang.String> strSet46 = locale45.getUnicodeLocaleAttributes();
        java.lang.String str47 = dateTimeZone40.getName((long) 8, locale45);
        org.joda.time.MutableDateTime mutableDateTime48 = dateTime1.toMutableDateTime(dateTimeZone40);
        java.util.Locale locale52 = new java.util.Locale("millisOfDay", "");
        java.lang.String str53 = locale52.getDisplayName();
        java.lang.String str54 = dateTimeZone40.getShortName((long) 39549797, locale52);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant27", (dateTime1.compareTo(instant27) == 0) == dateTime1.equals(instant27));
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test466");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime dateTime22 = dateTime1.plusDays(22);
        java.util.GregorianCalendar gregorianCalendar23 = dateTime22.toGregorianCalendar();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.DateTime dateTime26 = new org.joda.time.DateTime((long) (short) 1, chronology25);
        org.joda.time.DateTime.Property property27 = dateTime26.dayOfWeek();
        org.joda.time.DateTime.Property property28 = dateTime26.weekOfWeekyear();
        org.joda.time.DateTime dateTime30 = dateTime26.plus((long) 239);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.DateTime dateTime32 = new org.joda.time.DateTime(chronology31);
        org.joda.time.Instant instant34 = new org.joda.time.Instant();
        org.joda.time.Instant instant36 = instant34.withMillis(0L);
        org.joda.time.Chronology chronology37 = instant36.getChronology();
        org.joda.time.DurationField durationField38 = chronology37.eras();
        java.util.Locale locale39 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket41 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology37, locale39, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime42 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime44 = localDateTime42.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property45 = localDateTime42.hourOfDay();
        org.joda.time.DateTimeField dateTimeField46 = property45.getField();
        int int47 = property45.get();
        org.joda.time.LocalDateTime localDateTime48 = property45.roundHalfFloorCopy();
        long long50 = chronology37.set((org.joda.time.ReadablePartial) localDateTime48, (long) 2022);
        org.joda.time.DateTime dateTime51 = dateTime32.toDateTime(chronology37);
        org.joda.time.DateTime.Property property52 = dateTime32.millisOfDay();
        org.joda.time.LocalDateTime localDateTime53 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime55 = localDateTime53.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property56 = localDateTime53.hourOfDay();
        org.joda.time.LocalDateTime localDateTime58 = localDateTime53.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType59 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str60 = dateTimeFieldType59.getName();
        int int61 = localDateTime53.indexOf(dateTimeFieldType59);
        org.joda.time.DateTimeFieldType dateTimeFieldType62 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str63 = dateTimeFieldType62.getName();
        org.joda.time.LocalDateTime.Property property64 = localDateTime53.property(dateTimeFieldType62);
        int int65 = localDateTime53.getDayOfWeek();
        org.joda.time.DateTime dateTime66 = dateTime32.withFields((org.joda.time.ReadablePartial) localDateTime53);
        org.joda.time.DateTime dateTime67 = dateTime30.withFields((org.joda.time.ReadablePartial) localDateTime53);
        boolean boolean68 = dateTime22.isEqual((org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.DateTime.Property property69 = dateTime22.secondOfMinute();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test467");
        org.joda.time.MutableDateTime mutableDateTime9 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((long) 100, 1L, periodType12);
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((long) 100, 1L, periodType16);
        org.joda.time.Period period18 = period13.plus((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Instant instant19 = new org.joda.time.Instant();
        org.joda.time.Instant instant21 = instant19.withMillis(0L);
        org.joda.time.Duration duration22 = period17.toDurationTo((org.joda.time.ReadableInstant) instant21);
        mutableDateTime9.add((org.joda.time.ReadableDuration) duration22, 39);
        org.joda.time.MutableDateTime.Property property25 = mutableDateTime9.secondOfMinute();
        org.joda.time.Instant instant26 = mutableDateTime9.toInstant();
        org.joda.time.ReadableDuration readableDuration27 = null;
        org.joda.time.Instant instant28 = instant26.plus(readableDuration27);
        org.joda.time.Instant instant30 = new org.joda.time.Instant();
        org.joda.time.Instant instant32 = instant30.withMillis(0L);
        org.joda.time.Chronology chronology33 = instant32.getChronology();
        org.joda.time.DurationField durationField34 = chronology33.eras();
        org.joda.time.DateTimeField dateTimeField35 = chronology33.yearOfEra();
        org.joda.time.Period period36 = new org.joda.time.Period((long) ' ', chronology33);
        org.joda.time.DateTimeField dateTimeField37 = chronology33.halfdayOfDay();
        long long42 = chronology33.getDateTimeMillis(39239, (int) (byte) 1, 19, 751);
        org.joda.time.DateTime dateTime43 = new org.joda.time.DateTime(chronology33);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) instant26, (org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.standard();
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableInstant) instant26, readableInstant45, periodType46);
        org.joda.time.Period period48 = new org.joda.time.Period(6748930, 39297002, 39391192, 751, 6748930, 39469866, 658, 658, periodType46);
        org.joda.time.DateTimeZone dateTimeZone49 = null;
        org.joda.time.LocalTime localTime50 = new org.joda.time.LocalTime(dateTimeZone49);
        org.joda.time.LocalTime localTime52 = localTime50.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime54 = localTime52.plusSeconds((int) (byte) 10);
        org.joda.time.LocalTime.Property property55 = localTime52.minuteOfHour();
        org.joda.time.DurationFieldType durationFieldType56 = org.joda.time.DurationFieldType.weeks();
        boolean boolean57 = localTime52.isSupported(durationFieldType56);
        int int58 = period48.get(durationFieldType56);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime9 and instant26", (mutableDateTime9.compareTo(instant26) == 0) == mutableDateTime9.equals(instant26));
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test468");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime2 = localDateTime0.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property3 = localDateTime0.hourOfDay();
        org.joda.time.LocalDateTime localDateTime5 = localDateTime0.plusMillis((int) (byte) 0);
        org.joda.time.DateTime dateTime6 = localDateTime0.toDateTime();
        java.lang.String str7 = localDateTime0.toString();
        org.joda.time.LocalDateTime.Property property8 = localDateTime0.weekyear();
        org.joda.time.LocalDateTime localDateTime9 = property8.roundHalfFloorCopy();
        org.joda.time.Instant instant12 = new org.joda.time.Instant();
        org.joda.time.Instant instant14 = instant12.withMillis(0L);
        org.joda.time.Chronology chronology15 = instant14.getChronology();
        org.joda.time.DurationField durationField16 = chronology15.eras();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology15);
        org.joda.time.DateTimeField dateTimeField18 = chronology15.monthOfYear();
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = dateTimeField18.getType();
        boolean boolean20 = localDateTime9.isSupported(dateTimeFieldType19);
        org.joda.time.LocalDateTime.Property property21 = localDateTime9.year();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime6 and instant12", (dateTime6.compareTo(instant12) == 0) == dateTime6.equals(instant12));
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test469");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean18 = mutableDateTime1.isSupported(dateTimeFieldType17);
        boolean boolean19 = mutableDateTime1.isBeforeNow();
        mutableDateTime1.add((long) 86396191);
        int int22 = mutableDateTime1.getMonthOfYear();
        int int23 = mutableDateTime1.getMillisOfSecond();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((long) 42, (long) 49, chronology26);
        mutablePeriod27.setPeriod((-1511999969L));
        mutablePeriod27.setSeconds(0);
        mutablePeriod27.add((int) 'x', 12022, 41, 86396, 1, 16, 15, (int) ' ');
        mutableDateTime1.add((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.DateTime dateTime43 = new org.joda.time.DateTime(chronology42);
        int int44 = dateTime43.getYearOfCentury();
        org.joda.time.format.DateTimeFormatter dateTimeFormatter45 = null;
        java.lang.String str46 = dateTime43.toString(dateTimeFormatter45);
        org.joda.time.DateTime dateTime48 = dateTime43.plusMonths(86396191);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period51 = duration50.toPeriod();
        org.joda.time.Duration duration54 = duration50.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime56 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime56.add((org.joda.time.ReadableDuration) duration58, (int) (short) 100);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.DateTime dateTime62 = new org.joda.time.DateTime(chronology61);
        int int63 = dateTime62.getYearOfCentury();
        org.joda.time.Interval interval64 = duration58.toIntervalTo((org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Duration duration65 = duration54.minus((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Hours hours66 = duration54.toStandardHours();
        org.joda.time.Duration duration67 = duration54.toDuration();
        org.joda.time.Duration duration69 = duration67.minus(360206L);
        org.joda.time.DateTime dateTime71 = dateTime43.withDurationAdded((org.joda.time.ReadableDuration) duration67, 591);
        mutablePeriod27.setPeriod((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.PeriodType periodType76 = null;
        org.joda.time.Period period77 = new org.joda.time.Period((long) 100, 1L, periodType76);
        org.joda.time.Period period79 = period77.minusSeconds((-1));
        java.lang.String str80 = period77.toString();
        org.joda.time.Period period81 = period77.toPeriod();
        org.joda.time.Period period83 = period77.plusSeconds((int) '#');
        org.joda.time.DurationFieldType[] durationFieldTypeArray84 = period83.getFieldTypes();
        org.joda.time.PeriodType periodType85 = org.joda.time.PeriodType.forFields(durationFieldTypeArray84);
        org.joda.time.PeriodType periodType86 = periodType85.withHoursRemoved();
        org.joda.time.Period period87 = duration67.toPeriodTo(readableInstant73, periodType86);
        org.joda.time.Minutes minutes88 = period87.toStandardMinutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime43", (instant11.compareTo(dateTime43) == 0) == instant11.equals(dateTime43));
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test470");
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime((long) 53722178);
        org.joda.time.DateTime dateTime3 = dateTime1.plusHours(53812);
        org.joda.time.MutableDateTime mutableDateTime4 = dateTime3.toMutableDateTime();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.DateTime dateTime6 = new org.joda.time.DateTime(chronology5);
        int int7 = dateTime6.getSecondOfMinute();
        int int8 = dateTime6.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str14 = mutablePeriod13.toString();
        org.joda.time.DateTime dateTime15 = dateTime6.plus((org.joda.time.ReadablePeriod) mutablePeriod13);
        org.joda.time.MutableDateTime mutableDateTime17 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((long) 100, 1L, periodType20);
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 100, 1L, periodType24);
        org.joda.time.Period period26 = period21.plus((org.joda.time.ReadablePeriod) period25);
        org.joda.time.Instant instant27 = new org.joda.time.Instant();
        org.joda.time.Instant instant29 = instant27.withMillis(0L);
        org.joda.time.Duration duration30 = period25.toDurationTo((org.joda.time.ReadableInstant) instant29);
        mutableDateTime17.add((org.joda.time.ReadableDuration) duration30, 39);
        org.joda.time.MutableDateTime.Property property33 = mutableDateTime17.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone34 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime17.setZone(dateTimeZone34);
        int int36 = mutableDateTime17.getYearOfEra();
        int int37 = mutableDateTime17.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property38 = mutableDateTime17.year();
        org.joda.time.LocalDate localDate39 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate41 = localDate39.minusMonths((int) ' ');
        org.joda.time.Chronology chronology42 = localDate39.getChronology();
        mutableDateTime17.setChronology(chronology42);
        boolean boolean44 = dateTime6.isBefore((org.joda.time.ReadableInstant) mutableDateTime17);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DateTime dateTime47 = new org.joda.time.DateTime((long) (short) 1, chronology46);
        org.joda.time.Instant instant48 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime47, (org.joda.time.ReadableInstant) instant48, periodType49);
        org.joda.time.DateTimeFieldType dateTimeFieldType51 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int52 = instant48.get(dateTimeFieldType51);
        java.lang.String str53 = dateTimeFieldType51.getName();
        java.lang.String str54 = dateTimeFieldType51.toString();
        boolean boolean55 = dateTime6.isSupported(dateTimeFieldType51);
        org.joda.time.DurationFieldType durationFieldType56 = dateTimeFieldType51.getDurationType();
        boolean boolean57 = dateTime3.isSupported(dateTimeFieldType51);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime6 and instant27", (dateTime6.compareTo(instant27) == 0) == dateTime6.equals(instant27));
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test471");
        org.joda.time.Instant instant2 = new org.joda.time.Instant();
        org.joda.time.Instant instant4 = instant2.withMillis(0L);
        org.joda.time.Chronology chronology5 = instant4.getChronology();
        org.joda.time.DurationField durationField6 = chronology5.eras();
        java.util.Locale locale7 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket9 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology5, locale7, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime10 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime12 = localDateTime10.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property13 = localDateTime10.hourOfDay();
        org.joda.time.DateTimeField dateTimeField14 = property13.getField();
        int int15 = property13.get();
        org.joda.time.LocalDateTime localDateTime16 = property13.roundHalfFloorCopy();
        long long18 = chronology5.set((org.joda.time.ReadablePartial) localDateTime16, (long) 2022);
        org.joda.time.DateTimeField dateTimeField19 = chronology5.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField20 = chronology5.minuteOfHour();
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) 100, 1L, periodType23);
        org.joda.time.Period period26 = period24.minusSeconds((-1));
        java.lang.String str27 = period24.toString();
        org.joda.time.Period period28 = period24.negated();
        int[] intArray30 = chronology5.get((org.joda.time.ReadablePeriod) period28, (long) 1969);
        org.joda.time.LocalDateTime localDateTime31 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime.Property property32 = localDateTime31.monthOfYear();
        java.util.Locale.Category category33 = java.util.Locale.Category.DISPLAY;
        java.util.Locale locale34 = java.util.Locale.getDefault(category33);
        org.joda.time.LocalDateTime localDateTime35 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime37 = localDateTime35.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property38 = localDateTime35.hourOfDay();
        java.util.Locale locale39 = java.util.Locale.US;
        java.lang.String str40 = property38.getAsShortText(locale39);
        java.util.Locale.setDefault(category33, locale39);
        int int42 = property32.getMaximumTextLength(locale39);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket45 = new org.joda.time.format.DateTimeParserBucket((long) 9, chronology5, locale39, (java.lang.Integer) 15, 8);
        org.joda.time.DurationField durationField46 = chronology5.minutes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField6, durationField46, and durationField6", !(durationField6.compareTo(durationField46) == 0) || (Math.signum(durationField6.compareTo(durationField6)) == Math.signum(durationField46.compareTo(durationField6))));
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test472");
        org.joda.time.MutableDateTime mutableDateTime3 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime3.add((org.joda.time.ReadableDuration) duration5, (int) (short) 100);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.DateTime dateTime9 = new org.joda.time.DateTime(chronology8);
        int int10 = dateTime9.getYearOfCentury();
        org.joda.time.Interval interval11 = duration5.toIntervalTo((org.joda.time.ReadableInstant) dateTime9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.DateTime dateTime16 = new org.joda.time.DateTime((long) (short) 1, chronology15);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime16, (org.joda.time.ReadableInstant) instant17, periodType18);
        org.joda.time.LocalDate localDate20 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate22 = localDate20.minusMonths((int) ' ');
        org.joda.time.Chronology chronology23 = localDate20.getChronology();
        org.joda.time.Period period24 = new org.joda.time.Period((long) (byte) 1, periodType18, chronology23);
        org.joda.time.LocalDate localDate25 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate27 = localDate25.minusMonths((int) ' ');
        org.joda.time.Chronology chronology28 = localDate25.getChronology();
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate31 = localDate25.withFieldAdded(durationFieldType29, (int) (byte) 100);
        boolean boolean32 = periodType18.isSupported(durationFieldType29);
        org.joda.time.PeriodType periodType33 = periodType18.withDaysRemoved();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime9, readableInstant12, periodType18);
        java.lang.String str35 = periodType18.getName();
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(35L, 1645455600000L, periodType18);
        org.joda.time.Period period38 = org.joda.time.Period.millis(100);
        org.joda.time.Period period39 = period38.negated();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(readableInstant40, readableInstant41, periodType42);
        mutablePeriod43.setYears((int) '#');
        org.joda.time.Chronology chronology47 = null;
        mutablePeriod43.add((long) 1, chronology47);
        org.joda.time.ReadableInterval readableInterval49 = null;
        mutablePeriod43.setPeriod(readableInterval49);
        mutablePeriod43.setMillis((int) '4');
        org.joda.time.Period period53 = period39.minus((org.joda.time.ReadablePeriod) mutablePeriod43);
        org.joda.time.Period period54 = mutablePeriod43.toPeriod();
        boolean boolean55 = periodType18.equals((java.lang.Object) period54);
        int int56 = period54.getSeconds();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime9 and instant17", (dateTime9.compareTo(instant17) == 0) == dateTime9.equals(instant17));
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test473");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime2 = localDateTime0.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property3 = localDateTime0.hourOfDay();
        org.joda.time.LocalDateTime localDateTime5 = localDateTime0.plusMillis((int) (byte) 0);
        org.joda.time.DateTime dateTime6 = localDateTime0.toDateTime();
        java.lang.String str7 = localDateTime0.toString();
        org.joda.time.LocalDateTime.Property property8 = localDateTime0.weekyear();
        org.joda.time.LocalDateTime localDateTime9 = property8.roundHalfFloorCopy();
        org.joda.time.Instant instant12 = new org.joda.time.Instant();
        org.joda.time.Instant instant14 = instant12.withMillis(0L);
        org.joda.time.Chronology chronology15 = instant14.getChronology();
        org.joda.time.DurationField durationField16 = chronology15.eras();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology15);
        org.joda.time.DateTimeField dateTimeField18 = chronology15.monthOfYear();
        org.joda.time.DateTimeFieldType dateTimeFieldType19 = dateTimeField18.getType();
        boolean boolean20 = localDateTime9.isSupported(dateTimeFieldType19);
        org.joda.time.DateTimeFieldType[] dateTimeFieldTypeArray21 = localDateTime9.getFieldTypes();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime6 and instant12", (dateTime6.compareTo(instant12) == 0) == dateTime6.equals(instant12));
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test474");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration6 = duration2.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) 100, 1L, periodType9);
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.Period period15 = period10.plus((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Instant instant16 = new org.joda.time.Instant();
        org.joda.time.Instant instant18 = instant16.withMillis(0L);
        org.joda.time.Duration duration19 = period14.toDurationTo((org.joda.time.ReadableInstant) instant18);
        org.joda.time.Instant instant21 = instant18.plus((long) (byte) -1);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.DateTime dateTime24 = new org.joda.time.DateTime((long) (short) 1, chronology23);
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableInstant) instant25, periodType26);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, (org.joda.time.ReadableInstant) instant18, periodType26);
        org.joda.time.Period period29 = new org.joda.time.Period((long) 39221019, periodType26);
        org.joda.time.MutableDateTime mutableDateTime31 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((long) 100, 1L, periodType34);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((long) 100, 1L, periodType38);
        org.joda.time.Period period40 = period35.plus((org.joda.time.ReadablePeriod) period39);
        org.joda.time.Instant instant41 = new org.joda.time.Instant();
        org.joda.time.Instant instant43 = instant41.withMillis(0L);
        org.joda.time.Duration duration44 = period39.toDurationTo((org.joda.time.ReadableInstant) instant43);
        mutableDateTime31.add((org.joda.time.ReadableDuration) duration44, 39);
        org.joda.time.MutableDateTime.Property property47 = mutableDateTime31.secondOfMinute();
        org.joda.time.MutableDateTime.Property property48 = mutableDateTime31.minuteOfHour();
        mutableDateTime31.setWeekyear(0);
        org.joda.time.MutableDateTime.Property property51 = mutableDateTime31.era();
        java.util.Date date52 = mutableDateTime31.toDate();
        org.joda.time.Duration duration53 = period29.toDurationFrom((org.joda.time.ReadableInstant) mutableDateTime31);
        org.joda.time.MutableDateTime mutableDateTime55 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime55.add((org.joda.time.ReadableDuration) duration57, (int) (short) 100);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.DateTime dateTime61 = new org.joda.time.DateTime(chronology60);
        int int62 = dateTime61.getYearOfCentury();
        org.joda.time.Interval interval63 = duration57.toIntervalTo((org.joda.time.ReadableInstant) dateTime61);
        org.joda.time.ReadableDuration readableDuration64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period(readableDuration64, readableInstant65);
        org.joda.time.Period period68 = period66.withDays((int) (byte) 1);
        org.joda.time.Period period70 = period68.minusWeeks(100);
        org.joda.time.Period period72 = period68.minusWeeks(2023);
        org.joda.time.Duration duration73 = period68.toStandardDuration();
        boolean boolean74 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration73);
        boolean boolean75 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Period period76 = duration57.toPeriod();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant16 and dateTime61", (instant16.compareTo(dateTime61) == 0) == instant16.equals(dateTime61));
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test475");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime2 = localDateTime0.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime4 = localDateTime2.withHourOfDay(10);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) 100, 1L, periodType7);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.Period period13 = period8.plus((org.joda.time.ReadablePeriod) period12);
        org.joda.time.Instant instant14 = new org.joda.time.Instant();
        org.joda.time.Instant instant16 = instant14.withMillis(0L);
        org.joda.time.Duration duration17 = period12.toDurationTo((org.joda.time.ReadableInstant) instant16);
        org.joda.time.LocalDateTime localDateTime18 = localDateTime4.plus((org.joda.time.ReadablePeriod) period12);
        org.joda.time.LocalDateTime localDateTime20 = localDateTime18.minusYears(6);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(readableInstant21, readableInstant22, periodType23);
        mutablePeriod24.setYears((int) '#');
        org.joda.time.Chronology chronology28 = null;
        mutablePeriod24.add((long) 1, chronology28);
        mutablePeriod24.addDays((int) 'a');
        org.joda.time.LocalDateTime localDateTime32 = localDateTime18.minus((org.joda.time.ReadablePeriod) mutablePeriod24);
        org.joda.time.ReadableDuration readableDuration33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period(readableDuration33, readableInstant34);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((long) 100, 1L, periodType38);
        org.joda.time.Period period41 = period39.minusSeconds((-1));
        java.lang.String str42 = period39.toString();
        org.joda.time.Period period43 = period39.toPeriod();
        org.joda.time.PeriodType periodType44 = period39.getPeriodType();
        org.joda.time.Period period45 = period35.normalizedStandard(periodType44);
        org.joda.time.Period period47 = period45.withMillis(22);
        org.joda.time.Hours hours48 = period47.toStandardHours();
        mutablePeriod24.setPeriod((org.joda.time.ReadablePeriod) period47);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.DateTime dateTime51 = new org.joda.time.DateTime(chronology50);
        int int52 = dateTime51.getYearOfCentury();
        int int53 = dateTime51.getYear();
        org.joda.time.DateTime dateTime55 = dateTime51.plusMinutes(39321381);
        org.joda.time.Duration duration56 = period47.toDurationTo((org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Duration duration58 = duration56.minus((long) 53973480);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant14 and dateTime51", (instant14.compareTo(dateTime51) == 0) == instant14.equals(dateTime51));
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test476");
        org.joda.time.LocalDateTime localDateTime0 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime2 = localDateTime0.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime4 = localDateTime2.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime6 = localDateTime4.withCenturyOfEra((int) 'a');
        org.joda.time.LocalDateTime.Property property7 = localDateTime4.secondOfMinute();
        int int8 = localDateTime4.getMillisOfSecond();
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 100, 1L, periodType11);
        org.joda.time.Period period14 = period12.minusSeconds((-1));
        java.lang.String str15 = period12.toString();
        org.joda.time.Period period16 = period12.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod17 = period16.toMutablePeriod();
        org.joda.time.MutableDateTime mutableDateTime19 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Instant instant29 = new org.joda.time.Instant();
        org.joda.time.Instant instant31 = instant29.withMillis(0L);
        org.joda.time.Duration duration32 = period27.toDurationTo((org.joda.time.ReadableInstant) instant31);
        mutableDateTime19.add((org.joda.time.ReadableDuration) duration32, 39);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime19.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime37 = mutableDateTime19.toMutableDateTime(dateTimeZone36);
        org.joda.time.MutableDateTime.Property property38 = mutableDateTime37.secondOfDay();
        org.joda.time.Duration duration39 = period16.toDurationFrom((org.joda.time.ReadableInstant) mutableDateTime37);
        org.joda.time.LocalDateTime localDateTime40 = localDateTime4.minus((org.joda.time.ReadableDuration) duration39);
        int int41 = localDateTime4.getWeekyear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime19 and mutableDateTime37", (mutableDateTime19.compareTo(mutableDateTime37) == 0) == mutableDateTime19.equals(mutableDateTime37));
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test477");
        org.joda.time.ReadableDuration readableDuration0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableDuration0, readableInstant1);
        org.joda.time.Period period4 = period2.withDays((int) (byte) 1);
        org.joda.time.Period period6 = period4.minusWeeks(100);
        org.joda.time.Period period8 = period4.minusWeeks(2023);
        org.joda.time.Duration duration9 = period4.toStandardDuration();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.PeriodType periodType11 = periodType10.withSecondsRemoved();
        org.joda.time.DurationFieldType durationFieldType13 = periodType10.getFieldType((int) (byte) 1);
        org.joda.time.MutableDateTime mutableDateTime15 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) 100, 1L, periodType18);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.Period period24 = period19.plus((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.Instant instant27 = instant25.withMillis(0L);
        org.joda.time.Duration duration28 = period23.toDurationTo((org.joda.time.ReadableInstant) instant27);
        mutableDateTime15.add((org.joda.time.ReadableDuration) duration28, 39);
        org.joda.time.MutableDateTime.Property property31 = mutableDateTime15.yearOfEra();
        mutableDateTime15.setWeekOfWeekyear(14);
        org.joda.time.LocalDate localDate34 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate36 = localDate34.minusMonths((int) ' ');
        org.joda.time.Chronology chronology37 = localDate34.getChronology();
        org.joda.time.DateTimeField dateTimeField38 = chronology37.minuteOfDay();
        mutableDateTime15.setChronology(chronology37);
        org.joda.time.Period period40 = duration9.toPeriod(periodType10, chronology37);
        org.joda.time.DateTimeField dateTimeField41 = chronology37.clockhourOfHalfday();
        org.joda.time.LocalDate localDate42 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate44 = localDate42.minusMonths((int) ' ');
        int int45 = localDate42.size();
        org.joda.time.LocalDate.Property property46 = localDate42.era();
        org.joda.time.LocalDate localDate47 = property46.roundCeilingCopy();
        org.joda.time.LocalDate.Property property48 = localDate47.weekyear();
        org.joda.time.LocalDate localDate50 = localDate47.plusMonths(44);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DateTime dateTime54 = new org.joda.time.DateTime(chronology53);
        int int55 = dateTime54.getSecondOfMinute();
        boolean boolean56 = dateTime54.isEqualNow();
        int int57 = dateTime54.getDayOfYear();
        org.joda.time.Chronology chronology58 = dateTime54.getChronology();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology58);
        org.joda.time.PeriodType periodType62 = null;
        org.joda.time.Period period63 = new org.joda.time.Period((long) 100, 1L, periodType62);
        org.joda.time.PeriodType periodType66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period((long) 100, 1L, periodType66);
        org.joda.time.Period period68 = period63.plus((org.joda.time.ReadablePeriod) period67);
        org.joda.time.Period period70 = period67.minusSeconds(21);
        mutablePeriod59.add((org.joda.time.ReadablePeriod) period70);
        org.joda.time.LocalDate localDate72 = localDate47.minus((org.joda.time.ReadablePeriod) mutablePeriod59);
        org.joda.time.LocalDate localDate73 = new org.joda.time.LocalDate();
        int int74 = localDate73.getDayOfMonth();
        org.joda.time.LocalDate localDate76 = localDate73.plusYears(1);
        org.joda.time.Interval interval77 = localDate73.toInterval();
        int[] intArray78 = localDate73.getValues();
        chronology37.validate((org.joda.time.ReadablePartial) localDate47, intArray78);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant25 and dateTime54", (instant25.compareTo(dateTime54) == 0) == instant25.equals(dateTime54));
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test478");
        org.joda.time.Instant instant1 = new org.joda.time.Instant();
        org.joda.time.Instant instant3 = instant1.withMillis(0L);
        org.joda.time.Chronology chronology4 = instant3.getChronology();
        org.joda.time.DurationField durationField5 = chronology4.eras();
        java.util.Locale locale6 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket8 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology4, locale6, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime9 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime11 = localDateTime9.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property12 = localDateTime9.hourOfDay();
        org.joda.time.DateTimeField dateTimeField13 = property12.getField();
        int int14 = property12.get();
        org.joda.time.LocalDateTime localDateTime15 = property12.roundHalfFloorCopy();
        long long17 = chronology4.set((org.joda.time.ReadablePartial) localDateTime15, (long) 2022);
        org.joda.time.DateTimeField dateTimeField18 = chronology4.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField19 = chronology4.minuteOfHour();
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.Period period25 = period23.minusSeconds((-1));
        java.lang.String str26 = period23.toString();
        org.joda.time.Period period27 = period23.negated();
        int[] intArray29 = chronology4.get((org.joda.time.ReadablePeriod) period27, (long) 1969);
        org.joda.time.DateTimeField dateTimeField30 = chronology4.halfdayOfDay();
        org.joda.time.DurationField durationField31 = chronology4.eras();
        org.joda.time.DurationField durationField32 = chronology4.centuries();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField5, durationField32, and durationField5", !(durationField5.compareTo(durationField32) == 0) || (Math.signum(durationField5.compareTo(durationField5)) == Math.signum(durationField32.compareTo(durationField5))));
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test479");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 2025);
        java.lang.Object obj2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(obj2);
        org.joda.time.LocalDateTime localDateTime4 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime6 = localDateTime4.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property7 = localDateTime4.hourOfDay();
        org.joda.time.DateTimeField dateTimeField8 = property7.getField();
        boolean boolean10 = property7.equals((java.lang.Object) '#');
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime(chronology11);
        int int13 = dateTime12.getSecondOfMinute();
        int int14 = dateTime12.getYearOfEra();
        int int15 = property7.getDifference((org.joda.time.ReadableInstant) dateTime12);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime3, (org.joda.time.ReadableInstant) dateTime12);
        org.joda.time.Instant instant17 = dateTime3.toInstant();
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime3, periodType18);
        org.joda.time.DateTime.Property property20 = dateTime3.hourOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime12 and instant17", (dateTime12.compareTo(instant17) == 0) == dateTime12.equals(instant17));
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test480");
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.DateTime dateTime5 = new org.joda.time.DateTime((long) (short) 1, chronology4);
        org.joda.time.Instant instant6 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime5, (org.joda.time.ReadableInstant) instant6, periodType7);
        org.joda.time.Instant instant10 = new org.joda.time.Instant();
        org.joda.time.Instant instant12 = instant10.withMillis(0L);
        org.joda.time.Chronology chronology13 = instant12.getChronology();
        org.joda.time.DurationField durationField14 = chronology13.eras();
        java.util.Locale locale15 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket17 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology13, locale15, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime18 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime20 = localDateTime18.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property21 = localDateTime18.hourOfDay();
        org.joda.time.DateTimeField dateTimeField22 = property21.getField();
        int int23 = property21.get();
        org.joda.time.LocalDateTime localDateTime24 = property21.roundHalfFloorCopy();
        long long26 = chronology13.set((org.joda.time.ReadablePartial) localDateTime24, (long) 2022);
        org.joda.time.DateTimeField dateTimeField27 = chronology13.weekOfWeekyear();
        org.joda.time.DateTimeField dateTimeField28 = chronology13.minuteOfHour();
        org.joda.time.PeriodType periodType31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((long) 100, 1L, periodType31);
        org.joda.time.Period period34 = period32.minusSeconds((-1));
        java.lang.String str35 = period32.toString();
        org.joda.time.Period period36 = period32.negated();
        int[] intArray38 = chronology13.get((org.joda.time.ReadablePeriod) period36, (long) 1969);
        org.joda.time.DateTimeField dateTimeField39 = chronology13.halfdayOfDay();
        org.joda.time.Period period40 = new org.joda.time.Period((long) 894, 48L, periodType7, chronology13);
        org.joda.time.DateTimeZone dateTimeZone42 = org.joda.time.DateTimeZone.forOffsetHours(22);
        java.util.Locale locale47 = new java.util.Locale("dayOfMonth", "en-CA", "2022-02-21T14:53:55.782Z");
        java.util.Set<java.lang.Character> charSet48 = locale47.getExtensionKeys();
        java.lang.String str49 = dateTimeZone42.getName((long) 365, locale47);
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket51 = new org.joda.time.format.DateTimeParserBucket((long) 642, chronology13, locale47, (java.lang.Integer) 0);
        org.joda.time.DurationField durationField52 = chronology13.years();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField14, durationField52, and durationField14", !(durationField14.compareTo(durationField52) == 0) || (Math.signum(durationField14.compareTo(durationField14)) == Math.signum(durationField52.compareTo(durationField14))));
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test481");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration3, (int) (short) 100);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.DateTime dateTime7 = new org.joda.time.DateTime(chronology6);
        int int8 = dateTime7.getYearOfCentury();
        org.joda.time.Interval interval9 = duration3.toIntervalTo((org.joda.time.ReadableInstant) dateTime7);
        org.joda.time.MutableDateTime mutableDateTime11 = new org.joda.time.MutableDateTime((long) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime7, (org.joda.time.ReadableInstant) mutableDateTime11);
        int int13 = mutableDateTime11.getDayOfYear();
        org.joda.time.MutableDateTime mutableDateTime15 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) 100, 1L, periodType18);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.Period period24 = period19.plus((org.joda.time.ReadablePeriod) period23);
        org.joda.time.Instant instant25 = new org.joda.time.Instant();
        org.joda.time.Instant instant27 = instant25.withMillis(0L);
        org.joda.time.Duration duration28 = period23.toDurationTo((org.joda.time.ReadableInstant) instant27);
        mutableDateTime15.add((org.joda.time.ReadableDuration) duration28, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean32 = mutableDateTime15.isSupported(dateTimeFieldType31);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.DateTime dateTime37 = new org.joda.time.DateTime((long) (short) 1, chronology36);
        org.joda.time.DateTime dateTime38 = dateTime37.toDateTime();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.DateTime dateTime41 = new org.joda.time.DateTime((long) (short) 1, chronology40);
        org.joda.time.DateTime dateTime42 = dateTime41.toDateTime();
        int int43 = dateTime38.compareTo((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime41, (org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration34.withDurationAdded((org.joda.time.ReadableDuration) duration45, 10);
        org.joda.time.Duration duration49 = duration48.toDuration();
        mutableDateTime15.add((org.joda.time.ReadableDuration) duration48);
        mutableDateTime15.setDayOfYear(1);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.DateTime dateTime56 = new org.joda.time.DateTime((long) (short) 1, chronology55);
        org.joda.time.Instant instant57 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) instant57, periodType58);
        org.joda.time.LocalDate localDate60 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate62 = localDate60.minusMonths((int) ' ');
        org.joda.time.Chronology chronology63 = localDate60.getChronology();
        org.joda.time.Period period64 = new org.joda.time.Period((long) (byte) 1, periodType58, chronology63);
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableInstant) mutableDateTime11, (org.joda.time.ReadableInstant) mutableDateTime15, periodType58);
        org.joda.time.MutableDateTime.Property property66 = mutableDateTime15.year();
        org.joda.time.DurationField durationField67 = property66.getLeapDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime7 and instant25", (dateTime7.compareTo(instant25) == 0) == dateTime7.equals(instant25));
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test482");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        mutablePeriod4.addDays(53);
        mutablePeriod4.setMillis(39250977);
        java.lang.Object obj9 = null;
        org.joda.time.DateTime dateTime10 = new org.joda.time.DateTime(obj9);
        org.joda.time.DateTime.Property property11 = dateTime10.millisOfDay();
        org.joda.time.LocalDateTime localDateTime12 = dateTime10.toLocalDateTime();
        org.joda.time.LocalDateTime.Property property13 = localDateTime12.weekyear();
        org.joda.time.LocalDateTime localDateTime15 = property13.setCopy((int) ' ');
        org.joda.time.Instant instant17 = org.joda.time.Instant.parse("14");
        int int18 = property13.compareTo((org.joda.time.ReadableInstant) instant17);
        org.joda.time.MutableDateTime mutableDateTime19 = instant17.toMutableDateTimeISO();
        org.joda.time.Instant instant21 = instant17.withMillis(1645455286500L);
        org.joda.time.Duration duration22 = org.joda.time.Duration.ZERO;
        org.joda.time.Hours hours23 = duration22.toStandardHours();
        org.joda.time.Duration duration24 = duration22.toDuration();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.DateTime dateTime28 = new org.joda.time.DateTime(chronology27);
        int int29 = dateTime28.getSecondOfMinute();
        boolean boolean30 = dateTime28.isEqualNow();
        int int31 = dateTime28.getDayOfYear();
        org.joda.time.Chronology chronology32 = dateTime28.getChronology();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology32);
        org.joda.time.DateTimeField dateTimeField34 = chronology32.year();
        org.joda.time.DateTimeField dateTimeField35 = chronology32.dayOfMonth();
        org.joda.time.LocalDateTime localDateTime36 = org.joda.time.LocalDateTime.now(chronology32);
        org.joda.time.DateTimeFieldType dateTimeFieldType37 = org.joda.time.DateTimeFieldType.hourOfDay();
        org.joda.time.DurationFieldType durationFieldType38 = dateTimeFieldType37.getDurationType();
        org.joda.time.LocalDateTime localDateTime40 = localDateTime36.withFieldAdded(durationFieldType38, 14);
        org.joda.time.LocalDateTime localDateTime42 = localDateTime36.withYear(18);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardDays((-1L));
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardDays((long) (byte) 1);
        java.lang.String str47 = duration46.toString();
        org.joda.time.Duration duration48 = duration44.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.LocalDateTime localDateTime50 = localDateTime36.withDurationAdded((org.joda.time.ReadableDuration) duration46, 53813);
        boolean boolean51 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Instant instant53 = instant21.withDurationAdded((org.joda.time.ReadableDuration) duration22, 2922789);
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration22);
        mutablePeriod4.addMinutes(1381);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant17 and mutableDateTime19", (instant17.compareTo(mutableDateTime19) == 0) == instant17.equals(mutableDateTime19));
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test483");
        org.joda.time.DateTimeZone dateTimeZone0 = null;
        org.joda.time.LocalTime localTime1 = new org.joda.time.LocalTime(dateTimeZone0);
        org.joda.time.LocalTime localTime3 = localTime1.minusHours((int) (byte) 100);
        org.joda.time.LocalTime localTime5 = localTime3.plusMillis((int) (byte) 100);
        org.joda.time.MutableDateTime mutableDateTime7 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) 100, 1L, periodType10);
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 100, 1L, periodType14);
        org.joda.time.Period period16 = period11.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Instant instant17 = new org.joda.time.Instant();
        org.joda.time.Instant instant19 = instant17.withMillis(0L);
        org.joda.time.Duration duration20 = period15.toDurationTo((org.joda.time.ReadableInstant) instant19);
        mutableDateTime7.add((org.joda.time.ReadableDuration) duration20, 39);
        org.joda.time.MutableDateTime.Property property23 = mutableDateTime7.yearOfEra();
        org.joda.time.DateTimeZone dateTimeZone24 = org.joda.time.DateTimeZone.UTC;
        mutableDateTime7.setZone(dateTimeZone24);
        int int26 = mutableDateTime7.getYearOfEra();
        int int27 = mutableDateTime7.getMinuteOfHour();
        org.joda.time.MutableDateTime.Property property28 = mutableDateTime7.year();
        org.joda.time.MutableDateTime mutableDateTime29 = property28.roundHalfEven();
        org.joda.time.DateTime dateTime30 = localTime5.toDateTime((org.joda.time.ReadableInstant) mutableDateTime29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime((long) (short) 1, chronology34);
        org.joda.time.DateTime dateTime36 = dateTime35.toDateTime();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DateTime dateTime39 = new org.joda.time.DateTime((long) (short) 1, chronology38);
        org.joda.time.DateTime dateTime40 = dateTime39.toDateTime();
        int int41 = dateTime36.compareTo((org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration46 = duration32.withDurationAdded((org.joda.time.ReadableDuration) duration43, 10);
        long long47 = duration46.getMillis();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period50 = duration49.toPeriod();
        org.joda.time.Duration duration53 = duration49.withDurationAdded((long) 38, (int) 'a');
        int int54 = duration46.compareTo((org.joda.time.ReadableDuration) duration53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.PeriodType periodType56 = periodType55.withSecondsRemoved();
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableInstant) mutableDateTime29, (org.joda.time.ReadableDuration) duration46, periodType56);
        mutableDateTime29.addMinutes(49);
        int int60 = mutableDateTime29.getDayOfWeek();
        org.joda.time.MutableDateTime.Property property61 = mutableDateTime29.millisOfDay();
        org.joda.time.MutableDateTime mutableDateTime62 = property61.roundHalfFloor();
        mutableDateTime62.setTime(0L);
        org.joda.time.DateTimeZone dateTimeZone66 = org.joda.time.DateTimeZone.forOffsetHours(25);
        org.joda.time.DateTime dateTime67 = mutableDateTime62.toDateTime(dateTimeZone66);
        org.joda.time.MutableDateTime.Property property68 = mutableDateTime62.millisOfDay();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime62 and dateTime67", (mutableDateTime62.compareTo(dateTime67) == 0) == mutableDateTime62.equals(dateTime67));
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test484");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.DateTimeFieldType dateTimeFieldType6 = org.joda.time.DateTimeFieldType.minuteOfDay();
        int int7 = instant3.get(dateTimeFieldType6);
        java.lang.String str8 = dateTimeFieldType6.getName();
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Chronology chronology14 = instant13.getChronology();
        org.joda.time.DurationField durationField15 = chronology14.eras();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) (short) 10, (long) '#', chronology14);
        org.joda.time.DateTimeField dateTimeField17 = dateTimeFieldType6.getField(chronology14);
        org.joda.time.DurationField durationField18 = dateTimeField17.getDurationField();
        org.junit.Assert.assertTrue("Contract failed: compareTo-substitutability on durationField15, durationField18, and durationField15", !(durationField15.compareTo(durationField18) == 0) || (Math.signum(durationField15.compareTo(durationField15)) == Math.signum(durationField18.compareTo(durationField15))));
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test485");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.Instant instant5 = instant3.withMillis(0L);
        org.joda.time.Chronology chronology6 = instant5.getChronology();
        org.joda.time.DurationField durationField7 = chronology6.eras();
        java.util.Locale locale8 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket10 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology6, locale8, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime11 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime13 = localDateTime11.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property14 = localDateTime11.hourOfDay();
        org.joda.time.DateTimeField dateTimeField15 = property14.getField();
        int int16 = property14.get();
        org.joda.time.LocalDateTime localDateTime17 = property14.roundHalfFloorCopy();
        long long19 = chronology6.set((org.joda.time.ReadablePartial) localDateTime17, (long) 2022);
        org.joda.time.DateTime dateTime20 = dateTime1.toDateTime(chronology6);
        org.joda.time.DateTime.Property property21 = dateTime1.dayOfMonth();
        org.joda.time.DateTime dateTime22 = dateTime1.withTimeAtStartOfDay();
        org.joda.time.DateTime dateTime24 = dateTime22.minusHours(53890892);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant3", (dateTime1.compareTo(instant3) == 0) == dateTime1.equals(instant3));
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test486");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.DateTime dateTime2 = new org.joda.time.DateTime((long) (short) 1, chronology1);
        org.joda.time.Instant instant3 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime2, (org.joda.time.ReadableInstant) instant3, periodType4);
        org.joda.time.MutableDateTime mutableDateTime6 = instant3.toMutableDateTimeISO();
        org.joda.time.Instant instant7 = instant3.toInstant();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period10 = duration9.toPeriod();
        org.joda.time.Duration duration13 = duration9.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant14);
        long long16 = duration13.getStandardDays();
        org.joda.time.Duration duration17 = duration13.toDuration();
        org.joda.time.PeriodType periodType20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((long) 100, 1L, periodType20);
        org.joda.time.Period period23 = period21.minusSeconds((-1));
        java.lang.String str24 = period21.toString();
        org.joda.time.Period period25 = period21.toPeriod();
        org.joda.time.PeriodType periodType26 = period21.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) instant3, (org.joda.time.ReadableDuration) duration13, periodType26);
        mutablePeriod27.addMonths(457128);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant3 and mutableDateTime6", (instant3.compareTo(mutableDateTime6) == 0) == instant3.equals(mutableDateTime6));
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test487");
        org.joda.time.MutableDateTime mutableDateTime0 = new org.joda.time.MutableDateTime();
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime((long) (short) 1, chronology2);
        org.joda.time.DateTime dateTime4 = dateTime3.toDateTime();
        org.joda.time.DateTime.Property property5 = dateTime3.monthOfYear();
        org.joda.time.DateTime dateTime6 = property5.getDateTime();
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) mutableDateTime0, (org.joda.time.ReadableInstant) dateTime6, periodType7);
        mutablePeriod8.setMillis(261);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.DateTime dateTime12 = new org.joda.time.DateTime(chronology11);
        int int13 = dateTime12.getSecondOfMinute();
        boolean boolean14 = dateTime12.isEqualNow();
        int int15 = dateTime12.getDayOfYear();
        org.joda.time.Chronology chronology16 = dateTime12.getChronology();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.DateTime dateTime19 = dateTime12.plus((org.joda.time.ReadableDuration) duration18);
        org.joda.time.MutableDateTime mutableDateTime21 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 100, 1L, periodType24);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.Period period30 = period25.plus((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Instant instant31 = new org.joda.time.Instant();
        org.joda.time.Instant instant33 = instant31.withMillis(0L);
        org.joda.time.Duration duration34 = period29.toDurationTo((org.joda.time.ReadableInstant) instant33);
        mutableDateTime21.add((org.joda.time.ReadableDuration) duration34, 39);
        org.joda.time.MutableDateTime.Property property37 = mutableDateTime21.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone38 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime39 = mutableDateTime21.toMutableDateTime(dateTimeZone38);
        org.joda.time.MutableDateTime.Property property40 = mutableDateTime39.secondOfDay();
        int int41 = mutableDateTime39.getCenturyOfEra();
        mutableDateTime39.setMinuteOfDay(505);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.DateTime dateTime46 = new org.joda.time.DateTime((long) (short) 1, chronology45);
        org.joda.time.Instant instant47 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime46, (org.joda.time.ReadableInstant) instant47, periodType48);
        org.joda.time.LocalDate localDate50 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate52 = localDate50.minusMonths((int) ' ');
        org.joda.time.Chronology chronology53 = localDate50.getChronology();
        org.joda.time.DurationFieldType durationFieldType54 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate56 = localDate50.withFieldAdded(durationFieldType54, (int) (byte) 100);
        int int57 = periodType48.indexOf(durationFieldType54);
        org.joda.time.PeriodType periodType58 = periodType48.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration18, (org.joda.time.ReadableInstant) mutableDateTime39, periodType48);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period62 = duration61.toPeriod();
        org.joda.time.Duration duration65 = duration61.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.MutableDateTime mutableDateTime67 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime67.add((org.joda.time.ReadableDuration) duration69, (int) (short) 100);
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.DateTime dateTime73 = new org.joda.time.DateTime(chronology72);
        int int74 = dateTime73.getYearOfCentury();
        org.joda.time.Interval interval75 = duration69.toIntervalTo((org.joda.time.ReadableInstant) dateTime73);
        org.joda.time.Duration duration76 = duration65.minus((org.joda.time.ReadableDuration) duration69);
        org.joda.time.Hours hours77 = duration65.toStandardHours();
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.DateTime dateTime81 = new org.joda.time.DateTime(chronology80);
        int int82 = dateTime81.getSecondOfMinute();
        boolean boolean83 = dateTime81.isEqualNow();
        int int84 = dateTime81.getDayOfYear();
        org.joda.time.Chronology chronology85 = dateTime81.getChronology();
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology85);
        org.joda.time.DateTimeField dateTimeField87 = chronology85.year();
        org.joda.time.DateTimeZone dateTimeZone88 = chronology85.getZone();
        org.joda.time.Period period89 = duration65.toPeriod(chronology85);
        org.joda.time.DateTimeZone dateTimeZone90 = chronology85.getZone();
        java.lang.String str91 = chronology85.toString();
        org.joda.time.LocalDateTime localDateTime92 = org.joda.time.LocalDateTime.now(chronology85);
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration18, chronology85);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime0 and instant31", (mutableDateTime0.compareTo(instant31) == 0) == mutableDateTime0.equals(instant31));
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test488");
        org.joda.time.Instant instant0 = new org.joda.time.Instant();
        org.joda.time.Instant instant2 = instant0.withMillis(0L);
        org.joda.time.Chronology chronology3 = instant2.getChronology();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.Duration duration8 = duration5.plus(1L);
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.Period period19 = period14.plus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Instant instant20 = new org.joda.time.Instant();
        org.joda.time.Instant instant22 = instant20.withMillis(0L);
        org.joda.time.Duration duration23 = period18.toDurationTo((org.joda.time.ReadableInstant) instant22);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration23, 39);
        int int26 = duration5.compareTo((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Instant instant28 = instant2.withDurationAdded((org.joda.time.ReadableDuration) duration23, 0);
        org.joda.time.Instant instant29 = instant2.toInstant();
        org.joda.time.DateTime dateTime30 = instant29.toDateTime();
        org.joda.time.DateTime dateTime32 = dateTime30.withYearOfCentury(47);
        org.joda.time.DateTime dateTime34 = dateTime30.plusMonths(0);
        org.joda.time.DateTime.Property property35 = dateTime34.minuteOfHour();
        org.joda.time.DateTime dateTime37 = dateTime34.withDayOfYear(348);
        int int38 = dateTime34.getYear();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant2 and dateTime34", (instant2.compareTo(dateTime34) == 0) == instant2.equals(dateTime34));
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test489");
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) 100, 1L, periodType3);
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) 100, 1L, periodType7);
        org.joda.time.Period period9 = period4.plus((org.joda.time.ReadablePeriod) period8);
        org.joda.time.Instant instant10 = new org.joda.time.Instant();
        org.joda.time.Instant instant12 = instant10.withMillis(0L);
        org.joda.time.Duration duration13 = period8.toDurationTo((org.joda.time.ReadableInstant) instant12);
        long long14 = instant12.getMillis();
        org.joda.time.Instant instant16 = instant12.minus((long) (byte) 1);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardSeconds((long) 49);
        org.joda.time.Instant instant20 = instant16.withDurationAdded((org.joda.time.ReadableDuration) duration18, 16);
        org.joda.time.Chronology chronology21 = instant20.getChronology();
        org.joda.time.ReadableDuration readableDuration22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period(readableDuration22, readableInstant23);
        org.joda.time.Period period26 = period24.withDays((int) (byte) 1);
        org.joda.time.Duration duration27 = period26.toStandardDuration();
        long long28 = duration27.getStandardHours();
        long long29 = duration27.getStandardDays();
        org.joda.time.Instant instant30 = instant20.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration36 = duration32.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration36, readableInstant37);
        org.joda.time.Duration duration39 = duration36.toDuration();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period42 = duration41.toPeriod();
        org.joda.time.Duration duration45 = duration41.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.PeriodType periodType48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) 100, 1L, periodType48);
        org.joda.time.PeriodType periodType52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((long) 100, 1L, periodType52);
        org.joda.time.Period period54 = period49.plus((org.joda.time.ReadablePeriod) period53);
        org.joda.time.Instant instant55 = new org.joda.time.Instant();
        org.joda.time.Instant instant57 = instant55.withMillis(0L);
        org.joda.time.Duration duration58 = period53.toDurationTo((org.joda.time.ReadableInstant) instant57);
        org.joda.time.Instant instant60 = instant57.plus((long) (byte) -1);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.DateTime dateTime63 = new org.joda.time.DateTime((long) (short) 1, chronology62);
        org.joda.time.Instant instant64 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) instant64, periodType65);
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration41, (org.joda.time.ReadableInstant) instant57, periodType65);
        int int68 = duration36.compareTo((org.joda.time.ReadableDuration) duration41);
        org.joda.time.MutableDateTime mutableDateTime70 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((long) 100, 1L, periodType73);
        org.joda.time.PeriodType periodType77 = null;
        org.joda.time.Period period78 = new org.joda.time.Period((long) 100, 1L, periodType77);
        org.joda.time.Period period79 = period74.plus((org.joda.time.ReadablePeriod) period78);
        org.joda.time.Instant instant80 = new org.joda.time.Instant();
        org.joda.time.Instant instant82 = instant80.withMillis(0L);
        org.joda.time.Duration duration83 = period78.toDurationTo((org.joda.time.ReadableInstant) instant82);
        mutableDateTime70.add((org.joda.time.ReadableDuration) duration83, 39);
        org.joda.time.MutableDateTime.Property property86 = mutableDateTime70.secondOfMinute();
        org.joda.time.Instant instant87 = mutableDateTime70.toInstant();
        org.joda.time.PeriodType periodType88 = org.joda.time.PeriodType.millis();
        org.joda.time.Period period89 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, (org.joda.time.ReadableInstant) instant87, periodType88);
        org.joda.time.Period period90 = duration27.toPeriod(periodType88);
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod((long) 530, periodType88);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on mutableDateTime70 and instant87", (mutableDateTime70.compareTo(instant87) == 0) == mutableDateTime70.equals(instant87));
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test490");
        java.lang.Object obj0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(obj0);
        boolean boolean3 = dateTime1.isBefore((long) (short) 100);
        org.joda.time.DateTime.Property property4 = dateTime1.minuteOfDay();
        org.joda.time.DateTime dateTime5 = property4.withMaximumValue();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.DateTime dateTime8 = new org.joda.time.DateTime((long) (short) 1, chronology7);
        org.joda.time.DateTime.Property property9 = dateTime8.dayOfWeek();
        java.util.Locale locale10 = java.util.Locale.GERMAN;
        java.util.Locale locale11 = locale10.stripExtensions();
        int int12 = property9.getMaximumTextLength(locale10);
        org.joda.time.DateTime dateTime13 = property9.roundHalfCeilingCopy();
        java.lang.Object obj14 = null;
        org.joda.time.DateTime dateTime15 = new org.joda.time.DateTime(obj14);
        boolean boolean17 = dateTime15.isBefore((long) (short) 100);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardDays((-1L));
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, 1L, periodType22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 100, 1L, periodType26);
        org.joda.time.Period period28 = period23.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Period period30 = period28.withMillis(39251693);
        org.joda.time.ReadableDuration readableDuration31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period(readableDuration31, readableInstant32);
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 100, 1L, periodType36);
        org.joda.time.Period period39 = period37.minusSeconds((-1));
        java.lang.String str40 = period37.toString();
        org.joda.time.Period period41 = period37.toPeriod();
        org.joda.time.PeriodType periodType42 = period37.getPeriodType();
        org.joda.time.Period period43 = period33.normalizedStandard(periodType42);
        java.lang.String str44 = periodType42.getName();
        org.joda.time.PeriodType periodType45 = periodType42.withMinutesRemoved();
        org.joda.time.PeriodType periodType46 = periodType45.withMonthsRemoved();
        org.joda.time.Period period47 = period30.normalizedStandard(periodType45);
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime15, (org.joda.time.ReadableDuration) duration19, periodType45);
        org.joda.time.DateTime dateTime49 = dateTime13.minus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.PeriodType periodType52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((long) 100, 1L, periodType52);
        org.joda.time.PeriodType periodType56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((long) 100, 1L, periodType56);
        org.joda.time.Period period58 = period53.plus((org.joda.time.ReadablePeriod) period57);
        org.joda.time.Instant instant59 = new org.joda.time.Instant();
        org.joda.time.Instant instant61 = instant59.withMillis(0L);
        org.joda.time.Duration duration62 = period57.toDurationTo((org.joda.time.ReadableInstant) instant61);
        org.joda.time.Seconds seconds63 = duration62.toStandardSeconds();
        boolean boolean64 = duration19.isEqual((org.joda.time.ReadableDuration) duration62);
        org.joda.time.DateTime dateTime65 = dateTime5.minus((org.joda.time.ReadableDuration) duration19);
        int int66 = dateTime65.getMinuteOfHour();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant59", (dateTime1.compareTo(instant59) == 0) == dateTime1.equals(instant59));
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test491");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        org.joda.time.LocalDate localDate3 = new org.joda.time.LocalDate();
        int int4 = localDate3.getDayOfMonth();
        org.joda.time.LocalDate localDate6 = localDate3.plusYears(1);
        org.joda.time.LocalDate localDate8 = localDate6.plusYears((int) (short) -1);
        org.joda.time.DateTime dateTime9 = dateTime1.withFields((org.joda.time.ReadablePartial) localDate6);
        int int10 = localDate6.getEra();
        org.joda.time.LocalDate localDate12 = localDate6.withWeekyear(917);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) 100, 1L, periodType28);
        org.joda.time.PeriodType periodType32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 100, 1L, periodType32);
        org.joda.time.Period period34 = period29.plus((org.joda.time.ReadablePeriod) period33);
        org.joda.time.Instant instant35 = new org.joda.time.Instant();
        org.joda.time.Instant instant37 = instant35.withMillis(0L);
        org.joda.time.Duration duration38 = period33.toDurationTo((org.joda.time.ReadableInstant) instant37);
        boolean boolean39 = instant24.isEqual((org.joda.time.ReadableInstant) instant37);
        org.joda.time.ReadableDuration readableDuration40 = null;
        org.joda.time.Instant instant41 = instant37.minus(readableDuration40);
        boolean boolean42 = localDate6.equals((java.lang.Object) readableDuration40);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant22", (dateTime1.compareTo(instant22) == 0) == dateTime1.equals(instant22));
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test492");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 100, 1L, periodType2);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) 100, 1L, periodType6);
        org.joda.time.Period period8 = period3.plus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Instant instant9 = new org.joda.time.Instant();
        org.joda.time.Instant instant11 = instant9.withMillis(0L);
        org.joda.time.Duration duration12 = period7.toDurationTo((org.joda.time.ReadableInstant) instant11);
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 100, 1L, periodType15);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.Period period21 = period16.plus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Instant instant22 = new org.joda.time.Instant();
        org.joda.time.Instant instant24 = instant22.withMillis(0L);
        org.joda.time.Duration duration25 = period20.toDurationTo((org.joda.time.ReadableInstant) instant24);
        boolean boolean26 = instant11.isEqual((org.joda.time.ReadableInstant) instant24);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 1);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period31 = duration30.toPeriod();
        org.joda.time.Duration duration34 = duration30.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant35);
        org.joda.time.Duration duration37 = duration34.toDuration();
        int int38 = duration28.compareTo((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Instant instant39 = instant11.minus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.DateTime dateTime41 = new org.joda.time.DateTime(chronology40);
        int int42 = dateTime41.getSecondOfMinute();
        int int43 = dateTime41.getYearOfEra();
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((int) (short) 10, 100, (int) 'a', 21);
        java.lang.String str49 = mutablePeriod48.toString();
        org.joda.time.DateTime dateTime50 = dateTime41.plus((org.joda.time.ReadablePeriod) mutablePeriod48);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, (org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.DateTime dateTime53 = dateTime41.minusMonths(1286);
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period(readableDuration54, readableInstant55);
        org.joda.time.PeriodType periodType59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((long) 100, 1L, periodType59);
        org.joda.time.Period period62 = period60.minusSeconds((-1));
        java.lang.String str63 = period60.toString();
        org.joda.time.Period period64 = period60.toPeriod();
        org.joda.time.PeriodType periodType65 = period60.getPeriodType();
        org.joda.time.Period period66 = period56.normalizedStandard(periodType65);
        org.joda.time.Period period68 = period66.withSeconds(10);
        org.joda.time.DurationFieldType durationFieldType69 = org.joda.time.DurationFieldType.millis();
        boolean boolean70 = period66.isSupported(durationFieldType69);
        java.lang.String str71 = durationFieldType69.toString();
        java.lang.String str72 = durationFieldType69.toString();
        org.joda.time.DateTime dateTime74 = dateTime53.withFieldAdded(durationFieldType69, 95);
        java.lang.String str75 = durationFieldType69.getName();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant9 and dateTime41", (instant9.compareTo(dateTime41) == 0) == instant9.equals(dateTime41));
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test493");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.yearOfEra();
        mutableDateTime1.setDayOfYear((int) ' ');
        mutableDateTime1.add((long) 53);
        org.joda.time.format.DateTimeFormatter dateTimeFormatter22 = null;
        java.lang.String str23 = mutableDateTime1.toString(dateTimeFormatter22);
        org.joda.time.MutableDateTime.Property property24 = mutableDateTime1.millisOfDay();
        mutableDateTime1.setMinuteOfDay(165);
        org.joda.time.DateTimeZone dateTimeZone28 = org.joda.time.DateTimeZone.forOffsetMillis(0);
        java.lang.String str30 = dateTimeZone28.getName((long) 49);
        mutableDateTime1.setZone(dateTimeZone28);
        java.lang.Object obj32 = null;
        org.joda.time.DateTime dateTime33 = new org.joda.time.DateTime(obj32);
        org.joda.time.LocalDateTime localDateTime34 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime36 = localDateTime34.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property37 = localDateTime34.hourOfDay();
        org.joda.time.DateTimeField dateTimeField38 = property37.getField();
        boolean boolean40 = property37.equals((java.lang.Object) '#');
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.DateTime dateTime42 = new org.joda.time.DateTime(chronology41);
        int int43 = dateTime42.getSecondOfMinute();
        int int44 = dateTime42.getYearOfEra();
        int int45 = property37.getDifference((org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime42);
        int int47 = dateTime42.getWeekyear();
        org.joda.time.DateTimeFieldType dateTimeFieldType48 = org.joda.time.DateTimeFieldType.weekyear();
        int int49 = dateTime42.get(dateTimeFieldType48);
        org.joda.time.DateTime dateTime50 = dateTime42.toDateTimeISO();
        org.joda.time.LocalDateTime localDateTime51 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime53 = localDateTime51.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property54 = localDateTime51.hourOfDay();
        org.joda.time.LocalDateTime localDateTime56 = localDateTime51.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType57 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str58 = dateTimeFieldType57.getName();
        int int59 = localDateTime51.indexOf(dateTimeFieldType57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str61 = dateTimeFieldType60.getName();
        org.joda.time.LocalDateTime.Property property62 = localDateTime51.property(dateTimeFieldType60);
        java.lang.String str63 = dateTimeFieldType60.getName();
        int int64 = dateTime50.get(dateTimeFieldType60);
        boolean boolean65 = dateTimeZone28.equals((java.lang.Object) dateTime50);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime33", (instant11.compareTo(dateTime33) == 0) == instant11.equals(dateTime33));
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test494");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        mutablePeriod3.setYears((int) '#');
        org.joda.time.Chronology chronology7 = null;
        mutablePeriod3.add((long) 1, chronology7);
        org.joda.time.ReadableInterval readableInterval9 = null;
        mutablePeriod3.setPeriod(readableInterval9);
        int int11 = mutablePeriod3.getWeeks();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period14 = duration13.toPeriod();
        org.joda.time.Duration duration17 = duration13.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration17, readableInstant18);
        org.joda.time.Duration duration20 = duration17.toDuration();
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.DateTime dateTime24 = new org.joda.time.DateTime((long) (short) 1, chronology23);
        org.joda.time.DateTime.Property property25 = dateTime24.dayOfWeek();
        org.joda.time.DateTime.Property property26 = dateTime24.weekOfWeekyear();
        org.joda.time.DateTime dateTime28 = dateTime24.plus((long) 239);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.DateTime dateTime30 = new org.joda.time.DateTime(chronology29);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.Instant instant34 = instant32.withMillis(0L);
        org.joda.time.Chronology chronology35 = instant34.getChronology();
        org.joda.time.DurationField durationField36 = chronology35.eras();
        java.util.Locale locale37 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket39 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology35, locale37, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime40 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime42 = localDateTime40.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property43 = localDateTime40.hourOfDay();
        org.joda.time.DateTimeField dateTimeField44 = property43.getField();
        int int45 = property43.get();
        org.joda.time.LocalDateTime localDateTime46 = property43.roundHalfFloorCopy();
        long long48 = chronology35.set((org.joda.time.ReadablePartial) localDateTime46, (long) 2022);
        org.joda.time.DateTime dateTime49 = dateTime30.toDateTime(chronology35);
        org.joda.time.DateTime.Property property50 = dateTime30.millisOfDay();
        org.joda.time.LocalDateTime localDateTime51 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime53 = localDateTime51.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property54 = localDateTime51.hourOfDay();
        org.joda.time.LocalDateTime localDateTime56 = localDateTime51.plusMillis((int) (byte) 0);
        org.joda.time.DateTimeFieldType dateTimeFieldType57 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str58 = dateTimeFieldType57.getName();
        int int59 = localDateTime51.indexOf(dateTimeFieldType57);
        org.joda.time.DateTimeFieldType dateTimeFieldType60 = org.joda.time.DateTimeFieldType.clockhourOfDay();
        java.lang.String str61 = dateTimeFieldType60.getName();
        org.joda.time.LocalDateTime.Property property62 = localDateTime51.property(dateTimeFieldType60);
        int int63 = localDateTime51.getDayOfWeek();
        org.joda.time.DateTime dateTime64 = dateTime30.withFields((org.joda.time.ReadablePartial) localDateTime51);
        org.joda.time.DateTime dateTime65 = dateTime28.withFields((org.joda.time.ReadablePartial) localDateTime51);
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, (org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.Period period68 = period66.plusMonths(62);
        org.joda.time.Days days69 = period66.toStandardDays();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime30 and instant32", (dateTime30.compareTo(instant32) == 0) == dateTime30.equals(instant32));
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test495");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.MutableDateTime.Property property17 = mutableDateTime1.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone18 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime19 = mutableDateTime1.toMutableDateTime(dateTimeZone18);
        boolean boolean21 = mutableDateTime1.isBefore((long) 100);
        mutableDateTime1.addYears(6);
        mutableDateTime1.addWeekyears(69);
        java.lang.Object obj26 = null;
        org.joda.time.DateTime dateTime27 = new org.joda.time.DateTime(obj26);
        org.joda.time.LocalDateTime localDateTime28 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime30 = localDateTime28.withHourOfDay(10);
        org.joda.time.LocalDateTime localDateTime32 = localDateTime30.withHourOfDay(10);
        org.joda.time.DateTimeField dateTimeField34 = localDateTime32.getField((int) (byte) 0);
        long long36 = dateTimeField34.roundHalfEven((long) 1);
        int int37 = dateTime27.get(dateTimeField34);
        mutableDateTime1.setRounding(dateTimeField34);
        int int39 = mutableDateTime1.getDayOfMonth();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime27", (instant11.compareTo(dateTime27) == 0) == instant11.equals(dateTime27));
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test496");
        org.joda.time.Chronology chronology0 = null;
        org.joda.time.DateTime dateTime1 = new org.joda.time.DateTime(chronology0);
        int int2 = dateTime1.getSecondOfMinute();
        boolean boolean3 = dateTime1.isEqualNow();
        int int4 = dateTime1.getDayOfYear();
        org.joda.time.Chronology chronology5 = dateTime1.getChronology();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardSeconds(10L);
        org.joda.time.DateTime dateTime8 = dateTime1.plus((org.joda.time.ReadableDuration) duration7);
        org.joda.time.MutableDateTime mutableDateTime10 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 100, 1L, periodType13);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) 100, 1L, periodType17);
        org.joda.time.Period period19 = period14.plus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Instant instant20 = new org.joda.time.Instant();
        org.joda.time.Instant instant22 = instant20.withMillis(0L);
        org.joda.time.Duration duration23 = period18.toDurationTo((org.joda.time.ReadableInstant) instant22);
        mutableDateTime10.add((org.joda.time.ReadableDuration) duration23, 39);
        org.joda.time.MutableDateTime.Property property26 = mutableDateTime10.secondOfMinute();
        org.joda.time.DateTimeZone dateTimeZone27 = org.joda.time.DateTimeZone.UTC;
        org.joda.time.MutableDateTime mutableDateTime28 = mutableDateTime10.toMutableDateTime(dateTimeZone27);
        org.joda.time.MutableDateTime.Property property29 = mutableDateTime28.secondOfDay();
        int int30 = mutableDateTime28.getCenturyOfEra();
        mutableDateTime28.setMinuteOfDay(505);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.DateTime dateTime35 = new org.joda.time.DateTime((long) (short) 1, chronology34);
        org.joda.time.Instant instant36 = new org.joda.time.Instant();
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableInstant) instant36, periodType37);
        org.joda.time.LocalDate localDate39 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate41 = localDate39.minusMonths((int) ' ');
        org.joda.time.Chronology chronology42 = localDate39.getChronology();
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.LocalDate localDate45 = localDate39.withFieldAdded(durationFieldType43, (int) (byte) 100);
        int int46 = periodType37.indexOf(durationFieldType43);
        org.joda.time.PeriodType periodType47 = periodType37.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) mutableDateTime28, periodType37);
        int int49 = mutablePeriod48.size();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime1 and instant20", (dateTime1.compareTo(instant20) == 0) == dateTime1.equals(instant20));
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test497");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.PeriodType periodType3 = periodType2.withMonthsRemoved();
        org.joda.time.Instant instant5 = new org.joda.time.Instant();
        org.joda.time.Instant instant7 = instant5.withMillis(0L);
        org.joda.time.Chronology chronology8 = instant7.getChronology();
        org.joda.time.DurationField durationField9 = chronology8.eras();
        java.util.Locale locale10 = java.util.Locale.UK;
        org.joda.time.format.DateTimeParserBucket dateTimeParserBucket12 = new org.joda.time.format.DateTimeParserBucket((long) '#', chronology8, locale10, (java.lang.Integer) 39221019);
        org.joda.time.LocalDateTime localDateTime13 = org.joda.time.LocalDateTime.now();
        org.joda.time.LocalDateTime localDateTime15 = localDateTime13.withHourOfDay(10);
        org.joda.time.LocalDateTime.Property property16 = localDateTime13.hourOfDay();
        org.joda.time.DateTimeField dateTimeField17 = property16.getField();
        int int18 = property16.get();
        org.joda.time.LocalDateTime localDateTime19 = property16.roundHalfFloorCopy();
        long long21 = chronology8.set((org.joda.time.ReadablePartial) localDateTime19, (long) 2022);
        org.joda.time.LocalDateTime localDateTime22 = org.joda.time.LocalDateTime.now(chronology8);
        org.joda.time.DateTime dateTime23 = new org.joda.time.DateTime(chronology8);
        org.joda.time.DateTimeField dateTimeField24 = chronology8.dayOfWeek();
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) 39251693, (long) 292278993, periodType3, chronology8);
        org.joda.time.Instant instant26 = new org.joda.time.Instant();
        org.joda.time.Instant instant28 = instant26.withMillis(0L);
        org.joda.time.Chronology chronology29 = instant28.getChronology();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period32 = duration31.toPeriod();
        org.joda.time.Duration duration34 = duration31.plus(1L);
        org.joda.time.MutableDateTime mutableDateTime36 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((long) 100, 1L, periodType39);
        org.joda.time.PeriodType periodType43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((long) 100, 1L, periodType43);
        org.joda.time.Period period45 = period40.plus((org.joda.time.ReadablePeriod) period44);
        org.joda.time.Instant instant46 = new org.joda.time.Instant();
        org.joda.time.Instant instant48 = instant46.withMillis(0L);
        org.joda.time.Duration duration49 = period44.toDurationTo((org.joda.time.ReadableInstant) instant48);
        mutableDateTime36.add((org.joda.time.ReadableDuration) duration49, 39);
        int int52 = duration31.compareTo((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Instant instant54 = instant28.withDurationAdded((org.joda.time.ReadableDuration) duration49, 0);
        org.joda.time.Instant instant55 = instant28.toInstant();
        org.joda.time.DateTime dateTime56 = instant55.toDateTime();
        org.joda.time.DateTime dateTime58 = dateTime56.withYearOfCentury(47);
        org.joda.time.MutableDateTime mutableDateTime60 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((long) 100, 1L, periodType63);
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((long) 100, 1L, periodType67);
        org.joda.time.Period period69 = period64.plus((org.joda.time.ReadablePeriod) period68);
        org.joda.time.Instant instant70 = new org.joda.time.Instant();
        org.joda.time.Instant instant72 = instant70.withMillis(0L);
        org.joda.time.Duration duration73 = period68.toDurationTo((org.joda.time.ReadableInstant) instant72);
        mutableDateTime60.add((org.joda.time.ReadableDuration) duration73, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType76 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean77 = mutableDateTime60.isSupported(dateTimeFieldType76);
        boolean boolean78 = mutableDateTime60.isBeforeNow();
        int int79 = mutableDateTime60.getSecondOfDay();
        mutablePeriod25.setPeriod((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) mutableDateTime60);
        org.joda.time.DateTime dateTime82 = dateTime56.minusHours(1439);
        org.joda.time.Chronology chronology83 = dateTime82.getChronology();
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant7 and dateTime56", (instant7.compareTo(dateTime56) == 0) == instant7.equals(dateTime56));
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test498");
        org.joda.time.MutableDateTime mutableDateTime1 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, 1L, periodType4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 100, 1L, periodType8);
        org.joda.time.Period period10 = period5.plus((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Instant instant11 = new org.joda.time.Instant();
        org.joda.time.Instant instant13 = instant11.withMillis(0L);
        org.joda.time.Duration duration14 = period9.toDurationTo((org.joda.time.ReadableInstant) instant13);
        mutableDateTime1.add((org.joda.time.ReadableDuration) duration14, 39);
        org.joda.time.DateTimeFieldType dateTimeFieldType17 = org.joda.time.DateTimeFieldType.hourOfHalfday();
        boolean boolean18 = mutableDateTime1.isSupported(dateTimeFieldType17);
        org.joda.time.MutableDateTime.Property property19 = mutableDateTime1.millisOfSecond();
        int int20 = mutableDateTime1.getDayOfMonth();
        int int21 = mutableDateTime1.getSecondOfMinute();
        org.joda.time.MutableDateTime mutableDateTime23 = new org.joda.time.MutableDateTime((long) (byte) -1);
        mutableDateTime23.add((long) 45);
        int int26 = mutableDateTime23.getYearOfCentury();
        mutableDateTime23.setDate(1645455420853L);
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableInstant) mutableDateTime1, (org.joda.time.ReadableInstant) mutableDateTime23);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 1);
        long long32 = duration31.getStandardSeconds();
        org.joda.time.Days days33 = duration31.toStandardDays();
        org.joda.time.MutableDateTime mutableDateTime35 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime35.add((org.joda.time.ReadableDuration) duration37, (int) (short) 100);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.DateTime dateTime41 = new org.joda.time.DateTime(chronology40);
        int int42 = dateTime41.getYearOfCentury();
        org.joda.time.Interval interval43 = duration37.toIntervalTo((org.joda.time.ReadableInstant) dateTime41);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period46 = duration45.toPeriod();
        org.joda.time.Duration duration49 = duration45.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration49, readableInstant50);
        long long52 = duration49.getStandardDays();
        org.joda.time.Duration duration53 = duration49.toDuration();
        org.joda.time.Duration duration54 = duration37.minus((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration55 = duration31.minus((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration58 = duration37.withDurationAdded((-1511999969L), (int) (short) 1);
        org.joda.time.Period period59 = duration58.toPeriod();
        org.joda.time.Period period61 = period59.withHours(0);
        org.joda.time.Period period63 = period61.minusHours(1487);
        mutableDateTime23.add((org.joda.time.ReadablePeriod) period61, 53768216);
        org.joda.time.Period period67 = period61.plusHours(900);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on instant11 and dateTime41", (instant11.compareTo(dateTime41) == 0) == instant11.equals(dateTime41));
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test499");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.DateTime dateTime3 = new org.joda.time.DateTime(chronology2);
        int int4 = dateTime3.getSecondOfMinute();
        boolean boolean5 = dateTime3.isEqualNow();
        int int6 = dateTime3.getDayOfYear();
        org.joda.time.Chronology chronology7 = dateTime3.getChronology();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) '#', chronology7);
        org.joda.time.DateTimeField dateTimeField9 = chronology7.year();
        org.joda.time.DateTime dateTime10 = org.joda.time.DateTime.now(chronology7);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.PeriodType periodType14 = periodType13.withSecondsRemoved();
        org.joda.time.MutableDateTime mutableDateTime16 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) 100, 1L, periodType19);
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((long) 100, 1L, periodType23);
        org.joda.time.Period period25 = period20.plus((org.joda.time.ReadablePeriod) period24);
        org.joda.time.Instant instant26 = new org.joda.time.Instant();
        org.joda.time.Instant instant28 = instant26.withMillis(0L);
        org.joda.time.Duration duration29 = period24.toDurationTo((org.joda.time.ReadableInstant) instant28);
        mutableDateTime16.add((org.joda.time.ReadableDuration) duration29, 39);
        org.joda.time.MutableDateTime.Property property32 = mutableDateTime16.yearOfEra();
        mutableDateTime16.setWeekOfWeekyear(14);
        org.joda.time.MutableDateTime.Property property35 = mutableDateTime16.minuteOfDay();
        org.joda.time.DateTimeZone dateTimeZone36 = org.joda.time.DateTimeZone.UTC;
        long long39 = dateTimeZone36.convertLocalToUTC((long) (byte) 100, false);
        mutableDateTime16.setZone(dateTimeZone36);
        org.joda.time.LocalDate localDate41 = new org.joda.time.LocalDate();
        org.joda.time.LocalDate localDate43 = localDate41.minusMonths((int) ' ');
        org.joda.time.Chronology chronology44 = localDate41.getChronology();
        org.joda.time.DateTimeField dateTimeField45 = chronology44.minuteOfDay();
        org.joda.time.DurationField durationField46 = chronology44.days();
        org.joda.time.MutableDateTime mutableDateTime47 = new org.joda.time.MutableDateTime((java.lang.Object) mutableDateTime16, chronology44);
        org.joda.time.DateTimeField dateTimeField48 = chronology44.hourOfDay();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((long) 11, 345600000L, periodType13, chronology44);
        org.joda.time.DateTime dateTime50 = dateTime10.withChronology(chronology44);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period53 = duration52.toPeriod();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period56 = duration55.toPeriod();
        org.joda.time.Duration duration59 = duration55.withDurationAdded((long) 38, (int) 'a');
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardDays((long) (byte) 1);
        org.joda.time.Period period62 = duration61.toPeriod();
        org.joda.time.Duration duration63 = duration55.plus((org.joda.time.ReadableDuration) duration61);
        boolean boolean64 = duration52.isLongerThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Days days65 = duration52.toStandardDays();
        java.lang.String str66 = duration52.toString();
        java.lang.String str67 = duration52.toString();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime50, (org.joda.time.ReadableDuration) duration52);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime3 and instant26", (dateTime3.compareTo(instant26) == 0) == dateTime3.equals(instant26));
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test500");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(periodType0);
        mutablePeriod1.setDays(57);
        mutablePeriod1.setHours(53818013);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.DateTime dateTime8 = new org.joda.time.DateTime(chronology7);
        int int9 = dateTime8.getSecondOfMinute();
        boolean boolean10 = dateTime8.isEqualNow();
        int int11 = dateTime8.getDayOfYear();
        org.joda.time.Chronology chronology12 = dateTime8.getChronology();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) 5, chronology12);
        org.joda.time.MutableDateTime mutableDateTime15 = new org.joda.time.MutableDateTime((long) '4');
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardSeconds(10L);
        mutableDateTime15.add((org.joda.time.ReadableDuration) duration17, (int) (short) 100);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.DateTime dateTime21 = new org.joda.time.DateTime(chronology20);
        int int22 = dateTime21.getYearOfCentury();
        org.joda.time.Interval interval23 = duration17.toIntervalTo((org.joda.time.ReadableInstant) dateTime21);
        long long24 = duration17.getStandardSeconds();
        mutablePeriod13.add((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period26 = mutablePeriod13.toPeriod();
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.days();
        boolean boolean28 = period26.isSupported(durationFieldType27);
        mutablePeriod1.set(durationFieldType27, (int) (byte) 0);
        org.joda.time.Instant instant32 = new org.joda.time.Instant();
        org.joda.time.Instant instant34 = instant32.withMillis(0L);
        org.joda.time.Chronology chronology35 = instant34.getChronology();
        org.joda.time.DurationField durationField36 = chronology35.eras();
        org.joda.time.DateTimeField dateTimeField37 = chronology35.yearOfEra();
        org.joda.time.Period period38 = new org.joda.time.Period((long) ' ', chronology35);
        org.joda.time.DateTimeField dateTimeField39 = chronology35.halfdayOfDay();
        org.joda.time.DateTimeField dateTimeField40 = chronology35.millisOfSecond();
        boolean boolean41 = durationFieldType27.isSupported(chronology35);
        org.junit.Assert.assertTrue("Contract failed: compareTo-equals on dateTime21 and instant32", (dateTime21.compareTo(instant32) == 0) == dateTime21.equals(instant32));
    }
}

