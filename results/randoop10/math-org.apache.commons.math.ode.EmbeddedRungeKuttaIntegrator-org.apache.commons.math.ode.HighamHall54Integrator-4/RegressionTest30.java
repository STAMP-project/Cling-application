import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest30 {

    public static boolean debug = false;

    @Test
    public void test15001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15001");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) '#');
        int int28 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(10.0d);
        java.lang.String str31 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator36.getStepHandler();
        boolean boolean38 = stepHandler37.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        stepHandler37.handleStep(stepInterpolator39, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        stepHandler37.handleStep(stepInterpolator42, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        stepHandler37.handleStep(stepInterpolator45, true);
        highamHall54Integrator4.setStepHandler(stepHandler37);
        double double49 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction50, 17.78279410038923d, (double) (byte) 1, (int) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator4.getStepHandler();
        double double56 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int57 = highamHall54Integrator4.getOrder();
        java.lang.String str58 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 5 + "'", int57 == 5);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Higham-Hall 5(4)" + "'", str58, "Higham-Hall 5(4)");
    }

    @Test
    public void test15002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15002");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        double double18 = highamHall54Integrator16.getMinStep();
        double double19 = highamHall54Integrator16.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator16.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        stepHandler20.handleStep(stepInterpolator21, false);
        highamHall54Integrator4.setStepHandler(stepHandler20);
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getMinStep();
        double double27 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction((double) (byte) 100);
        double double30 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
    }

    @Test
    public void test15003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15003");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler16);
        int int18 = highamHall54Integrator4.getOrder();
        java.lang.String str19 = highamHall54Integrator4.getName();
        java.lang.String str20 = highamHall54Integrator4.getName();
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        int int22 = highamHall54Integrator4.getOrder();
        double double23 = highamHall54Integrator4.getMinStep();
        double double24 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator4.getStepHandler();
        stepHandler25.reset();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(stepHandler25);
    }

    @Test
    public void test15004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15004");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(76.91605673134588d, 52.0d, 14.142135623730951d, 15.414295476925576d);
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
    }

    @Test
    public void test15005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15005");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator13.getStepHandler();
        boolean boolean18 = stepHandler17.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        stepHandler17.handleStep(stepInterpolator19, true);
        highamHall54Integrator4.setStepHandler(stepHandler17);
        java.lang.String str23 = highamHall54Integrator4.getName();
        double double24 = highamHall54Integrator4.getCurrentStepStart();
        int int25 = highamHall54Integrator4.getOrder();
        java.lang.String str26 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator31.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator31.getStepHandler();
        java.lang.String str36 = highamHall54Integrator31.getName();
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator31.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        stepHandler37.handleStep(stepInterpolator38, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        stepHandler37.handleStep(stepInterpolator41, false);
        highamHall54Integrator4.setStepHandler(stepHandler37);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        stepHandler37.handleStep(stepInterpolator45, false);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler37);
    }

    @Test
    public void test15006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15006");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str10 = highamHall54Integrator4.getName();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(1.0d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test15007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15007");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction((double) (short) 1);
        highamHall54Integrator4.setMaxGrowth((double) (-1.0f));
        double double16 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
    }

    @Test
    public void test15008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15008");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, 24.947901585376336d, (double) (-1), 31.622776601683793d);
        highamHall54Integrator4.setMinReduction((double) 1.0f);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        double double13 = highamHall54Integrator11.getCurrentStepStart();
        double double14 = highamHall54Integrator11.getCurrentSignedStepsize();
        highamHall54Integrator11.setInitialStepSize((double) (byte) 100);
        double double17 = highamHall54Integrator11.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction18, 10.0d, 31.622776601683793d, 0);
        highamHall54Integrator11.setSafety((double) (byte) 0);
        int int25 = highamHall54Integrator11.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        highamHall54Integrator11.addSwitchingFunction(switchingFunction26, (double) 1.0f, 17.78279410038923d, 2);
        java.lang.String str31 = highamHall54Integrator11.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator36.setInitialStepSize((double) 3);
        double double40 = highamHall54Integrator36.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator36.setMinReduction((double) 5);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler49 = null;
        highamHall54Integrator48.setStepHandler(stepHandler49);
        double double51 = highamHall54Integrator48.getCurrentSignedStepsize();
        double double52 = highamHall54Integrator48.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler58 = highamHall54Integrator57.getStepHandler();
        highamHall54Integrator48.setStepHandler(stepHandler58);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        stepHandler58.handleStep(stepInterpolator60, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        stepHandler58.handleStep(stepInterpolator63, false);
        highamHall54Integrator36.setStepHandler(stepHandler58);
        stepHandler58.reset();
        highamHall54Integrator11.setStepHandler(stepHandler58);
        org.apache.commons.math.ode.StepHandler stepHandler69 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler69);
        double double71 = highamHall54Integrator4.getMaxStep();
        double double72 = highamHall54Integrator4.getCurrentStepStart();
        double double73 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertNotNull(stepHandler69);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 24.947901585376336d + "'", double71 == 24.947901585376336d);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
    }

    @Test
    public void test15009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15009");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (-1.0f), (double) (byte) 0, (int) (short) -1);
        double double14 = highamHall54Integrator4.getMaxStep();
        double double15 = highamHall54Integrator4.getSafety();
        double double16 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction17, (double) 100.0f, 59.16079783099616d, (int) '4');
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
    }

    @Test
    public void test15010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15010");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        double double28 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction31, 0.0d, (double) 1.0f, (int) '4');
        java.lang.String str36 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction37, 2.0d, (double) ' ', 1);
        highamHall54Integrator4.setInitialStepSize((double) (-1.0f));
        highamHall54Integrator4.setMinReduction(5.0d);
        double double46 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str47 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Higham-Hall 5(4)" + "'", str47, "Higham-Hall 5(4)");
    }

    @Test
    public void test15011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15011");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(2.449489742783178d, (double) 'a', 22.22397209204091d, 17.752843424574987d);
    }

    @Test
    public void test15012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15012");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        java.lang.String str13 = highamHall54Integrator4.getName();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str15 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) ' ');
        double double18 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
    }

    @Test
    public void test15013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15013");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 10);
        double double10 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) (-1.0f), (-1.0d), 100);
        double double16 = highamHall54Integrator4.getMaxStep();
        double double17 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setSafety(55.3841974787333d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test15014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15014");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler4.add(switchingFunction5, (double) 1.0f, (double) (byte) -1, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler4.add(switchingFunction10, Double.NaN, 0.0d, (int) '4');
        boolean boolean15 = switchingFunctionsHandler4.stop();
        double double16 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray28 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray31 = null;
        double[] doubleArray38 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray31, doubleArray38);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray28, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler41.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler45.evaluateStep(stepInterpolator46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler45.evaluateStep(stepInterpolator48);
        double[] doubleArray55 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler45.stepAccepted((double) (byte) 1, doubleArray55);
        boolean boolean57 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray28, doubleArray55);
        boolean boolean59 = switchingFunctionsHandler4.reset(0.4472135954999579d, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray73 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray76 = null;
        double[] doubleArray83 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray76, doubleArray83);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator85 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray73, doubleArray76);
        double[] doubleArray86 = new double[] {};
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator87 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, (double) (byte) -1, doubleArray73, doubleArray86);
        switchingFunctionsHandler60.stepAccepted(9.848857801796104d, doubleArray73);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator89 = new org.apache.commons.math.ode.HighamHall54Integrator((-0.0d), (double) 100.0f, doubleArray28, doubleArray73);
        double[] doubleArray90 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 8.917795292374965d, doubleArray73, doubleArray90);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
    }

    @Test
    public void test15015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15015");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double27 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setSafety((double) ' ');
        double double30 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.9d + "'", double27 == 0.9d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
    }

    @Test
    public void test15016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15016");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety((double) (byte) 1);
        double double11 = highamHall54Integrator4.getSafety();
        java.lang.String str12 = highamHall54Integrator4.getName();
        java.lang.String str13 = highamHall54Integrator4.getName();
        double double14 = highamHall54Integrator4.getMinStep();
        double double15 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
    }

    @Test
    public void test15017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15017");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '4', 7.211102550927978d, (double) (byte) 1, 14.142135623730951d);
    }

    @Test
    public void test15018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15018");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        highamHall54Integrator4.setSafety((double) (short) -1);
        double double10 = highamHall54Integrator4.getMinStep();
        java.lang.String str11 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) ' ', 100.0d, 100);
        highamHall54Integrator4.setMaxGrowth(3.0d);
        double double19 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test15019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15019");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        double double28 = highamHall54Integrator4.getCurrentStepStart();
        double double29 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.2d + "'", double26 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
    }

    @Test
    public void test15020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15020");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        highamHall54Integrator4.setSafety((double) 10.0f);
        highamHall54Integrator4.setMaxGrowth(31.144823004794873d);
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator4.getStepHandler();
        java.lang.String str24 = highamHall54Integrator4.getName();
        double double25 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double26 = highamHall54Integrator4.getMinStep();
        java.lang.String str27 = highamHall54Integrator4.getName();
        double double28 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator33.setInitialStepSize((double) 3);
        double double37 = highamHall54Integrator33.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator42.getStepHandler();
        boolean boolean44 = stepHandler43.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        stepHandler43.handleStep(stepInterpolator45, false);
        highamHall54Integrator33.setStepHandler(stepHandler43);
        double double49 = highamHall54Integrator33.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator33.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        stepHandler50.handleStep(stepInterpolator51, true);
        highamHall54Integrator4.setStepHandler(stepHandler50);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.2d + "'", double49 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler50);
    }

    @Test
    public void test15021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15021");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        boolean boolean17 = switchingFunctionsHandler0.stop();
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler0.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, 17.752843424574987d, 4.47213595499958d, (int) (byte) 100);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test15022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15022");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, 0.2d, (double) 1, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler21.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler21.evaluateStep(stepInterpolator24);
        double[] doubleArray31 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler21.stepAccepted((double) (byte) 1, doubleArray31);
        double[] doubleArray39 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler40.evaluateStep(stepInterpolator41);
        double double43 = switchingFunctionsHandler40.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        switchingFunctionsHandler40.add(switchingFunction44, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler54.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler54.evaluateStep(stepInterpolator57);
        double[] doubleArray64 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler54.stepAccepted((double) (byte) 1, doubleArray64);
        boolean boolean66 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray64);
        boolean boolean67 = switchingFunctionsHandler40.reset((double) '4', doubleArray64);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray39, doubleArray64);
        boolean boolean69 = switchingFunctionsHandler21.reset((double) (byte) 0, doubleArray64);
        boolean boolean70 = switchingFunctionsHandler0.reset((double) 2, doubleArray64);
        boolean boolean71 = switchingFunctionsHandler0.isEmpty();
        boolean boolean72 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test15023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15023");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = null;
        highamHall54Integrator17.setStepHandler(stepHandler18);
        double double20 = highamHall54Integrator17.getCurrentSignedStepsize();
        double double21 = highamHall54Integrator17.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator26.getStepHandler();
        highamHall54Integrator17.setStepHandler(stepHandler27);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        stepHandler27.handleStep(stepInterpolator29, true);
        highamHall54Integrator4.setStepHandler(stepHandler27);
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setSafety(3.1622776601683795d);
        double double36 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator4.getStepHandler();
        double double38 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2d + "'", double36 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(stepHandler39);
    }

    @Test
    public void test15024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15024");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) 0.0f);
        highamHall54Integrator4.setMinReduction((double) 0L);
        double double13 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setSafety((double) (short) -1);
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
    }

    @Test
    public void test15025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15025");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMaxGrowth((double) (byte) -1);
        int int13 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(9.848857801796104d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
    }

    @Test
    public void test15026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15026");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, (-1.0d), (double) (byte) 100, (int) (byte) 10);
        double double33 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler39 = null;
        highamHall54Integrator38.setStepHandler(stepHandler39);
        double double41 = highamHall54Integrator38.getCurrentSignedStepsize();
        double double42 = highamHall54Integrator38.getCurrentStepStart();
        double double43 = highamHall54Integrator38.getCurrentStepStart();
        double double44 = highamHall54Integrator38.getCurrentSignedStepsize();
        double double45 = highamHall54Integrator38.getSafety();
        double double46 = highamHall54Integrator38.getMaxStep();
        double double47 = highamHall54Integrator38.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator52.setMinReduction((double) 10L);
        double double56 = highamHall54Integrator52.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator52.getStepHandler();
        double double58 = highamHall54Integrator52.getCurrentSignedStepsize();
        double double59 = highamHall54Integrator52.getSafety();
        double double60 = highamHall54Integrator52.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator38.setStepHandler(stepHandler61);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        stepHandler61.handleStep(stepInterpolator63, true);
        highamHall54Integrator4.setStepHandler(stepHandler61);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        stepHandler61.handleStep(stepInterpolator67, false);
        boolean boolean70 = stepHandler61.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.9d + "'", double59 == 0.9d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test15027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15027");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        int int10 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) 100.0f, (double) (short) 1, (-1));
        java.lang.String str16 = highamHall54Integrator4.getName();
        double double17 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMinReduction((double) 5);
        int int20 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety(0.0d);
        double double23 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int24 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
    }

    @Test
    public void test15028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15028");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        java.lang.String str39 = highamHall54Integrator4.getName();
        double double40 = highamHall54Integrator4.getMinReduction();
        double double41 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str42 = highamHall54Integrator4.getName();
        java.lang.String str43 = highamHall54Integrator4.getName();
        java.lang.String str44 = highamHall54Integrator4.getName();
        double double45 = highamHall54Integrator4.getMaxGrowth();
        double double46 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.Class<?> wildcardClass47 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2d + "'", double40 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Higham-Hall 5(4)" + "'", str44, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test15029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15029");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator29.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler33 = null;
        highamHall54Integrator29.setStepHandler(stepHandler33);
        double double35 = highamHall54Integrator29.getMaxStep();
        double double36 = highamHall54Integrator29.getMinStep();
        double double37 = highamHall54Integrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator42.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator42.getStepHandler();
        boolean boolean47 = stepHandler46.requiresDenseOutput();
        highamHall54Integrator29.setStepHandler(stepHandler46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        stepHandler46.handleStep(stepInterpolator49, true);
        highamHall54Integrator4.setStepHandler(stepHandler46);
        double double53 = highamHall54Integrator4.getMaxStep();
        java.lang.String str54 = highamHall54Integrator4.getName();
        java.lang.String str55 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator4.getStepHandler();
        stepHandler56.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1.0d) + "'", double53 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Higham-Hall 5(4)" + "'", str54, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Higham-Hall 5(4)" + "'", str55, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler56);
    }

    @Test
    public void test15030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15030");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        double double17 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler23 = null;
        highamHall54Integrator22.setStepHandler(stepHandler23);
        double double25 = highamHall54Integrator22.getCurrentSignedStepsize();
        double double26 = highamHall54Integrator22.getCurrentStepStart();
        double double27 = highamHall54Integrator22.getCurrentStepStart();
        double double28 = highamHall54Integrator22.getCurrentSignedStepsize();
        double double29 = highamHall54Integrator22.getSafety();
        double double30 = highamHall54Integrator22.getMaxStep();
        int int31 = highamHall54Integrator22.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator36.setInitialStepSize((double) 3);
        double double40 = highamHall54Integrator36.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator45.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler54 = null;
        highamHall54Integrator53.setStepHandler(stepHandler54);
        double double56 = highamHall54Integrator53.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler57 = null;
        highamHall54Integrator53.setStepHandler(stepHandler57);
        double double59 = highamHall54Integrator53.getMaxStep();
        double double60 = highamHall54Integrator53.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler66 = highamHall54Integrator65.getStepHandler();
        highamHall54Integrator53.setStepHandler(stepHandler66);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler73 = null;
        highamHall54Integrator72.setStepHandler(stepHandler73);
        double double75 = highamHall54Integrator72.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler76 = null;
        highamHall54Integrator72.setStepHandler(stepHandler76);
        double double78 = highamHall54Integrator72.getMaxStep();
        double double79 = highamHall54Integrator72.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler85 = highamHall54Integrator84.getStepHandler();
        highamHall54Integrator72.setStepHandler(stepHandler85);
        highamHall54Integrator53.setStepHandler(stepHandler85);
        highamHall54Integrator45.setStepHandler(stepHandler85);
        highamHall54Integrator36.setStepHandler(stepHandler85);
        double double90 = highamHall54Integrator36.getCurrentStepStart();
        java.lang.String str91 = highamHall54Integrator36.getName();
        org.apache.commons.math.ode.StepHandler stepHandler92 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator22.setStepHandler(stepHandler92);
        highamHall54Integrator4.setStepHandler(stepHandler92);
        highamHall54Integrator4.setMinReduction(31.810829150682025d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNull(stepHandler15);
        org.junit.Assert.assertNull(stepHandler16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9d + "'", double29 == 0.9d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-1.0d) + "'", double78 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler85);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Higham-Hall 5(4)" + "'", str91, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler92);
    }

    @Test
    public void test15031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15031");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) '4', 97.0d, (int) '#');
        double double21 = highamHall54Integrator4.getMinStep();
        double double22 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction23, 35.0d, (double) 3, (int) (byte) 100);
        highamHall54Integrator4.setMaxGrowth(55.3841974787333d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test15032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15032");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 10, (double) 'a', 52.0d, 22.02271554554524d);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test15033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15033");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (short) 0, 31.622776601683793d, 1.4142135623730951d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator9 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler10 = null;
        highamHall54Integrator9.setStepHandler(stepHandler10);
        double double12 = highamHall54Integrator9.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator9.getCurrentStepStart();
        double double14 = highamHall54Integrator9.getCurrentStepStart();
        double double15 = highamHall54Integrator9.getCurrentSignedStepsize();
        double double16 = highamHall54Integrator9.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double22 = highamHall54Integrator21.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction23, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double28 = highamHall54Integrator21.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction29, (double) 0, 0.9d, (int) (short) 100);
        double double34 = highamHall54Integrator21.getMinReduction();
        double double35 = highamHall54Integrator21.getMaxGrowth();
        highamHall54Integrator21.setSafety((double) (byte) 10);
        int int38 = highamHall54Integrator21.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction39, 0.2d, (double) 3, (int) (byte) -1);
        double double44 = highamHall54Integrator21.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator9.setStepHandler(stepHandler45);
        highamHall54Integrator4.setStepHandler(stepHandler45);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        stepHandler45.handleStep(stepInterpolator48, true);
        boolean boolean51 = stepHandler45.requiresDenseOutput();
        boolean boolean52 = stepHandler45.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.2d + "'", double34 == 0.2d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 3.1622776601683795d + "'", double44 == 3.1622776601683795d);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test15034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15034");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction24, 97.0d, 0.9d, 10);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator4.getStepHandler();
        int int30 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
    }

    @Test
    public void test15035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15035");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test15036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15036");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) 0, (double) 1.0f, (double) (short) 100);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMinReduction(100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (short) 100, (double) 10L, 1);
        java.lang.String str14 = highamHall54Integrator4.getName();
        double double15 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(97.0d);
        highamHall54Integrator4.setMinReduction((double) 3);
        highamHall54Integrator4.setInitialStepSize(0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test15037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15037");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        double double10 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str11 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, 1.0d, (double) (byte) 10, 3);
        java.lang.String str17 = highamHall54Integrator4.getName();
        double double18 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test15038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15038");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        java.lang.String str26 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        java.lang.String str28 = highamHall54Integrator4.getName();
        double double29 = highamHall54Integrator4.getMinStep();
        java.lang.String str30 = highamHall54Integrator4.getName();
        double double31 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double32 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) 100.0f);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test15039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15039");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        highamHall54Integrator4.setMaxGrowth((double) (byte) 100);
        double double12 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, (double) (short) 0, 0.0d, 100);
        int int18 = highamHall54Integrator4.getOrder();
        double double19 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
    }

    @Test
    public void test15040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15040");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (short) 1, (double) 'a', (int) (short) 0);
        int int10 = highamHall54Integrator4.getOrder();
        int int11 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((double) 1);
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        double double15 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double16 = highamHall54Integrator4.getSafety();
        double double17 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.9d + "'", double17 == 0.9d);
    }

    @Test
    public void test15041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15041");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) 0, (double) 1.0f, (double) (short) 100);
        highamHall54Integrator4.setMaxGrowth((double) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, 4.47213595499958d, (double) 1.0f, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, 3.3635856610148585d, 24.947901585376336d, 3);
        highamHall54Integrator4.setSafety((double) (short) 10);
        org.junit.Assert.assertNotNull(stepHandler7);
    }

    @Test
    public void test15042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15042");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator29.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler33 = null;
        highamHall54Integrator29.setStepHandler(stepHandler33);
        double double35 = highamHall54Integrator29.getMaxStep();
        double double36 = highamHall54Integrator29.getMinStep();
        double double37 = highamHall54Integrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator42.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator42.getStepHandler();
        boolean boolean47 = stepHandler46.requiresDenseOutput();
        highamHall54Integrator29.setStepHandler(stepHandler46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        stepHandler46.handleStep(stepInterpolator49, true);
        highamHall54Integrator4.setStepHandler(stepHandler46);
        double double53 = highamHall54Integrator4.getMaxStep();
        java.lang.String str54 = highamHall54Integrator4.getName();
        java.lang.String str55 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction56, (-1.0d), 0.7952707287670507d, (int) (byte) 10);
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1.0d) + "'", double53 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Higham-Hall 5(4)" + "'", str54, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Higham-Hall 5(4)" + "'", str55, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler61);
    }

    @Test
    public void test15043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15043");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getSafety();
        double double14 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) (-1L));
        double double17 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.9d + "'", double13 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test15044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15044");
        double[] doubleArray10 = new double[] { 1, (short) 100, 1.0f, 10.0d, (byte) 0, (short) 100 };
        double[] doubleArray21 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray24 = null;
        double[] doubleArray31 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray24, doubleArray31);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray21, doubleArray24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler38.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler38.evaluateStep(stepInterpolator41);
        double[] doubleArray48 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler38.stepAccepted((double) (byte) 1, doubleArray48);
        boolean boolean50 = switchingFunctionsHandler34.reset((double) (byte) 1, doubleArray48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray21, doubleArray48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (byte) 1, doubleArray10, doubleArray21);
        double[] doubleArray58 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler59.evaluateStep(stepInterpolator60);
        double double62 = switchingFunctionsHandler59.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        switchingFunctionsHandler59.add(switchingFunction63, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        boolean boolean71 = switchingFunctionsHandler69.evaluateStep(stepInterpolator70);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator74 = null;
        boolean boolean75 = switchingFunctionsHandler73.evaluateStep(stepInterpolator74);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler73.evaluateStep(stepInterpolator76);
        double[] doubleArray83 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler73.stepAccepted((double) (byte) 1, doubleArray83);
        boolean boolean85 = switchingFunctionsHandler69.reset((double) (byte) 1, doubleArray83);
        boolean boolean86 = switchingFunctionsHandler59.reset((double) '4', doubleArray83);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator87 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray58, doubleArray83);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator88 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, 0.0d, doubleArray10, doubleArray83);
        java.lang.String str89 = highamHall54Integrator88.getName();
        highamHall54Integrator88.setInitialStepSize(76.91605673134588d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Higham-Hall 5(4)" + "'", str89, "Higham-Hall 5(4)");
    }

    @Test
    public void test15045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15045");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler6.evaluateStep(stepInterpolator9);
        double[] doubleArray16 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler6.stepAccepted((double) (byte) 1, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray16);
        double double19 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray23 = null;
        double[] doubleArray30 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray23, doubleArray30);
        boolean boolean32 = switchingFunctionsHandler2.reset((double) 10.0f, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler33.add(switchingFunction34, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean39 = switchingFunctionsHandler33.isEmpty();
        boolean boolean40 = switchingFunctionsHandler33.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler42.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler46.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler46.evaluateStep(stepInterpolator49);
        double[] doubleArray56 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler46.stepAccepted((double) (byte) 1, doubleArray56);
        boolean boolean58 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray56);
        boolean boolean59 = switchingFunctionsHandler33.reset((double) 1L, doubleArray56);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0.0f, doubleArray30, doubleArray56);
        double double61 = highamHall54Integrator60.getMaxGrowth();
        java.lang.String str62 = highamHall54Integrator60.getName();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Higham-Hall 5(4)" + "'", str62, "Higham-Hall 5(4)");
    }

    @Test
    public void test15046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15046");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler16);
        int int18 = highamHall54Integrator4.getOrder();
        java.lang.String str19 = highamHall54Integrator4.getName();
        java.lang.String str20 = highamHall54Integrator4.getName();
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        int int22 = highamHall54Integrator4.getOrder();
        int int23 = highamHall54Integrator4.getOrder();
        java.lang.String str24 = highamHall54Integrator4.getName();
        int int25 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
    }

    @Test
    public void test15047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15047");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) 0.0f);
        int int11 = highamHall54Integrator4.getOrder();
        double double12 = highamHall54Integrator4.getMinStep();
        java.lang.String str13 = highamHall54Integrator4.getName();
        java.lang.String str14 = highamHall54Integrator4.getName();
        int int15 = highamHall54Integrator4.getOrder();
        double double16 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str17 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
    }

    @Test
    public void test15048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15048");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int14 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, (double) 10, (double) (-1L), 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction20, 97.0d, (double) 100.0f, (int) ' ');
        int int25 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler31 = null;
        highamHall54Integrator30.setStepHandler(stepHandler31);
        double double33 = highamHall54Integrator30.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler34 = null;
        highamHall54Integrator30.setStepHandler(stepHandler34);
        double double36 = highamHall54Integrator30.getMaxStep();
        double double37 = highamHall54Integrator30.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator30.setStepHandler(stepHandler43);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        highamHall54Integrator30.addSwitchingFunction(switchingFunction45, (double) '4', 1.0d, (int) (short) -1);
        double double50 = highamHall54Integrator30.getMaxStep();
        double double51 = highamHall54Integrator30.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator30.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler52);
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1.0d) + "'", double50 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertNotNull(stepHandler54);
    }

    @Test
    public void test15049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15049");
        double[] doubleArray8 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray8, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator20.addSwitchingFunction(switchingFunction21, 0.0d, (double) 0.0f, (int) (byte) 0);
        double double26 = highamHall54Integrator20.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator20.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator20.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertNotNull(stepHandler28);
    }

    @Test
    public void test15050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15050");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction29, (double) ' ', (double) 100L, 0);
        java.lang.String str34 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction35, (double) 'a', (double) 'a', (int) (short) 100);
        double double40 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction(55.3841974787333d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
    }

    @Test
    public void test15051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15051");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) '#');
        java.lang.String str28 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) (-1L));
        double double31 = highamHall54Integrator4.getMinStep();
        double double32 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (short) -1, (double) 2, 100.0d);
        highamHall54Integrator37.setSafety((double) 1);
        org.apache.commons.math.ode.StepHandler stepHandler40 = highamHall54Integrator37.getStepHandler();
        java.lang.String str41 = highamHall54Integrator37.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, Double.NaN, (double) (-1), (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator46.getStepHandler();
        highamHall54Integrator37.setStepHandler(stepHandler47);
        highamHall54Integrator4.setStepHandler(stepHandler47);
        double double50 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction51, 56.568542494923804d, (double) (byte) -1, 5);
        double double56 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1.0d) + "'", double32 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
    }

    @Test
    public void test15052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15052");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = null;
        highamHall54Integrator17.setStepHandler(stepHandler18);
        double double20 = highamHall54Integrator17.getCurrentSignedStepsize();
        double double21 = highamHall54Integrator17.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator26.getStepHandler();
        highamHall54Integrator17.setStepHandler(stepHandler27);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        stepHandler27.handleStep(stepInterpolator29, true);
        highamHall54Integrator4.setStepHandler(stepHandler27);
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator4.getStepHandler();
        double double34 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction36, 15.414295476925576d, (double) ' ', (int) (byte) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler35);
    }

    @Test
    public void test15053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15053");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMinReduction();
        int int11 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) '4');
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        double double16 = highamHall54Integrator4.getMinStep();
        java.lang.String str17 = highamHall54Integrator4.getName();
        java.lang.String str18 = highamHall54Integrator4.getName();
        int int19 = highamHall54Integrator4.getOrder();
        double double20 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth((double) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertNull(stepHandler14);
        org.junit.Assert.assertNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNull(stepHandler21);
    }

    @Test
    public void test15054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15054");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(1.0d);
        java.lang.String str28 = highamHall54Integrator4.getName();
        java.lang.String str29 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction30, 30.408967315912587d, (double) 10.0f, (int) ' ');
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
    }

    @Test
    public void test15055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15055");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        boolean boolean7 = stepHandler6.requiresDenseOutput();
        boolean boolean8 = stepHandler6.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test15056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15056");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 2.1213203435596424d, (double) ' ', (double) 0.0f);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test15057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15057");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        double double6 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler8.add(switchingFunction9, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean14 = switchingFunctionsHandler8.isEmpty();
        boolean boolean15 = switchingFunctionsHandler8.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler17.evaluateStep(stepInterpolator18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler21.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler21.evaluateStep(stepInterpolator24);
        double[] doubleArray31 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler21.stepAccepted((double) (byte) 1, doubleArray31);
        boolean boolean33 = switchingFunctionsHandler17.reset((double) (byte) 1, doubleArray31);
        boolean boolean34 = switchingFunctionsHandler8.reset((double) 1L, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler8.stop();
        boolean boolean36 = switchingFunctionsHandler8.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler8.add(switchingFunction37, 31.144823004794873d, (double) (byte) 100, 2);
        boolean boolean42 = switchingFunctionsHandler8.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        switchingFunctionsHandler8.add(switchingFunction43, 10.0d, (double) 1L, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean50 = switchingFunctionsHandler49.isEmpty();
        double double51 = switchingFunctionsHandler49.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        switchingFunctionsHandler49.add(switchingFunction52, 31.144823004794873d, (double) (-1.0f), 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = switchingFunctionsHandler60.evaluateStep(stepInterpolator61);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler60.evaluateStep(stepInterpolator63);
        double[] doubleArray70 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler60.stepAccepted((double) (byte) 1, doubleArray70);
        double[] doubleArray74 = null;
        double[] doubleArray81 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray74, doubleArray81);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator83 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) 10L, doubleArray70, doubleArray74);
        boolean boolean84 = switchingFunctionsHandler49.reset(100.0d, doubleArray70);
        boolean boolean85 = switchingFunctionsHandler8.reset((double) 0.0f, doubleArray70);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray70);
        boolean boolean87 = switchingFunctionsHandler0.stop();
        double double88 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction89 = null;
        switchingFunctionsHandler0.add(switchingFunction89, 5.623413251903491d, 10.198039027185569d, (-1));
        double double94 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue(Double.isNaN(double94));
    }

    @Test
    public void test15058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15058");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth(97.0d);
        java.lang.String str30 = highamHall54Integrator4.getName();
        double double31 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction32, 10.198039027185569d, (double) (byte) 100, 10);
        double double37 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.2d + "'", double26 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.9d + "'", double37 == 0.9d);
    }

    @Test
    public void test15059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15059");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str10 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) (-1L), 31.622776601683793d, 2);
        highamHall54Integrator4.setMaxGrowth((double) 10.0f);
        double double18 = highamHall54Integrator4.getCurrentStepStart();
        double double19 = highamHall54Integrator4.getMaxGrowth();
        double double20 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(stepHandler21);
    }

    @Test
    public void test15060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15060");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) '4', 97.0d, (int) '#');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler26 = null;
        highamHall54Integrator25.setStepHandler(stepHandler26);
        double double28 = highamHall54Integrator25.getCurrentSignedStepsize();
        double double29 = highamHall54Integrator25.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator34.getStepHandler();
        highamHall54Integrator25.setStepHandler(stepHandler35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        stepHandler35.handleStep(stepInterpolator37, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        stepHandler35.handleStep(stepInterpolator40, false);
        highamHall54Integrator4.setStepHandler(stepHandler35);
        highamHall54Integrator4.setSafety((double) 0);
        double double46 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator4.getStepHandler();
        double double48 = highamHall54Integrator4.getMaxStep();
        double double49 = highamHall54Integrator4.getMaxStep();
        double double50 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction51, (double) (short) 0, 2.0d, 0);
        org.apache.commons.math.ode.StepHandler stepHandler56 = null;
        highamHall54Integrator4.setStepHandler(stepHandler56);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.2d + "'", double46 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1.0d) + "'", double48 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.2d + "'", double50 == 0.2d);
    }

    @Test
    public void test15061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15061");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int8 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int12 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNotNull(stepHandler13);
    }

    @Test
    public void test15062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15062");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction24, (double) 10.0f, 0.9d, (int) (short) 100);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator33.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator41.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler45);
        int int47 = highamHall54Integrator33.getOrder();
        java.lang.String str48 = highamHall54Integrator33.getName();
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler49);
        double double51 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator4.getStepHandler();
        int int53 = highamHall54Integrator4.getOrder();
        double double54 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator4.getStepHandler();
        int int56 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Higham-Hall 5(4)" + "'", str48, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1.0d) + "'", double54 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5 + "'", int56 == 5);
    }

    @Test
    public void test15063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15063");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, (double) (short) 1, 9.848857801796104d, 100);
        double double15 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
    }

    @Test
    public void test15064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15064");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getMinReduction();
        double double14 = highamHall54Integrator4.getMaxGrowth();
        double double15 = highamHall54Integrator4.getCurrentStepStart();
        double double16 = highamHall54Integrator4.getMaxStep();
        double double17 = highamHall54Integrator4.getMaxGrowth();
        int int18 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize(12.823355189994377d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    }

    @Test
    public void test15065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15065");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, 0.9d, (double) 5, (int) (byte) 1);
        highamHall54Integrator4.setMinReduction((double) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator4.setStepHandler(stepHandler19);
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double23 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMinReduction(0.9d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction26, 97.0d, 32.0d, (int) (byte) 10);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (short) 1, 97.0d, (-1.0d));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator40.getStepHandler();
        double double42 = highamHall54Integrator40.getMinStep();
        double double43 = highamHall54Integrator40.getCurrentSignedStepsize();
        int int44 = highamHall54Integrator40.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator40.getStepHandler();
        highamHall54Integrator35.setStepHandler(stepHandler45);
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator35.getStepHandler();
        int int48 = highamHall54Integrator35.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (short) -1, (double) 2, 100.0d);
        highamHall54Integrator53.setSafety((double) 1);
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator53.getStepHandler();
        boolean boolean57 = stepHandler56.requiresDenseOutput();
        highamHall54Integrator35.setStepHandler(stepHandler56);
        stepHandler56.reset();
        highamHall54Integrator4.setStepHandler(stepHandler56);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test15066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15066");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (short) -1, (double) 2, 100.0d);
        highamHall54Integrator4.setSafety((double) 1);
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, Double.NaN, (double) (-1), (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler14);
        java.lang.String str16 = highamHall54Integrator4.getName();
        double double17 = highamHall54Integrator4.getSafety();
        double double18 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test15067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15067");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(2.1213203435596424d, 0.0d, (double) 1.0f, 5.580754698496868d);
    }

    @Test
    public void test15068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15068");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator13.getStepHandler();
        boolean boolean18 = stepHandler17.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        stepHandler17.handleStep(stepInterpolator19, true);
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator4.getStepHandler();
        boolean boolean24 = stepHandler23.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test15069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15069");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', 2.0d, 97.0d, 0.2d);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 8.366600265340756d + "'", double5 == 8.366600265340756d);
    }

    @Test
    public void test15070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15070");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator43.getStepHandler();
        double double45 = highamHall54Integrator43.getCurrentStepStart();
        double double46 = highamHall54Integrator43.getMaxStep();
        highamHall54Integrator43.setInitialStepSize((double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler49);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction51, 22.80350850198276d, 1.0d, 2);
        java.lang.String str56 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Higham-Hall 5(4)" + "'", str56, "Higham-Hall 5(4)");
    }

    @Test
    public void test15071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15071");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 0, 0.9d, (int) (short) 100);
        double double17 = highamHall54Integrator4.getMinReduction();
        double double18 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, 31.622776601683793d, (double) 100L, 100);
        highamHall54Integrator4.setInitialStepSize(0.9d);
        highamHall54Integrator4.setMinReduction(0.0d);
        highamHall54Integrator4.setMinReduction((double) (byte) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
    }

    @Test
    public void test15072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15072");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, 56.568542494923804d, 30.408967315912587d, 0);
        double double18 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
    }

    @Test
    public void test15073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15073");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction39, (double) (-1L), (double) 1L, (-1));
        highamHall54Integrator4.setInitialStepSize((double) (short) 10);
        double double46 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction47, 0.0d, (double) (short) 1, (int) ' ');
        double double52 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler58 = highamHall54Integrator57.getStepHandler();
        highamHall54Integrator57.setInitialStepSize((double) 3);
        highamHall54Integrator57.setInitialStepSize((double) 'a');
        double double63 = highamHall54Integrator57.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        highamHall54Integrator57.addSwitchingFunction(switchingFunction64, (double) (short) 0, (double) 100L, 0);
        double double69 = highamHall54Integrator57.getCurrentSignedStepsize();
        java.lang.String str70 = highamHall54Integrator57.getName();
        java.lang.String str71 = highamHall54Integrator57.getName();
        double double72 = highamHall54Integrator57.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) '4', (double) 10.0f, 1.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator82 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler83 = highamHall54Integrator82.getStepHandler();
        highamHall54Integrator82.setMinReduction(10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler86 = highamHall54Integrator82.getStepHandler();
        boolean boolean87 = stepHandler86.requiresDenseOutput();
        highamHall54Integrator77.setStepHandler(stepHandler86);
        stepHandler86.reset();
        highamHall54Integrator57.setStepHandler(stepHandler86);
        highamHall54Integrator4.setStepHandler(stepHandler86);
        int int92 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9d + "'", double46 == 0.9d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9d + "'", double52 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Higham-Hall 5(4)" + "'", str70, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Higham-Hall 5(4)" + "'", str71, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler83);
        org.junit.Assert.assertNotNull(stepHandler86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 5 + "'", int92 == 5);
    }

    @Test
    public void test15074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15074");
        double[] doubleArray8 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray8, doubleArray11);
        highamHall54Integrator20.setMaxGrowth((double) 1.0f);
        double double23 = highamHall54Integrator20.getMinReduction();
        double double24 = highamHall54Integrator20.getCurrentStepStart();
        java.lang.String str25 = highamHall54Integrator20.getName();
        highamHall54Integrator20.setMinReduction((double) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator20.addSwitchingFunction(switchingFunction28, (double) '#', (double) (byte) 1, (int) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator20.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        highamHall54Integrator20.addSwitchingFunction(switchingFunction34, (double) 10L, (double) 10.0f, 0);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.2d + "'", double23 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler33);
    }

    @Test
    public void test15075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15075");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 2, (double) 3, (double) 3, (double) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, 2.0d, (double) (-1L), 2);
        highamHall54Integrator4.setInitialStepSize(24.947901585376336d);
    }

    @Test
    public void test15076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15076");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (-1.0f), (double) (byte) 0, (int) (short) -1);
        double double14 = highamHall54Integrator4.getMaxStep();
        double double15 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator20.setMinReduction((double) 10.0f);
        double double23 = highamHall54Integrator20.getCurrentSignedStepsize();
        java.lang.String str24 = highamHall54Integrator20.getName();
        java.lang.String str25 = highamHall54Integrator20.getName();
        highamHall54Integrator20.setMaxGrowth((double) 1L);
        highamHall54Integrator20.setMaxGrowth((double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator20.getStepHandler();
        highamHall54Integrator20.setMaxGrowth(0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator20.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler33);
        double double35 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setSafety(5.477225575051661d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.9d + "'", double35 == 0.9d);
    }

    @Test
    public void test15077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15077");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        java.lang.String str10 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize(8.917795292374965d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
    }

    @Test
    public void test15078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15078");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) 0, (double) 1L, (int) '4');
        java.lang.String str10 = highamHall54Integrator4.getName();
        double double11 = highamHall54Integrator4.getSafety();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator18.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator18.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler22 = null;
        highamHall54Integrator18.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator18.getMaxStep();
        double double25 = highamHall54Integrator18.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator30.getStepHandler();
        highamHall54Integrator18.setStepHandler(stepHandler31);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator18.addSwitchingFunction(switchingFunction33, (double) '4', 1.0d, (int) (short) -1);
        double double38 = highamHall54Integrator18.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = null;
        highamHall54Integrator43.setStepHandler(stepHandler44);
        double double46 = highamHall54Integrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler47 = null;
        highamHall54Integrator43.setStepHandler(stepHandler47);
        double double49 = highamHall54Integrator43.getMaxStep();
        double double50 = highamHall54Integrator43.getMinStep();
        double double51 = highamHall54Integrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator56.getStepHandler();
        highamHall54Integrator56.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator56.getStepHandler();
        boolean boolean61 = stepHandler60.requiresDenseOutput();
        highamHall54Integrator43.setStepHandler(stepHandler60);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        stepHandler60.handleStep(stepInterpolator63, true);
        highamHall54Integrator18.setStepHandler(stepHandler60);
        stepHandler60.reset();
        boolean boolean68 = stepHandler60.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler60);
        org.apache.commons.math.ode.StepHandler stepHandler70 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 10.0d, (double) (-1), (double) (short) -1);
        double double76 = highamHall54Integrator75.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler77 = highamHall54Integrator75.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler77);
        org.apache.commons.math.ode.StepHandler stepHandler79 = highamHall54Integrator4.getStepHandler();
        java.lang.Class<?> wildcardClass80 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 31.144823004794873d + "'", double12 == 31.144823004794873d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 31.144823004794873d + "'", double13 == 31.144823004794873d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.0d) + "'", double38 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertNotNull(stepHandler79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test15079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15079");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        double double12 = highamHall54Integrator4.getSafety();
        int int13 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, (double) (byte) 0, 2.0d, 5);
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.2d + "'", double12 == 0.2d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNotNull(stepHandler19);
    }

    @Test
    public void test15080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15080");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, 0.2d, (double) 1, (int) (byte) -1);
        double[] doubleArray26 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        double double30 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler27.add(switchingFunction31, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler37.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler41.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler41.evaluateStep(stepInterpolator44);
        double[] doubleArray51 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler41.stepAccepted((double) (byte) 1, doubleArray51);
        boolean boolean53 = switchingFunctionsHandler37.reset((double) (byte) 1, doubleArray51);
        boolean boolean54 = switchingFunctionsHandler27.reset((double) '4', doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray26, doubleArray51);
        boolean boolean56 = switchingFunctionsHandler0.reset((double) 1L, doubleArray51);
        boolean boolean57 = switchingFunctionsHandler0.isEmpty();
        boolean boolean58 = switchingFunctionsHandler0.isEmpty();
        boolean boolean59 = switchingFunctionsHandler0.stop();
        boolean boolean60 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = switchingFunctionsHandler0.evaluateStep(stepInterpolator61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test15081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15081");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) (short) 10, 4.47213595499958d, 1.4142135623730951d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator9 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator9.getStepHandler();
        highamHall54Integrator9.setMinReduction(10.0d);
        int int13 = highamHall54Integrator9.getOrder();
        java.lang.String str14 = highamHall54Integrator9.getName();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator9.getStepHandler();
        double double16 = highamHall54Integrator9.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator9.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(stepHandler17);
    }

    @Test
    public void test15082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15082");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, Double.NaN, (double) (-1), (double) 100.0f);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str6 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
    }

    @Test
    public void test15083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15083");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        stepHandler16.handleStep(stepInterpolator17, false);
        boolean boolean20 = stepHandler16.requiresDenseOutput();
        stepHandler16.reset();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test15084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15084");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler4.evaluateStep(stepInterpolator5);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler4.evaluateStep(stepInterpolator7);
        double[] doubleArray14 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler4.stepAccepted((double) (byte) 1, doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray14);
        double double17 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray21 = null;
        double[] doubleArray28 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray21, doubleArray28);
        boolean boolean30 = switchingFunctionsHandler0.reset((double) 10.0f, doubleArray28);
        boolean boolean31 = switchingFunctionsHandler0.isEmpty();
        double double32 = switchingFunctionsHandler0.getEventTime();
        boolean boolean33 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler0.add(switchingFunction34, 5.477225575051661d, (double) 10, (int) (byte) 1);
        double double39 = switchingFunctionsHandler0.getEventTime();
        boolean boolean40 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        switchingFunctionsHandler0.add(switchingFunction41, 100.0d, (double) (-1), (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        switchingFunctionsHandler0.add(switchingFunction46, 2.0d, 5.477225575051661d, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        switchingFunctionsHandler0.add(switchingFunction51, (double) (byte) 100, 2.0d, 5);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test15085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15085");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        double double5 = switchingFunctionsHandler2.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler2.add(switchingFunction6, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler12.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler16.evaluateStep(stepInterpolator19);
        double[] doubleArray26 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler16.stepAccepted((double) (byte) 1, doubleArray26);
        boolean boolean28 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray26);
        boolean boolean29 = switchingFunctionsHandler2.reset((double) '4', doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler30.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler34.evaluateStep(stepInterpolator37);
        double[] doubleArray44 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler34.stepAccepted((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray26, doubleArray44);
        double double48 = highamHall54Integrator47.getMinStep();
        highamHall54Integrator47.setSafety((double) (byte) 10);
        java.lang.String str51 = highamHall54Integrator47.getName();
        double double52 = highamHall54Integrator47.getMaxStep();
        int int53 = highamHall54Integrator47.getOrder();
        highamHall54Integrator47.setMaxGrowth((double) (short) 1);
        java.lang.String str56 = highamHall54Integrator47.getName();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Higham-Hall 5(4)" + "'", str51, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Higham-Hall 5(4)" + "'", str56, "Higham-Hall 5(4)");
    }

    @Test
    public void test15086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15086");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(22.80350850198276d, 16.640943104093186d, 0.7952707287670507d, 8.366600265340756d);
    }

    @Test
    public void test15087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15087");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) '#');
        java.lang.String str28 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.2d, (double) (-1L), (double) (byte) -1);
        double double34 = highamHall54Integrator33.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler35);
        java.lang.String str37 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator42.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator42.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        stepHandler46.handleStep(stepInterpolator47, true);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        stepHandler46.handleStep(stepInterpolator50, false);
        highamHall54Integrator4.setStepHandler(stepHandler46);
        double double54 = highamHall54Integrator4.getMaxGrowth();
        int int55 = highamHall54Integrator4.getOrder();
        java.lang.String str56 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator4.getStepHandler();
        double double58 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Higham-Hall 5(4)" + "'", str56, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
    }

    @Test
    public void test15088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15088");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (short) -1, (double) 2, 100.0d);
        highamHall54Integrator4.setSafety((double) 1);
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setSafety((double) 10);
        double double10 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test15089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15089");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.2d, (double) (-1L), (double) (byte) -1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety((double) (byte) 1);
        double double8 = highamHall54Integrator4.getMaxGrowth();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler11 = null;
        highamHall54Integrator4.setStepHandler(stepHandler11);
        int int13 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator18.getStepHandler();
        double double20 = highamHall54Integrator18.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator18.getStepHandler();
        double double22 = highamHall54Integrator18.getSafety();
        highamHall54Integrator18.setSafety((double) 2);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        highamHall54Integrator29.addSwitchingFunction(switchingFunction30, (double) '#', (double) 100, (int) '#');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.2d, (double) (-1L), (double) (byte) -1);
        double double40 = highamHall54Integrator39.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator39.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler41);
        highamHall54Integrator18.setStepHandler(stepHandler41);
        java.lang.String str44 = highamHall54Integrator18.getName();
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator18.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler46);
        boolean boolean48 = stepHandler46.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Higham-Hall 5(4)" + "'", str44, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test15090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15090");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize((double) (-1));
        int int13 = highamHall54Integrator4.getOrder();
        int int14 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        double[] doubleArray26 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray29 = null;
        double[] doubleArray36 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray29, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray26, doubleArray29);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler43.evaluateStep(stepInterpolator44);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler43.evaluateStep(stepInterpolator46);
        double[] doubleArray53 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler43.stepAccepted((double) (byte) 1, doubleArray53);
        boolean boolean55 = switchingFunctionsHandler39.reset((double) (byte) 1, doubleArray53);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray26, doubleArray53);
        double double57 = highamHall54Integrator56.getMinStep();
        double double58 = highamHall54Integrator56.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator56.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler59);
        boolean boolean61 = stepHandler59.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        stepHandler59.handleStep(stepInterpolator62, false);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 100.0d + "'", double57 == 100.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test15091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15091");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 1, 0.0d, (double) 5);
        java.lang.String str5 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        java.lang.String str8 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth(35.0d);
        int int11 = highamHall54Integrator4.getOrder();
        java.lang.String str12 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler15);
    }

    @Test
    public void test15092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15092");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, 0.2d, (double) (short) 10);
        double double5 = highamHall54Integrator4.getMinStep();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        double double8 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize((double) (short) 1);
        double double11 = highamHall54Integrator4.getMinStep();
        java.lang.Class<?> wildcardClass12 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test15093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15093");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) '4', 97.0d, (int) '#');
        highamHall54Integrator4.setInitialStepSize((double) 10L);
        double double23 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test15094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15094");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (short) 0, 1.0d, Double.NaN);
        highamHall54Integrator4.setInitialStepSize(2.514866859365871d);
    }

    @Test
    public void test15095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15095");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, 10.0d, 1.0d, 0);
        double double13 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setInitialStepSize((double) ' ');
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction17, 5.477225575051661d, 5.477225575051661d, 5);
        java.lang.String str22 = highamHall54Integrator4.getName();
        int int23 = highamHall54Integrator4.getOrder();
        int int24 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 100.0d + "'", double16 == 100.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
    }

    @Test
    public void test15096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15096");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray9 = null;
        double[] doubleArray16 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray9, doubleArray16);
        switchingFunctionsHandler5.stepAccepted((double) 10L, doubleArray9);
        boolean boolean19 = switchingFunctionsHandler5.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler5.add(switchingFunction20, 0.2d, (double) 1, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler26.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler26.evaluateStep(stepInterpolator29);
        double[] doubleArray36 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler26.stepAccepted((double) (byte) 1, doubleArray36);
        double[] doubleArray44 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler45.evaluateStep(stepInterpolator46);
        double double48 = switchingFunctionsHandler45.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler45.add(switchingFunction49, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler55.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler59.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler59.evaluateStep(stepInterpolator62);
        double[] doubleArray69 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler59.stepAccepted((double) (byte) 1, doubleArray69);
        boolean boolean71 = switchingFunctionsHandler55.reset((double) (byte) 1, doubleArray69);
        boolean boolean72 = switchingFunctionsHandler45.reset((double) '4', doubleArray69);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray44, doubleArray69);
        boolean boolean74 = switchingFunctionsHandler26.reset((double) (byte) 0, doubleArray69);
        boolean boolean75 = switchingFunctionsHandler5.reset((double) 2, doubleArray69);
        boolean boolean76 = switchingFunctionsHandler0.reset((-1.0d), doubleArray69);
        double double77 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
    }

    @Test
    public void test15097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15097");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMinReduction();
        int int11 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth((double) 2);
        java.lang.String str14 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) (byte) -1, 0.0d, 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) '4', (double) 10.0f, 1.0d);
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator25.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler26);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, (double) 1, (double) '4', (int) (short) 10);
        int int33 = highamHall54Integrator4.getOrder();
        double double34 = highamHall54Integrator4.getMinStep();
        java.lang.String str35 = highamHall54Integrator4.getName();
        java.lang.String str36 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Higham-Hall 5(4)" + "'", str35, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
    }

    @Test
    public void test15098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15098");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = null;
        highamHall54Integrator12.setStepHandler(stepHandler13);
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator12.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator12.getMaxStep();
        double double19 = highamHall54Integrator12.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler25);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator31.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator31.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator31.getMaxStep();
        double double38 = highamHall54Integrator31.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator31.setStepHandler(stepHandler44);
        highamHall54Integrator12.setStepHandler(stepHandler44);
        highamHall54Integrator4.setStepHandler(stepHandler44);
        double double48 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator4.getStepHandler();
        java.lang.String str52 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Higham-Hall 5(4)" + "'", str52, "Higham-Hall 5(4)");
    }

    @Test
    public void test15099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15099");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setInitialStepSize((double) 0L);
        double double27 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        java.lang.String str30 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
    }

    @Test
    public void test15100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15100");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, 0.2d, (double) (short) 10);
        double double5 = highamHall54Integrator4.getMinStep();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, (double) (-1.0f), (double) (short) 0, 0);
        double double12 = highamHall54Integrator4.getMaxGrowth();
        double double13 = highamHall54Integrator4.getMaxStep();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize(1.0d);
        highamHall54Integrator4.setMinReduction((double) 5);
        double double19 = highamHall54Integrator4.getMaxGrowth();
        double double20 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
    }

    @Test
    public void test15101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15101");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        double double14 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        double double16 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator21.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator29.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler33 = null;
        highamHall54Integrator29.setStepHandler(stepHandler33);
        double double35 = highamHall54Integrator29.getMaxStep();
        double double36 = highamHall54Integrator29.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler42);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler49 = null;
        highamHall54Integrator48.setStepHandler(stepHandler49);
        double double51 = highamHall54Integrator48.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler52 = null;
        highamHall54Integrator48.setStepHandler(stepHandler52);
        double double54 = highamHall54Integrator48.getMaxStep();
        double double55 = highamHall54Integrator48.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator60.getStepHandler();
        highamHall54Integrator48.setStepHandler(stepHandler61);
        highamHall54Integrator29.setStepHandler(stepHandler61);
        highamHall54Integrator21.setStepHandler(stepHandler61);
        double double65 = highamHall54Integrator21.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator70 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler71 = highamHall54Integrator70.getStepHandler();
        boolean boolean72 = stepHandler71.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator73 = null;
        stepHandler71.handleStep(stepInterpolator73, false);
        highamHall54Integrator21.setStepHandler(stepHandler71);
        java.lang.String str77 = highamHall54Integrator21.getName();
        double double78 = highamHall54Integrator21.getMaxGrowth();
        int int79 = highamHall54Integrator21.getOrder();
        double double80 = highamHall54Integrator21.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler81 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler81);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNull(stepHandler15);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1.0d) + "'", double54 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(stepHandler71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Higham-Hall 5(4)" + "'", str77, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 5 + "'", int79 == 5);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 10.0d + "'", double80 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler81);
    }

    @Test
    public void test15102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15102");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, 3.0d, (double) (byte) 10, (double) (-1L));
        highamHall54Integrator4.setSafety(9.848857801796104d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator11.setMinReduction((double) 10.0f);
        double double14 = highamHall54Integrator11.getCurrentSignedStepsize();
        java.lang.String str15 = highamHall54Integrator11.getName();
        double double16 = highamHall54Integrator11.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator11.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        stepHandler17.handleStep(stepInterpolator18, true);
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(stepHandler17);
    }

    @Test
    public void test15103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15103");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getSafety();
        double double15 = highamHall54Integrator4.getMinStep();
        double double16 = highamHall54Integrator4.getCurrentStepStart();
        int int17 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
    }

    @Test
    public void test15104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15104");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, 31.144823004794873d, (double) (-1.0f), 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler11.evaluateStep(stepInterpolator14);
        double[] doubleArray21 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler11.stepAccepted((double) (byte) 1, doubleArray21);
        double[] doubleArray25 = null;
        double[] doubleArray32 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray25, doubleArray32);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) 10L, doubleArray21, doubleArray25);
        boolean boolean35 = switchingFunctionsHandler0.reset(100.0d, doubleArray21);
        boolean boolean36 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler0.add(switchingFunction37, 0.0d, (double) '4', (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test15105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15105");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) '#');
        int int28 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(10.0d);
        double double31 = highamHall54Integrator4.getMaxStep();
        double double32 = highamHall54Integrator4.getMinReduction();
        double double33 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double34 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMinReduction(0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1.0d) + "'", double31 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.2d + "'", double32 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test15106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15106");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, 0.9d, (double) 100L, 1);
        double double15 = highamHall54Integrator4.getSafety();
        java.lang.String str16 = highamHall54Integrator4.getName();
        java.lang.String str17 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction(0.2d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.9d + "'", double15 == 0.9d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
    }

    @Test
    public void test15107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15107");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        double double5 = switchingFunctionsHandler2.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler2.add(switchingFunction6, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler12.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler16.evaluateStep(stepInterpolator19);
        double[] doubleArray26 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler16.stepAccepted((double) (byte) 1, doubleArray26);
        boolean boolean28 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray26);
        boolean boolean29 = switchingFunctionsHandler2.reset((double) '4', doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler30.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler34.evaluateStep(stepInterpolator37);
        double[] doubleArray44 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler34.stepAccepted((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray26, doubleArray44);
        double double48 = highamHall54Integrator47.getMinStep();
        double double49 = highamHall54Integrator47.getSafety();
        highamHall54Integrator47.setInitialStepSize(10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator47.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator47.getStepHandler();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.9d + "'", double49 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertNotNull(stepHandler53);
    }

    @Test
    public void test15108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15108");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        java.lang.String str39 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) 10.0f);
        int int42 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator47.getStepHandler();
        highamHall54Integrator47.setMinReduction((double) 10L);
        double double51 = highamHall54Integrator47.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator47.getStepHandler();
        stepHandler52.reset();
        highamHall54Integrator4.setStepHandler(stepHandler52);
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator4.getStepHandler();
        int int56 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction57, (double) (short) 1, 5.0d, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5 + "'", int56 == 5);
    }

    @Test
    public void test15109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15109");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) 100, (double) (-1), 0);
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        int int14 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction((double) (short) 0);
        double double17 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str18 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
    }

    @Test
    public void test15110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15110");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(9.848857801796104d, 4.47213595499958d, 2.0d, (double) 0);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(10.198039027185569d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test15111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15111");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction25, (double) (byte) 1, (double) (short) 10, 100);
        double double30 = highamHall54Integrator4.getCurrentStepStart();
        double double31 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str32 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
    }

    @Test
    public void test15112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15112");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler16);
        int int18 = highamHall54Integrator4.getOrder();
        java.lang.String str19 = highamHall54Integrator4.getName();
        java.lang.String str20 = highamHall54Integrator4.getName();
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        double double22 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator27.getStepHandler();
        double double29 = highamHall54Integrator27.getMinStep();
        java.lang.String str30 = highamHall54Integrator27.getName();
        int int31 = highamHall54Integrator27.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        highamHall54Integrator27.addSwitchingFunction(switchingFunction32, (double) (short) 0, (double) ' ', (-1));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        double double43 = highamHall54Integrator41.getMinStep();
        double double44 = highamHall54Integrator41.getCurrentSignedStepsize();
        highamHall54Integrator41.setInitialStepSize(10.0d);
        double double47 = highamHall54Integrator41.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator27.setStepHandler(stepHandler48);
        highamHall54Integrator4.setStepHandler(stepHandler48);
        double double51 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler57 = null;
        highamHall54Integrator56.setStepHandler(stepHandler57);
        double double59 = highamHall54Integrator56.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler60 = null;
        highamHall54Integrator56.setStepHandler(stepHandler60);
        double double62 = highamHall54Integrator56.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler63 = highamHall54Integrator56.getStepHandler();
        double double64 = highamHall54Integrator56.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 100L, (double) 10.0f, 0.9d);
        org.apache.commons.math.ode.StepHandler stepHandler70 = highamHall54Integrator69.getStepHandler();
        highamHall54Integrator56.setStepHandler(stepHandler70);
        boolean boolean72 = stepHandler70.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler70);
        double double74 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1.0d) + "'", double51 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2d + "'", double62 == 0.2d);
        org.junit.Assert.assertNull(stepHandler63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.9d + "'", double64 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
    }

    @Test
    public void test15113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15113");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, 31.622776601683793d, 3.1622776601683795d, (double) 100);
        highamHall54Integrator4.setMinReduction(5.656854249492381d);
    }

    @Test
    public void test15114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15114");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        highamHall54Integrator4.setMaxGrowth((double) (byte) 100);
        double double12 = highamHall54Integrator4.getMaxStep();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        stepHandler14.handleStep(stepInterpolator15, false);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
    }

    @Test
    public void test15115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15115");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator13.getStepHandler();
        boolean boolean18 = stepHandler17.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        stepHandler17.handleStep(stepInterpolator19, true);
        highamHall54Integrator4.setStepHandler(stepHandler17);
        java.lang.String str23 = highamHall54Integrator4.getName();
        double double24 = highamHall54Integrator4.getCurrentStepStart();
        double double25 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 0);
        double double28 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str29 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
    }

    @Test
    public void test15116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15116");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (short) 1, 97.0d, (-1.0d));
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
    }

    @Test
    public void test15117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15117");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) 100.0f);
        double double12 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        double double15 = highamHall54Integrator4.getCurrentStepStart();
        double double16 = highamHall54Integrator4.getCurrentStepStart();
        double double17 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertNull(stepHandler14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test15118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15118");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double[] doubleArray8 = null;
        double[] doubleArray15 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray8, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset(100.0d, doubleArray8);
        double[] doubleArray24 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        double double28 = switchingFunctionsHandler25.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler25.add(switchingFunction29, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler35.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler39.evaluateStep(stepInterpolator42);
        double[] doubleArray49 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler39.stepAccepted((double) (byte) 1, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray49);
        boolean boolean52 = switchingFunctionsHandler25.reset((double) '4', doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray24, doubleArray49);
        boolean boolean54 = switchingFunctionsHandler0.reset(0.0d, doubleArray24);
        boolean boolean55 = switchingFunctionsHandler0.isEmpty();
        boolean boolean56 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler0.evaluateStep(stepInterpolator57);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        switchingFunctionsHandler60.add(switchingFunction61, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean66 = switchingFunctionsHandler60.isEmpty();
        boolean boolean67 = switchingFunctionsHandler60.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        boolean boolean71 = switchingFunctionsHandler69.evaluateStep(stepInterpolator70);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator74 = null;
        boolean boolean75 = switchingFunctionsHandler73.evaluateStep(stepInterpolator74);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler73.evaluateStep(stepInterpolator76);
        double[] doubleArray83 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler73.stepAccepted((double) (byte) 1, doubleArray83);
        boolean boolean85 = switchingFunctionsHandler69.reset((double) (byte) 1, doubleArray83);
        boolean boolean86 = switchingFunctionsHandler60.reset((double) 1L, doubleArray83);
        boolean boolean87 = switchingFunctionsHandler0.reset((double) 3, doubleArray83);
        boolean boolean88 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator89 = null;
        boolean boolean90 = switchingFunctionsHandler0.evaluateStep(stepInterpolator89);
        boolean boolean91 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test15119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15119");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) 10L, (double) 5, 1.0d);
        java.lang.String str5 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize(17.78279410038923d);
        highamHall54Integrator4.setMinReduction(3.7829664360127033d);
        int int10 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(10.198039027185569d);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertNotNull(stepHandler13);
    }

    @Test
    public void test15120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15120");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) (byte) -1);
        double double28 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMaxGrowth(2.0d);
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        stepHandler31.handleStep(stepInterpolator32, false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.2d + "'", double28 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler31);
    }

    @Test
    public void test15121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15121");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        double double28 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction31, 0.0d, (double) 1.0f, (int) '4');
        java.lang.String str36 = highamHall54Integrator4.getName();
        java.lang.String str37 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth(31.144823004794873d);
        double double40 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
    }

    @Test
    public void test15122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15122");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler16);
        int int18 = highamHall54Integrator4.getOrder();
        java.lang.String str19 = highamHall54Integrator4.getName();
        java.lang.String str20 = highamHall54Integrator4.getName();
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        double double22 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator4.getStepHandler();
        double double24 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test15123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15123");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double double15 = switchingFunctionsHandler0.getEventTime();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler0.evaluateStep(stepInterpolator17);
        double double19 = switchingFunctionsHandler0.getEventTime();
        boolean boolean20 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler22.evaluateStep(stepInterpolator25);
        double[] doubleArray32 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler22.stepAccepted((double) (byte) 1, doubleArray32);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler22.evaluateStep(stepInterpolator34);
        double[] doubleArray41 = new double[] { 100, 0.0d };
        double[] doubleArray47 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler48.evaluateStep(stepInterpolator49);
        double double51 = switchingFunctionsHandler48.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        switchingFunctionsHandler48.add(switchingFunction52, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler58.evaluateStep(stepInterpolator59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler62.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = switchingFunctionsHandler62.evaluateStep(stepInterpolator65);
        double[] doubleArray72 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler62.stepAccepted((double) (byte) 1, doubleArray72);
        boolean boolean74 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray72);
        boolean boolean75 = switchingFunctionsHandler48.reset((double) '4', doubleArray72);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray47, doubleArray72);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, (double) 1L, doubleArray41, doubleArray72);
        boolean boolean78 = switchingFunctionsHandler22.reset(0.4472135954999579d, doubleArray41);
        boolean boolean79 = switchingFunctionsHandler0.reset(2.0d, doubleArray41);
        double double80 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
    }

    @Test
    public void test15124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15124");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        stepHandler36.reset();
        stepHandler36.reset();
        boolean boolean41 = stepHandler36.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        stepHandler36.handleStep(stepInterpolator42, false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test15125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15125");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double[] doubleArray8 = null;
        double[] doubleArray15 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray8, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset(100.0d, doubleArray8);
        double[] doubleArray24 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        double double28 = switchingFunctionsHandler25.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler25.add(switchingFunction29, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler35.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler39.evaluateStep(stepInterpolator42);
        double[] doubleArray49 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler39.stepAccepted((double) (byte) 1, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray49);
        boolean boolean52 = switchingFunctionsHandler25.reset((double) '4', doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray24, doubleArray49);
        boolean boolean54 = switchingFunctionsHandler0.reset(0.0d, doubleArray24);
        double double55 = switchingFunctionsHandler0.getEventTime();
        boolean boolean56 = switchingFunctionsHandler0.isEmpty();
        boolean boolean57 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler0.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        switchingFunctionsHandler0.add(switchingFunction60, 0.4472135954999579d, (double) 'a', (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        switchingFunctionsHandler0.add(switchingFunction65, (double) 10L, (double) (-1.0f), (int) ' ');
        double double70 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test15126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15126");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(2.1213203435596424d, 55.3841974787333d, 9.924141172814958d, (double) 10L);
    }

    @Test
    public void test15127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15127");
        double[] doubleArray4 = new double[] { 100, 0.0d };
        double[] doubleArray10 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        double double14 = switchingFunctionsHandler11.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler11.add(switchingFunction15, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler21.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler25.evaluateStep(stepInterpolator28);
        double[] doubleArray35 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler25.stepAccepted((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler21.reset((double) (byte) 1, doubleArray35);
        boolean boolean38 = switchingFunctionsHandler11.reset((double) '4', doubleArray35);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray10, doubleArray35);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, (double) 1L, doubleArray4, doubleArray35);
        double double41 = highamHall54Integrator40.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator40.getStepHandler();
        int int43 = highamHall54Integrator40.getOrder();
        double double44 = highamHall54Integrator40.getCurrentSignedStepsize();
        double double45 = highamHall54Integrator40.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator40.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.9d + "'", double45 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler46);
    }

    @Test
    public void test15128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15128");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, (double) (short) 10, (double) (byte) -1, (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction33, (double) 0L, (double) (-1L), (int) 'a');
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double40 = highamHall54Integrator4.getMaxGrowth();
        double double41 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler42 = null;
        highamHall54Integrator4.setStepHandler(stepHandler42);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction44, 2.106706162744047d, (double) (short) 0, (int) (short) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1.0d) + "'", double41 == (-1.0d));
    }

    @Test
    public void test15129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15129");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 52.0d + "'", double11 == 52.0d);
    }

    @Test
    public void test15130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15130");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        double double39 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler40 = highamHall54Integrator4.getStepHandler();
        java.lang.String str41 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction42, (double) '4', 0.4472135954999579d, 100);
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator4.getStepHandler();
        java.lang.String str48 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Higham-Hall 5(4)" + "'", str48, "Higham-Hall 5(4)");
    }

    @Test
    public void test15131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15131");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        highamHall54Integrator4.setSafety(3.1622776601683795d);
        double double18 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        java.lang.String str21 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
    }

    @Test
    public void test15132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15132");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        highamHall54Integrator4.setMaxGrowth((double) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, Double.NaN, (double) (-1), 10);
        int int17 = highamHall54Integrator4.getOrder();
        java.lang.String str18 = highamHall54Integrator4.getName();
        double double19 = highamHall54Integrator4.getMaxStep();
        int int20 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
    }

    @Test
    public void test15133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15133");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) '4', 97.0d, (int) '#');
        double double21 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth(2.1213203435596424d);
        java.lang.String str24 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
    }

    @Test
    public void test15134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15134");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, 0.9d, (double) 1L, (double) '#');
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 10, (double) (-1), (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 9.486832980505138d + "'", double5 == 9.486832980505138d);
    }

    @Test
    public void test15135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15135");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, 0.0d, (double) 1, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler18 = null;
        highamHall54Integrator4.setStepHandler(stepHandler18);
        double double20 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety((double) 0L);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.2d + "'", double20 == 0.2d);
    }

    @Test
    public void test15136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15136");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator13.getStepHandler();
        boolean boolean18 = stepHandler17.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        stepHandler17.handleStep(stepInterpolator19, true);
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction23, (double) 1, (double) (byte) 1, (int) (byte) -1);
        double double28 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str29 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator4.setStepHandler(stepHandler30);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction32, (double) (short) 0, 5.0d, (int) (byte) 1);
        double double37 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction38, (double) ' ', 2.0d, (int) (short) 0);
        highamHall54Integrator4.setMaxGrowth(9.848857801796104d);
        double double45 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
    }

    @Test
    public void test15137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15137");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, 10.0d, (double) 10L, 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator18.setInitialStepSize((double) 3);
        double double22 = highamHall54Integrator18.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator18.getStepHandler();
        boolean boolean24 = stepHandler23.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        stepHandler23.handleStep(stepInterpolator25, false);
        highamHall54Integrator4.setStepHandler(stepHandler23);
        double double29 = highamHall54Integrator4.getMinStep();
        java.lang.String str30 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        java.lang.String str37 = highamHall54Integrator35.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double43 = highamHall54Integrator42.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        highamHall54Integrator42.addSwitchingFunction(switchingFunction44, (double) 0.0f, (double) (short) 10, (int) (short) 1);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler54 = null;
        highamHall54Integrator53.setStepHandler(stepHandler54);
        double double56 = highamHall54Integrator53.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler57 = null;
        highamHall54Integrator53.setStepHandler(stepHandler57);
        double double59 = highamHall54Integrator53.getMaxStep();
        double double60 = highamHall54Integrator53.getMinStep();
        double double61 = highamHall54Integrator53.getCurrentSignedStepsize();
        java.lang.String str62 = highamHall54Integrator53.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler68 = null;
        highamHall54Integrator67.setStepHandler(stepHandler68);
        double double70 = highamHall54Integrator67.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler71 = null;
        highamHall54Integrator67.setStepHandler(stepHandler71);
        double double73 = highamHall54Integrator67.getMaxStep();
        double double74 = highamHall54Integrator67.getMinStep();
        double double75 = highamHall54Integrator67.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler81 = highamHall54Integrator80.getStepHandler();
        highamHall54Integrator80.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler84 = highamHall54Integrator80.getStepHandler();
        boolean boolean85 = stepHandler84.requiresDenseOutput();
        highamHall54Integrator67.setStepHandler(stepHandler84);
        java.lang.String str87 = highamHall54Integrator67.getName();
        org.apache.commons.math.ode.StepHandler stepHandler88 = highamHall54Integrator67.getStepHandler();
        highamHall54Integrator53.setStepHandler(stepHandler88);
        highamHall54Integrator42.setStepHandler(stepHandler88);
        highamHall54Integrator35.setStepHandler(stepHandler88);
        boolean boolean92 = stepHandler88.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler88);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1.0d) + "'", double59 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Higham-Hall 5(4)" + "'", str62, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1.0d) + "'", double73 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 10.0d + "'", double74 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertNotNull(stepHandler84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Higham-Hall 5(4)" + "'", str87, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test15138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15138");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        int int11 = highamHall54Integrator4.getOrder();
        double double12 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.2d + "'", double12 == 0.2d);
        org.junit.Assert.assertNull(stepHandler13);
        org.junit.Assert.assertNull(stepHandler14);
    }

    @Test
    public void test15139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15139");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str6 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth(3.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
    }

    @Test
    public void test15140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15140");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        double double28 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str29 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) 0L);
        java.lang.String str32 = highamHall54Integrator4.getName();
        java.lang.String str33 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator4.getStepHandler();
        java.lang.String str35 = highamHall54Integrator4.getName();
        double double36 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str37 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Higham-Hall 5(4)" + "'", str35, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
    }

    @Test
    public void test15141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15141");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety(9.486832980505138d);
        double double17 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler24.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler24.evaluateStep(stepInterpolator27);
        double[] doubleArray34 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler24.stepAccepted((double) (byte) 1, doubleArray34);
        boolean boolean36 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray42 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler43.evaluateStep(stepInterpolator44);
        double double46 = switchingFunctionsHandler43.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        switchingFunctionsHandler43.add(switchingFunction47, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = switchingFunctionsHandler53.evaluateStep(stepInterpolator54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler57.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler57.evaluateStep(stepInterpolator60);
        double[] doubleArray67 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler57.stepAccepted((double) (byte) 1, doubleArray67);
        boolean boolean69 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray67);
        boolean boolean70 = switchingFunctionsHandler43.reset((double) '4', doubleArray67);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator71 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray42, doubleArray67);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (short) 1, doubleArray34, doubleArray42);
        double double73 = highamHall54Integrator72.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler74 = highamHall54Integrator72.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler74);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 9.486832980505138d + "'", double17 == 9.486832980505138d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler74);
    }

    @Test
    public void test15142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15142");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        highamHall54Integrator4.setSafety((double) 10.0f);
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        double double22 = highamHall54Integrator4.getMaxStep();
        double double23 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double24 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setSafety(0.4472135954999579d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
    }

    @Test
    public void test15143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15143");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        boolean boolean4 = switchingFunctionsHandler0.stop();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler14.evaluateStep(stepInterpolator15);
        double double17 = switchingFunctionsHandler14.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler14.add(switchingFunction18, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler24.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler28.evaluateStep(stepInterpolator29);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler28.evaluateStep(stepInterpolator31);
        double[] doubleArray38 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler28.stepAccepted((double) (byte) 1, doubleArray38);
        boolean boolean40 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray38);
        boolean boolean41 = switchingFunctionsHandler14.reset((double) '4', doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler42.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler46.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler46.evaluateStep(stepInterpolator49);
        double[] doubleArray56 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler46.stepAccepted((double) (byte) 1, doubleArray56);
        boolean boolean58 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray56);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray38, doubleArray56);
        boolean boolean60 = switchingFunctionsHandler10.reset(31.144823004794873d, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler61.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler61.evaluateStep(stepInterpolator64);
        double[] doubleArray71 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler61.stepAccepted((double) (byte) 1, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 10, doubleArray38, doubleArray71);
        boolean boolean74 = switchingFunctionsHandler0.reset((double) 'a', doubleArray38);
        boolean boolean75 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test15144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15144");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator21.setInitialStepSize((double) 3);
        double double25 = highamHall54Integrator21.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator30.getStepHandler();
        highamHall54Integrator30.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler39 = null;
        highamHall54Integrator38.setStepHandler(stepHandler39);
        double double41 = highamHall54Integrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler42 = null;
        highamHall54Integrator38.setStepHandler(stepHandler42);
        double double44 = highamHall54Integrator38.getMaxStep();
        double double45 = highamHall54Integrator38.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator50.getStepHandler();
        highamHall54Integrator38.setStepHandler(stepHandler51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler58 = null;
        highamHall54Integrator57.setStepHandler(stepHandler58);
        double double60 = highamHall54Integrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler61 = null;
        highamHall54Integrator57.setStepHandler(stepHandler61);
        double double63 = highamHall54Integrator57.getMaxStep();
        double double64 = highamHall54Integrator57.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler70 = highamHall54Integrator69.getStepHandler();
        highamHall54Integrator57.setStepHandler(stepHandler70);
        highamHall54Integrator38.setStepHandler(stepHandler70);
        highamHall54Integrator30.setStepHandler(stepHandler70);
        highamHall54Integrator21.setStepHandler(stepHandler70);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator75 = null;
        stepHandler70.handleStep(stepInterpolator75, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        stepHandler70.handleStep(stepInterpolator78, false);
        highamHall54Integrator4.setStepHandler(stepHandler70);
        highamHall54Integrator4.setMaxGrowth((double) (byte) -1);
        highamHall54Integrator4.setMinReduction(14.142135623730951d);
        double double86 = highamHall54Integrator4.getSafety();
        java.lang.String str87 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1.0d) + "'", double44 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 10.0d + "'", double64 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Higham-Hall 5(4)" + "'", str87, "Higham-Hall 5(4)");
    }

    @Test
    public void test15145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15145");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, 0.2d, (double) 1, (int) (byte) -1);
        double[] doubleArray26 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        double double30 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler27.add(switchingFunction31, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler37.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler41.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler41.evaluateStep(stepInterpolator44);
        double[] doubleArray51 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler41.stepAccepted((double) (byte) 1, doubleArray51);
        boolean boolean53 = switchingFunctionsHandler37.reset((double) (byte) 1, doubleArray51);
        boolean boolean54 = switchingFunctionsHandler27.reset((double) '4', doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray26, doubleArray51);
        boolean boolean56 = switchingFunctionsHandler0.reset((double) 1L, doubleArray51);
        boolean boolean57 = switchingFunctionsHandler0.isEmpty();
        boolean boolean58 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        switchingFunctionsHandler0.add(switchingFunction59, (double) 10.0f, (double) 0.0f, 5);
        boolean boolean64 = switchingFunctionsHandler0.stop();
        boolean boolean65 = switchingFunctionsHandler0.isEmpty();
        double double66 = switchingFunctionsHandler0.getEventTime();
        boolean boolean67 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction68 = null;
        switchingFunctionsHandler0.add(switchingFunction68, (double) 1.0f, (double) (byte) 0, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        switchingFunctionsHandler0.add(switchingFunction73, 1.4142135623730951d, (double) (short) 100, (int) (short) 100);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = switchingFunctionsHandler0.evaluateStep(stepInterpolator78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test15146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15146");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(3.0d, (double) (byte) 0, (-0.0d), (double) 10.0f);
        int int5 = highamHall54Integrator4.getOrder();
        int int6 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    }

    @Test
    public void test15147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15147");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.0d, 7.211102550927978d, 0.0d);
    }

    @Test
    public void test15148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15148");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (short) 1, (double) 'a', (int) (short) 0);
        int int10 = highamHall54Integrator4.getOrder();
        int int11 = highamHall54Integrator4.getOrder();
        double double12 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator17.addSwitchingFunction(switchingFunction21, (double) 100.0f, (double) 10L, (int) 'a');
        double double26 = highamHall54Integrator17.getCurrentSignedStepsize();
        highamHall54Integrator17.setSafety((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator17.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator34.getStepHandler();
        highamHall54Integrator34.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = null;
        highamHall54Integrator42.setStepHandler(stepHandler43);
        double double45 = highamHall54Integrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler46 = null;
        highamHall54Integrator42.setStepHandler(stepHandler46);
        double double48 = highamHall54Integrator42.getMaxStep();
        double double49 = highamHall54Integrator42.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator54.getStepHandler();
        highamHall54Integrator42.setStepHandler(stepHandler55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler62 = null;
        highamHall54Integrator61.setStepHandler(stepHandler62);
        double double64 = highamHall54Integrator61.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler65 = null;
        highamHall54Integrator61.setStepHandler(stepHandler65);
        double double67 = highamHall54Integrator61.getMaxStep();
        double double68 = highamHall54Integrator61.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler74 = highamHall54Integrator73.getStepHandler();
        highamHall54Integrator61.setStepHandler(stepHandler74);
        highamHall54Integrator42.setStepHandler(stepHandler74);
        highamHall54Integrator34.setStepHandler(stepHandler74);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        stepHandler74.handleStep(stepInterpolator78, false);
        highamHall54Integrator17.setStepHandler(stepHandler74);
        highamHall54Integrator4.setStepHandler(stepHandler74);
        double double83 = highamHall54Integrator4.getMinReduction();
        java.lang.String str84 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) 10.0f);
        double double87 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((double) 10L);
        double double90 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.2d + "'", double12 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1.0d) + "'", double48 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-1.0d) + "'", double67 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.2d + "'", double83 == 0.2d);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Higham-Hall 5(4)" + "'", str84, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test15149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15149");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        double double11 = highamHall54Integrator4.getMinReduction();
        int int12 = highamHall54Integrator4.getOrder();
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler14);
    }

    @Test
    public void test15150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15150");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator4.getStepHandler();
        java.lang.String str27 = highamHall54Integrator4.getName();
        double double28 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
    }

    @Test
    public void test15151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15151");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) 3, 1.0d, (double) 2);
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getMaxStep();
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.0d + "'", double6 == 3.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
    }

    @Test
    public void test15152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15152");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = null;
        highamHall54Integrator12.setStepHandler(stepHandler13);
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator12.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator12.getMaxStep();
        double double19 = highamHall54Integrator12.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler25);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator31.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator31.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator31.getMaxStep();
        double double38 = highamHall54Integrator31.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator31.setStepHandler(stepHandler44);
        highamHall54Integrator12.setStepHandler(stepHandler44);
        highamHall54Integrator4.setStepHandler(stepHandler44);
        double double48 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator53.getStepHandler();
        boolean boolean55 = stepHandler54.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        stepHandler54.handleStep(stepInterpolator56, false);
        highamHall54Integrator4.setStepHandler(stepHandler54);
        java.lang.String str60 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth(32.0d);
        double double63 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(Double.NaN);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Higham-Hall 5(4)" + "'", str60, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
    }

    @Test
    public void test15153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15153");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (-1.0f), (double) '4', (int) (short) 100);
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        double double15 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double19 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNull(stepHandler20);
    }

    @Test
    public void test15154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15154");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double[] doubleArray8 = null;
        double[] doubleArray15 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray8, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset(100.0d, doubleArray8);
        double double18 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean21 = switchingFunctionsHandler20.isEmpty();
        double[] doubleArray31 = new double[] { 1, (short) 100, 1.0f, 10.0d, (byte) 0, (short) 100 };
        double[] doubleArray42 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray45 = null;
        double[] doubleArray52 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray45, doubleArray52);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray42, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler55.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler59.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler59.evaluateStep(stepInterpolator62);
        double[] doubleArray69 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler59.stepAccepted((double) (byte) 1, doubleArray69);
        boolean boolean71 = switchingFunctionsHandler55.reset((double) (byte) 1, doubleArray69);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray42, doubleArray69);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (byte) 1, doubleArray31, doubleArray42);
        switchingFunctionsHandler20.stepAccepted(Double.NaN, doubleArray31);
        boolean boolean75 = switchingFunctionsHandler0.reset(Double.NaN, doubleArray31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler0.evaluateStep(stepInterpolator76);
        double double78 = switchingFunctionsHandler0.getEventTime();
        double double79 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 100.0, 1.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
    }

    @Test
    public void test15155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15155");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) ' ', 9.848857801796104d, (double) 0, (double) 3);
        double double5 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        double double8 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 32.0d + "'", double8 == 32.0d);
    }

    @Test
    public void test15156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15156");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (byte) 0, (double) 0, (int) (byte) 100);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100L, 0.0d, (double) 100.0f, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator18.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator18.getStepHandler();
        boolean boolean21 = stepHandler20.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler20);
        double double23 = highamHall54Integrator4.getMinStep();
        java.lang.String str24 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        stepHandler25.handleStep(stepInterpolator26, true);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler25);
    }

    @Test
    public void test15157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15157");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        double double9 = switchingFunctionsHandler6.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler6.add(switchingFunction10, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler20.evaluateStep(stepInterpolator23);
        double[] doubleArray30 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler20.stepAccepted((double) (byte) 1, doubleArray30);
        boolean boolean32 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray30);
        boolean boolean33 = switchingFunctionsHandler6.reset((double) '4', doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler38.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler38.evaluateStep(stepInterpolator41);
        double[] doubleArray48 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler38.stepAccepted((double) (byte) 1, doubleArray48);
        boolean boolean50 = switchingFunctionsHandler34.reset((double) (byte) 1, doubleArray48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray30, doubleArray48);
        boolean boolean52 = switchingFunctionsHandler0.reset((double) (-1.0f), doubleArray48);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler0.evaluateStep(stepInterpolator53);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler0.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler0.evaluateStep(stepInterpolator57);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        switchingFunctionsHandler0.add(switchingFunction59, Double.NaN, (double) '4', (-1));
        boolean boolean64 = switchingFunctionsHandler0.stop();
        double double65 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        switchingFunctionsHandler0.add(switchingFunction66, (double) 0, (double) (byte) 1, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        switchingFunctionsHandler0.add(switchingFunction71, 22.80350850198276d, 3.1622776601683795d, 3);
        boolean boolean76 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test15158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15158");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 0, 0.9d, (int) (short) 100);
        double double17 = highamHall54Integrator4.getMinReduction();
        double double18 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety(Double.NaN);
        double double21 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double22 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction23, (double) (byte) 100, 3.1622776601683795d, (int) (byte) -1);
        double double28 = highamHall54Integrator4.getSafety();
        double double29 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction30, 12.823355189994377d, 2.8230477686716258d, 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 3.1622776601683795d + "'", double21 == 3.1622776601683795d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
    }

    @Test
    public void test15159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15159");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler20 = null;
        highamHall54Integrator19.setStepHandler(stepHandler20);
        double double22 = highamHall54Integrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler23 = null;
        highamHall54Integrator19.setStepHandler(stepHandler23);
        double double25 = highamHall54Integrator19.getMaxStep();
        double double26 = highamHall54Integrator19.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator19.setStepHandler(stepHandler32);
        highamHall54Integrator19.setSafety((double) 10.0f);
        double double36 = highamHall54Integrator19.getCurrentStepStart();
        double double37 = highamHall54Integrator19.getMaxStep();
        double double38 = highamHall54Integrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = null;
        highamHall54Integrator43.setStepHandler(stepHandler44);
        double double46 = highamHall54Integrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler47 = null;
        highamHall54Integrator43.setStepHandler(stepHandler47);
        double double49 = highamHall54Integrator43.getMaxStep();
        double double50 = highamHall54Integrator43.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator55.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler56);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler63 = null;
        highamHall54Integrator62.setStepHandler(stepHandler63);
        double double65 = highamHall54Integrator62.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler66 = null;
        highamHall54Integrator62.setStepHandler(stepHandler66);
        double double68 = highamHall54Integrator62.getMaxStep();
        double double69 = highamHall54Integrator62.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator74 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler75 = highamHall54Integrator74.getStepHandler();
        highamHall54Integrator62.setStepHandler(stepHandler75);
        highamHall54Integrator43.setStepHandler(stepHandler75);
        boolean boolean78 = stepHandler75.requiresDenseOutput();
        boolean boolean79 = stepHandler75.requiresDenseOutput();
        highamHall54Integrator19.setStepHandler(stepHandler75);
        highamHall54Integrator4.setStepHandler(stepHandler75);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        stepHandler75.handleStep(stepInterpolator82, false);
        java.lang.Class<?> wildcardClass85 = stepHandler75.getClass();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1.0d) + "'", double25 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-1.0d) + "'", double68 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test15160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15160");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        double double16 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setSafety((double) ' ');
        java.lang.String str19 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNull(stepHandler14);
        org.junit.Assert.assertNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
    }

    @Test
    public void test15161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15161");
        double[] doubleArray8 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray8, doubleArray11);
        highamHall54Integrator20.setMaxGrowth((double) 1.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator20.addSwitchingFunction(switchingFunction23, (double) (byte) 10, 31.144823004794873d, (int) (short) 1);
        highamHall54Integrator20.setMaxGrowth(3.1622776601683795d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        highamHall54Integrator20.addSwitchingFunction(switchingFunction30, (-1.0d), (double) 10.0f, 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler40 = null;
        highamHall54Integrator39.setStepHandler(stepHandler40);
        double double42 = highamHall54Integrator39.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler43 = null;
        highamHall54Integrator39.setStepHandler(stepHandler43);
        double double45 = highamHall54Integrator39.getMaxStep();
        double double46 = highamHall54Integrator39.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator51.getStepHandler();
        highamHall54Integrator39.setStepHandler(stepHandler52);
        double double54 = highamHall54Integrator39.getCurrentStepStart();
        double double55 = highamHall54Integrator39.getCurrentStepStart();
        double double56 = highamHall54Integrator39.getCurrentSignedStepsize();
        double double57 = highamHall54Integrator39.getCurrentSignedStepsize();
        double double58 = highamHall54Integrator39.getMaxStep();
        double double59 = highamHall54Integrator39.getMinReduction();
        double double60 = highamHall54Integrator39.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator39.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler61);
        double double63 = highamHall54Integrator20.getMinStep();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1.0d) + "'", double45 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2d + "'", double59 == 0.2d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.9d + "'", double60 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
    }

    @Test
    public void test15162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15162");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(31.622776601683793d, 0.0d, (double) (-1), (double) 100.0f);
        highamHall54Integrator4.setMinReduction((double) (byte) -1);
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler9);
    }

    @Test
    public void test15163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15163");
        double[] doubleArray8 = new double[] { 1, (short) 100, 1.0f, 10.0d, (byte) 0, (short) 100 };
        double[] doubleArray19 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray22 = null;
        double[] doubleArray29 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray22, doubleArray29);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray19, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler32.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler36.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler36.evaluateStep(stepInterpolator39);
        double[] doubleArray46 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler36.stepAccepted((double) (byte) 1, doubleArray46);
        boolean boolean48 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray19, doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (byte) 1, doubleArray8, doubleArray19);
        highamHall54Integrator50.setSafety(22.80350850198276d);
        double double53 = highamHall54Integrator50.getCurrentSignedStepsize();
        int int54 = highamHall54Integrator50.getOrder();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 5 + "'", int54 == 5);
    }

    @Test
    public void test15164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15164");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        double double28 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction31, 0.0d, (double) 1.0f, (int) '4');
        java.lang.String str36 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 100);
        double double39 = highamHall54Integrator4.getMinReduction();
        java.lang.String str40 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction41, (double) (short) 0, Double.NaN, (int) (short) -1);
        java.lang.String str46 = highamHall54Integrator4.getName();
        java.lang.String str47 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.2d + "'", double39 == 0.2d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Higham-Hall 5(4)" + "'", str46, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Higham-Hall 5(4)" + "'", str47, "Higham-Hall 5(4)");
    }

    @Test
    public void test15165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15165");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) 0L, (double) 0, (int) 'a');
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        double double10 = switchingFunctionsHandler0.getEventTime();
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        double double19 = switchingFunctionsHandler16.getEventTime();
        boolean boolean20 = switchingFunctionsHandler16.stop();
        boolean boolean21 = switchingFunctionsHandler16.isEmpty();
        double[] doubleArray31 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray34 = null;
        double[] doubleArray41 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray34, doubleArray41);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray31, doubleArray34);
        boolean boolean44 = switchingFunctionsHandler16.reset(0.9d, doubleArray31);
        double[] doubleArray53 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray56 = null;
        double[] doubleArray63 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray56, doubleArray63);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray53, doubleArray56);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 10.0f, doubleArray31, doubleArray56);
        boolean boolean67 = switchingFunctionsHandler0.reset((double) 1, doubleArray31);
        double[] doubleArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) 10, doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test15166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15166");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 100, 0.0d, (double) 1, (double) 10.0f);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test15167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15167");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) 1.0f, (double) (byte) -1, 10);
        double double6 = switchingFunctionsHandler0.getEventTime();
        boolean boolean7 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler0.add(switchingFunction8, 12.823355189994377d, (double) 1.0f, (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler14.evaluateStep(stepInterpolator15);
        double double17 = switchingFunctionsHandler14.getEventTime();
        boolean boolean18 = switchingFunctionsHandler14.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler14.add(switchingFunction19, (double) 0, (double) (byte) 0, 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler14.add(switchingFunction24, (double) (short) 1, (double) 1L, 1);
        double double29 = switchingFunctionsHandler14.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler31.evaluateStep(stepInterpolator32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler31.add(switchingFunction34, (double) 10, (double) 1.0f, (int) '4');
        boolean boolean39 = switchingFunctionsHandler31.stop();
        double double40 = switchingFunctionsHandler31.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler42.evaluateStep(stepInterpolator43);
        double double45 = switchingFunctionsHandler42.getEventTime();
        boolean boolean46 = switchingFunctionsHandler42.stop();
        boolean boolean47 = switchingFunctionsHandler42.isEmpty();
        double[] doubleArray57 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray60 = null;
        double[] doubleArray67 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray60, doubleArray67);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray57, doubleArray60);
        boolean boolean70 = switchingFunctionsHandler42.reset(0.9d, doubleArray57);
        boolean boolean71 = switchingFunctionsHandler31.reset(0.0d, doubleArray57);
        boolean boolean72 = switchingFunctionsHandler14.reset((-0.0d), doubleArray57);
        boolean boolean73 = switchingFunctionsHandler0.reset(8.917795292374965d, doubleArray57);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test15168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15168");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(2.106706162744047d, (double) (-1.0f), (double) 0.0f, 35.0d);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
    }

    @Test
    public void test15169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15169");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        java.lang.String str39 = highamHall54Integrator4.getName();
        double double40 = highamHall54Integrator4.getMinReduction();
        double double41 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str42 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator47.getStepHandler();
        highamHall54Integrator47.setMinReduction(10.0d);
        int int51 = highamHall54Integrator47.getOrder();
        java.lang.String str52 = highamHall54Integrator47.getName();
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator47.getStepHandler();
        java.lang.String str54 = highamHall54Integrator47.getName();
        double double55 = highamHall54Integrator47.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler66 = null;
        highamHall54Integrator65.setStepHandler(stepHandler66);
        double double68 = highamHall54Integrator65.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler69 = null;
        highamHall54Integrator65.setStepHandler(stepHandler69);
        double double71 = highamHall54Integrator65.getMaxStep();
        double double72 = highamHall54Integrator65.getMinStep();
        double double73 = highamHall54Integrator65.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler79 = highamHall54Integrator78.getStepHandler();
        highamHall54Integrator78.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler82 = highamHall54Integrator78.getStepHandler();
        boolean boolean83 = stepHandler82.requiresDenseOutput();
        highamHall54Integrator65.setStepHandler(stepHandler82);
        double double85 = highamHall54Integrator65.getSafety();
        java.lang.String str86 = highamHall54Integrator65.getName();
        org.apache.commons.math.ode.StepHandler stepHandler87 = highamHall54Integrator65.getStepHandler();
        highamHall54Integrator60.setStepHandler(stepHandler87);
        highamHall54Integrator47.setStepHandler(stepHandler87);
        org.apache.commons.math.ode.StepHandler stepHandler90 = highamHall54Integrator47.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler90);
        boolean boolean92 = stepHandler90.requiresDenseOutput();
        boolean boolean93 = stepHandler90.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator94 = null;
        stepHandler90.handleStep(stepInterpolator94, true);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator97 = null;
        stepHandler90.handleStep(stepInterpolator97, true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2d + "'", double40 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Higham-Hall 5(4)" + "'", str52, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Higham-Hall 5(4)" + "'", str54, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1.0d) + "'", double55 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1.0d) + "'", double71 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(stepHandler79);
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.9d + "'", double85 == 0.9d);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Higham-Hall 5(4)" + "'", str86, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler87);
        org.junit.Assert.assertNotNull(stepHandler90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test15170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15170");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double25 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction26, (double) (short) -1, (double) (-1.0f), (int) (byte) -1);
        int int31 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction32, 22.22397209204091d, Double.NaN, (int) (short) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
    }

    @Test
    public void test15171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15171");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        java.lang.String str24 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction25, (double) 100, (-1.0d), (int) '4');
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator4.getStepHandler();
        double double32 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test15172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15172");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, 0.2d, (double) 1, (int) (byte) -1);
        double[] doubleArray26 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        double double30 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler27.add(switchingFunction31, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler37.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler41.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler41.evaluateStep(stepInterpolator44);
        double[] doubleArray51 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler41.stepAccepted((double) (byte) 1, doubleArray51);
        boolean boolean53 = switchingFunctionsHandler37.reset((double) (byte) 1, doubleArray51);
        boolean boolean54 = switchingFunctionsHandler27.reset((double) '4', doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray26, doubleArray51);
        boolean boolean56 = switchingFunctionsHandler0.reset((double) 1L, doubleArray51);
        boolean boolean57 = switchingFunctionsHandler0.isEmpty();
        boolean boolean58 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        switchingFunctionsHandler0.add(switchingFunction59, (double) 10.0f, (double) 0.0f, 5);
        boolean boolean64 = switchingFunctionsHandler0.stop();
        boolean boolean65 = switchingFunctionsHandler0.stop();
        double double66 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        switchingFunctionsHandler0.add(switchingFunction67, (-1.0d), 55.3841974787333d, 3);
        boolean boolean72 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        switchingFunctionsHandler0.add(switchingFunction73, 3.7829664360127033d, 31.144823004794873d, 5);
        double double78 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
    }

    @Test
    public void test15173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15173");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction39, (double) (-1L), (double) 1L, (-1));
        highamHall54Integrator4.setInitialStepSize((double) (short) 10);
        double double46 = highamHall54Integrator4.getSafety();
        java.lang.String str47 = highamHall54Integrator4.getName();
        int int48 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety((double) (byte) -1);
        java.lang.String str51 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9d + "'", double46 == 0.9d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Higham-Hall 5(4)" + "'", str47, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Higham-Hall 5(4)" + "'", str51, "Higham-Hall 5(4)");
    }

    @Test
    public void test15174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15174");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.9d, (double) (-1), (double) 2, (double) (short) 0);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test15175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15175");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((-0.0d), (double) (byte) 0, (-0.0d), (double) (byte) 0);
        double double5 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) -1, 0.4472135954999579d, 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.0d) + "'", double5 == (-0.0d));
    }

    @Test
    public void test15176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15176");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) '#');
        int int28 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(10.0d);
        double double31 = highamHall54Integrator4.getMaxGrowth();
        double double32 = highamHall54Integrator4.getCurrentStepStart();
        double double33 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator38.getStepHandler();
        double double40 = highamHall54Integrator38.getMinStep();
        double double41 = highamHall54Integrator38.getCurrentSignedStepsize();
        int int42 = highamHall54Integrator38.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        stepHandler43.handleStep(stepInterpolator44, true);
        stepHandler43.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        stepHandler43.handleStep(stepInterpolator48, true);
        stepHandler43.reset();
        highamHall54Integrator4.setStepHandler(stepHandler43);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertNotNull(stepHandler43);
    }

    @Test
    public void test15177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15177");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        int int29 = highamHall54Integrator4.getOrder();
        double double30 = highamHall54Integrator4.getMinReduction();
        double double31 = highamHall54Integrator4.getCurrentStepStart();
        double double32 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMinReduction(9.848857801796104d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2d + "'", double30 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test15178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15178");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (byte) 100, 0.4472135954999579d, 8.366600265340756d);
    }

    @Test
    public void test15179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15179");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) ' ', (double) 0L, 0.0d);
        double double16 = highamHall54Integrator15.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator15.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double20 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
    }

    @Test
    public void test15180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15180");
        double[] doubleArray2 = null;
        double[] doubleArray3 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(5.580754698496868d, (double) (short) -1, doubleArray2, doubleArray3);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test15181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15181");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 1.0f, (double) (short) 10, (double) (byte) 10);
        double double5 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator10 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator10.getStepHandler();
        highamHall54Integrator10.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator10.addSwitchingFunction(switchingFunction14, (double) 100.0f, (double) 10L, (int) 'a');
        double double19 = highamHall54Integrator10.getCurrentSignedStepsize();
        highamHall54Integrator10.setSafety((double) 1L);
        java.lang.String str22 = highamHall54Integrator10.getName();
        double double23 = highamHall54Integrator10.getCurrentSignedStepsize();
        double double24 = highamHall54Integrator10.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator10.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        stepHandler25.handleStep(stepInterpolator26, true);
        highamHall54Integrator4.setStepHandler(stepHandler25);
        int int30 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(2.106706162744047d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
    }

    @Test
    public void test15182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15182");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        java.lang.String str39 = highamHall54Integrator4.getName();
        double double40 = highamHall54Integrator4.getMinReduction();
        double double41 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str42 = highamHall54Integrator4.getName();
        java.lang.String str43 = highamHall54Integrator4.getName();
        java.lang.String str44 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler46 = null;
        highamHall54Integrator4.setStepHandler(stepHandler46);
        highamHall54Integrator4.setMaxGrowth((double) (byte) 10);
        double double50 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety(17.78279410038923d);
        double double53 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction54, 2.0d, 3.1622776601683795d, (int) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2d + "'", double40 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Higham-Hall 5(4)" + "'", str44, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 17.78279410038923d + "'", double53 == 17.78279410038923d);
    }

    @Test
    public void test15183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15183");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        boolean boolean7 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler11.evaluateStep(stepInterpolator14);
        double[] doubleArray19 = null;
        double[] doubleArray26 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray19, doubleArray26);
        boolean boolean28 = switchingFunctionsHandler11.reset(100.0d, doubleArray19);
        double[] doubleArray35 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler36.evaluateStep(stepInterpolator37);
        double double39 = switchingFunctionsHandler36.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        switchingFunctionsHandler36.add(switchingFunction40, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler46.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler50.evaluateStep(stepInterpolator53);
        double[] doubleArray60 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler50.stepAccepted((double) (byte) 1, doubleArray60);
        boolean boolean62 = switchingFunctionsHandler46.reset((double) (byte) 1, doubleArray60);
        boolean boolean63 = switchingFunctionsHandler36.reset((double) '4', doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray35, doubleArray60);
        boolean boolean65 = switchingFunctionsHandler11.reset(0.0d, doubleArray35);
        double[] doubleArray66 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) 10, doubleArray35, doubleArray66);
        boolean boolean68 = switchingFunctionsHandler0.reset((double) 5, doubleArray66);
        boolean boolean69 = switchingFunctionsHandler0.isEmpty();
        boolean boolean70 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        switchingFunctionsHandler0.add(switchingFunction71, (double) (short) 10, 56.568542494923804d, (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test15184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15184");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator13.getStepHandler();
        boolean boolean18 = stepHandler17.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        stepHandler17.handleStep(stepInterpolator19, true);
        highamHall54Integrator4.setStepHandler(stepHandler17);
        java.lang.String str23 = highamHall54Integrator4.getName();
        double double24 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator4.getStepHandler();
        double double26 = highamHall54Integrator4.getCurrentStepStart();
        double double27 = highamHall54Integrator4.getCurrentStepStart();
        double double28 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.2d + "'", double24 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
    }

    @Test
    public void test15185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15185");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction29, (double) ' ', (double) 100L, 0);
        java.lang.String str34 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction35, (double) 'a', (double) 'a', (int) (short) 100);
        double double40 = highamHall54Integrator4.getMinStep();
        double double41 = highamHall54Integrator4.getMinReduction();
        java.lang.String str42 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.2d + "'", double41 == 0.2d);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
    }

    @Test
    public void test15186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15186");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double[] doubleArray8 = null;
        double[] doubleArray15 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray8, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset(100.0d, doubleArray8);
        double[] doubleArray24 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        double double28 = switchingFunctionsHandler25.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler25.add(switchingFunction29, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler35.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler39.evaluateStep(stepInterpolator42);
        double[] doubleArray49 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler39.stepAccepted((double) (byte) 1, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray49);
        boolean boolean52 = switchingFunctionsHandler25.reset((double) '4', doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray24, doubleArray49);
        boolean boolean54 = switchingFunctionsHandler0.reset(0.0d, doubleArray24);
        double double55 = switchingFunctionsHandler0.getEventTime();
        boolean boolean56 = switchingFunctionsHandler0.isEmpty();
        boolean boolean57 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler0.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler61.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        switchingFunctionsHandler61.add(switchingFunction64, (double) 10, (double) 1.0f, (int) '4');
        boolean boolean69 = switchingFunctionsHandler61.stop();
        boolean boolean70 = switchingFunctionsHandler61.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        switchingFunctionsHandler61.add(switchingFunction71, (double) (short) 10, (double) '#', (int) (short) -1);
        boolean boolean76 = switchingFunctionsHandler61.stop();
        double[] doubleArray80 = new double[] { ' ', 1 };
        boolean boolean81 = switchingFunctionsHandler61.reset((double) 10L, doubleArray80);
        boolean boolean82 = switchingFunctionsHandler0.reset((double) (short) 10, doubleArray80);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator83 = null;
        boolean boolean84 = switchingFunctionsHandler0.evaluateStep(stepInterpolator83);
        boolean boolean85 = switchingFunctionsHandler0.stop();
        double[] doubleArray87 = null;
        boolean boolean88 = switchingFunctionsHandler0.reset(0.0d, doubleArray87);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[32.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test15187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15187");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        java.lang.String str7 = highamHall54Integrator4.getName();
        java.lang.String str8 = highamHall54Integrator4.getName();
        java.lang.String str9 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) 5);
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        double double15 = highamHall54Integrator4.getMinReduction();
        java.lang.String str16 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
    }

    @Test
    public void test15188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15188");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        int int11 = highamHall54Integrator4.getOrder();
        double double12 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, (double) (short) 100, (double) '4', 3);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction20, (double) 5, 5.0d, (int) (short) 1);
        int int25 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.9d);
        int int28 = highamHall54Integrator4.getOrder();
        java.lang.String str29 = highamHall54Integrator4.getName();
        double double30 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.2d + "'", double12 == 0.2d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2d + "'", double30 == 0.2d);
    }

    @Test
    public void test15189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15189");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        java.lang.String str7 = highamHall54Integrator4.getName();
        int int8 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (short) 0, (double) ' ', (-1));
        highamHall54Integrator4.setMaxGrowth(0.2d);
        java.lang.String str16 = highamHall54Integrator4.getName();
        java.lang.String str17 = highamHall54Integrator4.getName();
        int int18 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize(17.78279410038923d);
        double double21 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2d + "'", double21 == 0.2d);
    }

    @Test
    public void test15190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15190");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(3.1622776601683795d, (double) (short) 100, Double.NaN, (double) (-1L));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator9 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler10 = null;
        highamHall54Integrator9.setStepHandler(stepHandler10);
        double double12 = highamHall54Integrator9.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler13 = null;
        highamHall54Integrator9.setStepHandler(stepHandler13);
        double double15 = highamHall54Integrator9.getMaxStep();
        double double16 = highamHall54Integrator9.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator9.setStepHandler(stepHandler22);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler29 = null;
        highamHall54Integrator28.setStepHandler(stepHandler29);
        double double31 = highamHall54Integrator28.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator28.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator28.getMaxStep();
        double double35 = highamHall54Integrator28.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator40.getStepHandler();
        highamHall54Integrator28.setStepHandler(stepHandler41);
        highamHall54Integrator9.setStepHandler(stepHandler41);
        boolean boolean44 = stepHandler41.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        stepHandler41.handleStep(stepInterpolator45, true);
        highamHall54Integrator4.setStepHandler(stepHandler41);
        double double49 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMaxGrowth((double) (-1L));
        int int52 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(18.566368063325246d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1.0d) + "'", double34 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.2d + "'", double49 == 0.2d);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
    }

    @Test
    public void test15191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15191");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (-0.0d), (double) 100.0f, (double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (short) 10, 3.7829664360127033d, (int) (short) 100);
    }

    @Test
    public void test15192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15192");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 100);
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double17 = highamHall54Integrator16.getCurrentStepStart();
        java.lang.String str18 = highamHall54Integrator16.getName();
        highamHall54Integrator16.setMaxGrowth(3.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler26 = null;
        highamHall54Integrator25.setStepHandler(stepHandler26);
        double double28 = highamHall54Integrator25.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler29 = null;
        highamHall54Integrator25.setStepHandler(stepHandler29);
        double double31 = highamHall54Integrator25.getMaxStep();
        double double32 = highamHall54Integrator25.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator25.setStepHandler(stepHandler38);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        highamHall54Integrator25.addSwitchingFunction(switchingFunction40, (double) '4', 1.0d, (int) (short) -1);
        double double45 = highamHall54Integrator25.getMaxStep();
        double double46 = highamHall54Integrator25.getSafety();
        highamHall54Integrator25.setInitialStepSize(1.0d);
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator25.getStepHandler();
        highamHall54Integrator25.setMaxGrowth((double) (byte) 10);
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator25.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        stepHandler52.handleStep(stepInterpolator53, false);
        boolean boolean56 = stepHandler52.requiresDenseOutput();
        highamHall54Integrator16.setStepHandler(stepHandler52);
        highamHall54Integrator4.setStepHandler(stepHandler52);
        java.lang.Class<?> wildcardClass59 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1.0d) + "'", double31 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1.0d) + "'", double45 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9d + "'", double46 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test15193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15193");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = null;
        double[] doubleArray13 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray6, doubleArray13);
        switchingFunctionsHandler2.stepAccepted((double) 10L, doubleArray6);
        boolean boolean16 = switchingFunctionsHandler2.isEmpty();
        double double17 = switchingFunctionsHandler2.getEventTime();
        boolean boolean18 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler2.evaluateStep(stepInterpolator19);
        boolean boolean21 = switchingFunctionsHandler2.isEmpty();
        boolean boolean22 = switchingFunctionsHandler2.stop();
        boolean boolean23 = switchingFunctionsHandler2.isEmpty();
        boolean boolean24 = switchingFunctionsHandler2.isEmpty();
        boolean boolean25 = switchingFunctionsHandler2.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler29.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler33.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler33.evaluateStep(stepInterpolator36);
        double[] doubleArray43 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler33.stepAccepted((double) (byte) 1, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray43);
        double[] doubleArray51 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler52.evaluateStep(stepInterpolator53);
        double double55 = switchingFunctionsHandler52.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        switchingFunctionsHandler52.add(switchingFunction56, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler62.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = switchingFunctionsHandler66.evaluateStep(stepInterpolator67);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler66.evaluateStep(stepInterpolator69);
        double[] doubleArray76 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler66.stepAccepted((double) (byte) 1, doubleArray76);
        boolean boolean78 = switchingFunctionsHandler62.reset((double) (byte) 1, doubleArray76);
        boolean boolean79 = switchingFunctionsHandler52.reset((double) '4', doubleArray76);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray51, doubleArray76);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator81 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (short) 1, doubleArray43, doubleArray51);
        boolean boolean82 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray43);
        double[] doubleArray83 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator(24.947901585376336d, 52.0d, doubleArray43, doubleArray83);
        int int85 = highamHall54Integrator84.getOrder();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
    }

    @Test
    public void test15194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15194");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, (double) 0L, 0.0d, (int) (short) -1);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator19.getStepHandler();
        highamHall54Integrator19.setMinReduction((double) 0.0f);
        java.lang.String str23 = highamHall54Integrator19.getName();
        double double24 = highamHall54Integrator19.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator29.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator29.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        stepHandler34.handleStep(stepInterpolator35, true);
        highamHall54Integrator19.setStepHandler(stepHandler34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator43.getStepHandler();
        double double45 = highamHall54Integrator43.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator43.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        stepHandler46.handleStep(stepInterpolator47, true);
        highamHall54Integrator19.setStepHandler(stepHandler46);
        highamHall54Integrator4.setStepHandler(stepHandler46);
        java.lang.String str52 = highamHall54Integrator4.getName();
        double double53 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Higham-Hall 5(4)" + "'", str52, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1.0d) + "'", double53 == (-1.0d));
    }

    @Test
    public void test15195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15195");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator21.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator29.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler33 = null;
        highamHall54Integrator29.setStepHandler(stepHandler33);
        double double35 = highamHall54Integrator29.getMaxStep();
        double double36 = highamHall54Integrator29.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler42);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler49 = null;
        highamHall54Integrator48.setStepHandler(stepHandler49);
        double double51 = highamHall54Integrator48.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler52 = null;
        highamHall54Integrator48.setStepHandler(stepHandler52);
        double double54 = highamHall54Integrator48.getMaxStep();
        double double55 = highamHall54Integrator48.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator60.getStepHandler();
        highamHall54Integrator48.setStepHandler(stepHandler61);
        highamHall54Integrator29.setStepHandler(stepHandler61);
        highamHall54Integrator21.setStepHandler(stepHandler61);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        stepHandler61.handleStep(stepInterpolator65, false);
        highamHall54Integrator4.setStepHandler(stepHandler61);
        double double69 = highamHall54Integrator4.getSafety();
        int int70 = highamHall54Integrator4.getOrder();
        double double71 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1.0d) + "'", double54 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 5 + "'", int70 == 5);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 10.0d + "'", double71 == 10.0d);
    }

    @Test
    public void test15196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15196");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        double double5 = switchingFunctionsHandler2.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler2.add(switchingFunction6, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler12.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler16.evaluateStep(stepInterpolator19);
        double[] doubleArray26 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler16.stepAccepted((double) (byte) 1, doubleArray26);
        boolean boolean28 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray26);
        boolean boolean29 = switchingFunctionsHandler2.reset((double) '4', doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler30.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler34.evaluateStep(stepInterpolator37);
        double[] doubleArray44 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler34.stepAccepted((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray26, doubleArray44);
        double double48 = highamHall54Integrator47.getMinStep();
        highamHall54Integrator47.setSafety((double) (byte) 10);
        java.lang.String str51 = highamHall54Integrator47.getName();
        double double52 = highamHall54Integrator47.getCurrentStepStart();
        highamHall54Integrator47.setMinReduction((double) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        highamHall54Integrator47.addSwitchingFunction(switchingFunction55, 0.0d, (double) '4', (int) (short) 1);
        double double60 = highamHall54Integrator47.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        highamHall54Integrator47.addSwitchingFunction(switchingFunction61, (double) 10.0f, 0.0d, (-1));
        double double66 = highamHall54Integrator47.getCurrentStepStart();
        double double67 = highamHall54Integrator47.getCurrentStepStart();
        java.lang.String str68 = highamHall54Integrator47.getName();
        highamHall54Integrator47.setSafety(3.1622776601683795d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Higham-Hall 5(4)" + "'", str51, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Higham-Hall 5(4)" + "'", str68, "Higham-Hall 5(4)");
    }

    @Test
    public void test15197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15197");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100L, 35.0d, 2.514866859365871d, (-1.0d));
        double double5 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator10 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator10.getStepHandler();
        double double12 = highamHall54Integrator10.getCurrentStepStart();
        double double13 = highamHall54Integrator10.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator10.addSwitchingFunction(switchingFunction14, (double) (byte) 10, (double) 1, 3);
        java.lang.String str19 = highamHall54Integrator10.getName();
        double double20 = highamHall54Integrator10.getCurrentSignedStepsize();
        double double21 = highamHall54Integrator10.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator26.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator26.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator26.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator26.getMaxStep();
        double double33 = highamHall54Integrator26.getMinStep();
        double double34 = highamHall54Integrator26.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler40 = highamHall54Integrator39.getStepHandler();
        highamHall54Integrator39.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator39.getStepHandler();
        boolean boolean44 = stepHandler43.requiresDenseOutput();
        highamHall54Integrator26.setStepHandler(stepHandler43);
        double double46 = highamHall54Integrator26.getSafety();
        java.lang.String str47 = highamHall54Integrator26.getName();
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator26.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        stepHandler48.handleStep(stepInterpolator49, false);
        highamHall54Integrator10.setStepHandler(stepHandler48);
        highamHall54Integrator4.setStepHandler(stepHandler48);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2d + "'", double21 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1.0d) + "'", double32 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.9d + "'", double46 == 0.9d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Higham-Hall 5(4)" + "'", str47, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler48);
    }

    @Test
    public void test15198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15198");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double double15 = switchingFunctionsHandler0.getEventTime();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler0.evaluateStep(stepInterpolator18);
        boolean boolean20 = switchingFunctionsHandler0.stop();
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, (double) (byte) 100, (double) (short) -1, 3);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test15199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15199");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMinReduction();
        double double10 = highamHall54Integrator4.getMinReduction();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety((-0.0d));
        java.lang.String str14 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, (double) (byte) -1, (double) 0L, 10);
        java.lang.String str20 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
    }

    @Test
    public void test15200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15200");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) 100, (double) (-1), 0);
        double double13 = highamHall54Integrator4.getMaxGrowth();
        double double14 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str15 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator20.getStepHandler();
        highamHall54Integrator20.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        highamHall54Integrator20.addSwitchingFunction(switchingFunction24, (double) 100.0f, (double) 10L, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator20.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler29);
        int int31 = highamHall54Integrator4.getOrder();
        int int32 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(5.580754698496868d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
    }

    @Test
    public void test15201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15201");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) 10L, (double) (byte) 1, (double) (short) 1);
        highamHall54Integrator4.setSafety((double) 100.0f);
        highamHall54Integrator4.setSafety((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setInitialStepSize((double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator13.addSwitchingFunction(switchingFunction17, (double) (byte) 100, (double) (-1), 0);
        double double22 = highamHall54Integrator13.getMaxGrowth();
        double double23 = highamHall54Integrator13.getCurrentSignedStepsize();
        double double24 = highamHall54Integrator13.getCurrentStepStart();
        highamHall54Integrator13.setMinReduction((double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler27);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, 0.2d, (double) (short) 10);
        double double34 = highamHall54Integrator33.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler40 = highamHall54Integrator39.getStepHandler();
        highamHall54Integrator39.setMinReduction((double) 10L);
        double double43 = highamHall54Integrator39.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator39.getStepHandler();
        stepHandler44.reset();
        highamHall54Integrator33.setStepHandler(stepHandler44);
        stepHandler44.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        stepHandler44.handleStep(stepInterpolator48, true);
        highamHall54Integrator4.setStepHandler(stepHandler44);
        double double52 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler53 = null;
        highamHall54Integrator4.setStepHandler(stepHandler53);
        java.lang.String str55 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.2d + "'", double52 == 0.2d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Higham-Hall 5(4)" + "'", str55, "Higham-Hall 5(4)");
    }

    @Test
    public void test15202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15202");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler3.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler3.evaluateStep(stepInterpolator6);
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        boolean boolean20 = switchingFunctionsHandler3.reset(100.0d, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler22.evaluateStep(stepInterpolator25);
        double[] doubleArray30 = null;
        double[] doubleArray37 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray30, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler22.reset(100.0d, doubleArray30);
        double[] doubleArray46 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler47.evaluateStep(stepInterpolator48);
        double double50 = switchingFunctionsHandler47.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        switchingFunctionsHandler47.add(switchingFunction51, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler57.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler61.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler61.evaluateStep(stepInterpolator64);
        double[] doubleArray71 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler61.stepAccepted((double) (byte) 1, doubleArray71);
        boolean boolean73 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray71);
        boolean boolean74 = switchingFunctionsHandler47.reset((double) '4', doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray46, doubleArray71);
        boolean boolean76 = switchingFunctionsHandler22.reset(0.0d, doubleArray46);
        switchingFunctionsHandler3.stepAccepted((double) 100L, doubleArray46);
        boolean boolean78 = switchingFunctionsHandler0.reset((double) ' ', doubleArray46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        boolean boolean80 = switchingFunctionsHandler0.evaluateStep(stepInterpolator79);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction81 = null;
        switchingFunctionsHandler0.add(switchingFunction81, 10.198039027185569d, 7.211102550927978d, (int) '4');
        boolean boolean86 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test15203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15203");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) '#');
        java.lang.String str28 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) (-1L));
        double double31 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int32 = highamHall54Integrator4.getOrder();
        java.lang.String str33 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth(3.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction36, 0.0d, 100.0d, 3);
        double double41 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction42, 16.640943104093186d, (double) 0, 5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
    }

    @Test
    public void test15204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15204");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) (byte) 10, (double) (short) -1, (int) '4');
        double double16 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction17, 0.7952707287670507d, (double) 1.0f, 3);
        java.lang.String str22 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
    }

    @Test
    public void test15205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15205");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        java.lang.String str11 = highamHall54Integrator4.getName();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int14 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertNotNull(stepHandler15);
    }

    @Test
    public void test15206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15206");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 0, 0.9d, (int) (short) 100);
        double double17 = highamHall54Integrator4.getMinReduction();
        double double18 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety(Double.NaN);
        double double21 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction22, (double) 100, (double) 0, (int) (byte) 100);
        highamHall54Integrator4.setInitialStepSize((double) 1.0f);
        int int29 = highamHall54Integrator4.getOrder();
        double double30 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str31 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 3.1622776601683795d + "'", double21 == 3.1622776601683795d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 3.1622776601683795d + "'", double30 == 3.1622776601683795d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
    }

    @Test
    public void test15207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15207");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction29, (double) ' ', (double) 100L, 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator38.getStepHandler();
        highamHall54Integrator38.setInitialStepSize((double) 3);
        highamHall54Integrator38.setInitialStepSize((double) 'a');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator48.getStepHandler();
        boolean boolean50 = stepHandler49.requiresDenseOutput();
        highamHall54Integrator38.setStepHandler(stepHandler49);
        boolean boolean52 = stepHandler49.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler49);
        highamHall54Integrator4.setMinReduction(9.924141172814958d);
        highamHall54Integrator4.setMinReduction((double) (-1.0f));
        java.lang.String str58 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Higham-Hall 5(4)" + "'", str58, "Higham-Hall 5(4)");
    }

    @Test
    public void test15208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15208");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = null;
        highamHall54Integrator43.setStepHandler(stepHandler44);
        double double46 = highamHall54Integrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler47 = null;
        highamHall54Integrator43.setStepHandler(stepHandler47);
        double double49 = highamHall54Integrator43.getMaxStep();
        double double50 = highamHall54Integrator43.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator55.getStepHandler();
        highamHall54Integrator43.setStepHandler(stepHandler56);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        highamHall54Integrator43.addSwitchingFunction(switchingFunction58, (double) '4', 1.0d, (int) (short) -1);
        double double63 = highamHall54Integrator43.getMaxStep();
        double double64 = highamHall54Integrator43.getSafety();
        double double65 = highamHall54Integrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler66 = highamHall54Integrator43.getStepHandler();
        boolean boolean67 = stepHandler66.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler66);
        double double69 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str70 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth(32.0d);
        int int73 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.9d + "'", double64 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Higham-Hall 5(4)" + "'", str70, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 5 + "'", int73 == 5);
    }

    @Test
    public void test15209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15209");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (-1.0d), (double) (short) 10, (int) (byte) 1);
        highamHall54Integrator4.setMaxGrowth((double) (-1));
        double double15 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) (short) -1, (double) (short) 1, (int) '4');
        double double21 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double22 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str23 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) 10);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
    }

    @Test
    public void test15210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15210");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double double5 = switchingFunctionsHandler0.getEventTime();
        double double6 = switchingFunctionsHandler0.getEventTime();
        boolean boolean7 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        boolean boolean14 = switchingFunctionsHandler11.stop();
        double[] doubleArray21 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        double double25 = switchingFunctionsHandler22.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler22.add(switchingFunction26, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler32.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler36.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler36.evaluateStep(stepInterpolator39);
        double[] doubleArray46 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler36.stepAccepted((double) (byte) 1, doubleArray46);
        boolean boolean48 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler22.reset((double) '4', doubleArray46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray21, doubleArray46);
        switchingFunctionsHandler11.stepAccepted(1.0d, doubleArray21);
        boolean boolean52 = switchingFunctionsHandler0.reset(0.0d, doubleArray21);
        boolean boolean53 = switchingFunctionsHandler0.stop();
        double double54 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray56 = null;
        switchingFunctionsHandler0.stepAccepted(17.78279410038923d, doubleArray56);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }

    @Test
    public void test15211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15211");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 0.0f, (double) (short) 10, (int) (short) 1);
        java.lang.String str11 = highamHall54Integrator4.getName();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        double double14 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.Class<?> wildcardClass15 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test15212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15212");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) '4', 97.0d, (int) '#');
        highamHall54Integrator4.setMinReduction(0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction23, (double) (byte) 10, 0.0d, 0);
        java.lang.String str28 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize(3.3635856610148585d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
    }

    @Test
    public void test15213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15213");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler22 = null;
        highamHall54Integrator21.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator21.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler25 = null;
        highamHall54Integrator21.setStepHandler(stepHandler25);
        double double27 = highamHall54Integrator21.getMaxStep();
        double double28 = highamHall54Integrator21.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator21.setStepHandler(stepHandler34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler41 = null;
        highamHall54Integrator40.setStepHandler(stepHandler41);
        double double43 = highamHall54Integrator40.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler44 = null;
        highamHall54Integrator40.setStepHandler(stepHandler44);
        double double46 = highamHall54Integrator40.getMaxStep();
        double double47 = highamHall54Integrator40.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator40.setStepHandler(stepHandler53);
        highamHall54Integrator21.setStepHandler(stepHandler53);
        highamHall54Integrator13.setStepHandler(stepHandler53);
        highamHall54Integrator4.setStepHandler(stepHandler53);
        java.lang.String str58 = highamHall54Integrator4.getName();
        java.lang.String str59 = highamHall54Integrator4.getName();
        double double60 = highamHall54Integrator4.getSafety();
        java.lang.String str61 = highamHall54Integrator4.getName();
        double double62 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety((double) 0);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Higham-Hall 5(4)" + "'", str58, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Higham-Hall 5(4)" + "'", str59, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.9d + "'", double60 == 0.9d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Higham-Hall 5(4)" + "'", str61, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
    }

    @Test
    public void test15214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15214");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, 31.144823004794873d, (double) (-1.0f), 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler11.evaluateStep(stepInterpolator14);
        double[] doubleArray21 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler11.stepAccepted((double) (byte) 1, doubleArray21);
        double[] doubleArray25 = null;
        double[] doubleArray32 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray25, doubleArray32);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) 10L, doubleArray21, doubleArray25);
        boolean boolean35 = switchingFunctionsHandler0.reset(100.0d, doubleArray21);
        boolean boolean36 = switchingFunctionsHandler0.isEmpty();
        boolean boolean37 = switchingFunctionsHandler0.isEmpty();
        boolean boolean38 = switchingFunctionsHandler0.stop();
        boolean boolean39 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = switchingFunctionsHandler0.evaluateStep(stepInterpolator40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test15215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15215");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        double double14 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction((double) (-1L));
        double double17 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        highamHall54Integrator4.setMinReduction(32.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.9d + "'", double17 == 0.9d);
    }

    @Test
    public void test15216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15216");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 3.0d, (double) 0L, 5.580754698496868d);
    }

    @Test
    public void test15217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15217");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (-1.0d), (double) (short) 10, (int) (byte) 1);
        highamHall54Integrator4.setMaxGrowth(0.0d);
        highamHall54Integrator4.setSafety((double) 1.0f);
        highamHall54Integrator4.setSafety(31.144823004794873d);
        highamHall54Integrator4.setSafety(31.622776601683793d);
        double double21 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction22, (double) 5, 97.0d, (int) '4');
        double double27 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 31.622776601683793d + "'", double27 == 31.622776601683793d);
    }

    @Test
    public void test15218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15218");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) '4', 9.848857801796104d, (int) (byte) 10);
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator4.getStepHandler();
        double double18 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
    }

    @Test
    public void test15219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15219");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (-1.0f), (double) '4', (int) (short) 100);
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        double double15 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator23.setMinReduction((double) 0.0f);
        java.lang.String str27 = highamHall54Integrator23.getName();
        double double28 = highamHall54Integrator23.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator33.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator33.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator33.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        stepHandler38.handleStep(stepInterpolator39, true);
        highamHall54Integrator23.setStepHandler(stepHandler38);
        highamHall54Integrator23.setMaxGrowth((double) (-1L));
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator23.getStepHandler();
        int int46 = highamHall54Integrator23.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator51.setSafety((double) '4');
        highamHall54Integrator51.setMaxGrowth(0.0d);
        double double56 = highamHall54Integrator51.getMinReduction();
        highamHall54Integrator51.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator51.getStepHandler();
        double double60 = highamHall54Integrator51.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator51.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler61);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        stepHandler61.handleStep(stepInterpolator63, false);
        highamHall54Integrator4.setStepHandler(stepHandler61);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNull(stepHandler16);
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.2d + "'", double56 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler61);
    }

    @Test
    public void test15220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15220");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double14 = highamHall54Integrator13.getCurrentStepStart();
        double double15 = highamHall54Integrator13.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator20.getStepHandler();
        double double22 = highamHall54Integrator20.getMinStep();
        double double23 = highamHall54Integrator20.getCurrentSignedStepsize();
        highamHall54Integrator20.setInitialStepSize(10.0d);
        double double26 = highamHall54Integrator20.getMinStep();
        double double27 = highamHall54Integrator20.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator32.getStepHandler();
        double double34 = highamHall54Integrator32.getMinStep();
        double double35 = highamHall54Integrator32.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator32.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        stepHandler36.handleStep(stepInterpolator37, false);
        highamHall54Integrator20.setStepHandler(stepHandler36);
        highamHall54Integrator13.setStepHandler(stepHandler36);
        stepHandler36.reset();
        highamHall54Integrator4.setStepHandler(stepHandler36);
        double double44 = highamHall54Integrator4.getMaxGrowth();
        double double45 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMaxGrowth(3.1622776601683795d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 100.0d + "'", double15 == 100.0d);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
    }

    @Test
    public void test15221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15221");
        double[] doubleArray10 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray13 = null;
        double[] doubleArray20 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray13, doubleArray20);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray10, doubleArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler23.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler27.evaluateStep(stepInterpolator30);
        double[] doubleArray37 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler27.stepAccepted((double) (byte) 1, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray37);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray10, doubleArray37);
        double double41 = highamHall54Integrator40.getMinStep();
        double double42 = highamHall54Integrator40.getMaxGrowth();
        double double43 = highamHall54Integrator40.getMaxStep();
        double double44 = highamHall54Integrator40.getCurrentSignedStepsize();
        java.lang.String str45 = highamHall54Integrator40.getName();
        java.lang.String str46 = highamHall54Integrator40.getName();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 100.0d + "'", double41 == 100.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 100.0d + "'", double43 == 100.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Higham-Hall 5(4)" + "'", str45, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Higham-Hall 5(4)" + "'", str46, "Higham-Hall 5(4)");
    }

    @Test
    public void test15222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15222");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) (short) 0, (double) (byte) 100, (double) 100L);
        double double5 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9d + "'", double5 == 0.9d);
    }

    @Test
    public void test15223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15223");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double27 = highamHall54Integrator4.getSafety();
        double double28 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator4.getStepHandler();
        boolean boolean30 = stepHandler29.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.9d + "'", double27 == 0.9d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test15224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15224");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler6.evaluateStep(stepInterpolator9);
        double[] doubleArray16 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler6.stepAccepted((double) (byte) 1, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray16);
        double[] doubleArray24 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        double double28 = switchingFunctionsHandler25.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler25.add(switchingFunction29, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler35.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler39.evaluateStep(stepInterpolator42);
        double[] doubleArray49 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler39.stepAccepted((double) (byte) 1, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray49);
        boolean boolean52 = switchingFunctionsHandler25.reset((double) '4', doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray24, doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (short) 1, doubleArray16, doubleArray24);
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator54.getStepHandler();
        double double56 = highamHall54Integrator54.getCurrentSignedStepsize();
        double double57 = highamHall54Integrator54.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler58 = highamHall54Integrator54.getStepHandler();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler58);
    }

    @Test
    public void test15225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15225");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 0, (double) (byte) 0, (double) (-1), (double) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (byte) 100, (double) '#', (int) '4');
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler10);
    }

    @Test
    public void test15226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15226");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, (double) 2, (double) (short) 1, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, 0.0d, 100.0d, (int) ' ');
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, 5.477225575051661d, (-0.0d), (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        switchingFunctionsHandler0.add(switchingFunction30, (-0.0d), 30.408967315912587d, (int) '4');
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test15227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15227");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMinReduction();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) 100.0f);
        double double14 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(0.7952707287670507d);
        double double17 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
    }

    @Test
    public void test15228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15228");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        double double9 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) (short) 0, (double) (short) 1, (double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator14.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler15);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction17, 0.9d, (double) '#', (int) (short) 0);
        double double22 = highamHall54Integrator4.getSafety();
        double double23 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str24 = highamHall54Integrator4.getName();
        double double25 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str26 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9d + "'", double22 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
    }

    @Test
    public void test15229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15229");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        double double39 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str40 = highamHall54Integrator4.getName();
        java.lang.String str41 = highamHall54Integrator4.getName();
        double double42 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator48.getStepHandler();
        highamHall54Integrator48.setInitialStepSize((double) 3);
        highamHall54Integrator48.setInitialStepSize((double) 'a');
        highamHall54Integrator48.setMaxGrowth((double) 0L);
        highamHall54Integrator48.setMaxGrowth((double) '#');
        double double58 = highamHall54Integrator48.getMinReduction();
        java.lang.String str59 = highamHall54Integrator48.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        highamHall54Integrator48.addSwitchingFunction(switchingFunction60, (double) '#', 31.622776601683793d, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        highamHall54Integrator48.addSwitchingFunction(switchingFunction65, 0.0d, 9.848857801796104d, 2);
        org.apache.commons.math.ode.StepHandler stepHandler70 = highamHall54Integrator48.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler70);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2d + "'", double58 == 0.2d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Higham-Hall 5(4)" + "'", str59, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler70);
    }

    @Test
    public void test15230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15230");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) ' ', (double) 0L, 0.0d);
        double double5 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler8);
    }

    @Test
    public void test15231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15231");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(31.144823004794873d, Double.NaN, 4.47213595499958d, 0.0d);
        highamHall54Integrator4.setMinReduction(5.0d);
    }

    @Test
    public void test15232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15232");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double25 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double26 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction27, (double) 10.0f, (double) 10.0f, 0);
        highamHall54Integrator4.setInitialStepSize(0.0d);
        java.lang.String str34 = highamHall54Integrator4.getName();
        int int35 = highamHall54Integrator4.getOrder();
        double double36 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.2d + "'", double26 == 0.2d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.9d + "'", double36 == 0.9d);
    }

    @Test
    public void test15233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15233");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, Double.NaN, (double) (-1), (double) 100.0f);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator9 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator9.getStepHandler();
        highamHall54Integrator9.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator9.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator18.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator18.getCurrentSignedStepsize();
        double double22 = highamHall54Integrator18.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator18.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        stepHandler28.handleStep(stepInterpolator30, true);
        highamHall54Integrator9.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        stepHandler28.handleStep(stepInterpolator34, true);
        highamHall54Integrator4.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = null;
        highamHall54Integrator42.setStepHandler(stepHandler43);
        double double45 = highamHall54Integrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler46 = null;
        highamHall54Integrator42.setStepHandler(stepHandler46);
        double double48 = highamHall54Integrator42.getMaxStep();
        double double49 = highamHall54Integrator42.getMinStep();
        double double50 = highamHall54Integrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator55.getStepHandler();
        highamHall54Integrator55.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator55.getStepHandler();
        boolean boolean60 = stepHandler59.requiresDenseOutput();
        highamHall54Integrator42.setStepHandler(stepHandler59);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        stepHandler59.handleStep(stepInterpolator62, true);
        stepHandler59.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        stepHandler59.handleStep(stepInterpolator66, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        stepHandler59.handleStep(stepInterpolator69, false);
        stepHandler59.reset();
        stepHandler59.reset();
        highamHall54Integrator4.setStepHandler(stepHandler59);
        highamHall54Integrator4.setMinReduction(100.0d);
        org.apache.commons.math.ode.StepHandler stepHandler77 = highamHall54Integrator4.getStepHandler();
        java.lang.String str78 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1.0d) + "'", double48 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Higham-Hall 5(4)" + "'", str78, "Higham-Hall 5(4)");
    }

    @Test
    public void test15234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15234");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler6.evaluateStep(stepInterpolator9);
        double[] doubleArray16 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler6.stepAccepted((double) (byte) 1, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray16);
        double[] doubleArray24 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        double double28 = switchingFunctionsHandler25.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler25.add(switchingFunction29, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler35.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler39.evaluateStep(stepInterpolator42);
        double[] doubleArray49 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler39.stepAccepted((double) (byte) 1, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray49);
        boolean boolean52 = switchingFunctionsHandler25.reset((double) '4', doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray24, doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (short) 1, doubleArray16, doubleArray24);
        double double55 = highamHall54Integrator54.getCurrentSignedStepsize();
        int int56 = highamHall54Integrator54.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        highamHall54Integrator54.addSwitchingFunction(switchingFunction57, (double) 1L, 0.0d, 1);
        highamHall54Integrator54.setMaxGrowth((double) 0L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5 + "'", int56 == 5);
    }

    @Test
    public void test15235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15235");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler14);
        java.lang.String str16 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator4.getStepHandler();
        int int18 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, 3.1622776601683795d, Double.NaN, (int) (byte) 10);
        highamHall54Integrator4.setSafety((double) (short) 10);
        highamHall54Integrator4.setMinReduction(26.8534961428265d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    }

    @Test
    public void test15236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15236");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 100L, (double) 10.0f, 0.9d);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        int int7 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) (-1), Double.NaN, (-1.0d));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = null;
        highamHall54Integrator17.setStepHandler(stepHandler18);
        double double20 = highamHall54Integrator17.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler21 = null;
        highamHall54Integrator17.setStepHandler(stepHandler21);
        double double23 = highamHall54Integrator17.getMaxStep();
        double double24 = highamHall54Integrator17.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator17.setStepHandler(stepHandler30);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        highamHall54Integrator17.addSwitchingFunction(switchingFunction32, (double) '4', 1.0d, (int) (short) -1);
        double double37 = highamHall54Integrator17.getMaxStep();
        java.lang.String str38 = highamHall54Integrator17.getName();
        double double39 = highamHall54Integrator17.getMaxGrowth();
        double double40 = highamHall54Integrator17.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator17.getStepHandler();
        boolean boolean42 = stepHandler41.requiresDenseOutput();
        boolean boolean43 = stepHandler41.requiresDenseOutput();
        highamHall54Integrator12.setStepHandler(stepHandler41);
        boolean boolean45 = stepHandler41.requiresDenseOutput();
        stepHandler41.reset();
        highamHall54Integrator4.setStepHandler(stepHandler41);
        stepHandler41.reset();
        stepHandler41.reset();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Higham-Hall 5(4)" + "'", str38, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test15237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15237");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (short) 1, 0.9d, (int) 'a');
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler14.evaluateStep(stepInterpolator15);
        double double17 = switchingFunctionsHandler14.getEventTime();
        boolean boolean18 = switchingFunctionsHandler14.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler14.add(switchingFunction19, (double) 1, (-1.0d), (int) (short) 1);
        double[] doubleArray35 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray38 = null;
        double[] doubleArray45 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray38, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray35, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler48.evaluateStep(stepInterpolator49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler52.evaluateStep(stepInterpolator53);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler52.evaluateStep(stepInterpolator55);
        double[] doubleArray62 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler52.stepAccepted((double) (byte) 1, doubleArray62);
        boolean boolean64 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray62);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray35, doubleArray62);
        boolean boolean66 = switchingFunctionsHandler14.reset(0.0d, doubleArray35);
        boolean boolean67 = switchingFunctionsHandler0.reset(0.0d, doubleArray35);
        boolean boolean68 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test15238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15238");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator21.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator29.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler33 = null;
        highamHall54Integrator29.setStepHandler(stepHandler33);
        double double35 = highamHall54Integrator29.getMaxStep();
        double double36 = highamHall54Integrator29.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler42);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler49 = null;
        highamHall54Integrator48.setStepHandler(stepHandler49);
        double double51 = highamHall54Integrator48.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler52 = null;
        highamHall54Integrator48.setStepHandler(stepHandler52);
        double double54 = highamHall54Integrator48.getMaxStep();
        double double55 = highamHall54Integrator48.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator60.getStepHandler();
        highamHall54Integrator48.setStepHandler(stepHandler61);
        highamHall54Integrator29.setStepHandler(stepHandler61);
        highamHall54Integrator21.setStepHandler(stepHandler61);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        stepHandler61.handleStep(stepInterpolator65, false);
        highamHall54Integrator4.setStepHandler(stepHandler61);
        double double69 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction70, (double) (short) 100, Double.NaN, 3);
        highamHall54Integrator4.setMinReduction((double) 1.0f);
        int int77 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1.0d) + "'", double54 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-1.0d) + "'", double69 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
    }

    @Test
    public void test15239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15239");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getMaxStep();
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) -1, (double) 1, (int) '4');
        highamHall54Integrator4.setMaxGrowth((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, 40.55100964572346d, 9.924141172814958d, (int) (byte) 100);
        highamHall54Integrator4.setMaxGrowth(9.848857801796104d);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 97.0d + "'", double6 == 97.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler15);
    }

    @Test
    public void test15240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15240");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        boolean boolean4 = switchingFunctionsHandler0.stop();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray15 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray18 = null;
        double[] doubleArray25 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray18, doubleArray25);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray15, doubleArray18);
        boolean boolean28 = switchingFunctionsHandler0.reset(0.9d, doubleArray15);
        boolean boolean29 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        switchingFunctionsHandler0.add(switchingFunction30, (double) (-1L), Double.NaN, (int) (byte) 0);
        double double35 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler0.add(switchingFunction36, (double) (short) 100, (double) (byte) 100, (int) (short) 1);
        boolean boolean41 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        switchingFunctionsHandler0.add(switchingFunction42, (double) 2, 10.0d, (int) (byte) 0);
        boolean boolean47 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test15241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15241");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler3.evaluateStep(stepInterpolator4);
        double double6 = switchingFunctionsHandler3.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler3.add(switchingFunction7, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler3.add(switchingFunction12, (double) (byte) 100, 10.0d, 2);
        boolean boolean17 = switchingFunctionsHandler3.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler21.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler25.evaluateStep(stepInterpolator28);
        double[] doubleArray35 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler25.stepAccepted((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler21.reset((double) (byte) 1, doubleArray35);
        double[] doubleArray43 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = switchingFunctionsHandler44.evaluateStep(stepInterpolator45);
        double double47 = switchingFunctionsHandler44.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler44.add(switchingFunction48, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler54.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler58.evaluateStep(stepInterpolator59);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = switchingFunctionsHandler58.evaluateStep(stepInterpolator61);
        double[] doubleArray68 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler58.stepAccepted((double) (byte) 1, doubleArray68);
        boolean boolean70 = switchingFunctionsHandler54.reset((double) (byte) 1, doubleArray68);
        boolean boolean71 = switchingFunctionsHandler44.reset((double) '4', doubleArray68);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray43, doubleArray68);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (short) 1, doubleArray35, doubleArray43);
        boolean boolean74 = switchingFunctionsHandler3.reset((double) 100, doubleArray43);
        boolean boolean75 = switchingFunctionsHandler0.reset(0.2d, doubleArray43);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler0.evaluateStep(stepInterpolator76);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        switchingFunctionsHandler0.add(switchingFunction78, (double) (byte) -1, (double) ' ', 0);
        double double83 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
    }

    @Test
    public void test15242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15242");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double[] doubleArray8 = null;
        double[] doubleArray15 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray8, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler0.reset(100.0d, doubleArray8);
        double[] doubleArray24 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        double double28 = switchingFunctionsHandler25.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler25.add(switchingFunction29, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler35.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler39.evaluateStep(stepInterpolator42);
        double[] doubleArray49 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler39.stepAccepted((double) (byte) 1, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray49);
        boolean boolean52 = switchingFunctionsHandler25.reset((double) '4', doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray24, doubleArray49);
        boolean boolean54 = switchingFunctionsHandler0.reset(0.0d, doubleArray24);
        boolean boolean55 = switchingFunctionsHandler0.isEmpty();
        boolean boolean56 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler0.evaluateStep(stepInterpolator57);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        switchingFunctionsHandler0.add(switchingFunction59, (-1.0d), 31.622776601683793d, (int) 'a');
        boolean boolean64 = switchingFunctionsHandler0.isEmpty();
        boolean boolean65 = switchingFunctionsHandler0.isEmpty();
        boolean boolean66 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test15243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15243");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setInitialStepSize((double) 100);
        java.lang.String str10 = highamHall54Integrator4.getName();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth(3.1622776601683795d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test15244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15244");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, 0.0d, 0.2d, (double) (short) 10);
        double double5 = highamHall54Integrator4.getMinStep();
        double double6 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(100.0d);
        highamHall54Integrator4.setMaxGrowth(31.144823004794873d);
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = null;
        highamHall54Integrator17.setStepHandler(stepHandler18);
        double double20 = highamHall54Integrator17.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler21 = null;
        highamHall54Integrator17.setStepHandler(stepHandler21);
        double double23 = highamHall54Integrator17.getMaxStep();
        double double24 = highamHall54Integrator17.getMinStep();
        double double25 = highamHall54Integrator17.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator30.getStepHandler();
        highamHall54Integrator30.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator30.getStepHandler();
        boolean boolean35 = stepHandler34.requiresDenseOutput();
        highamHall54Integrator17.setStepHandler(stepHandler34);
        double double37 = highamHall54Integrator17.getCurrentSignedStepsize();
        double double38 = highamHall54Integrator17.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler39);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.9d + "'", double38 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler39);
    }

    @Test
    public void test15245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15245");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(9.848857801796104d);
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertNotNull(stepHandler21);
    }

    @Test
    public void test15246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15246");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        double double14 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction((double) (-1L));
        double double17 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setSafety(0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertNull(stepHandler18);
    }

    @Test
    public void test15247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15247");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        highamHall54Integrator4.setInitialStepSize((double) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction30, 0.9d, 3.0d, (int) '#');
        double double35 = highamHall54Integrator4.getMinStep();
        double double36 = highamHall54Integrator4.getCurrentStepStart();
        int int37 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 5 + "'", int37 == 5);
        org.junit.Assert.assertNotNull(stepHandler38);
    }

    @Test
    public void test15248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15248");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (short) 1, 0.9d, (int) 'a');
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler14.evaluateStep(stepInterpolator15);
        double double17 = switchingFunctionsHandler14.getEventTime();
        boolean boolean18 = switchingFunctionsHandler14.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler14.add(switchingFunction19, (double) 1, (-1.0d), (int) (short) 1);
        double[] doubleArray35 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray38 = null;
        double[] doubleArray45 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator46 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray38, doubleArray45);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray35, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler48.evaluateStep(stepInterpolator49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler52.evaluateStep(stepInterpolator53);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler52.evaluateStep(stepInterpolator55);
        double[] doubleArray62 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler52.stepAccepted((double) (byte) 1, doubleArray62);
        boolean boolean64 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray62);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator65 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray35, doubleArray62);
        boolean boolean66 = switchingFunctionsHandler14.reset(0.0d, doubleArray35);
        boolean boolean67 = switchingFunctionsHandler0.reset(0.0d, doubleArray35);
        boolean boolean68 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        switchingFunctionsHandler0.add(switchingFunction69, (double) 0L, (-1.0d), 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test15249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15249");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 5);
        int int12 = highamHall54Integrator4.getOrder();
        double double13 = highamHall54Integrator4.getMaxStep();
        java.lang.String str14 = highamHall54Integrator4.getName();
        double double15 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
    }

    @Test
    public void test15250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15250");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        java.lang.String str26 = highamHall54Integrator4.getName();
        double double27 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMaxGrowth(17.78279410038923d);
        double double30 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = null;
        highamHall54Integrator35.setStepHandler(stepHandler36);
        double double38 = highamHall54Integrator35.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler39 = null;
        highamHall54Integrator35.setStepHandler(stepHandler39);
        double double41 = highamHall54Integrator35.getMaxStep();
        double double42 = highamHall54Integrator35.getMinStep();
        double double43 = highamHall54Integrator35.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator48.getStepHandler();
        highamHall54Integrator48.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator48.getStepHandler();
        boolean boolean53 = stepHandler52.requiresDenseOutput();
        highamHall54Integrator35.setStepHandler(stepHandler52);
        double double55 = highamHall54Integrator35.getSafety();
        java.lang.String str56 = highamHall54Integrator35.getName();
        highamHall54Integrator35.setSafety((double) '#');
        java.lang.String str59 = highamHall54Integrator35.getName();
        highamHall54Integrator35.setMinReduction((double) (-1L));
        double double62 = highamHall54Integrator35.getMinStep();
        double double63 = highamHall54Integrator35.getMaxStep();
        double double64 = highamHall54Integrator35.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) 0, (double) 1.0f, (double) (short) 100);
        highamHall54Integrator69.setMaxGrowth((double) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler72 = highamHall54Integrator69.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double78 = highamHall54Integrator77.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction79 = null;
        highamHall54Integrator77.addSwitchingFunction(switchingFunction79, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double84 = highamHall54Integrator77.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction85 = null;
        highamHall54Integrator77.addSwitchingFunction(switchingFunction85, (double) 0, 0.9d, (int) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler90 = highamHall54Integrator77.getStepHandler();
        highamHall54Integrator69.setStepHandler(stepHandler90);
        highamHall54Integrator35.setStepHandler(stepHandler90);
        highamHall54Integrator4.setStepHandler(stepHandler90);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator94 = null;
        stepHandler90.handleStep(stepInterpolator94, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator97 = null;
        stepHandler90.handleStep(stepInterpolator97, true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1.0d) + "'", double41 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.9d + "'", double55 == 0.9d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Higham-Hall 5(4)" + "'", str56, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Higham-Hall 5(4)" + "'", str59, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 35.0d + "'", double64 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 10.0d + "'", double84 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler90);
    }

    @Test
    public void test15251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15251");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str6 = highamHall54Integrator4.getName();
        java.lang.String str7 = highamHall54Integrator4.getName();
        double double8 = highamHall54Integrator4.getSafety();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str10 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.9d + "'", double8 == 0.9d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 3.1622776601683795d + "'", double9 == 3.1622776601683795d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
    }

    @Test
    public void test15252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15252");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler10 = null;
        highamHall54Integrator4.setStepHandler(stepHandler10);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator4.getStepHandler();
        double double14 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, 9.924141172814958d, (double) (byte) 1, (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNull(stepHandler12);
        org.junit.Assert.assertNull(stepHandler13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
        org.junit.Assert.assertNull(stepHandler20);
    }

    @Test
    public void test15253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15253");
        double[] doubleArray8 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray8, doubleArray11);
        highamHall54Integrator20.setMaxGrowth((double) 1.0f);
        double double23 = highamHall54Integrator20.getMinReduction();
        double double24 = highamHall54Integrator20.getCurrentStepStart();
        highamHall54Integrator20.setMaxGrowth((double) 2);
        highamHall54Integrator20.setMinReduction(0.0d);
        double double29 = highamHall54Integrator20.getCurrentStepStart();
        java.lang.String str30 = highamHall54Integrator20.getName();
        double double31 = highamHall54Integrator20.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.2d + "'", double23 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test15254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15254");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getSafety();
        java.lang.String str27 = highamHall54Integrator4.getName();
        double double28 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator33.setMinReduction(10.0d);
        double double37 = highamHall54Integrator33.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        highamHall54Integrator33.addSwitchingFunction(switchingFunction38, (double) 1, 0.0d, (int) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler43);
        double double45 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str46 = highamHall54Integrator4.getName();
        double double47 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.9d + "'", double26 == 0.9d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Higham-Hall 5(4)" + "'", str46, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
    }

    @Test
    public void test15255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15255");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMinReduction();
        double double10 = highamHall54Integrator4.getMinReduction();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = null;
        highamHall54Integrator16.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator16.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler20 = null;
        highamHall54Integrator16.setStepHandler(stepHandler20);
        double double22 = highamHall54Integrator16.getMaxStep();
        double double23 = highamHall54Integrator16.getMinStep();
        double double24 = highamHall54Integrator16.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator29.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator29.getCurrentSignedStepsize();
        double double33 = highamHall54Integrator29.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator38.getStepHandler();
        highamHall54Integrator29.setStepHandler(stepHandler39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        stepHandler39.handleStep(stepInterpolator41, true);
        highamHall54Integrator16.setStepHandler(stepHandler39);
        stepHandler39.reset();
        boolean boolean46 = stepHandler39.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler39);
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction49, 32.0d, (double) (-1.0f), (int) (short) -1);
        java.lang.String str54 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Higham-Hall 5(4)" + "'", str54, "Higham-Hall 5(4)");
    }

    @Test
    public void test15256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15256");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int14 = highamHall54Integrator4.getOrder();
        int int15 = highamHall54Integrator4.getOrder();
        double double16 = highamHall54Integrator4.getMaxGrowth();
        double double17 = highamHall54Integrator4.getSafety();
        int int18 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.9d + "'", double17 == 0.9d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertNotNull(stepHandler19);
    }

    @Test
    public void test15257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15257");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler0.evaluateStep(stepInterpolator5);
        double[] doubleArray10 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean12 = switchingFunctionsHandler11.isEmpty();
        double[] doubleArray22 = new double[] { 1, (short) 100, 1.0f, 10.0d, (byte) 0, (short) 100 };
        double[] doubleArray33 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray36 = null;
        double[] doubleArray43 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray36, doubleArray43);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray33, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler46.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler50.evaluateStep(stepInterpolator53);
        double[] doubleArray60 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler50.stepAccepted((double) (byte) 1, doubleArray60);
        boolean boolean62 = switchingFunctionsHandler46.reset((double) (byte) 1, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator63 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray33, doubleArray60);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (byte) 1, doubleArray22, doubleArray33);
        switchingFunctionsHandler11.stepAccepted(Double.NaN, doubleArray22);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', 3.0d, doubleArray10, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 100, doubleArray10);
        boolean boolean68 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler0.evaluateStep(stepInterpolator69);
        boolean boolean71 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        switchingFunctionsHandler0.add(switchingFunction72, 0.0d, (double) 1.0f, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test15258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15258");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) 0, (double) 1L, (int) '4');
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator16.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator24.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler28);
        boolean boolean30 = stepHandler28.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler28);
        double double32 = highamHall54Integrator4.getSafety();
        double double33 = highamHall54Integrator4.getMaxStep();
        double double34 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9d + "'", double32 == 0.9d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 97.0d + "'", double33 == 97.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test15259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15259");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        java.lang.String str5 = highamHall54Integrator4.getName();
        double double6 = highamHall54Integrator4.getMaxStep();
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = null;
        highamHall54Integrator12.setStepHandler(stepHandler13);
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator12.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator12.getMinReduction();
        int int19 = highamHall54Integrator12.getOrder();
        highamHall54Integrator12.setInitialStepSize((double) '4');
        highamHall54Integrator12.setInitialStepSize((double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        highamHall54Integrator12.addSwitchingFunction(switchingFunction24, (double) 0.0f, (double) (byte) 10, (int) '#');
        highamHall54Integrator12.setInitialStepSize((double) (byte) 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = null;
        highamHall54Integrator35.setStepHandler(stepHandler36);
        double double38 = highamHall54Integrator35.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler39 = null;
        highamHall54Integrator35.setStepHandler(stepHandler39);
        double double41 = highamHall54Integrator35.getMaxStep();
        double double42 = highamHall54Integrator35.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator47.getStepHandler();
        highamHall54Integrator35.setStepHandler(stepHandler48);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        highamHall54Integrator35.addSwitchingFunction(switchingFunction50, (double) '4', 1.0d, (int) (short) -1);
        double double55 = highamHall54Integrator35.getMaxStep();
        double double56 = highamHall54Integrator35.getSafety();
        highamHall54Integrator35.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler59);
        highamHall54Integrator4.setStepHandler(stepHandler59);
        int int62 = highamHall54Integrator4.getOrder();
        double double63 = highamHall54Integrator4.getMinReduction();
        double double64 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction65, (double) ' ', (double) 10.0f, (int) (byte) 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 97.0d + "'", double6 == 97.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1.0d) + "'", double41 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1.0d) + "'", double55 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.9d + "'", double56 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 5 + "'", int62 == 5);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.2d + "'", double63 == 0.2d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.2d + "'", double64 == 0.2d);
    }

    @Test
    public void test15260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15260");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, 1.0d, 0.0d, (int) (short) -1);
        highamHall54Integrator4.setMaxGrowth((double) (byte) 10);
        double double22 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
    }

    @Test
    public void test15261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15261");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(1.0d);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 10);
        int int31 = highamHall54Integrator4.getOrder();
        double double32 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        double double35 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety((double) (short) 10);
        double double38 = highamHall54Integrator4.getMaxGrowth();
        double double39 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
    }

    @Test
    public void test15262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15262");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        java.lang.String str8 = highamHall54Integrator4.getName();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 10, (double) (short) 0, 0.0d, (double) 3);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator15.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        stepHandler16.handleStep(stepInterpolator17, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        stepHandler16.handleStep(stepInterpolator20, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        stepHandler16.handleStep(stepInterpolator23, true);
        highamHall54Integrator4.setStepHandler(stepHandler16);
        double double27 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test15263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15263");
        double[] doubleArray10 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray13 = null;
        double[] doubleArray20 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray13, doubleArray20);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray10, doubleArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler23.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler27.evaluateStep(stepInterpolator30);
        double[] doubleArray37 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler27.stepAccepted((double) (byte) 1, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray37);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray10, doubleArray37);
        double double41 = highamHall54Integrator40.getMinStep();
        double double42 = highamHall54Integrator40.getMaxGrowth();
        highamHall54Integrator40.setMinReduction((double) (short) -1);
        highamHall54Integrator40.setSafety(10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler47 = highamHall54Integrator40.getStepHandler();
        double double48 = highamHall54Integrator40.getCurrentSignedStepsize();
        double double49 = highamHall54Integrator40.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        highamHall54Integrator40.addSwitchingFunction(switchingFunction50, (double) (-1L), (double) (byte) 10, (int) (byte) -1);
        double double55 = highamHall54Integrator40.getMaxStep();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 100.0d + "'", double41 == 100.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 100.0d + "'", double48 == 100.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 100.0d + "'", double55 == 100.0d);
    }

    @Test
    public void test15264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15264");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', (double) 100L, (double) (byte) 10, Double.NaN);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test15265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15265");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(9.924141172814958d, 10.0d, 0.0d, (double) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, 32.0d, 97.0d, (int) (short) 1);
        highamHall54Integrator4.setMinReduction(3.1622776601683795d);
    }

    @Test
    public void test15266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15266");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(7.211102550927978d, (double) 10, 22.22397209204091d, 97.0d);
    }

    @Test
    public void test15267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15267");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        java.lang.String str11 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = null;
        highamHall54Integrator16.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator16.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler20 = null;
        highamHall54Integrator16.setStepHandler(stepHandler20);
        double double22 = highamHall54Integrator16.getMaxStep();
        double double23 = highamHall54Integrator16.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler29);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        stepHandler29.handleStep(stepInterpolator31, true);
        highamHall54Integrator4.setStepHandler(stepHandler29);
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator4.getStepHandler();
        double double36 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMinReduction(2.0d);
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator4.getStepHandler();
        double double40 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double41 = highamHall54Integrator4.getMinStep();
        double double42 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 10.0d + "'", double41 == 10.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test15268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15268");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 5);
        int int12 = highamHall54Integrator4.getOrder();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction(0.4472135954999579d);
        highamHall54Integrator4.setMaxGrowth(97.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator23.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator31.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler35);
        int int37 = highamHall54Integrator23.getOrder();
        java.lang.String str38 = highamHall54Integrator23.getName();
        java.lang.String str39 = highamHall54Integrator23.getName();
        double double40 = highamHall54Integrator23.getCurrentStepStart();
        double double41 = highamHall54Integrator23.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator23.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler42);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 5 + "'", int37 == 5);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Higham-Hall 5(4)" + "'", str38, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(stepHandler42);
    }

    @Test
    public void test15269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15269");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double double15 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, (double) '4', (double) (byte) -1, (int) (byte) 1);
        boolean boolean21 = switchingFunctionsHandler0.stop();
        double double22 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, 0.7952707287670507d, 2.449489742783178d, 100);
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        boolean boolean29 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        switchingFunctionsHandler0.add(switchingFunction30, (double) 10, 0.2d, (int) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test15270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15270");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        highamHall54Integrator4.setSafety(97.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler37 = null;
        highamHall54Integrator36.setStepHandler(stepHandler37);
        double double39 = highamHall54Integrator36.getCurrentSignedStepsize();
        double double40 = highamHall54Integrator36.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        stepHandler46.handleStep(stepInterpolator48, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        stepHandler46.handleStep(stepInterpolator51, false);
        boolean boolean54 = stepHandler46.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler46);
        java.lang.String str56 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Higham-Hall 5(4)" + "'", str56, "Higham-Hall 5(4)");
    }

    @Test
    public void test15271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15271");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 10);
        double double10 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMinReduction((double) ' ');
        double double13 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setMinReduction(0.2d);
        double double16 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 32.0d + "'", double13 == 32.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
    }

    @Test
    public void test15272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15272");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) (short) 10, (double) (byte) 0, (double) (byte) -1);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double6 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.9d + "'", double6 == 0.9d);
    }

    @Test
    public void test15273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15273");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler3.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler3.evaluateStep(stepInterpolator6);
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        boolean boolean20 = switchingFunctionsHandler3.reset(100.0d, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler22.evaluateStep(stepInterpolator25);
        double[] doubleArray30 = null;
        double[] doubleArray37 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray30, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler22.reset(100.0d, doubleArray30);
        double[] doubleArray46 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler47.evaluateStep(stepInterpolator48);
        double double50 = switchingFunctionsHandler47.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        switchingFunctionsHandler47.add(switchingFunction51, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler57.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler61.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler61.evaluateStep(stepInterpolator64);
        double[] doubleArray71 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler61.stepAccepted((double) (byte) 1, doubleArray71);
        boolean boolean73 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray71);
        boolean boolean74 = switchingFunctionsHandler47.reset((double) '4', doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray46, doubleArray71);
        boolean boolean76 = switchingFunctionsHandler22.reset(0.0d, doubleArray46);
        switchingFunctionsHandler3.stepAccepted((double) 100L, doubleArray46);
        boolean boolean78 = switchingFunctionsHandler0.reset((double) ' ', doubleArray46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        boolean boolean80 = switchingFunctionsHandler0.evaluateStep(stepInterpolator79);
        double double81 = switchingFunctionsHandler0.getEventTime();
        boolean boolean82 = switchingFunctionsHandler0.isEmpty();
        double double83 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
    }

    @Test
    public void test15274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15274");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        boolean boolean15 = stepHandler14.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        stepHandler14.handleStep(stepInterpolator16, false);
        highamHall54Integrator4.setStepHandler(stepHandler14);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction20, (double) (short) 100, (double) 0.0f, (int) '#');
        double double25 = highamHall54Integrator4.getCurrentStepStart();
        double double26 = highamHall54Integrator4.getCurrentStepStart();
        double double27 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.9d + "'", double27 == 0.9d);
    }

    @Test
    public void test15275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15275");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getMinStep();
        int int12 = highamHall54Integrator4.getOrder();
        java.lang.String str13 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth(32.0d);
        double double16 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction17, (double) (-1L), 2.1213203435596424d, (int) (short) 0);
        double double22 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
    }

    @Test
    public void test15276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15276");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        double double14 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction((double) (-1L));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler22 = null;
        highamHall54Integrator21.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator21.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler25 = null;
        highamHall54Integrator21.setStepHandler(stepHandler25);
        double double27 = highamHall54Integrator21.getMaxStep();
        double double28 = highamHall54Integrator21.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator21.setStepHandler(stepHandler34);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        highamHall54Integrator21.addSwitchingFunction(switchingFunction36, (double) '4', 1.0d, (int) (short) -1);
        double double41 = highamHall54Integrator21.getMaxStep();
        double double42 = highamHall54Integrator21.getSafety();
        highamHall54Integrator21.setInitialStepSize(0.0d);
        double double45 = highamHall54Integrator21.getMinStep();
        highamHall54Integrator21.setMaxGrowth((double) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler48);
        boolean boolean50 = stepHandler48.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1.0d) + "'", double41 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.9d + "'", double42 == 0.9d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test15277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15277");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int8 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator14.getStepHandler();
        double double16 = highamHall54Integrator14.getMinStep();
        double double17 = highamHall54Integrator14.getCurrentSignedStepsize();
        highamHall54Integrator14.setInitialStepSize(10.0d);
        double double20 = highamHall54Integrator14.getMinStep();
        double double21 = highamHall54Integrator14.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator14.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler22);
        highamHall54Integrator4.setMinReduction(15.414295476925576d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(stepHandler22);
    }

    @Test
    public void test15278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15278");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) '4', (double) 10.0f, 1.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator9 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator9.getStepHandler();
        highamHall54Integrator9.setMinReduction(10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator9.getStepHandler();
        boolean boolean14 = stepHandler13.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler13);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        double double18 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double19 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction20, (double) 10, 17.78279410038923d, (int) (byte) 0);
        highamHall54Integrator4.setMinReduction(52.0d);
        double double27 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, 17.752843424574987d, (-1.0d), (int) '#');
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 22.80350850198276d + "'", double18 == 22.80350850198276d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test15279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15279");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        java.lang.String str26 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        java.lang.String str28 = highamHall54Integrator4.getName();
        double double29 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(9.848857801796104d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler37 = null;
        highamHall54Integrator36.setStepHandler(stepHandler37);
        double double39 = highamHall54Integrator36.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler40 = null;
        highamHall54Integrator36.setStepHandler(stepHandler40);
        double double42 = highamHall54Integrator36.getMaxStep();
        double double43 = highamHall54Integrator36.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator48 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator48.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler49);
        double double51 = highamHall54Integrator36.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator56.setSafety((double) '4');
        highamHall54Integrator56.setMaxGrowth(0.0d);
        double double61 = highamHall54Integrator56.getMinReduction();
        highamHall54Integrator56.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator56.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler64);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator70 = new org.apache.commons.math.ode.HighamHall54Integrator(31.144823004794873d, (double) 1, (double) (short) 100, 10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler71 = highamHall54Integrator70.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler71);
        highamHall54Integrator4.setStepHandler(stepHandler71);
        double double74 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety(0.0d);
        double double77 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1.0d) + "'", double42 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2d + "'", double61 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertNotNull(stepHandler71);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double77));
    }

    @Test
    public void test15280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15280");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMinReduction();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) 100.0f);
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety(5.477225575051661d);
        double double17 = highamHall54Integrator4.getSafety();
        double double18 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setSafety((double) 10.0f);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 5.477225575051661d + "'", double17 == 5.477225575051661d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
    }

    @Test
    public void test15281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15281");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, 10.0d, (double) (-1), (double) 'a');
        double double5 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMaxGrowth(8.917795292374965d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }

    @Test
    public void test15282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15282");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        boolean boolean4 = switchingFunctionsHandler0.stop();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) (byte) 100, (double) 5, (-1));
        double double11 = switchingFunctionsHandler0.getEventTime();
        boolean boolean12 = switchingFunctionsHandler0.stop();
        boolean boolean13 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler15.evaluateStep(stepInterpolator16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler19.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler19.evaluateStep(stepInterpolator22);
        double[] doubleArray29 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler19.stepAccepted((double) (byte) 1, doubleArray29);
        boolean boolean31 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray29);
        double double32 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray36 = null;
        double[] doubleArray43 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray36, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler15.reset((double) 10.0f, doubleArray43);
        boolean boolean46 = switchingFunctionsHandler15.isEmpty();
        double double47 = switchingFunctionsHandler15.getEventTime();
        double double48 = switchingFunctionsHandler15.getEventTime();
        boolean boolean49 = switchingFunctionsHandler15.isEmpty();
        double[] doubleArray61 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray64 = null;
        double[] doubleArray71 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray64, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray61, doubleArray64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator75 = null;
        boolean boolean76 = switchingFunctionsHandler74.evaluateStep(stepInterpolator75);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler78 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        boolean boolean80 = switchingFunctionsHandler78.evaluateStep(stepInterpolator79);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator81 = null;
        boolean boolean82 = switchingFunctionsHandler78.evaluateStep(stepInterpolator81);
        double[] doubleArray88 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler78.stepAccepted((double) (byte) 1, doubleArray88);
        boolean boolean90 = switchingFunctionsHandler74.reset((double) (byte) 1, doubleArray88);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray61, doubleArray88);
        boolean boolean92 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray88);
        boolean boolean93 = switchingFunctionsHandler0.reset((-0.0d), doubleArray88);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test15283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15283");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray9 = null;
        double[] doubleArray16 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray9, doubleArray16);
        switchingFunctionsHandler5.stepAccepted((double) 10L, doubleArray9);
        boolean boolean19 = switchingFunctionsHandler5.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler5.add(switchingFunction20, 0.2d, (double) 1, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler26.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler26.evaluateStep(stepInterpolator29);
        double[] doubleArray36 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler26.stepAccepted((double) (byte) 1, doubleArray36);
        double[] doubleArray44 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler45.evaluateStep(stepInterpolator46);
        double double48 = switchingFunctionsHandler45.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler45.add(switchingFunction49, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler55.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler59.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler59.evaluateStep(stepInterpolator62);
        double[] doubleArray69 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler59.stepAccepted((double) (byte) 1, doubleArray69);
        boolean boolean71 = switchingFunctionsHandler55.reset((double) (byte) 1, doubleArray69);
        boolean boolean72 = switchingFunctionsHandler45.reset((double) '4', doubleArray69);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray44, doubleArray69);
        boolean boolean74 = switchingFunctionsHandler26.reset((double) (byte) 0, doubleArray69);
        boolean boolean75 = switchingFunctionsHandler5.reset((double) 2, doubleArray69);
        boolean boolean76 = switchingFunctionsHandler0.reset((-1.0d), doubleArray69);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator77 = null;
        boolean boolean78 = switchingFunctionsHandler0.evaluateStep(stepInterpolator77);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        boolean boolean80 = switchingFunctionsHandler0.evaluateStep(stepInterpolator79);
        boolean boolean81 = switchingFunctionsHandler0.isEmpty();
        double double82 = switchingFunctionsHandler0.getEventTime();
        boolean boolean83 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test15284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15284");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) '4', 97.0d, (int) '#');
        java.lang.String str21 = highamHall54Integrator4.getName();
        java.lang.String str22 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMinReduction((double) '#');
        double double25 = highamHall54Integrator4.getMinStep();
        double double26 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 35.0d + "'", double26 == 35.0d);
    }

    @Test
    public void test15285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15285");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler9.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler13.evaluateStep(stepInterpolator14);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler13.evaluateStep(stepInterpolator16);
        double[] doubleArray23 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler13.stepAccepted((double) (byte) 1, doubleArray23);
        boolean boolean25 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray23);
        boolean boolean26 = switchingFunctionsHandler9.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler28.evaluateStep(stepInterpolator29);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler28.add(switchingFunction31, 0.0d, (double) (-1.0f), (int) (byte) 1);
        double double36 = switchingFunctionsHandler28.getEventTime();
        boolean boolean37 = switchingFunctionsHandler28.isEmpty();
        boolean boolean38 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray42 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler43.evaluateStep(stepInterpolator44);
        double double46 = switchingFunctionsHandler43.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        switchingFunctionsHandler43.add(switchingFunction47, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = switchingFunctionsHandler53.evaluateStep(stepInterpolator54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler57.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler57.evaluateStep(stepInterpolator60);
        double[] doubleArray67 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler57.stepAccepted((double) (byte) 1, doubleArray67);
        boolean boolean69 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray67);
        boolean boolean70 = switchingFunctionsHandler43.reset((double) '4', doubleArray67);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator71 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (-1), doubleArray42, doubleArray67);
        boolean boolean72 = switchingFunctionsHandler28.reset(0.2d, doubleArray67);
        switchingFunctionsHandler9.stepAccepted(9.848857801796104d, doubleArray67);
        switchingFunctionsHandler0.stepAccepted((double) 100L, doubleArray67);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction75 = null;
        switchingFunctionsHandler0.add(switchingFunction75, 1.4142135623730951d, (double) (short) 1, (int) '4');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test15286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15286");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        double double28 = highamHall54Integrator4.getMaxStep();
        double double29 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str30 = highamHall54Integrator4.getName();
        double double31 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator4.getStepHandler();
        double double33 = highamHall54Integrator4.getMaxGrowth();
        double double34 = highamHall54Integrator4.getSafety();
        double double35 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth((double) (short) 10);
        java.lang.Class<?> wildcardClass38 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.9d + "'", double34 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test15287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15287");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        highamHall54Integrator4.setMaxGrowth((double) (byte) -1);
        double double7 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) 0, (double) 2, (int) (short) 100);
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int14 = highamHall54Integrator4.getOrder();
        java.lang.String str15 = highamHall54Integrator4.getName();
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double17 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator4.getStepHandler();
        stepHandler18.reset();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 100.0d + "'", double7 == 100.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 100.0d + "'", double16 == 100.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler18);
    }

    @Test
    public void test15288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15288");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) 1L);
        double double12 = highamHall54Integrator4.getSafety();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, 1.0d, 52.0d, 2);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.9d + "'", double12 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test15289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15289");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) 1.0f, (double) 100L, 0);
        highamHall54Integrator4.setSafety(0.0d);
        double double18 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction((double) (-1));
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator4.getStepHandler();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass22 = stepHandler21.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertNull(stepHandler21);
    }

    @Test
    public void test15290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15290");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setSafety((double) 1);
        highamHall54Integrator4.setMinReduction(0.2d);
        double double24 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction25, 32.0d, 0.2d, (int) (byte) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
    }

    @Test
    public void test15291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15291");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(1.0d);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 10);
        int int31 = highamHall54Integrator4.getOrder();
        int int32 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler38 = null;
        highamHall54Integrator37.setStepHandler(stepHandler38);
        double double40 = highamHall54Integrator37.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler41 = null;
        highamHall54Integrator37.setStepHandler(stepHandler41);
        double double43 = highamHall54Integrator37.getMaxStep();
        double double44 = highamHall54Integrator37.getMinStep();
        double double45 = highamHall54Integrator37.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator50.getStepHandler();
        highamHall54Integrator50.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator50.getStepHandler();
        boolean boolean55 = stepHandler54.requiresDenseOutput();
        highamHall54Integrator37.setStepHandler(stepHandler54);
        double double57 = highamHall54Integrator37.getSafety();
        java.lang.String str58 = highamHall54Integrator37.getName();
        highamHall54Integrator37.setSafety((double) '#');
        java.lang.String str61 = highamHall54Integrator37.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.2d, (double) (-1L), (double) (byte) -1);
        double double67 = highamHall54Integrator66.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler68 = highamHall54Integrator66.getStepHandler();
        highamHall54Integrator37.setStepHandler(stepHandler68);
        highamHall54Integrator4.setStepHandler(stepHandler68);
        double double71 = highamHall54Integrator4.getCurrentStepStart();
        double double72 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1.0d) + "'", double43 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.9d + "'", double57 == 0.9d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Higham-Hall 5(4)" + "'", str58, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Higham-Hall 5(4)" + "'", str61, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
    }

    @Test
    public void test15292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15292");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, 2.514866859365871d, 2.0d, (double) (byte) 1);
        highamHall54Integrator4.setInitialStepSize((double) (byte) 1);
    }

    @Test
    public void test15293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15293");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler10.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler10.evaluateStep(stepInterpolator13);
        double[] doubleArray20 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler10.stepAccepted((double) (byte) 1, doubleArray20);
        boolean boolean22 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray28 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler29.evaluateStep(stepInterpolator30);
        double double32 = switchingFunctionsHandler29.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler29.add(switchingFunction33, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler43.evaluateStep(stepInterpolator44);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler43.evaluateStep(stepInterpolator46);
        double[] doubleArray53 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler43.stepAccepted((double) (byte) 1, doubleArray53);
        boolean boolean55 = switchingFunctionsHandler39.reset((double) (byte) 1, doubleArray53);
        boolean boolean56 = switchingFunctionsHandler29.reset((double) '4', doubleArray53);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray28, doubleArray53);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (short) 1, doubleArray20, doubleArray28);
        double[] doubleArray59 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 100L, doubleArray20, doubleArray59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler61.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler61.evaluateStep(stepInterpolator64);
        double[] doubleArray71 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler61.stepAccepted((double) (byte) 1, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator(52.0d, (double) 10, doubleArray59, doubleArray71);
        double double74 = highamHall54Integrator73.getMinStep();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 52.0d + "'", double74 == 52.0d);
    }

    @Test
    public void test15294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15294");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler2.evaluateStep(stepInterpolator5);
        double[] doubleArray12 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler2.stepAccepted((double) (byte) 1, doubleArray12);
        double[] doubleArray16 = null;
        double[] doubleArray23 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray16, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) 10L, doubleArray12, doubleArray16);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator30 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator30.getStepHandler();
        double double32 = highamHall54Integrator30.getMinStep();
        double double33 = highamHall54Integrator30.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator30.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        stepHandler34.handleStep(stepInterpolator35, false);
        boolean boolean38 = stepHandler34.requiresDenseOutput();
        highamHall54Integrator25.setStepHandler(stepHandler34);
        double double40 = highamHall54Integrator25.getCurrentSignedStepsize();
        double double41 = highamHall54Integrator25.getCurrentStepStart();
        java.lang.String str42 = highamHall54Integrator25.getName();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 10.0d + "'", double33 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 31.622776601683793d + "'", double40 == 31.622776601683793d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
    }

    @Test
    public void test15295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15295");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) ' ', 0.2d, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, (double) (short) 100, (double) '4', 10);
        double double18 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double19 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator4.getStepHandler();
        stepHandler20.reset();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2d + "'", double19 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler20);
    }

    @Test
    public void test15296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15296");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, 10.0d, (double) (-1), (double) 'a');
        int int5 = highamHall54Integrator4.getOrder();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test15297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15297");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, (double) (-1L), (double) (-1L), 5.656854249492381d);
    }

    @Test
    public void test15298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15298");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) (-1.0f), (double) (short) 1, 100);
        java.lang.String str16 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) 1L);
        java.lang.String str19 = highamHall54Integrator4.getName();
        int int20 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMaxGrowth(0.2d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction23, (double) 100, (double) 0, (int) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
    }

    @Test
    public void test15299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15299");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) 0.0f, 3.7829664360127033d, 14.142135623730951d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test15300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15300");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMaxGrowth(0.0d);
        java.lang.String str11 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = null;
        highamHall54Integrator16.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator16.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler20 = null;
        highamHall54Integrator16.setStepHandler(stepHandler20);
        double double22 = highamHall54Integrator16.getMaxStep();
        double double23 = highamHall54Integrator16.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator28.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler29);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        stepHandler29.handleStep(stepInterpolator31, true);
        highamHall54Integrator4.setStepHandler(stepHandler29);
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator4.getStepHandler();
        double double36 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMinReduction(2.0d);
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator4.getStepHandler();
        java.lang.Class<?> wildcardClass40 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1.0d) + "'", double36 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test15301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15301");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler6.evaluateStep(stepInterpolator9);
        double[] doubleArray16 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler6.stepAccepted((double) (byte) 1, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler19.evaluateStep(stepInterpolator20);
        double double22 = switchingFunctionsHandler19.getEventTime();
        boolean boolean23 = switchingFunctionsHandler19.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler29.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler29.evaluateStep(stepInterpolator32);
        double[] doubleArray39 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler29.stepAccepted((double) (byte) 1, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray39);
        double double42 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray46 = null;
        double[] doubleArray53 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray46, doubleArray53);
        boolean boolean55 = switchingFunctionsHandler25.reset((double) 10.0f, doubleArray53);
        boolean boolean56 = switchingFunctionsHandler19.reset((double) (byte) 10, doubleArray53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler58.evaluateStep(stepInterpolator59);
        double double61 = switchingFunctionsHandler58.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        switchingFunctionsHandler58.add(switchingFunction62, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler68.evaluateStep(stepInterpolator69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator73 = null;
        boolean boolean74 = switchingFunctionsHandler72.evaluateStep(stepInterpolator73);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator75 = null;
        boolean boolean76 = switchingFunctionsHandler72.evaluateStep(stepInterpolator75);
        double[] doubleArray82 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler72.stepAccepted((double) (byte) 1, doubleArray82);
        boolean boolean84 = switchingFunctionsHandler68.reset((double) (byte) 1, doubleArray82);
        boolean boolean85 = switchingFunctionsHandler58.reset((double) '4', doubleArray82);
        switchingFunctionsHandler19.stepAccepted((double) (short) 1, doubleArray82);
        boolean boolean87 = switchingFunctionsHandler6.reset((double) 100.0f, doubleArray82);
        boolean boolean88 = switchingFunctionsHandler0.reset(5.477225575051661d, doubleArray82);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction89 = null;
        switchingFunctionsHandler0.add(switchingFunction89, 31.144823004794873d, (double) (short) 1, (int) '#');
        boolean boolean94 = switchingFunctionsHandler0.stop();
        boolean boolean95 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test15302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15302");
        double[] doubleArray2 = null;
        double[] doubleArray9 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator10 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray2, doubleArray9);
        java.lang.String str11 = highamHall54Integrator10.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator10.addSwitchingFunction(switchingFunction12, 0.4472135954999579d, (-1.0d), (int) (short) 10);
        java.lang.String str17 = highamHall54Integrator10.getName();
        double double18 = highamHall54Integrator10.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator10.addSwitchingFunction(switchingFunction19, (double) (short) 0, (double) (short) 100, (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        highamHall54Integrator10.addSwitchingFunction(switchingFunction24, 52.0d, 0.0d, 3);
        double double29 = highamHall54Integrator10.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test15303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15303");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 0, 0.9d, (int) (short) 100);
        double double17 = highamHall54Integrator4.getMinReduction();
        double double18 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety((double) (byte) 10);
        int int21 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction22, 0.2d, (double) 3, (int) (byte) -1);
        double double27 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction(31.144823004794873d);
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator4.getStepHandler();
        boolean boolean32 = stepHandler31.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        stepHandler31.handleStep(stepInterpolator33, true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test15304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15304");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) -1, 76.91605673134588d, (double) (short) -1, 30.408967315912587d);
    }

    @Test
    public void test15305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15305");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) 10, (double) 1, 3);
        int int13 = highamHall54Integrator4.getOrder();
        java.lang.Class<?> wildcardClass14 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test15306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15306");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 100.0f, 31.622776601683793d, (double) '#');
    }

    @Test
    public void test15307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15307");
        double[] doubleArray8 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray8, doubleArray11);
        highamHall54Integrator20.setMaxGrowth((double) 1.0f);
        double double23 = highamHall54Integrator20.getMinReduction();
        double double24 = highamHall54Integrator20.getCurrentStepStart();
        java.lang.String str25 = highamHall54Integrator20.getName();
        double double26 = highamHall54Integrator20.getCurrentStepStart();
        java.lang.String str27 = highamHall54Integrator20.getName();
        int int28 = highamHall54Integrator20.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator20.addSwitchingFunction(switchingFunction29, (double) (short) 100, 2.0d, (int) (byte) 0);
        double double34 = highamHall54Integrator20.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator20.getStepHandler();
        double double36 = highamHall54Integrator20.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.2d + "'", double23 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Higham-Hall 5(4)" + "'", str27, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2d + "'", double36 == 0.2d);
    }

    @Test
    public void test15308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15308");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int12 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction((double) 0.0f);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler20 = null;
        highamHall54Integrator19.setStepHandler(stepHandler20);
        double double22 = highamHall54Integrator19.getCurrentSignedStepsize();
        double double23 = highamHall54Integrator19.getCurrentStepStart();
        highamHall54Integrator19.setMaxGrowth(0.0d);
        java.lang.String str26 = highamHall54Integrator19.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        highamHall54Integrator19.addSwitchingFunction(switchingFunction27, (double) 100L, (double) 0L, (int) (byte) 1);
        double double32 = highamHall54Integrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, 0.2d, (double) 0L, (double) 0L);
        highamHall54Integrator37.setInitialStepSize((double) (byte) 100);
        double double40 = highamHall54Integrator37.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator37.getStepHandler();
        highamHall54Integrator19.setStepHandler(stepHandler41);
        boolean boolean43 = stepHandler41.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler41);
        double double45 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2d + "'", double40 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
    }

    @Test
    public void test15309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15309");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        double double13 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction((-1.0d));
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator21.setMinReduction((double) 10.0f);
        double double24 = highamHall54Integrator21.getCurrentSignedStepsize();
        java.lang.String str25 = highamHall54Integrator21.getName();
        double double26 = highamHall54Integrator21.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator21.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler27);
        stepHandler27.reset();
        stepHandler27.reset();
        boolean boolean31 = stepHandler27.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test15310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15310");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, (double) (byte) 0, (double) (-1), (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator4.getStepHandler();
        double double20 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction21, (double) 2, 2.0d, 0);
        highamHall54Integrator4.setSafety(14.142135623730951d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.2d + "'", double20 == 0.2d);
    }

    @Test
    public void test15311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15311");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getMaxStep();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        stepHandler9.handleStep(stepInterpolator10, true);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler9);
    }

    @Test
    public void test15312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15312");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        java.lang.String str26 = highamHall54Integrator4.getName();
        double double27 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, (double) (byte) 100, (double) '#', (int) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction33, (-1.0d), (double) 0L, 1);
        highamHall54Integrator4.setSafety(Double.NaN);
        double double40 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test15313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15313");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) 0, (double) 1.0f, (double) (short) 100);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str6 = highamHall54Integrator4.getName();
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100, (double) (short) 1, 0);
        int int13 = highamHall54Integrator4.getOrder();
        double double14 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler17.evaluateStep(stepInterpolator18);
        double double20 = switchingFunctionsHandler17.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler17.add(switchingFunction21, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler31.evaluateStep(stepInterpolator32);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler31.evaluateStep(stepInterpolator34);
        double[] doubleArray41 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler31.stepAccepted((double) (byte) 1, doubleArray41);
        boolean boolean43 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray41);
        boolean boolean44 = switchingFunctionsHandler17.reset((double) '4', doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler45.evaluateStep(stepInterpolator46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = switchingFunctionsHandler49.evaluateStep(stepInterpolator50);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = switchingFunctionsHandler49.evaluateStep(stepInterpolator52);
        double[] doubleArray59 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler49.stepAccepted((double) (byte) 1, doubleArray59);
        boolean boolean61 = switchingFunctionsHandler45.reset((double) (byte) 1, doubleArray59);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray41, doubleArray59);
        double double63 = highamHall54Integrator62.getMinStep();
        highamHall54Integrator62.setSafety((double) (byte) 10);
        java.lang.String str66 = highamHall54Integrator62.getName();
        double double67 = highamHall54Integrator62.getMaxStep();
        int int68 = highamHall54Integrator62.getOrder();
        highamHall54Integrator62.setMaxGrowth((double) (short) 1);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler76 = null;
        highamHall54Integrator75.setStepHandler(stepHandler76);
        double double78 = highamHall54Integrator75.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler79 = null;
        highamHall54Integrator75.setStepHandler(stepHandler79);
        double double81 = highamHall54Integrator75.getMaxStep();
        double double82 = highamHall54Integrator75.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator87 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler88 = highamHall54Integrator87.getStepHandler();
        highamHall54Integrator75.setStepHandler(stepHandler88);
        highamHall54Integrator75.setSafety((double) 10.0f);
        highamHall54Integrator75.setMaxGrowth(31.144823004794873d);
        org.apache.commons.math.ode.StepHandler stepHandler94 = highamHall54Integrator75.getStepHandler();
        highamHall54Integrator62.setStepHandler(stepHandler94);
        boolean boolean96 = stepHandler94.requiresDenseOutput();
        boolean boolean97 = stepHandler94.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler94);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Higham-Hall 5(4)" + "'", str66, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 5 + "'", int68 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-1.0d) + "'", double81 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 10.0d + "'", double82 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler88);
        org.junit.Assert.assertNotNull(stepHandler94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test15314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15314");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        double double5 = switchingFunctionsHandler2.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler2.add(switchingFunction6, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler12.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler16.evaluateStep(stepInterpolator19);
        double[] doubleArray26 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler16.stepAccepted((double) (byte) 1, doubleArray26);
        boolean boolean28 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray26);
        boolean boolean29 = switchingFunctionsHandler2.reset((double) '4', doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler30.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler34.evaluateStep(stepInterpolator37);
        double[] doubleArray44 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler34.stepAccepted((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray26, doubleArray44);
        double double48 = highamHall54Integrator47.getMinStep();
        highamHall54Integrator47.setSafety((double) (byte) 10);
        java.lang.String str51 = highamHall54Integrator47.getName();
        double double52 = highamHall54Integrator47.getCurrentStepStart();
        highamHall54Integrator47.setMinReduction((double) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        highamHall54Integrator47.addSwitchingFunction(switchingFunction55, 0.0d, (double) '4', (int) (short) 1);
        double double60 = highamHall54Integrator47.getSafety();
        java.lang.String str61 = highamHall54Integrator47.getName();
        int int62 = highamHall54Integrator47.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator67 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler68 = null;
        highamHall54Integrator67.setStepHandler(stepHandler68);
        double double70 = highamHall54Integrator67.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler71 = null;
        highamHall54Integrator67.setStepHandler(stepHandler71);
        double double73 = highamHall54Integrator67.getMaxStep();
        double double74 = highamHall54Integrator67.getMinStep();
        double double75 = highamHall54Integrator67.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator80 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler81 = highamHall54Integrator80.getStepHandler();
        highamHall54Integrator80.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler84 = highamHall54Integrator80.getStepHandler();
        boolean boolean85 = stepHandler84.requiresDenseOutput();
        highamHall54Integrator67.setStepHandler(stepHandler84);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator87 = null;
        stepHandler84.handleStep(stepInterpolator87, true);
        stepHandler84.reset();
        stepHandler84.reset();
        highamHall54Integrator47.setStepHandler(stepHandler84);
        highamHall54Integrator47.setSafety(56.568542494923804d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Higham-Hall 5(4)" + "'", str51, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Higham-Hall 5(4)" + "'", str61, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 5 + "'", int62 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1.0d) + "'", double73 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 10.0d + "'", double74 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertNotNull(stepHandler84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test15315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15315");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, 4.47213595499958d, 15.414295476925576d, 5);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
    }

    @Test
    public void test15316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15316");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int14 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        double double17 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler23 = null;
        highamHall54Integrator22.setStepHandler(stepHandler23);
        double double25 = highamHall54Integrator22.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler26 = null;
        highamHall54Integrator22.setStepHandler(stepHandler26);
        double double28 = highamHall54Integrator22.getMaxStep();
        double double29 = highamHall54Integrator22.getMinStep();
        double double30 = highamHall54Integrator22.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator35.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator35.getStepHandler();
        boolean boolean40 = stepHandler39.requiresDenseOutput();
        highamHall54Integrator22.setStepHandler(stepHandler39);
        highamHall54Integrator4.setStepHandler(stepHandler39);
        double double43 = highamHall54Integrator4.getMinReduction();
        int int44 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
    }

    @Test
    public void test15317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15317");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        highamHall54Integrator4.setMaxGrowth((double) (byte) 100);
        double double12 = highamHall54Integrator4.getMaxStep();
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMinReduction((double) (byte) 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler21 = null;
        highamHall54Integrator20.setStepHandler(stepHandler21);
        double double23 = highamHall54Integrator20.getCurrentSignedStepsize();
        double double24 = highamHall54Integrator20.getCurrentStepStart();
        java.lang.String str25 = highamHall54Integrator20.getName();
        double double26 = highamHall54Integrator20.getMaxGrowth();
        double double27 = highamHall54Integrator20.getCurrentStepStart();
        double double28 = highamHall54Integrator20.getCurrentStepStart();
        int int29 = highamHall54Integrator20.getOrder();
        double double30 = highamHall54Integrator20.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = null;
        highamHall54Integrator35.setStepHandler(stepHandler36);
        double double38 = highamHall54Integrator35.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler39 = null;
        highamHall54Integrator35.setStepHandler(stepHandler39);
        double double41 = highamHall54Integrator35.getMaxStep();
        double double42 = highamHall54Integrator35.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator47.getStepHandler();
        highamHall54Integrator35.setStepHandler(stepHandler48);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        highamHall54Integrator35.addSwitchingFunction(switchingFunction50, (double) '4', 1.0d, (int) (short) -1);
        double double55 = highamHall54Integrator35.getMaxStep();
        double double56 = highamHall54Integrator35.getSafety();
        double double57 = highamHall54Integrator35.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler58 = highamHall54Integrator35.getStepHandler();
        boolean boolean59 = stepHandler58.requiresDenseOutput();
        stepHandler58.reset();
        boolean boolean61 = stepHandler58.requiresDenseOutput();
        highamHall54Integrator20.setStepHandler(stepHandler58);
        highamHall54Integrator4.setStepHandler(stepHandler58);
        java.lang.String str64 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1.0d) + "'", double41 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1.0d) + "'", double55 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.9d + "'", double56 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Higham-Hall 5(4)" + "'", str64, "Higham-Hall 5(4)");
    }

    @Test
    public void test15318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15318");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        double double13 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety((double) (short) 10);
        double double16 = highamHall54Integrator4.getMaxStep();
        double double17 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
    }

    @Test
    public void test15319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15319");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) 0, 0.9d, 0.0d);
        double double5 = highamHall54Integrator4.getMaxStep();
        double double6 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety((double) (-1));
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str10 = highamHall54Integrator4.getName();
        double double11 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test15320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15320");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (-1.0d), (double) (short) 10, (int) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator4.getStepHandler();
        stepHandler13.reset();
        boolean boolean15 = stepHandler13.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test15321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15321");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        org.apache.commons.math.ode.StepHandler stepHandler11 = highamHall54Integrator4.getStepHandler();
        boolean boolean12 = stepHandler11.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test15322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15322");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        highamHall54Integrator4.setMaxGrowth((double) (byte) -1);
        double double7 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) 0, (double) 2, (int) (short) 100);
        int int13 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, (double) (-1.0f), 0.2d, (int) (short) 100);
        double double19 = highamHall54Integrator4.getSafety();
        double double20 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction21, 52.0d, 26.8534961428265d, 2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 100.0d + "'", double7 == 100.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.9d + "'", double19 == 0.9d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.2d + "'", double20 == 0.2d);
    }

    @Test
    public void test15323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15323");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction((double) (short) 1);
        double double14 = highamHall54Integrator4.getMaxStep();
        double double15 = highamHall54Integrator4.getMinReduction();
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test15324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15324");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) 10, (double) 1.0f, (int) '4');
        boolean boolean8 = switchingFunctionsHandler0.stop();
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) (short) 10, (double) '#', (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean17 = switchingFunctionsHandler16.isEmpty();
        boolean boolean18 = switchingFunctionsHandler16.stop();
        double double19 = switchingFunctionsHandler16.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler16.add(switchingFunction20, 0.0d, (double) (short) 100, 1);
        double[] doubleArray31 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler32.evaluateStep(stepInterpolator33);
        double double35 = switchingFunctionsHandler32.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler32.add(switchingFunction36, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler42.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler46.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler46.evaluateStep(stepInterpolator49);
        double[] doubleArray56 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler46.stepAccepted((double) (byte) 1, doubleArray56);
        boolean boolean58 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray56);
        boolean boolean59 = switchingFunctionsHandler32.reset((double) '4', doubleArray56);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray31, doubleArray56);
        boolean boolean61 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray56);
        boolean boolean62 = switchingFunctionsHandler0.reset((double) 0, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        switchingFunctionsHandler0.add(switchingFunction63, 100.0d, (double) (short) 10, (int) (short) 0);
        boolean boolean68 = switchingFunctionsHandler0.isEmpty();
        boolean boolean69 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test15325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15325");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler2.evaluateStep(stepInterpolator5);
        double[] doubleArray12 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler2.stepAccepted((double) (byte) 1, doubleArray12);
        double[] doubleArray16 = null;
        double[] doubleArray23 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray16, doubleArray23);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) 10L, doubleArray12, doubleArray16);
        java.lang.String str26 = highamHall54Integrator25.getName();
        int int27 = highamHall54Integrator25.getOrder();
        highamHall54Integrator25.setInitialStepSize(0.0d);
        double double30 = highamHall54Integrator25.getSafety();
        double double31 = highamHall54Integrator25.getMinReduction();
        java.lang.String str32 = highamHall54Integrator25.getName();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.2d + "'", double31 == 0.2d);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
    }

    @Test
    public void test15326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15326");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) '4', (double) 10.0f, 1.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator9 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator9.getStepHandler();
        highamHall54Integrator9.setMinReduction(10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator9.getStepHandler();
        boolean boolean14 = stepHandler13.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler13);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        double double18 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double19 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction20, (double) 10, 17.78279410038923d, (int) (byte) 0);
        highamHall54Integrator4.setMinReduction(52.0d);
        double double27 = highamHall54Integrator4.getMaxGrowth();
        double double28 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setInitialStepSize((double) 100);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 22.80350850198276d + "'", double18 == 22.80350850198276d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
    }

    @Test
    public void test15327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15327");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (short) 1, (double) 'a', (int) (short) 0);
        java.lang.String str10 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations11 = null;
        double[] doubleArray13 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler15.evaluateStep(stepInterpolator16);
        double double18 = switchingFunctionsHandler15.getEventTime();
        boolean boolean19 = switchingFunctionsHandler15.stop();
        boolean boolean20 = switchingFunctionsHandler15.isEmpty();
        double double21 = switchingFunctionsHandler15.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler15.evaluateStep(stepInterpolator22);
        double double24 = switchingFunctionsHandler15.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler26.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler26.evaluateStep(stepInterpolator29);
        double double31 = switchingFunctionsHandler26.getEventTime();
        double double32 = switchingFunctionsHandler26.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler26.add(switchingFunction33, 0.2d, (double) (short) 0, 1);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler42.evaluateStep(stepInterpolator43);
        double double45 = switchingFunctionsHandler42.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        switchingFunctionsHandler42.add(switchingFunction46, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler52.evaluateStep(stepInterpolator53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler56.evaluateStep(stepInterpolator57);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler56.evaluateStep(stepInterpolator59);
        double[] doubleArray66 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler56.stepAccepted((double) (byte) 1, doubleArray66);
        boolean boolean68 = switchingFunctionsHandler52.reset((double) (byte) 1, doubleArray66);
        boolean boolean69 = switchingFunctionsHandler42.reset((double) '4', doubleArray66);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator70 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, (double) (-1), doubleArray41, doubleArray66);
        boolean boolean71 = switchingFunctionsHandler26.reset(3.1622776601683795d, doubleArray66);
        switchingFunctionsHandler15.stepAccepted(9.848857801796104d, doubleArray66);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations11, (double) (short) -1, doubleArray13, 5.580754698496868d, doubleArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test15328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15328");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(1.0d);
        highamHall54Integrator4.setMaxGrowth((-1.0d));
        double double30 = highamHall54Integrator4.getCurrentStepStart();
        double double31 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler37 = null;
        highamHall54Integrator36.setStepHandler(stepHandler37);
        double double39 = highamHall54Integrator36.getCurrentSignedStepsize();
        double double40 = highamHall54Integrator36.getCurrentStepStart();
        java.lang.String str41 = highamHall54Integrator36.getName();
        highamHall54Integrator36.setMaxGrowth((double) 100.0f);
        double double44 = highamHall54Integrator36.getMaxGrowth();
        java.lang.String str45 = highamHall54Integrator36.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler51 = null;
        highamHall54Integrator50.setStepHandler(stepHandler51);
        double double53 = highamHall54Integrator50.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler54 = null;
        highamHall54Integrator50.setStepHandler(stepHandler54);
        double double56 = highamHall54Integrator50.getMaxStep();
        double double57 = highamHall54Integrator50.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator62 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler63 = highamHall54Integrator62.getStepHandler();
        highamHall54Integrator50.setStepHandler(stepHandler63);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        highamHall54Integrator50.addSwitchingFunction(switchingFunction65, (double) '4', 1.0d, (int) (short) -1);
        double double70 = highamHall54Integrator50.getMaxStep();
        double double71 = highamHall54Integrator50.getSafety();
        highamHall54Integrator50.setInitialStepSize(1.0d);
        org.apache.commons.math.ode.StepHandler stepHandler74 = highamHall54Integrator50.getStepHandler();
        highamHall54Integrator50.setMaxGrowth((double) (byte) 10);
        int int77 = highamHall54Integrator50.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler78 = highamHall54Integrator50.getStepHandler();
        highamHall54Integrator36.setStepHandler(stepHandler78);
        highamHall54Integrator36.setMinReduction((double) '4');
        double double82 = highamHall54Integrator36.getMaxGrowth();
        java.lang.String str83 = highamHall54Integrator36.getName();
        double double84 = highamHall54Integrator36.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler85 = highamHall54Integrator36.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler85);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.9d + "'", double31 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Higham-Hall 5(4)" + "'", str45, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1.0d) + "'", double56 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1.0d) + "'", double70 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.9d + "'", double71 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
        org.junit.Assert.assertNotNull(stepHandler78);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 100.0d + "'", double82 == 100.0d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Higham-Hall 5(4)" + "'", str83, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 100.0d + "'", double84 == 100.0d);
        org.junit.Assert.assertNotNull(stepHandler85);
    }

    @Test
    public void test15329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15329");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        java.lang.String str39 = highamHall54Integrator4.getName();
        double double40 = highamHall54Integrator4.getMinReduction();
        double double41 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str42 = highamHall54Integrator4.getName();
        java.lang.String str43 = highamHall54Integrator4.getName();
        java.lang.String str44 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator49.getStepHandler();
        double double51 = highamHall54Integrator49.getMinStep();
        double double52 = highamHall54Integrator49.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator49.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        stepHandler53.handleStep(stepInterpolator54, false);
        boolean boolean57 = stepHandler53.requiresDenseOutput();
        stepHandler53.reset();
        stepHandler53.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        stepHandler53.handleStep(stepInterpolator60, false);
        highamHall54Integrator4.setStepHandler(stepHandler53);
        double double64 = highamHall54Integrator4.getMaxStep();
        double double65 = highamHall54Integrator4.getMinStep();
        int int66 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Higham-Hall 5(4)" + "'", str39, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.2d + "'", double40 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Higham-Hall 5(4)" + "'", str42, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Higham-Hall 5(4)" + "'", str44, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1.0d) + "'", double64 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 10.0d + "'", double65 == 10.0d);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
    }

    @Test
    public void test15330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15330");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction((double) (-1.0f));
        highamHall54Integrator4.setMaxGrowth((double) 2);
        java.lang.String str18 = highamHall54Integrator4.getName();
        double double19 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int20 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
    }

    @Test
    public void test15331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15331");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth(22.80350850198276d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertNotNull(stepHandler9);
    }

    @Test
    public void test15332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15332");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (-1.0f), (double) (byte) 0, (int) (short) -1);
        double double14 = highamHall54Integrator4.getSafety();
        double double15 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test15333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15333");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, 0.0d, (double) (-1.0f), (int) (byte) 1);
        double double8 = switchingFunctionsHandler0.getEventTime();
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        boolean boolean10 = switchingFunctionsHandler0.stop();
        boolean boolean11 = switchingFunctionsHandler0.stop();
        double double12 = switchingFunctionsHandler0.getEventTime();
        double double13 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler19.evaluateStep(stepInterpolator20);
        double double22 = switchingFunctionsHandler19.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler19.add(switchingFunction23, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler29.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler33.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler33.evaluateStep(stepInterpolator36);
        double[] doubleArray43 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler33.stepAccepted((double) (byte) 1, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray43);
        boolean boolean46 = switchingFunctionsHandler19.reset((double) '4', doubleArray43);
        double[] doubleArray53 = new double[] { (-1), 0.0f, '#', (-1), 3, 0.0f };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 1.0f, doubleArray43, doubleArray53);
        double[] doubleArray57 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler58.evaluateStep(stepInterpolator59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler62.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = switchingFunctionsHandler62.evaluateStep(stepInterpolator65);
        double[] doubleArray72 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler62.stepAccepted((double) (byte) 1, doubleArray72);
        boolean boolean74 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray72);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (-1), doubleArray57, doubleArray72);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator76 = new org.apache.commons.math.ode.HighamHall54Integrator(0.2d, (double) (short) 0, doubleArray43, doubleArray72);
        boolean boolean77 = switchingFunctionsHandler0.reset((double) (short) -1, doubleArray43);
        double double78 = switchingFunctionsHandler0.getEventTime();
        double double79 = switchingFunctionsHandler0.getEventTime();
        boolean boolean80 = switchingFunctionsHandler0.stop();
        boolean boolean81 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction82 = null;
        switchingFunctionsHandler0.add(switchingFunction82, 2.23606797749979d, (double) 1L, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 0.0, 35.0, -1.0, 3.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test15334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15334");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, Double.NaN, (double) (-1), (double) 100.0f);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator9 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator9.getStepHandler();
        highamHall54Integrator9.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator9.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator18.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator18.getCurrentSignedStepsize();
        double double22 = highamHall54Integrator18.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator18.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        stepHandler28.handleStep(stepInterpolator30, true);
        highamHall54Integrator9.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        stepHandler28.handleStep(stepInterpolator34, true);
        highamHall54Integrator4.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = null;
        highamHall54Integrator42.setStepHandler(stepHandler43);
        double double45 = highamHall54Integrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler46 = null;
        highamHall54Integrator42.setStepHandler(stepHandler46);
        double double48 = highamHall54Integrator42.getMaxStep();
        double double49 = highamHall54Integrator42.getMinStep();
        double double50 = highamHall54Integrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler56 = highamHall54Integrator55.getStepHandler();
        highamHall54Integrator55.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator55.getStepHandler();
        boolean boolean60 = stepHandler59.requiresDenseOutput();
        highamHall54Integrator42.setStepHandler(stepHandler59);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        stepHandler59.handleStep(stepInterpolator62, true);
        stepHandler59.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        stepHandler59.handleStep(stepInterpolator66, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        stepHandler59.handleStep(stepInterpolator69, false);
        stepHandler59.reset();
        stepHandler59.reset();
        highamHall54Integrator4.setStepHandler(stepHandler59);
        double double75 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1.0d) + "'", double48 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
    }

    @Test
    public void test15335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15335");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 10.0d, (double) (-1), (double) (short) -1);
        highamHall54Integrator4.setSafety((double) '#');
        highamHall54Integrator4.setMinReduction(3.1622776601683795d);
    }

    @Test
    public void test15336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15336");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        double double14 = highamHall54Integrator4.getMaxGrowth();
        int int15 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) (byte) -1, (double) 0.0f, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction21, 56.568542494923804d, 9.486832980505138d, (int) ' ');
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test15337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15337");
        double[] doubleArray7 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler8.evaluateStep(stepInterpolator9);
        double double11 = switchingFunctionsHandler8.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler8.add(switchingFunction12, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler18.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler22.evaluateStep(stepInterpolator25);
        double[] doubleArray32 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler22.stepAccepted((double) (byte) 1, doubleArray32);
        boolean boolean34 = switchingFunctionsHandler18.reset((double) (byte) 1, doubleArray32);
        boolean boolean35 = switchingFunctionsHandler8.reset((double) '4', doubleArray32);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray7, doubleArray32);
        double[] doubleArray39 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler40.evaluateStep(stepInterpolator41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = switchingFunctionsHandler44.evaluateStep(stepInterpolator45);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler44.evaluateStep(stepInterpolator47);
        double[] doubleArray54 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler44.stepAccepted((double) (byte) 1, doubleArray54);
        boolean boolean56 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray54);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (-1), doubleArray39, doubleArray54);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) -1, 100.0d, doubleArray32, doubleArray39);
        double double59 = highamHall54Integrator58.getCurrentSignedStepsize();
        highamHall54Integrator58.setInitialStepSize((double) (short) 0);
        java.lang.String str62 = highamHall54Integrator58.getName();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Higham-Hall 5(4)" + "'", str62, "Higham-Hall 5(4)");
    }

    @Test
    public void test15338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15338");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 0L, 0.0d, (int) '#');
        highamHall54Integrator4.setSafety(0.2d);
        int int15 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
    }

    @Test
    public void test15339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15339");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(9.848857801796104d, (double) '#', (double) 10.0f, (double) ' ');
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 18.566368063325246d + "'", double6 == 18.566368063325246d);
    }

    @Test
    public void test15340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15340");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) (-1.0f), (double) (short) 1, 100);
        java.lang.String str16 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) 1L);
        java.lang.String str19 = highamHall54Integrator4.getName();
        int int20 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize(0.4472135954999579d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertNull(stepHandler21);
    }

    @Test
    public void test15341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15341");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        highamHall54Integrator4.setSafety((double) 10.0f);
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        int int22 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double28 = highamHall54Integrator27.getCurrentStepStart();
        int int29 = highamHall54Integrator27.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double35 = highamHall54Integrator34.getCurrentStepStart();
        double double36 = highamHall54Integrator34.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        double double43 = highamHall54Integrator41.getMinStep();
        double double44 = highamHall54Integrator41.getCurrentSignedStepsize();
        highamHall54Integrator41.setInitialStepSize(10.0d);
        double double47 = highamHall54Integrator41.getMinStep();
        double double48 = highamHall54Integrator41.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator53.getStepHandler();
        double double55 = highamHall54Integrator53.getMinStep();
        double double56 = highamHall54Integrator53.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator53.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        stepHandler57.handleStep(stepInterpolator58, false);
        highamHall54Integrator41.setStepHandler(stepHandler57);
        highamHall54Integrator34.setStepHandler(stepHandler57);
        stepHandler57.reset();
        highamHall54Integrator27.setStepHandler(stepHandler57);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        stepHandler57.handleStep(stepInterpolator65, false);
        stepHandler57.reset();
        stepHandler57.reset();
        highamHall54Integrator4.setStepHandler(stepHandler57);
        double double71 = highamHall54Integrator4.getCurrentStepStart();
        double double72 = highamHall54Integrator4.getCurrentStepStart();
        double double73 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler74 = highamHall54Integrator4.getStepHandler();
        double double75 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 10.0d + "'", double73 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 10.0d + "'", double75 == 10.0d);
    }

    @Test
    public void test15342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15342");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str10 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) (short) 1);
        highamHall54Integrator4.setInitialStepSize((double) '#');
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
    }

    @Test
    public void test15343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15343");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 'a', 1.0d, (double) (short) 1, 0.2d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, (double) (short) 1, (double) 10, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction10, 31.810829150682025d, 0.0d, (int) '#');
    }

    @Test
    public void test15344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15344");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, (double) 5, (double) 1, (double) (short) -1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth(97.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (byte) 10, 9.486832980505138d, 10);
        highamHall54Integrator4.setInitialStepSize(31.144823004794873d);
        java.lang.String str16 = highamHall54Integrator4.getName();
        double double17 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
    }

    @Test
    public void test15345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15345");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) 0, 0.9d, (int) (short) 100);
        double double17 = highamHall54Integrator4.getMinReduction();
        double double18 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety((double) (byte) 10);
        int int21 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction22, 0.2d, (double) 3, (int) (byte) -1);
        double double27 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction(31.144823004794873d);
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator4.getStepHandler();
        java.lang.String str31 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator4.getStepHandler();
        java.lang.String str33 = highamHall54Integrator4.getName();
        double double34 = highamHall54Integrator4.getSafety();
        double double35 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Higham-Hall 5(4)" + "'", str31, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Higham-Hall 5(4)" + "'", str33, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
    }

    @Test
    public void test15346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15346");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 0.0f, (double) (short) 10, (int) (short) 1);
        java.lang.String str11 = highamHall54Integrator4.getName();
        java.lang.String str12 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, 2.0d, (-1.0d), 5);
        double double18 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double19 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator24.setMinReduction(10.0d);
        double double28 = highamHall54Integrator24.getCurrentSignedStepsize();
        double double29 = highamHall54Integrator24.getCurrentStepStart();
        double double30 = highamHall54Integrator24.getCurrentSignedStepsize();
        double double31 = highamHall54Integrator24.getSafety();
        highamHall54Integrator24.setMinReduction((double) (byte) 0);
        highamHall54Integrator24.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator24.getStepHandler();
        double double37 = highamHall54Integrator24.getMaxGrowth();
        highamHall54Integrator24.setInitialStepSize(97.0d);
        org.apache.commons.math.ode.StepHandler stepHandler40 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler40);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 100.0d + "'", double19 == 100.0d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.9d + "'", double31 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler40);
    }

    @Test
    public void test15347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15347");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double9 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setSafety((double) 2);
        int int12 = highamHall54Integrator4.getOrder();
        double double13 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator18.getStepHandler();
        double double20 = highamHall54Integrator18.getMinStep();
        double double21 = highamHall54Integrator18.getMaxGrowth();
        java.lang.String str22 = highamHall54Integrator18.getName();
        double double23 = highamHall54Integrator18.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        highamHall54Integrator18.addSwitchingFunction(switchingFunction24, 0.9d, (double) 100L, 1);
        int int29 = highamHall54Integrator18.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator18.getStepHandler();
        stepHandler30.reset();
        stepHandler30.reset();
        highamHall54Integrator4.setStepHandler(stepHandler30);
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertNotNull(stepHandler34);
    }

    @Test
    public void test15348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15348");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator13.getStepHandler();
        boolean boolean18 = stepHandler17.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        stepHandler17.handleStep(stepInterpolator19, true);
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction23, (double) 1, (double) (byte) 1, (int) (byte) -1);
        double double28 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str29 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator4.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize(2.0d);
        int int35 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
    }

    @Test
    public void test15349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15349");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 2, 0.2d, 17.752843424574987d, 10.0d);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test15350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15350");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1.0f), (double) 10, 0.0d, 5.916079783099616d);
    }

    @Test
    public void test15351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15351");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double14 = highamHall54Integrator13.getCurrentStepStart();
        double double15 = highamHall54Integrator13.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator20.getStepHandler();
        double double22 = highamHall54Integrator20.getMinStep();
        double double23 = highamHall54Integrator20.getCurrentSignedStepsize();
        highamHall54Integrator20.setInitialStepSize(10.0d);
        double double26 = highamHall54Integrator20.getMinStep();
        double double27 = highamHall54Integrator20.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator32.getStepHandler();
        double double34 = highamHall54Integrator32.getMinStep();
        double double35 = highamHall54Integrator32.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator32.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        stepHandler36.handleStep(stepInterpolator37, false);
        highamHall54Integrator20.setStepHandler(stepHandler36);
        highamHall54Integrator13.setStepHandler(stepHandler36);
        stepHandler36.reset();
        highamHall54Integrator4.setStepHandler(stepHandler36);
        double double44 = highamHall54Integrator4.getMinReduction();
        double double45 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 100.0d + "'", double15 == 100.0d);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.2d + "'", double44 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
    }

    @Test
    public void test15352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15352");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(1.0d);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        double double29 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setSafety((double) (-1L));
        double double32 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9d + "'", double29 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test15353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15353");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        double double13 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction((-1.0d));
        int int16 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction17, 31.622776601683793d, (double) (short) 10, (int) '4');
        java.lang.String str22 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
    }

    @Test
    public void test15354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15354");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        int int8 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety((double) (byte) 1);
        java.lang.String str11 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize(3.1622776601683795d);
        highamHall54Integrator4.setInitialStepSize(1.0d);
        double double16 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
    }

    @Test
    public void test15355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15355");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', 0.0d, (-1.0d), 7.211102550927978d);
    }

    @Test
    public void test15356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15356");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) '4', 97.0d, (int) '#');
        double double21 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction23, 9.848857801796104d, 59.16079783099616d, (int) (byte) 100);
        highamHall54Integrator4.setMaxGrowth((double) (byte) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNull(stepHandler22);
    }

    @Test
    public void test15357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15357");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(31.622776601683793d, 0.0d, (double) (-1), (double) 100.0f);
        highamHall54Integrator4.setMinReduction((double) (byte) -1);
        double double7 = highamHall54Integrator4.getSafety();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int9 = highamHall54Integrator4.getOrder();
        java.lang.String str10 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9d + "'", double7 == 0.9d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
    }

    @Test
    public void test15358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15358");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        highamHall54Integrator4.setMaxGrowth((double) (byte) 100);
        double double12 = highamHall54Integrator4.getMaxStep();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator20.getStepHandler();
        double double22 = highamHall54Integrator20.getMinStep();
        java.lang.String str23 = highamHall54Integrator20.getName();
        java.lang.String str24 = highamHall54Integrator20.getName();
        java.lang.String str25 = highamHall54Integrator20.getName();
        double double26 = highamHall54Integrator20.getCurrentSignedStepsize();
        double double27 = highamHall54Integrator20.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator20.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler28);
        stepHandler28.reset();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler28);
    }

    @Test
    public void test15359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15359");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        highamHall54Integrator4.setMaxGrowth((double) 10);
        double double16 = highamHall54Integrator4.getMinReduction();
        double double17 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler23 = null;
        highamHall54Integrator22.setStepHandler(stepHandler23);
        double double25 = highamHall54Integrator22.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler26 = null;
        highamHall54Integrator22.setStepHandler(stepHandler26);
        double double28 = highamHall54Integrator22.getMaxStep();
        double double29 = highamHall54Integrator22.getMinStep();
        double double30 = highamHall54Integrator22.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = null;
        highamHall54Integrator35.setStepHandler(stepHandler36);
        double double38 = highamHall54Integrator35.getCurrentSignedStepsize();
        double double39 = highamHall54Integrator35.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator44.getStepHandler();
        highamHall54Integrator35.setStepHandler(stepHandler45);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        stepHandler45.handleStep(stepInterpolator47, true);
        highamHall54Integrator22.setStepHandler(stepHandler45);
        org.apache.commons.math.ode.StepHandler stepHandler51 = highamHall54Integrator22.getStepHandler();
        double double52 = highamHall54Integrator22.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler58 = highamHall54Integrator57.getStepHandler();
        double double59 = highamHall54Integrator57.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator57.getStepHandler();
        java.lang.String str61 = highamHall54Integrator57.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler67 = highamHall54Integrator66.getStepHandler();
        highamHall54Integrator66.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler70 = highamHall54Integrator66.getStepHandler();
        boolean boolean71 = stepHandler70.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator72 = null;
        stepHandler70.handleStep(stepInterpolator72, true);
        highamHall54Integrator57.setStepHandler(stepHandler70);
        stepHandler70.reset();
        highamHall54Integrator22.setStepHandler(stepHandler70);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        stepHandler70.handleStep(stepInterpolator78, false);
        highamHall54Integrator4.setStepHandler(stepHandler70);
        org.apache.commons.math.ode.StepHandler stepHandler82 = highamHall54Integrator4.getStepHandler();
        double double83 = highamHall54Integrator4.getCurrentStepStart();
        double double84 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Higham-Hall 5(4)" + "'", str61, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.9d + "'", double84 == 0.9d);
    }

    @Test
    public void test15360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15360");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        int int12 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9d + "'", double9 == 0.9d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
    }

    @Test
    public void test15361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15361");
        double[] doubleArray8 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray8, doubleArray11);
        double double21 = highamHall54Integrator20.getMinReduction();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2d + "'", double21 == 0.2d);
    }

    @Test
    public void test15362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15362");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = null;
        highamHall54Integrator12.setStepHandler(stepHandler13);
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator12.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator12.getMaxStep();
        double double19 = highamHall54Integrator12.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler25);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator31.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator31.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator31.getMaxStep();
        double double38 = highamHall54Integrator31.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator31.setStepHandler(stepHandler44);
        highamHall54Integrator12.setStepHandler(stepHandler44);
        highamHall54Integrator4.setStepHandler(stepHandler44);
        double double48 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator53.getStepHandler();
        boolean boolean55 = stepHandler54.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        stepHandler54.handleStep(stepInterpolator56, false);
        highamHall54Integrator4.setStepHandler(stepHandler54);
        stepHandler54.reset();
        boolean boolean61 = stepHandler54.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test15363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15363");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0, 14.142135623730951d, 15.414295476925576d, 17.752843424574987d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator9 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        java.lang.String str10 = highamHall54Integrator9.getName();
        double double11 = highamHall54Integrator9.getCurrentSignedStepsize();
        java.lang.String str12 = highamHall54Integrator9.getName();
        int int13 = highamHall54Integrator9.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 2, (double) (byte) -1, 24.947901585376336d, (double) (byte) 1);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        highamHall54Integrator23.addSwitchingFunction(switchingFunction38, (double) '4', 1.0d, (int) (short) -1);
        double double43 = highamHall54Integrator23.getMaxStep();
        double double44 = highamHall54Integrator23.getSafety();
        double double45 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator23.getStepHandler();
        double double47 = highamHall54Integrator23.getMaxStep();
        double double48 = highamHall54Integrator23.getMaxGrowth();
        highamHall54Integrator23.setMinReduction((double) (-1));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator55.setSafety((double) '4');
        highamHall54Integrator55.setMaxGrowth(0.0d);
        double double60 = highamHall54Integrator55.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator55.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        stepHandler61.handleStep(stepInterpolator62, false);
        highamHall54Integrator23.setStepHandler(stepHandler61);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        stepHandler61.handleStep(stepInterpolator66, true);
        highamHall54Integrator18.setStepHandler(stepHandler61);
        highamHall54Integrator9.setStepHandler(stepHandler61);
        highamHall54Integrator4.setStepHandler(stepHandler61);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 31.144823004794873d + "'", double11 == 31.144823004794873d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1.0d) + "'", double43 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.9d + "'", double44 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1.0d) + "'", double47 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2d + "'", double60 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler61);
    }

    @Test
    public void test15364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15364");
        double[] doubleArray10 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray13 = null;
        double[] doubleArray20 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray13, doubleArray20);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray10, doubleArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler23.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler27.evaluateStep(stepInterpolator30);
        double[] doubleArray37 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler27.stepAccepted((double) (byte) 1, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray37);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray10, doubleArray37);
        double double41 = highamHall54Integrator40.getMinStep();
        double double42 = highamHall54Integrator40.getCurrentStepStart();
        double double43 = highamHall54Integrator40.getCurrentSignedStepsize();
        double double44 = highamHall54Integrator40.getMaxStep();
        java.lang.String str45 = highamHall54Integrator40.getName();
        int int46 = highamHall54Integrator40.getOrder();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 100.0d + "'", double41 == 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 100.0d + "'", double43 == 100.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Higham-Hall 5(4)" + "'", str45, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
    }

    @Test
    public void test15365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15365");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety(100.0d);
        int int13 = highamHall54Integrator4.getOrder();
        java.lang.String str14 = highamHall54Integrator4.getName();
        double double15 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler21 = null;
        highamHall54Integrator20.setStepHandler(stepHandler21);
        double double23 = highamHall54Integrator20.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator20.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator20.getMaxStep();
        double double27 = highamHall54Integrator20.getMinStep();
        double double28 = highamHall54Integrator20.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = null;
        highamHall54Integrator33.setStepHandler(stepHandler34);
        double double36 = highamHall54Integrator33.getCurrentSignedStepsize();
        double double37 = highamHall54Integrator33.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler43);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        stepHandler43.handleStep(stepInterpolator45, true);
        highamHall54Integrator20.setStepHandler(stepHandler43);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        stepHandler43.handleStep(stepInterpolator49, true);
        highamHall54Integrator4.setStepHandler(stepHandler43);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(stepHandler43);
    }

    @Test
    public void test15366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15366");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10L, (double) 0, (double) 1.0f, (double) (short) 100);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str6 = highamHall54Integrator4.getName();
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100, (double) (short) 1, 0);
        double double13 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMinReduction(14.142135623730951d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test15367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15367");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getSafety();
        double double12 = highamHall54Integrator4.getMinReduction();
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator18.setSafety((double) '4');
        highamHall54Integrator18.setMaxGrowth(0.0d);
        double double23 = highamHall54Integrator18.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator18.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        stepHandler24.handleStep(stepInterpolator25, false);
        highamHall54Integrator4.setStepHandler(stepHandler24);
        int int29 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety((double) 2);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.2d + "'", double23 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
    }

    @Test
    public void test15368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15368");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        highamHall54Integrator4.setInitialStepSize((-1.0d));
        java.lang.String str30 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        highamHall54Integrator4.setInitialStepSize(40.55100964572346d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
    }

    @Test
    public void test15369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15369");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, (double) 5, (double) 1, (double) (short) -1);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        double double7 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 5.0d + "'", double7 == 5.0d);
    }

    @Test
    public void test15370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15370");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) 0.0f, (double) (short) 10, (int) (short) 1);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator15.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator15.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator15.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator15.getMaxStep();
        double double22 = highamHall54Integrator15.getMinStep();
        double double23 = highamHall54Integrator15.getCurrentSignedStepsize();
        java.lang.String str24 = highamHall54Integrator15.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = null;
        highamHall54Integrator29.setStepHandler(stepHandler30);
        double double32 = highamHall54Integrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler33 = null;
        highamHall54Integrator29.setStepHandler(stepHandler33);
        double double35 = highamHall54Integrator29.getMaxStep();
        double double36 = highamHall54Integrator29.getMinStep();
        double double37 = highamHall54Integrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator42.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator42.getStepHandler();
        boolean boolean47 = stepHandler46.requiresDenseOutput();
        highamHall54Integrator29.setStepHandler(stepHandler46);
        java.lang.String str49 = highamHall54Integrator29.getName();
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator15.setStepHandler(stepHandler50);
        highamHall54Integrator4.setStepHandler(stepHandler50);
        double double53 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str54 = highamHall54Integrator4.getName();
        double double55 = highamHall54Integrator4.getMaxGrowth();
        double double56 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(5.623413251903491d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Higham-Hall 5(4)" + "'", str49, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Higham-Hall 5(4)" + "'", str54, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 100.0d + "'", double56 == 100.0d);
    }

    @Test
    public void test15371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15371");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 0);
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator15.getStepHandler();
        boolean boolean17 = stepHandler16.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        stepHandler16.handleStep(stepInterpolator18, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        stepHandler16.handleStep(stepInterpolator21, false);
        stepHandler16.reset();
        highamHall54Integrator4.setStepHandler(stepHandler16);
        java.lang.String str26 = highamHall54Integrator4.getName();
        double double27 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setSafety((double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction30, (double) 5, 1.0d, 5);
        double double35 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction36, (double) (short) 0, 31.144823004794873d, (int) (short) 0);
        java.lang.String str41 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Higham-Hall 5(4)" + "'", str26, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
    }

    @Test
    public void test15372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15372");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNull(stepHandler15);
        org.junit.Assert.assertNull(stepHandler16);
        org.junit.Assert.assertNull(stepHandler17);
    }

    @Test
    public void test15373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15373");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getSafety();
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getMinReduction();
        java.lang.String str13 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) 100);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9d + "'", double10 == 0.9d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
    }

    @Test
    public void test15374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15374");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(7.211102550927978d, 5.656854249492381d, (double) (-1), (double) 0L);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test15375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15375");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double double15 = switchingFunctionsHandler0.getEventTime();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler0.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        double double23 = switchingFunctionsHandler20.getEventTime();
        boolean boolean24 = switchingFunctionsHandler20.stop();
        boolean boolean25 = switchingFunctionsHandler20.isEmpty();
        boolean boolean26 = switchingFunctionsHandler20.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        double double37 = switchingFunctionsHandler34.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        switchingFunctionsHandler34.add(switchingFunction38, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = switchingFunctionsHandler44.evaluateStep(stepInterpolator45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler48.evaluateStep(stepInterpolator49);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler48.evaluateStep(stepInterpolator51);
        double[] doubleArray58 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler48.stepAccepted((double) (byte) 1, doubleArray58);
        boolean boolean60 = switchingFunctionsHandler44.reset((double) (byte) 1, doubleArray58);
        boolean boolean61 = switchingFunctionsHandler34.reset((double) '4', doubleArray58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler62.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = switchingFunctionsHandler66.evaluateStep(stepInterpolator67);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler66.evaluateStep(stepInterpolator69);
        double[] doubleArray76 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler66.stepAccepted((double) (byte) 1, doubleArray76);
        boolean boolean78 = switchingFunctionsHandler62.reset((double) (byte) 1, doubleArray76);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator79 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray58, doubleArray76);
        boolean boolean80 = switchingFunctionsHandler30.reset(31.144823004794873d, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler81 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        boolean boolean83 = switchingFunctionsHandler81.evaluateStep(stepInterpolator82);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        boolean boolean85 = switchingFunctionsHandler81.evaluateStep(stepInterpolator84);
        double[] doubleArray91 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler81.stepAccepted((double) (byte) 1, doubleArray91);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator93 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 10, doubleArray58, doubleArray91);
        boolean boolean94 = switchingFunctionsHandler20.reset((double) 'a', doubleArray58);
        boolean boolean95 = switchingFunctionsHandler0.reset(3.1622776601683795d, doubleArray58);
        java.lang.Class<?> wildcardClass96 = doubleArray58.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test15376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15376");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator18.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator18.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler22 = null;
        highamHall54Integrator18.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator18.getMaxStep();
        double double25 = highamHall54Integrator18.getMinStep();
        double double26 = highamHall54Integrator18.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator31.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator31.getStepHandler();
        boolean boolean36 = stepHandler35.requiresDenseOutput();
        highamHall54Integrator18.setStepHandler(stepHandler35);
        java.lang.String str38 = highamHall54Integrator18.getName();
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler39);
        double double41 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double42 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction(47.753019278348006d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Higham-Hall 5(4)" + "'", str38, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
    }

    @Test
    public void test15377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15377");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, (double) 10, (double) '#', (double) 1L);
        double double5 = highamHall54Integrator4.getSafety();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator11 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator11.getStepHandler();
        highamHall54Integrator11.setMinReduction((double) 10L);
        double double15 = highamHall54Integrator11.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator11.getStepHandler();
        double double17 = highamHall54Integrator11.getCurrentSignedStepsize();
        double double18 = highamHall54Integrator11.getSafety();
        double double19 = highamHall54Integrator11.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator11.getStepHandler();
        boolean boolean21 = stepHandler20.requiresDenseOutput();
        stepHandler20.reset();
        highamHall54Integrator4.setStepHandler(stepHandler20);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9d + "'", double5 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test15378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15378");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(32.0d, 2.449489742783178d, 97.0d, (double) (short) 0);
    }

    @Test
    public void test15379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15379");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getMinStep();
        double double13 = highamHall54Integrator4.getSafety();
        double double14 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.9d + "'", double13 == 0.9d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
    }

    @Test
    public void test15380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15380");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 3.1622776601683795d, (double) (-1.0f), 0.0d);
        int int5 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
    }

    @Test
    public void test15381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15381");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str13 = highamHall54Integrator4.getName();
        java.lang.String str14 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, 31.144823004794873d, (double) '#', (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction20, (double) 10, (double) (byte) -1, (int) (byte) 1);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator29.getStepHandler();
        double double31 = highamHall54Integrator29.getMinStep();
        double double32 = highamHall54Integrator29.getCurrentSignedStepsize();
        highamHall54Integrator29.setInitialStepSize(10.0d);
        double double35 = highamHall54Integrator29.getMinStep();
        double double36 = highamHall54Integrator29.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler42 = highamHall54Integrator41.getStepHandler();
        double double43 = highamHall54Integrator41.getMinStep();
        double double44 = highamHall54Integrator41.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler45 = highamHall54Integrator41.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        stepHandler45.handleStep(stepInterpolator46, false);
        highamHall54Integrator29.setStepHandler(stepHandler45);
        java.lang.String str50 = highamHall54Integrator29.getName();
        double double51 = highamHall54Integrator29.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler52 = highamHall54Integrator29.getStepHandler();
        double double53 = highamHall54Integrator29.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler54);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction56, 0.0d, 3.1622776601683795d, (int) (short) -1);
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Higham-Hall 5(4)" + "'", str50, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.9d + "'", double53 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertNotNull(stepHandler61);
    }

    @Test
    public void test15382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15382");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler11 = null;
        highamHall54Integrator4.setStepHandler(stepHandler11);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
    }

    @Test
    public void test15383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15383");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        double double6 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str7 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
    }

    @Test
    public void test15384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15384");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator31.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator31.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator31.getMinReduction();
        int int38 = highamHall54Integrator31.getOrder();
        highamHall54Integrator31.setInitialStepSize((double) '4');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler46 = null;
        highamHall54Integrator45.setStepHandler(stepHandler46);
        double double48 = highamHall54Integrator45.getCurrentSignedStepsize();
        double double49 = highamHall54Integrator45.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator54.getStepHandler();
        highamHall54Integrator45.setStepHandler(stepHandler55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        stepHandler55.handleStep(stepInterpolator57, true);
        highamHall54Integrator31.setStepHandler(stepHandler55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        stepHandler55.handleStep(stepInterpolator61, true);
        highamHall54Integrator4.setStepHandler(stepHandler55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator69.setSafety((double) '4');
        highamHall54Integrator69.setMaxGrowth(0.0d);
        double double74 = highamHall54Integrator69.getMinReduction();
        highamHall54Integrator69.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler77 = highamHall54Integrator69.getStepHandler();
        java.lang.String str78 = highamHall54Integrator69.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction79 = null;
        highamHall54Integrator69.addSwitchingFunction(switchingFunction79, (double) (byte) 0, (double) (-1), (int) (byte) -1);
        java.lang.String str84 = highamHall54Integrator69.getName();
        org.apache.commons.math.ode.StepHandler stepHandler85 = highamHall54Integrator69.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler85);
        highamHall54Integrator4.setMinReduction(3.1622776601683795d);
        java.lang.String str89 = highamHall54Integrator4.getName();
        double double90 = highamHall54Integrator4.getCurrentStepStart();
        int int91 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2d + "'", double37 == 0.2d);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.2d + "'", double74 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Higham-Hall 5(4)" + "'", str78, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Higham-Hall 5(4)" + "'", str84, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler85);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Higham-Hall 5(4)" + "'", str89, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 5 + "'", int91 == 5);
    }

    @Test
    public void test15385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15385");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        int int11 = highamHall54Integrator4.getOrder();
        int int12 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setSafety((double) (short) 10);
        int int16 = highamHall54Integrator4.getOrder();
        double double17 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNull(stepHandler13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test15386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15386");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler2.add(switchingFunction5, 0.0d, (double) (-1.0f), (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler2.add(switchingFunction10, 0.0d, (double) 3, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler16.add(switchingFunction17, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean22 = switchingFunctionsHandler16.isEmpty();
        boolean boolean23 = switchingFunctionsHandler16.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler29.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler29.evaluateStep(stepInterpolator32);
        double[] doubleArray39 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler29.stepAccepted((double) (byte) 1, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray39);
        boolean boolean42 = switchingFunctionsHandler16.reset((double) 1L, doubleArray39);
        boolean boolean43 = switchingFunctionsHandler2.reset((double) (byte) 100, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        switchingFunctionsHandler44.add(switchingFunction45, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean50 = switchingFunctionsHandler44.isEmpty();
        boolean boolean51 = switchingFunctionsHandler44.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = switchingFunctionsHandler53.evaluateStep(stepInterpolator54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler57.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler57.evaluateStep(stepInterpolator60);
        double[] doubleArray67 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler57.stepAccepted((double) (byte) 1, doubleArray67);
        boolean boolean69 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray67);
        boolean boolean70 = switchingFunctionsHandler44.reset((double) 1L, doubleArray67);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator71 = new org.apache.commons.math.ode.HighamHall54Integrator(2.23606797749979d, 3.1622776601683795d, doubleArray39, doubleArray67);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test15387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15387");
        double[] doubleArray8 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray8, doubleArray11);
        highamHall54Integrator20.setMaxGrowth((double) 1.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator20.addSwitchingFunction(switchingFunction23, (double) (byte) 0, (double) 1, (int) (byte) 0);
        double double28 = highamHall54Integrator20.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator20.addSwitchingFunction(switchingFunction29, 5.656854249492381d, (double) (byte) 0, 1);
        java.lang.String str34 = highamHall54Integrator20.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
    }

    @Test
    public void test15388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15388");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 10.0d, (double) (-1), (double) (short) -1);
        int int5 = highamHall54Integrator4.getOrder();
        java.lang.String str6 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        double double8 = highamHall54Integrator4.getMaxGrowth();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 3.1622776601683795d + "'", double9 == 3.1622776601683795d);
    }

    @Test
    public void test15389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15389");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        double double6 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray10 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean12 = switchingFunctionsHandler11.isEmpty();
        boolean boolean13 = switchingFunctionsHandler11.stop();
        double double14 = switchingFunctionsHandler11.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler11.add(switchingFunction15, 0.0d, (double) (short) 100, 1);
        double[] doubleArray26 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        double double30 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler27.add(switchingFunction31, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler37.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler41.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler41.evaluateStep(stepInterpolator44);
        double[] doubleArray51 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler41.stepAccepted((double) (byte) 1, doubleArray51);
        boolean boolean53 = switchingFunctionsHandler37.reset((double) (byte) 1, doubleArray51);
        boolean boolean54 = switchingFunctionsHandler27.reset((double) '4', doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator55 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray26, doubleArray51);
        boolean boolean56 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 31.144823004794873d, doubleArray10, doubleArray51);
        switchingFunctionsHandler0.stepAccepted((double) (byte) -1, doubleArray51);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test15390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15390");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) (-1.0f), (double) (short) 1, 100);
        java.lang.String str16 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize((double) 1L);
        java.lang.String str19 = highamHall54Integrator4.getName();
        int int20 = highamHall54Integrator4.getOrder();
        java.lang.String str21 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction22, 0.0d, 10.198039027185569d, (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
    }

    @Test
    public void test15391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15391");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((-0.0d), (double) (short) 100, 0.0d, 0.7952707287670507d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, 31.622776601683793d, (-0.0d), (int) (byte) -1);
    }

    @Test
    public void test15392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15392");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        boolean boolean4 = switchingFunctionsHandler0.stop();
        double double5 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        double[] doubleArray17 = new double[] { 1, (short) 100, 1.0f, 10.0d, (byte) 0, (short) 100 };
        double[] doubleArray28 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray31 = null;
        double[] doubleArray38 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator39 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray31, doubleArray38);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray28, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler41.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler45.evaluateStep(stepInterpolator46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler45.evaluateStep(stepInterpolator48);
        double[] doubleArray55 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler45.stepAccepted((double) (byte) 1, doubleArray55);
        boolean boolean57 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray28, doubleArray55);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator59 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (byte) 1, doubleArray17, doubleArray28);
        switchingFunctionsHandler0.stepAccepted((double) (byte) -1, doubleArray28);
        double double61 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        switchingFunctionsHandler0.add(switchingFunction62, (double) (byte) 100, 31.622776601683793d, (int) (byte) -1);
        boolean boolean67 = switchingFunctionsHandler0.isEmpty();
        boolean boolean68 = switchingFunctionsHandler0.isEmpty();
        double double69 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
    }

    @Test
    public void test15393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15393");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, (double) (byte) 0, (double) (-1), (int) (byte) -1);
        java.lang.String str19 = highamHall54Integrator4.getName();
        java.lang.String str20 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler22 = highamHall54Integrator4.getStepHandler();
        int int23 = highamHall54Integrator4.getOrder();
        java.lang.String str24 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
    }

    @Test
    public void test15394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15394");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        double double39 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str40 = highamHall54Integrator4.getName();
        java.lang.String str41 = highamHall54Integrator4.getName();
        int int42 = highamHall54Integrator4.getOrder();
        java.lang.String str43 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler44);
    }

    @Test
    public void test15395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15395");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getSafety();
        double double12 = highamHall54Integrator4.getMaxStep();
        int int13 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator18.setInitialStepSize((double) 3);
        double double22 = highamHall54Integrator18.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator27.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = null;
        highamHall54Integrator35.setStepHandler(stepHandler36);
        double double38 = highamHall54Integrator35.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler39 = null;
        highamHall54Integrator35.setStepHandler(stepHandler39);
        double double41 = highamHall54Integrator35.getMaxStep();
        double double42 = highamHall54Integrator35.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator47.getStepHandler();
        highamHall54Integrator35.setStepHandler(stepHandler48);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler55 = null;
        highamHall54Integrator54.setStepHandler(stepHandler55);
        double double57 = highamHall54Integrator54.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler58 = null;
        highamHall54Integrator54.setStepHandler(stepHandler58);
        double double60 = highamHall54Integrator54.getMaxStep();
        double double61 = highamHall54Integrator54.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator66 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler67 = highamHall54Integrator66.getStepHandler();
        highamHall54Integrator54.setStepHandler(stepHandler67);
        highamHall54Integrator35.setStepHandler(stepHandler67);
        highamHall54Integrator27.setStepHandler(stepHandler67);
        highamHall54Integrator18.setStepHandler(stepHandler67);
        double double72 = highamHall54Integrator18.getCurrentStepStart();
        java.lang.String str73 = highamHall54Integrator18.getName();
        org.apache.commons.math.ode.StepHandler stepHandler74 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler74);
        java.lang.String str76 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1.0d) + "'", double41 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1.0d) + "'", double60 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Higham-Hall 5(4)" + "'", str73, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Higham-Hall 5(4)" + "'", str76, "Higham-Hall 5(4)");
    }

    @Test
    public void test15396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15396");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, (double) (-1.0f), (double) (byte) 0, (int) (short) -1);
        double double14 = highamHall54Integrator4.getCurrentSignedStepsize();
        int int15 = highamHall54Integrator4.getOrder();
        double double16 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
    }

    @Test
    public void test15397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15397");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        double[] doubleArray9 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler10.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler14.evaluateStep(stepInterpolator15);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler14.evaluateStep(stepInterpolator17);
        double[] doubleArray24 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler14.stepAccepted((double) (byte) 1, doubleArray24);
        boolean boolean26 = switchingFunctionsHandler10.reset((double) (byte) 1, doubleArray24);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) (-1), doubleArray9, doubleArray24);
        boolean boolean28 = switchingFunctionsHandler0.reset(2.0d, doubleArray24);
        boolean boolean29 = switchingFunctionsHandler0.stop();
        double double30 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test15398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15398");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator31.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator31.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator31.getMinReduction();
        int int38 = highamHall54Integrator31.getOrder();
        highamHall54Integrator31.setInitialStepSize((double) '4');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler46 = null;
        highamHall54Integrator45.setStepHandler(stepHandler46);
        double double48 = highamHall54Integrator45.getCurrentSignedStepsize();
        double double49 = highamHall54Integrator45.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator54.getStepHandler();
        highamHall54Integrator45.setStepHandler(stepHandler55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        stepHandler55.handleStep(stepInterpolator57, true);
        highamHall54Integrator31.setStepHandler(stepHandler55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        stepHandler55.handleStep(stepInterpolator61, true);
        highamHall54Integrator4.setStepHandler(stepHandler55);
        double double65 = highamHall54Integrator4.getSafety();
        int int66 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler67 = highamHall54Integrator4.getStepHandler();
        double double68 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str69 = highamHall54Integrator4.getName();
        double double70 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.2d + "'", double37 == 0.2d);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.9d + "'", double65 == 0.9d);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Higham-Hall 5(4)" + "'", str69, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 10.0d + "'", double70 == 10.0d);
    }

    @Test
    public void test15399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15399");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) (byte) 10, (double) (byte) 10, (double) (byte) 1);
        double double5 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
    }

    @Test
    public void test15400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15400");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth(97.0d);
        java.lang.String str30 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler31 = highamHall54Integrator4.getStepHandler();
        java.lang.String str32 = highamHall54Integrator4.getName();
        int int33 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.2d + "'", double26 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Higham-Hall 5(4)" + "'", str32, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
    }

    @Test
    public void test15401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15401");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator14 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator14.getStepHandler();
        highamHall54Integrator14.setMinReduction(10.0d);
        int int18 = highamHall54Integrator14.getOrder();
        java.lang.String str19 = highamHall54Integrator14.getName();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator14.getStepHandler();
        java.lang.String str21 = highamHall54Integrator14.getName();
        double double22 = highamHall54Integrator14.getMaxStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator32 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler33 = null;
        highamHall54Integrator32.setStepHandler(stepHandler33);
        double double35 = highamHall54Integrator32.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler36 = null;
        highamHall54Integrator32.setStepHandler(stepHandler36);
        double double38 = highamHall54Integrator32.getMaxStep();
        double double39 = highamHall54Integrator32.getMinStep();
        double double40 = highamHall54Integrator32.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator45.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator45.getStepHandler();
        boolean boolean50 = stepHandler49.requiresDenseOutput();
        highamHall54Integrator32.setStepHandler(stepHandler49);
        double double52 = highamHall54Integrator32.getSafety();
        java.lang.String str53 = highamHall54Integrator32.getName();
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator32.getStepHandler();
        highamHall54Integrator27.setStepHandler(stepHandler54);
        highamHall54Integrator14.setStepHandler(stepHandler54);
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator14.getStepHandler();
        stepHandler57.reset();
        highamHall54Integrator4.setStepHandler(stepHandler57);
        boolean boolean60 = stepHandler57.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.0d) + "'", double38 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.9d + "'", double52 == 0.9d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Higham-Hall 5(4)" + "'", str53, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test15402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15402");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler10 = null;
        highamHall54Integrator4.setStepHandler(stepHandler10);
        double double12 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        double double16 = highamHall54Integrator4.getSafety();
        double double17 = highamHall54Integrator4.getMaxStep();
        java.lang.String str18 = highamHall54Integrator4.getName();
        double double19 = highamHall54Integrator4.getMaxStep();
        double double20 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.2d + "'", double12 == 0.2d);
        org.junit.Assert.assertNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
    }

    @Test
    public void test15403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15403");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getSafety();
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, (double) 10.0f, Double.NaN, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction18, Double.NaN, 10.0d, 10);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9d + "'", double10 == 0.9d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test15404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15404");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, (double) 'a', 0.0d, (int) '4');
        highamHall54Integrator4.setMaxGrowth((double) '#');
        double double22 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMinReduction(1.0d);
        double double25 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test15405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15405");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str12 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety(35.0d);
        int int15 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction18, 2.514866859365871d, 5.656854249492381d, 0);
        double double23 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNull(stepHandler16);
        org.junit.Assert.assertNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 35.0d + "'", double23 == 35.0d);
    }

    @Test
    public void test15406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15406");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, 0.2d, (double) 1, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler21.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler21.evaluateStep(stepInterpolator24);
        double[] doubleArray31 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler21.stepAccepted((double) (byte) 1, doubleArray31);
        double[] doubleArray39 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler40.evaluateStep(stepInterpolator41);
        double double43 = switchingFunctionsHandler40.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        switchingFunctionsHandler40.add(switchingFunction44, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler54.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler54.evaluateStep(stepInterpolator57);
        double[] doubleArray64 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler54.stepAccepted((double) (byte) 1, doubleArray64);
        boolean boolean66 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray64);
        boolean boolean67 = switchingFunctionsHandler40.reset((double) '4', doubleArray64);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator68 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray39, doubleArray64);
        boolean boolean69 = switchingFunctionsHandler21.reset((double) (byte) 0, doubleArray64);
        boolean boolean70 = switchingFunctionsHandler0.reset((double) 2, doubleArray64);
        double double71 = switchingFunctionsHandler0.getEventTime();
        boolean boolean72 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test15407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15407");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getMinReduction();
        double double10 = highamHall54Integrator4.getMinReduction();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety((-0.0d));
        java.lang.String str14 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction15, (double) (byte) -1, (double) 0L, 10);
        double double20 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety(7.211102550927978d);
        highamHall54Integrator4.setMinReduction(4.216965034285822d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
    }

    @Test
    public void test15408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15408");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        java.lang.String str25 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        stepHandler26.handleStep(stepInterpolator27, true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler26);
    }

    @Test
    public void test15409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15409");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, 9.848857801796104d, (double) 0, (double) 1);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        java.lang.String str7 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) 10.0f);
        int int10 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator15.getStepHandler();
        double double17 = highamHall54Integrator15.getMinStep();
        double double18 = highamHall54Integrator15.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator15.getStepHandler();
        stepHandler19.reset();
        highamHall54Integrator4.setStepHandler(stepHandler19);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler19);
    }

    @Test
    public void test15410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15410");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double25 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double26 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction27, (double) 10.0f, (double) 10.0f, 0);
        highamHall54Integrator4.setInitialStepSize(0.0d);
        java.lang.String str34 = highamHall54Integrator4.getName();
        int int35 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler41 = null;
        highamHall54Integrator40.setStepHandler(stepHandler41);
        double double43 = highamHall54Integrator40.getCurrentSignedStepsize();
        double double44 = highamHall54Integrator40.getCurrentStepStart();
        java.lang.String str45 = highamHall54Integrator40.getName();
        double double46 = highamHall54Integrator40.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        highamHall54Integrator40.addSwitchingFunction(switchingFunction47, (double) 1.0f, (double) 100L, 0);
        highamHall54Integrator40.setSafety(0.0d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator58 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler59 = highamHall54Integrator58.getStepHandler();
        double double60 = highamHall54Integrator58.getCurrentStepStart();
        highamHall54Integrator58.setInitialStepSize((double) (byte) 0);
        double double63 = highamHall54Integrator58.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler64 = highamHall54Integrator58.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler70 = highamHall54Integrator69.getStepHandler();
        boolean boolean71 = stepHandler70.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator72 = null;
        stepHandler70.handleStep(stepInterpolator72, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator75 = null;
        stepHandler70.handleStep(stepInterpolator75, false);
        stepHandler70.reset();
        highamHall54Integrator58.setStepHandler(stepHandler70);
        org.apache.commons.math.ode.StepHandler stepHandler80 = highamHall54Integrator58.getStepHandler();
        stepHandler80.reset();
        highamHall54Integrator40.setStepHandler(stepHandler80);
        highamHall54Integrator4.setStepHandler(stepHandler80);
        java.lang.String str84 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler85 = highamHall54Integrator4.getStepHandler();
        stepHandler85.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.2d + "'", double26 == 0.2d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Higham-Hall 5(4)" + "'", str45, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(stepHandler80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Higham-Hall 5(4)" + "'", str84, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler85);
    }

    @Test
    public void test15411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15411");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = null;
        double[] doubleArray11 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray4, doubleArray11);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray4);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        boolean boolean17 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler0.evaluateStep(stepInterpolator18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler21.evaluateStep(stepInterpolator22);
        double double24 = switchingFunctionsHandler21.getEventTime();
        boolean boolean25 = switchingFunctionsHandler21.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler31.evaluateStep(stepInterpolator32);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler31.evaluateStep(stepInterpolator34);
        double[] doubleArray41 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler31.stepAccepted((double) (byte) 1, doubleArray41);
        boolean boolean43 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray41);
        double double44 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray48 = null;
        double[] doubleArray55 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator56 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray48, doubleArray55);
        boolean boolean57 = switchingFunctionsHandler27.reset((double) 10.0f, doubleArray55);
        boolean boolean58 = switchingFunctionsHandler21.reset((double) (byte) 10, doubleArray55);
        switchingFunctionsHandler0.stepAccepted((double) (-1.0f), doubleArray55);
        boolean boolean60 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test15412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15412");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getSafety();
        int int11 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9d + "'", double10 == 0.9d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertNotNull(stepHandler12);
    }

    @Test
    public void test15413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15413");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, (double) 0.0f, (double) 10L, (double) 10.0f);
        double double5 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9d + "'", double5 == 0.9d);
    }

    @Test
    public void test15414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15414");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler16);
        int int18 = highamHall54Integrator4.getOrder();
        java.lang.String str19 = highamHall54Integrator4.getName();
        java.lang.String str20 = highamHall54Integrator4.getName();
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        double double22 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str23 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Higham-Hall 5(4)" + "'", str23, "Higham-Hall 5(4)");
    }

    @Test
    public void test15415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15415");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) (byte) 100, (double) (-1), 0);
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, 5.0d, 31.622776601683793d, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator4.getStepHandler();
        stepHandler20.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        stepHandler20.handleStep(stepInterpolator22, false);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertNotNull(stepHandler20);
    }

    @Test
    public void test15416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15416");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler6.evaluateStep(stepInterpolator9);
        double[] doubleArray16 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler6.stepAccepted((double) (byte) 1, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray16);
        double double19 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray23 = null;
        double[] doubleArray30 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray23, doubleArray30);
        boolean boolean32 = switchingFunctionsHandler2.reset((double) 10.0f, doubleArray30);
        double[] doubleArray41 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray44 = null;
        double[] doubleArray51 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray44, doubleArray51);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray41, doubleArray44);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1L, 0.0d, doubleArray30, doubleArray44);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
    }

    @Test
    public void test15417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15417");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator13.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler22 = null;
        highamHall54Integrator21.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator21.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler25 = null;
        highamHall54Integrator21.setStepHandler(stepHandler25);
        double double27 = highamHall54Integrator21.getMaxStep();
        double double28 = highamHall54Integrator21.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator21.setStepHandler(stepHandler34);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler41 = null;
        highamHall54Integrator40.setStepHandler(stepHandler41);
        double double43 = highamHall54Integrator40.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler44 = null;
        highamHall54Integrator40.setStepHandler(stepHandler44);
        double double46 = highamHall54Integrator40.getMaxStep();
        double double47 = highamHall54Integrator40.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator40.setStepHandler(stepHandler53);
        highamHall54Integrator21.setStepHandler(stepHandler53);
        highamHall54Integrator13.setStepHandler(stepHandler53);
        highamHall54Integrator4.setStepHandler(stepHandler53);
        java.lang.String str58 = highamHall54Integrator4.getName();
        double double59 = highamHall54Integrator4.getCurrentStepStart();
        double double60 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Higham-Hall 5(4)" + "'", str58, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.2d + "'", double60 == 0.2d);
    }

    @Test
    public void test15418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15418");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        double double5 = switchingFunctionsHandler2.getEventTime();
        boolean boolean6 = switchingFunctionsHandler2.stop();
        boolean boolean7 = switchingFunctionsHandler2.isEmpty();
        double[] doubleArray17 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray20 = null;
        double[] doubleArray27 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator28 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray20, doubleArray27);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray17, doubleArray20);
        boolean boolean30 = switchingFunctionsHandler2.reset(0.9d, doubleArray17);
        double[] doubleArray39 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray42 = null;
        double[] doubleArray49 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator50 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray42, doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator51 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray39, doubleArray42);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 10.0f, doubleArray17, doubleArray42);
        double double53 = highamHall54Integrator52.getMinReduction();
        double double54 = highamHall54Integrator52.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        highamHall54Integrator52.addSwitchingFunction(switchingFunction55, 31.622776601683793d, 10.198039027185569d, (int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2d + "'", double53 == 0.2d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
    }

    @Test
    public void test15419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15419");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        java.lang.String str8 = highamHall54Integrator4.getName();
        int int9 = highamHall54Integrator4.getOrder();
        int int10 = highamHall54Integrator4.getOrder();
        double double11 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
    }

    @Test
    public void test15420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15420");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator18.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator18.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler22 = null;
        highamHall54Integrator18.setStepHandler(stepHandler22);
        double double24 = highamHall54Integrator18.getMaxStep();
        double double25 = highamHall54Integrator18.getMinStep();
        double double26 = highamHall54Integrator18.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator31.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator31.getStepHandler();
        boolean boolean36 = stepHandler35.requiresDenseOutput();
        highamHall54Integrator18.setStepHandler(stepHandler35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        stepHandler35.handleStep(stepInterpolator38, true);
        stepHandler35.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        stepHandler35.handleStep(stepInterpolator42, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        stepHandler35.handleStep(stepInterpolator45, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        stepHandler35.handleStep(stepInterpolator48, true);
        highamHall54Integrator4.setStepHandler(stepHandler35);
        highamHall54Integrator4.setMinReduction(0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test15421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15421");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth(31.144823004794873d);
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        double double14 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test15422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15422");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) 1.0f, (double) 100L, 0);
        highamHall54Integrator4.setSafety(0.0d);
        double double18 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator4.getStepHandler();
        double double20 = highamHall54Integrator4.getMaxStep();
        double double21 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
    }

    @Test
    public void test15423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15423");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, 0.2d, 10.0d, 2);
        int int19 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, Double.NaN, (double) (-1), (double) 100.0f);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator29 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler30 = highamHall54Integrator29.getStepHandler();
        highamHall54Integrator29.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator29.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler39 = null;
        highamHall54Integrator38.setStepHandler(stepHandler39);
        double double41 = highamHall54Integrator38.getCurrentSignedStepsize();
        double double42 = highamHall54Integrator38.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler48 = highamHall54Integrator47.getStepHandler();
        highamHall54Integrator38.setStepHandler(stepHandler48);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        stepHandler48.handleStep(stepInterpolator50, true);
        highamHall54Integrator29.setStepHandler(stepHandler48);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        stepHandler48.handleStep(stepInterpolator54, true);
        highamHall54Integrator24.setStepHandler(stepHandler48);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        stepHandler48.handleStep(stepInterpolator58, false);
        highamHall54Integrator4.setStepHandler(stepHandler48);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction62, 5.0d, (double) '4', (int) '4');
        int int67 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 5 + "'", int67 == 5);
    }

    @Test
    public void test15424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15424");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator4.setMinReduction((double) 10.0f);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str8 = highamHall54Integrator4.getName();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str10 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) (-1L), 31.622776601683793d, 2);
        highamHall54Integrator4.setMaxGrowth((double) 10.0f);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator22.getStepHandler();
        highamHall54Integrator22.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator22.getStepHandler();
        double double27 = highamHall54Integrator22.getCurrentStepStart();
        double double28 = highamHall54Integrator22.getCurrentSignedStepsize();
        double double29 = highamHall54Integrator22.getCurrentStepStart();
        highamHall54Integrator22.setSafety(0.0d);
        double double32 = highamHall54Integrator22.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler33 = highamHall54Integrator22.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler33);
        boolean boolean35 = stepHandler33.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test15425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15425");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (-1L));
        double double14 = highamHall54Integrator4.getSafety();
        double double15 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.9d + "'", double14 == 0.9d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
    }

    @Test
    public void test15426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15426");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setInitialStepSize(0.0d);
        double double28 = highamHall54Integrator4.getMinStep();
        double double29 = highamHall54Integrator4.getSafety();
        double double30 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setSafety(97.0d);
        int int33 = highamHall54Integrator4.getOrder();
        double double34 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setMaxGrowth(3.1622776601683795d);
        java.lang.String str37 = highamHall54Integrator4.getName();
        double double38 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = null;
        highamHall54Integrator43.setStepHandler(stepHandler44);
        double double46 = highamHall54Integrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler47 = null;
        highamHall54Integrator43.setStepHandler(stepHandler47);
        double double49 = highamHall54Integrator43.getMaxStep();
        double double50 = highamHall54Integrator43.getMaxGrowth();
        java.lang.String str51 = highamHall54Integrator43.getName();
        double double52 = highamHall54Integrator43.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler58 = null;
        highamHall54Integrator57.setStepHandler(stepHandler58);
        double double60 = highamHall54Integrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler61 = null;
        highamHall54Integrator57.setStepHandler(stepHandler61);
        double double63 = highamHall54Integrator57.getMaxStep();
        double double64 = highamHall54Integrator57.getMinStep();
        double double65 = highamHall54Integrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator70 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler71 = highamHall54Integrator70.getStepHandler();
        highamHall54Integrator70.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler74 = highamHall54Integrator70.getStepHandler();
        boolean boolean75 = stepHandler74.requiresDenseOutput();
        highamHall54Integrator57.setStepHandler(stepHandler74);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator77 = null;
        stepHandler74.handleStep(stepInterpolator77, true);
        stepHandler74.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator81 = null;
        stepHandler74.handleStep(stepInterpolator81, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        stepHandler74.handleStep(stepInterpolator84, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator87 = null;
        stepHandler74.handleStep(stepInterpolator87, true);
        highamHall54Integrator43.setStepHandler(stepHandler74);
        java.lang.String str91 = highamHall54Integrator43.getName();
        int int92 = highamHall54Integrator43.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler93 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler93);
        boolean boolean95 = stepHandler93.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.9d + "'", double29 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1.0d) + "'", double49 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Higham-Hall 5(4)" + "'", str51, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.2d + "'", double52 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 10.0d + "'", double64 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(stepHandler71);
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Higham-Hall 5(4)" + "'", str91, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 5 + "'", int92 == 5);
        org.junit.Assert.assertNotNull(stepHandler93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test15427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15427");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        java.lang.String str8 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setMaxGrowth((double) 0.0f);
        int int11 = highamHall54Integrator4.getOrder();
        double double12 = highamHall54Integrator4.getMinStep();
        java.lang.String str13 = highamHall54Integrator4.getName();
        java.lang.String str14 = highamHall54Integrator4.getName();
        int int15 = highamHall54Integrator4.getOrder();
        java.lang.String str16 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator4.getStepHandler();
        double double18 = highamHall54Integrator4.getSafety();
        double double19 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double20 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Higham-Hall 5(4)" + "'", str14, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.9d + "'", double18 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.9d + "'", double20 == 0.9d);
    }

    @Test
    public void test15428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15428");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler9 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 5);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = null;
        highamHall54Integrator16.setStepHandler(stepHandler17);
        double double19 = highamHall54Integrator16.getCurrentSignedStepsize();
        double double20 = highamHall54Integrator16.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator25.getStepHandler();
        highamHall54Integrator16.setStepHandler(stepHandler26);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        stepHandler26.handleStep(stepInterpolator28, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        stepHandler26.handleStep(stepInterpolator31, false);
        highamHall54Integrator4.setStepHandler(stepHandler26);
        java.lang.String str35 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator4.getStepHandler();
        double double37 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str38 = highamHall54Integrator4.getName();
        double double39 = highamHall54Integrator4.getSafety();
        double double40 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler41 = highamHall54Integrator4.getStepHandler();
        boolean boolean42 = stepHandler41.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Higham-Hall 5(4)" + "'", str35, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Higham-Hall 5(4)" + "'", str38, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.9d + "'", double39 == 0.9d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test15429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15429");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        double double18 = highamHall54Integrator16.getMinStep();
        double double19 = highamHall54Integrator16.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator16.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        stepHandler20.handleStep(stepInterpolator21, false);
        highamHall54Integrator4.setStepHandler(stepHandler20);
        highamHall54Integrator4.setMinReduction(31.144823004794873d);
        highamHall54Integrator4.setMinReduction((double) 1);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = null;
        highamHall54Integrator33.setStepHandler(stepHandler34);
        double double36 = highamHall54Integrator33.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler37 = null;
        highamHall54Integrator33.setStepHandler(stepHandler37);
        double double39 = highamHall54Integrator33.getMaxStep();
        double double40 = highamHall54Integrator33.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        highamHall54Integrator33.setStepHandler(stepHandler46);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler53 = null;
        highamHall54Integrator52.setStepHandler(stepHandler53);
        double double55 = highamHall54Integrator52.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler56 = null;
        highamHall54Integrator52.setStepHandler(stepHandler56);
        double double58 = highamHall54Integrator52.getMaxStep();
        double double59 = highamHall54Integrator52.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator64 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler65 = highamHall54Integrator64.getStepHandler();
        highamHall54Integrator52.setStepHandler(stepHandler65);
        highamHall54Integrator33.setStepHandler(stepHandler65);
        double double68 = highamHall54Integrator33.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler69 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler69);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction71, 59.16079783099616d, (double) 10L, 2);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 10.0d + "'", double40 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler65);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler69);
    }

    @Test
    public void test15430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15430");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        java.lang.String str7 = highamHall54Integrator4.getName();
        java.lang.String str8 = highamHall54Integrator4.getName();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
    }

    @Test
    public void test15431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15431");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator4.getStepHandler();
        double double30 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double31 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMinReduction(0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test15432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15432");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setInitialStepSize(10.0d);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        double double18 = highamHall54Integrator16.getMinStep();
        double double19 = highamHall54Integrator16.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler20 = highamHall54Integrator16.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        stepHandler20.handleStep(stepInterpolator21, false);
        highamHall54Integrator4.setStepHandler(stepHandler20);
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getMinStep();
        double double27 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction((double) (byte) 100);
        double double30 = highamHall54Integrator4.getSafety();
        double double31 = highamHall54Integrator4.getMaxGrowth();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
    }

    @Test
    public void test15433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15433");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) 10, (double) (short) 0, 0.0d);
        int int5 = highamHall54Integrator4.getOrder();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, 3.7829664360127033d, (double) (byte) 0, 0);
        int int12 = highamHall54Integrator4.getOrder();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
    }

    @Test
    public void test15434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15434");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        int int10 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety(0.9d);
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertNotNull(stepHandler13);
    }

    @Test
    public void test15435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15435");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, (double) (byte) 0, (double) (byte) 0, (double) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction5, 3.7829664360127033d, 16.640943104093186d, 0);
    }

    @Test
    public void test15436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15436");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        int int12 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setSafety(0.0d);
        java.lang.String str15 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setInitialStepSize(35.0d);
        double double18 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (-1.0d), (double) 10.0f, 10);
        double double24 = highamHall54Integrator4.getMinStep();
        double double25 = highamHall54Integrator4.getSafety();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test15437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15437");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        double double13 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction((-1.0d));
        int int16 = highamHall54Integrator4.getOrder();
        java.lang.String str17 = highamHall54Integrator4.getName();
        double double18 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Higham-Hall 5(4)" + "'", str17, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test15438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15438");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getMaxGrowth();
        double double27 = highamHall54Integrator4.getMinStep();
        double double28 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction29, (double) (byte) 100, (double) ' ', (int) '#');
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator4.getStepHandler();
        double double35 = highamHall54Integrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
    }

    @Test
    public void test15439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15439");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double[] doubleArray10 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler0.stepAccepted((double) (byte) 1, doubleArray10);
        double[] doubleArray18 = new double[] { (byte) -1, (byte) 100, ' ' };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler19.evaluateStep(stepInterpolator20);
        double double22 = switchingFunctionsHandler19.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler19.add(switchingFunction23, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler29.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler33.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler33.evaluateStep(stepInterpolator36);
        double[] doubleArray43 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler33.stepAccepted((double) (byte) 1, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray43);
        boolean boolean46 = switchingFunctionsHandler19.reset((double) '4', doubleArray43);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator47 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) (byte) 0, doubleArray18, doubleArray43);
        boolean boolean48 = switchingFunctionsHandler0.reset((double) (byte) 0, doubleArray43);
        boolean boolean49 = switchingFunctionsHandler0.stop();
        double double50 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 32.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test15440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15440");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, (double) (short) 10, (double) (byte) -1, (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction33, (double) (byte) 0, (double) 100.0f, (int) (byte) 1);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = null;
        highamHall54Integrator42.setStepHandler(stepHandler43);
        double double45 = highamHall54Integrator42.getCurrentSignedStepsize();
        double double46 = highamHall54Integrator42.getCurrentStepStart();
        double double47 = highamHall54Integrator42.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100.0f, (double) (short) 0, (double) (short) 1, (double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler53 = highamHall54Integrator52.getStepHandler();
        highamHall54Integrator42.setStepHandler(stepHandler53);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        highamHall54Integrator42.addSwitchingFunction(switchingFunction55, 0.9d, (double) '#', (int) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler60 = highamHall54Integrator42.getStepHandler();
        boolean boolean61 = stepHandler60.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler60);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        stepHandler60.handleStep(stepInterpolator63, true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test15441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15441");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        highamHall54Integrator4.setSafety((double) (short) -1);
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getCurrentStepStart();
        double double12 = highamHall54Integrator4.getMaxGrowth();
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        double double15 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test15442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15442");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMinReduction(17.78279410038923d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        highamHall54Integrator16.setMinReduction((double) 10.0f);
        double double19 = highamHall54Integrator16.getCurrentSignedStepsize();
        java.lang.String str20 = highamHall54Integrator16.getName();
        java.lang.String str21 = highamHall54Integrator16.getName();
        highamHall54Integrator16.setMaxGrowth((double) 1L);
        highamHall54Integrator16.setMaxGrowth((double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator16.setMaxGrowth(0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler29 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler29);
        double double31 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Higham-Hall 5(4)" + "'", str21, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test15443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15443");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMinReduction();
        int int11 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) '4');
        highamHall54Integrator4.setInitialStepSize((double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) 0.0f, (double) (byte) 10, (int) '#');
        highamHall54Integrator4.setInitialStepSize((double) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler24 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertNull(stepHandler23);
        org.junit.Assert.assertNull(stepHandler24);
    }

    @Test
    public void test15444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15444");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMaxGrowth((double) (byte) 0);
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double11 = highamHall54Integrator4.getSafety();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        double double19 = highamHall54Integrator17.getCurrentStepStart();
        highamHall54Integrator17.setInitialStepSize((double) (byte) 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double27 = highamHall54Integrator26.getCurrentStepStart();
        double double28 = highamHall54Integrator26.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        double double35 = highamHall54Integrator33.getMinStep();
        double double36 = highamHall54Integrator33.getCurrentSignedStepsize();
        highamHall54Integrator33.setInitialStepSize(10.0d);
        double double39 = highamHall54Integrator33.getMinStep();
        double double40 = highamHall54Integrator33.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        double double47 = highamHall54Integrator45.getMinStep();
        double double48 = highamHall54Integrator45.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler49 = highamHall54Integrator45.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        stepHandler49.handleStep(stepInterpolator50, false);
        highamHall54Integrator33.setStepHandler(stepHandler49);
        highamHall54Integrator26.setStepHandler(stepHandler49);
        stepHandler49.reset();
        highamHall54Integrator17.setStepHandler(stepHandler49);
        double double57 = highamHall54Integrator17.getMaxGrowth();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        highamHall54Integrator17.addSwitchingFunction(switchingFunction58, (double) (-1.0f), (double) (-1), (int) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler63 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler63);
        double double65 = highamHall54Integrator4.getCurrentStepStart();
        double double66 = highamHall54Integrator4.getCurrentStepStart();
        double double67 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction(3.0d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 100.0d + "'", double28 == 100.0d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.9d + "'", double67 == 0.9d);
    }

    @Test
    public void test15445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15445");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator13 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator13.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler14);
        double double16 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction17, (double) (short) 100, (double) 0, 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction22, 2.0d, (double) (-1), (int) (byte) 100);
        double double27 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler30.evaluateStep(stepInterpolator31);
        double double33 = switchingFunctionsHandler30.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler30.add(switchingFunction34, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler40.evaluateStep(stepInterpolator41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = switchingFunctionsHandler44.evaluateStep(stepInterpolator45);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler44.evaluateStep(stepInterpolator47);
        double[] doubleArray54 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler44.stepAccepted((double) (byte) 1, doubleArray54);
        boolean boolean56 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray54);
        boolean boolean57 = switchingFunctionsHandler30.reset((double) '4', doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler58.evaluateStep(stepInterpolator59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler62.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = switchingFunctionsHandler62.evaluateStep(stepInterpolator65);
        double[] doubleArray72 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler62.stepAccepted((double) (byte) 1, doubleArray72);
        boolean boolean74 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray72);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0L, 0.0d, doubleArray54, doubleArray72);
        double double76 = highamHall54Integrator75.getMinStep();
        highamHall54Integrator75.setSafety((double) (byte) 10);
        java.lang.String str79 = highamHall54Integrator75.getName();
        double double80 = highamHall54Integrator75.getMinReduction();
        double double81 = highamHall54Integrator75.getCurrentStepStart();
        java.lang.String str82 = highamHall54Integrator75.getName();
        org.apache.commons.math.ode.StepHandler stepHandler83 = highamHall54Integrator75.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler83);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction85 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction85, 0.0d, (double) (byte) 1, 5);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction90 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction90, 4.47213595499958d, 7.211102550927978d, (int) ' ');
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.9d + "'", double16 == 0.9d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.9d + "'", double27 == 0.9d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Higham-Hall 5(4)" + "'", str79, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.2d + "'", double80 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Higham-Hall 5(4)" + "'", str82, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler83);
    }

    @Test
    public void test15446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15446");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        double double39 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str40 = highamHall54Integrator4.getName();
        java.lang.String str41 = highamHall54Integrator4.getName();
        int int42 = highamHall54Integrator4.getOrder();
        double double43 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Higham-Hall 5(4)" + "'", str40, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
    }

    @Test
    public void test15447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15447");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        highamHall54Integrator4.setSafety((double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction13, (double) '#', (double) (byte) 10, (int) (byte) 10);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler23 = null;
        highamHall54Integrator22.setStepHandler(stepHandler23);
        double double25 = highamHall54Integrator22.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler26 = null;
        highamHall54Integrator22.setStepHandler(stepHandler26);
        double double28 = highamHall54Integrator22.getMaxStep();
        double double29 = highamHall54Integrator22.getMaxGrowth();
        java.lang.String str30 = highamHall54Integrator22.getName();
        int int31 = highamHall54Integrator22.getOrder();
        double double32 = highamHall54Integrator22.getMaxGrowth();
        int int33 = highamHall54Integrator22.getOrder();
        highamHall54Integrator22.setInitialStepSize((double) 'a');
        java.lang.String str36 = highamHall54Integrator22.getName();
        double double37 = highamHall54Integrator22.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator42.setSafety((double) '4');
        highamHall54Integrator42.setMaxGrowth(0.0d);
        double double47 = highamHall54Integrator42.getMinReduction();
        highamHall54Integrator42.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator42.getStepHandler();
        java.lang.String str51 = highamHall54Integrator42.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        highamHall54Integrator42.addSwitchingFunction(switchingFunction52, (double) (byte) 0, (double) (-1), (int) (byte) -1);
        java.lang.String str57 = highamHall54Integrator42.getName();
        org.apache.commons.math.ode.StepHandler stepHandler58 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator22.setStepHandler(stepHandler58);
        highamHall54Integrator4.setStepHandler(stepHandler58);
        highamHall54Integrator4.setInitialStepSize(5.656854249492381d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Higham-Hall 5(4)" + "'", str30, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Higham-Hall 5(4)" + "'", str36, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.2d + "'", double47 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Higham-Hall 5(4)" + "'", str51, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Higham-Hall 5(4)" + "'", str57, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler58);
    }

    @Test
    public void test15448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15448");
        double[] doubleArray8 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray8, doubleArray11);
        highamHall54Integrator20.setMaxGrowth((double) 1.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator20.addSwitchingFunction(switchingFunction23, (double) (byte) 10, 31.144823004794873d, (int) (short) 1);
        double double28 = highamHall54Integrator20.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator33.setMinReduction((double) 10L);
        double double37 = highamHall54Integrator33.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler38 = highamHall54Integrator33.getStepHandler();
        stepHandler38.reset();
        highamHall54Integrator20.setStepHandler(stepHandler38);
        double double41 = highamHall54Integrator20.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.9d + "'", double28 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(stepHandler38);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    }

    @Test
    public void test15449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15449");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        java.lang.String str13 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler14 = highamHall54Integrator4.getStepHandler();
        double double15 = highamHall54Integrator4.getMaxStep();
        double double16 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertNull(stepHandler14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
    }

    @Test
    public void test15450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15450");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentStepStart();
        double double27 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction28, 31.622776601683793d, 5.656854249492381d, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test15451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15451");
        double[] doubleArray10 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray13 = null;
        double[] doubleArray20 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator21 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray13, doubleArray20);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray10, doubleArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler23.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler27.evaluateStep(stepInterpolator30);
        double[] doubleArray37 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler27.stepAccepted((double) (byte) 1, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray37);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray10, doubleArray37);
        highamHall54Integrator40.setInitialStepSize((double) (byte) 1);
        java.lang.String str43 = highamHall54Integrator40.getName();
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator40.getStepHandler();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Higham-Hall 5(4)" + "'", str43, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler44);
    }

    @Test
    public void test15452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15452");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        highamHall54Integrator4.setSafety((double) 10.0f);
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        double double22 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double23 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test15453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15453");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        int int12 = highamHall54Integrator4.getOrder();
        double double13 = highamHall54Integrator4.getMaxGrowth();
        double double14 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test15454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15454");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety(100.0d);
        int int13 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction14, (-1.0d), 100.0d, (int) (short) 1);
        double double19 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMinReduction(52.0d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test15455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15455");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 0.0f, 0.0d, 100.0d, (double) (short) 100);
        highamHall54Integrator4.setSafety(0.0d);
    }

    @Test
    public void test15456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15456");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        java.lang.String str6 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, 100.0d, Double.NaN, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, (double) (short) 10, (double) (byte) -1, (int) (byte) -1);
        highamHall54Integrator4.setMaxGrowth(9.848857801796104d);
        highamHall54Integrator4.setInitialStepSize(0.7952707287670507d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
    }

    @Test
    public void test15457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15457");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = highamHall54Integrator4.getStepHandler();
        double double8 = highamHall54Integrator4.getMaxStep();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str10 = highamHall54Integrator4.getName();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, Double.NaN, 24.947901585376336d, (int) 'a');
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
    }

    @Test
    public void test15458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15458");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(10.0d, (double) 1L, 0.0d, 0.0d);
        double double5 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 100, Double.NaN, (int) (byte) 0);
        java.lang.String str11 = highamHall54Integrator4.getName();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler15 = highamHall54Integrator4.getStepHandler();
        boolean boolean16 = stepHandler15.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.1622776601683795d + "'", double12 == 3.1622776601683795d);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test15459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15459");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        double double12 = highamHall54Integrator4.getCurrentStepStart();
        double double13 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMinReduction((-1.0d));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, (double) (byte) 1, (double) 10, 0);
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test15460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15460");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, (double) 'a', (double) '#', (double) (-1));
        highamHall54Integrator4.setInitialStepSize(0.0d);
        java.lang.String str7 = highamHall54Integrator4.getName();
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getMinStep();
        highamHall54Integrator4.setSafety(100.0d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = null;
        highamHall54Integrator4.setStepHandler(stepHandler12);
        highamHall54Integrator4.setSafety((double) 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, 2.514866859365871d, 0.9d, 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
    }

    @Test
    public void test15461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15461");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator12.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator12.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler16);
        int int18 = highamHall54Integrator4.getOrder();
        java.lang.String str19 = highamHall54Integrator4.getName();
        java.lang.String str20 = highamHall54Integrator4.getName();
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        double double22 = highamHall54Integrator4.getMaxStep();
        double double23 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Higham-Hall 5(4)" + "'", str20, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test15462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15462");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator23 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler24 = null;
        highamHall54Integrator23.setStepHandler(stepHandler24);
        double double26 = highamHall54Integrator23.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = null;
        highamHall54Integrator23.setStepHandler(stepHandler27);
        double double29 = highamHall54Integrator23.getMaxStep();
        double double30 = highamHall54Integrator23.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator23.setStepHandler(stepHandler36);
        highamHall54Integrator4.setStepHandler(stepHandler36);
        double double39 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction40, 3.1622776601683795d, (double) 1.0f, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction45, (double) '#', (double) (byte) 10, 2);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator54.setSafety((double) '4');
        highamHall54Integrator54.setMaxGrowth(0.0d);
        double double59 = highamHall54Integrator54.getMinReduction();
        highamHall54Integrator54.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler62 = highamHall54Integrator54.getStepHandler();
        java.lang.String str63 = highamHall54Integrator54.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        highamHall54Integrator54.addSwitchingFunction(switchingFunction64, (double) (byte) 0, (double) (-1), (int) (byte) -1);
        java.lang.String str69 = highamHall54Integrator54.getName();
        org.apache.commons.math.ode.StepHandler stepHandler70 = highamHall54Integrator54.getStepHandler();
        boolean boolean71 = stepHandler70.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler70);
        int int73 = highamHall54Integrator4.getOrder();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.2d + "'", double59 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Higham-Hall 5(4)" + "'", str63, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Higham-Hall 5(4)" + "'", str69, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 5 + "'", int73 == 5);
    }

    @Test
    public void test15463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15463");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        boolean boolean4 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler10.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler10.evaluateStep(stepInterpolator13);
        double[] doubleArray20 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler10.stepAccepted((double) (byte) 1, doubleArray20);
        boolean boolean22 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray20);
        double double23 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray27 = null;
        double[] doubleArray34 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray27, doubleArray34);
        boolean boolean36 = switchingFunctionsHandler6.reset((double) 10.0f, doubleArray34);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray34);
        double double38 = switchingFunctionsHandler0.getEventTime();
        boolean boolean39 = switchingFunctionsHandler0.isEmpty();
        boolean boolean40 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray46 = null;
        double[] doubleArray53 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator54 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray46, doubleArray53);
        switchingFunctionsHandler42.stepAccepted((double) 10L, doubleArray46);
        boolean boolean56 = switchingFunctionsHandler42.stop();
        double[] doubleArray66 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray69 = null;
        double[] doubleArray76 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator77 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray69, doubleArray76);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator78 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray66, doubleArray69);
        boolean boolean79 = switchingFunctionsHandler42.reset((double) '4', doubleArray66);
        switchingFunctionsHandler0.stepAccepted(1.4142135623730951d, doubleArray66);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test15464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15464");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setMaxGrowth(0.2d);
        java.lang.String str13 = highamHall54Integrator4.getName();
        double double14 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
    }

    @Test
    public void test15465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15465");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) 10, (double) 1.0f, (int) '4');
        boolean boolean8 = switchingFunctionsHandler0.stop();
        double double9 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        double double14 = switchingFunctionsHandler11.getEventTime();
        boolean boolean15 = switchingFunctionsHandler11.stop();
        boolean boolean16 = switchingFunctionsHandler11.isEmpty();
        double[] doubleArray26 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray29 = null;
        double[] doubleArray36 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator37 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray29, doubleArray36);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray26, doubleArray29);
        boolean boolean39 = switchingFunctionsHandler11.reset(0.9d, doubleArray26);
        boolean boolean40 = switchingFunctionsHandler0.reset(0.0d, doubleArray26);
        java.lang.Class<?> wildcardClass41 = doubleArray26.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test15466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15466");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) '#', 3.3635856610148585d, 2.23606797749979d, 56.568542494923804d);
    }

    @Test
    public void test15467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15467");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (-1), (double) 3, 0.0d, (double) 10);
        double double5 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator10 = new org.apache.commons.math.ode.HighamHall54Integrator(97.0d, (double) 'a', (double) 0L, (double) (-1.0f));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator10.addSwitchingFunction(switchingFunction11, 56.568542494923804d, (double) 1L, (-1));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double21 = highamHall54Integrator20.getMinReduction();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator26 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator26.setSafety((double) '4');
        highamHall54Integrator26.setMaxGrowth(0.0d);
        double double31 = highamHall54Integrator26.getMinReduction();
        highamHall54Integrator26.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler34 = highamHall54Integrator26.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler34);
        double double36 = highamHall54Integrator20.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator20.getStepHandler();
        highamHall54Integrator10.setStepHandler(stepHandler37);
        highamHall54Integrator4.setStepHandler(stepHandler37);
        boolean boolean40 = stepHandler37.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.9d + "'", double5 == 0.9d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2d + "'", double21 == 0.2d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.2d + "'", double31 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test15468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15468");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction7, 100.0d, (double) 1.0f, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction12, 97.0d, 0.0d, (int) (short) 1);
        double double17 = highamHall54Integrator4.getMaxStep();
        double double18 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setMinReduction(5.0d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test15469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15469");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double14 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str15 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction16, 2.106706162744047d, 22.02271554554524d, (int) (byte) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Higham-Hall 5(4)" + "'", str15, "Higham-Hall 5(4)");
    }

    @Test
    public void test15470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15470");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler8 = highamHall54Integrator4.getStepHandler();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.String str11 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Higham-Hall 5(4)" + "'", str11, "Higham-Hall 5(4)");
    }

    @Test
    public void test15471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15471");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMinReduction();
        int int11 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setInitialStepSize((double) '4');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = null;
        highamHall54Integrator18.setStepHandler(stepHandler19);
        double double21 = highamHall54Integrator18.getCurrentSignedStepsize();
        double double22 = highamHall54Integrator18.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator27 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator27.getStepHandler();
        highamHall54Integrator18.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        stepHandler28.handleStep(stepInterpolator30, true);
        highamHall54Integrator4.setStepHandler(stepHandler28);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator38 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, 100.0d, (double) (short) -1, (double) 10);
        double double39 = highamHall54Integrator38.getCurrentStepStart();
        double double40 = highamHall54Integrator38.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator45 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator45.getStepHandler();
        double double47 = highamHall54Integrator45.getMinStep();
        double double48 = highamHall54Integrator45.getCurrentSignedStepsize();
        highamHall54Integrator45.setInitialStepSize(10.0d);
        double double51 = highamHall54Integrator45.getMinStep();
        double double52 = highamHall54Integrator45.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator57 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler58 = highamHall54Integrator57.getStepHandler();
        double double59 = highamHall54Integrator57.getMinStep();
        double double60 = highamHall54Integrator57.getMaxGrowth();
        org.apache.commons.math.ode.StepHandler stepHandler61 = highamHall54Integrator57.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        stepHandler61.handleStep(stepInterpolator62, false);
        highamHall54Integrator45.setStepHandler(stepHandler61);
        highamHall54Integrator38.setStepHandler(stepHandler61);
        highamHall54Integrator4.setStepHandler(stepHandler61);
        boolean boolean68 = stepHandler61.requiresDenseOutput();
        boolean boolean69 = stepHandler61.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        stepHandler61.handleStep(stepInterpolator70, false);
        boolean boolean73 = stepHandler61.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 100.0d + "'", double40 == 100.0d);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test15472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15472");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 10, 10.0d, (double) 10, Double.NaN);
        highamHall54Integrator4.setSafety((double) '4');
        highamHall54Integrator4.setMaxGrowth(0.0d);
        double double9 = highamHall54Integrator4.getMinReduction();
        highamHall54Integrator4.setSafety(0.2d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = highamHall54Integrator4.getStepHandler();
        java.lang.String str13 = highamHall54Integrator4.getName();
        double double14 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) (byte) 100);
        double double17 = highamHall54Integrator4.getMinStep();
        double double18 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator4.getStepHandler();
        double double20 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Higham-Hall 5(4)" + "'", str13, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
    }

    @Test
    public void test15473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15473");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getMaxStep();
        highamHall54Integrator4.setMinReduction(0.2d);
        java.lang.String str10 = highamHall54Integrator4.getName();
        double double11 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations12 = null;
        double[] doubleArray14 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        double double19 = switchingFunctionsHandler16.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler16.add(switchingFunction20, 1.0d, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler26.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler30.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler30.evaluateStep(stepInterpolator33);
        double[] doubleArray40 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler30.stepAccepted((double) (byte) 1, doubleArray40);
        boolean boolean42 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray40);
        boolean boolean43 = switchingFunctionsHandler16.reset((double) '4', doubleArray40);
        boolean boolean44 = switchingFunctionsHandler16.stop();
        boolean boolean45 = switchingFunctionsHandler16.stop();
        double double46 = switchingFunctionsHandler16.getEventTime();
        double double47 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray61 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray64 = null;
        double[] doubleArray71 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray64, doubleArray71);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator73 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray61, doubleArray64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator75 = null;
        boolean boolean76 = switchingFunctionsHandler74.evaluateStep(stepInterpolator75);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler78 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        boolean boolean80 = switchingFunctionsHandler78.evaluateStep(stepInterpolator79);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator81 = null;
        boolean boolean82 = switchingFunctionsHandler78.evaluateStep(stepInterpolator81);
        double[] doubleArray88 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler78.stepAccepted((double) (byte) 1, doubleArray88);
        boolean boolean90 = switchingFunctionsHandler74.reset((double) (byte) 1, doubleArray88);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator91 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray61, doubleArray88);
        double[] doubleArray92 = null;
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator93 = new org.apache.commons.math.ode.HighamHall54Integrator(3.1622776601683795d, 0.2d, doubleArray88, doubleArray92);
        boolean boolean94 = switchingFunctionsHandler16.reset(0.9d, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            highamHall54Integrator4.integrate(firstOrderDifferentialEquations12, 2.1213203435596424d, doubleArray14, 35.0d, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Higham-Hall 5(4)" + "'", str10, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test15474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15474");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        double double26 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMinReduction(97.0d);
        double double29 = highamHall54Integrator4.getMinStep();
        double double30 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.9d + "'", double26 == 0.9d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test15475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15475");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        double double10 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction11, (double) (short) 0, (double) 100L, 0);
        int int16 = highamHall54Integrator4.getOrder();
        double double17 = highamHall54Integrator4.getMinReduction();
        int int18 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) (byte) 100, 0.0d, (int) (short) -1);
        java.lang.String str24 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize(0.4472135954999579d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Higham-Hall 5(4)" + "'", str24, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler25);
    }

    @Test
    public void test15476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15476");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 100, 7.211102550927978d, 0.4472135954999579d, 0.7952707287670507d);
        double double5 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction6, 18.566368063325246d, 5.580754698496868d, 100);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 26.8534961428265d + "'", double5 == 26.8534961428265d);
    }

    @Test
    public void test15477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15477");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction9, 10.0d, (double) 10L, 0);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator18 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator18.getStepHandler();
        highamHall54Integrator18.setInitialStepSize((double) 3);
        double double22 = highamHall54Integrator18.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler23 = highamHall54Integrator18.getStepHandler();
        boolean boolean24 = stepHandler23.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        stepHandler23.handleStep(stepInterpolator25, false);
        highamHall54Integrator4.setStepHandler(stepHandler23);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        stepHandler23.handleStep(stepInterpolator29, true);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler19);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(stepHandler23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test15478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15478");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        java.lang.String str25 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction27, 32.0d, 10.0d, (int) (short) 100);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator36 = new org.apache.commons.math.ode.HighamHall54Integrator(3.1622776601683795d, (double) (short) 100, Double.NaN, (double) (-1L));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator41 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler42 = null;
        highamHall54Integrator41.setStepHandler(stepHandler42);
        double double44 = highamHall54Integrator41.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler45 = null;
        highamHall54Integrator41.setStepHandler(stepHandler45);
        double double47 = highamHall54Integrator41.getMaxStep();
        double double48 = highamHall54Integrator41.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator53.getStepHandler();
        highamHall54Integrator41.setStepHandler(stepHandler54);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator60 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler61 = null;
        highamHall54Integrator60.setStepHandler(stepHandler61);
        double double63 = highamHall54Integrator60.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler64 = null;
        highamHall54Integrator60.setStepHandler(stepHandler64);
        double double66 = highamHall54Integrator60.getMaxStep();
        double double67 = highamHall54Integrator60.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator72 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler73 = highamHall54Integrator72.getStepHandler();
        highamHall54Integrator60.setStepHandler(stepHandler73);
        highamHall54Integrator41.setStepHandler(stepHandler73);
        boolean boolean76 = stepHandler73.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator77 = null;
        stepHandler73.handleStep(stepInterpolator77, true);
        highamHall54Integrator36.setStepHandler(stepHandler73);
        highamHall54Integrator4.setStepHandler(stepHandler73);
        highamHall54Integrator4.setInitialStepSize((double) 100.0f);
        highamHall54Integrator4.setInitialStepSize(5.477225575051661d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction86 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction86, 0.0d, 0.0d, (-1));
        double double91 = highamHall54Integrator4.getMinReduction();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1.0d) + "'", double47 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1.0d) + "'", double66 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.2d + "'", double91 == 0.2d);
    }

    @Test
    public void test15479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15479");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double double3 = switchingFunctionsHandler0.getEventTime();
        boolean boolean4 = switchingFunctionsHandler0.stop();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        boolean boolean7 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler15.evaluateStep(stepInterpolator16);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler15.evaluateStep(stepInterpolator18);
        double[] doubleArray25 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler15.stepAccepted((double) (byte) 1, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray25);
        double double28 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray32 = null;
        double[] doubleArray39 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator40 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray32, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler11.reset((double) 10.0f, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        switchingFunctionsHandler42.add(switchingFunction43, (double) 1.0f, (double) (byte) -1, 10);
        boolean boolean48 = switchingFunctionsHandler42.isEmpty();
        boolean boolean49 = switchingFunctionsHandler42.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = switchingFunctionsHandler51.evaluateStep(stepInterpolator52);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler55.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler55.evaluateStep(stepInterpolator58);
        double[] doubleArray65 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler55.stepAccepted((double) (byte) 1, doubleArray65);
        boolean boolean67 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray65);
        boolean boolean68 = switchingFunctionsHandler42.reset((double) 1L, doubleArray65);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator69 = new org.apache.commons.math.ode.HighamHall54Integrator(0.0d, (double) 0.0f, doubleArray39, doubleArray65);
        boolean boolean70 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray65);
        double[] doubleArray72 = null;
        boolean boolean73 = switchingFunctionsHandler0.reset((double) 10.0f, doubleArray72);
        boolean boolean74 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler76 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator77 = null;
        boolean boolean78 = switchingFunctionsHandler76.evaluateStep(stepInterpolator77);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        boolean boolean80 = switchingFunctionsHandler76.evaluateStep(stepInterpolator79);
        double[] doubleArray86 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler76.stepAccepted((double) (byte) 1, doubleArray86);
        switchingFunctionsHandler0.stepAccepted((double) (-1L), doubleArray86);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction89 = null;
        switchingFunctionsHandler0.add(switchingFunction89, (double) (-1L), (double) 1, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test15480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15480");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        double double26 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = highamHall54Integrator4.getStepHandler();
        double double28 = highamHall54Integrator4.getMaxStep();
        java.lang.String str29 = highamHall54Integrator4.getName();
        double double30 = highamHall54Integrator4.getSafety();
        double double31 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setMaxGrowth((double) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction34, (double) 100L, 9.848857801796104d, (int) (short) 100);
        double double39 = highamHall54Integrator4.getMaxGrowth();
        int int40 = highamHall54Integrator4.getOrder();
        java.lang.String str41 = highamHall54Integrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.9d + "'", double30 == 0.9d);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Higham-Hall 5(4)" + "'", str41, "Higham-Hall 5(4)");
    }

    @Test
    public void test15481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15481");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        double double24 = highamHall54Integrator4.getMaxStep();
        double double25 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth((double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler28 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction29, (double) ' ', (double) 100L, 0);
        java.lang.String str34 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction35, (double) 'a', (double) 'a', (int) (short) 100);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator44 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (short) 1, 97.0d, (-1.0d));
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler50 = highamHall54Integrator49.getStepHandler();
        double double51 = highamHall54Integrator49.getMinStep();
        double double52 = highamHall54Integrator49.getCurrentSignedStepsize();
        int int53 = highamHall54Integrator49.getOrder();
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator49.getStepHandler();
        highamHall54Integrator44.setStepHandler(stepHandler54);
        highamHall54Integrator4.setStepHandler(stepHandler54);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction57, 1.4142135623730951d, (double) 10L, (int) (byte) 0);
        double double62 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.9d + "'", double25 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Higham-Hall 5(4)" + "'", str34, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test15482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15482");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler16 = highamHall54Integrator4.getStepHandler();
        double double17 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler19 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(stepHandler16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler19);
    }

    @Test
    public void test15483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15483");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator16 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler17 = highamHall54Integrator16.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction19, (double) '4', 1.0d, (int) (short) -1);
        highamHall54Integrator4.setMinReduction((double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler26 = highamHall54Integrator4.getStepHandler();
        double double27 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double28 = highamHall54Integrator4.getMaxStep();
        java.lang.String str29 = highamHall54Integrator4.getName();
        double double30 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Higham-Hall 5(4)" + "'", str29, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test15484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15484");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(Double.NaN, 97.0d, (double) 10.0f, (double) (byte) 0);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
    }

    @Test
    public void test15485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15485");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, (double) 0.0f, 3.7829664360127033d, 14.142135623730951d);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator9 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator9.getStepHandler();
        double double11 = highamHall54Integrator9.getCurrentStepStart();
        double double12 = highamHall54Integrator9.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        highamHall54Integrator9.addSwitchingFunction(switchingFunction13, 0.0d, (double) 'a', (int) '#');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator22 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler23 = null;
        highamHall54Integrator22.setStepHandler(stepHandler23);
        double double25 = highamHall54Integrator22.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler26 = null;
        highamHall54Integrator22.setStepHandler(stepHandler26);
        double double28 = highamHall54Integrator22.getMaxStep();
        double double29 = highamHall54Integrator22.getMinStep();
        double double30 = highamHall54Integrator22.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator35 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler36 = highamHall54Integrator35.getStepHandler();
        highamHall54Integrator35.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler39 = highamHall54Integrator35.getStepHandler();
        boolean boolean40 = stepHandler39.requiresDenseOutput();
        highamHall54Integrator22.setStepHandler(stepHandler39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        stepHandler39.handleStep(stepInterpolator42, true);
        highamHall54Integrator9.setStepHandler(stepHandler39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        stepHandler39.handleStep(stepInterpolator46, true);
        stepHandler39.reset();
        highamHall54Integrator4.setStepHandler(stepHandler39);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10.0d + "'", double29 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test15486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15486");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        double double7 = highamHall54Integrator4.getMaxGrowth();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double9 = highamHall54Integrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator15 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator15.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator15.getCurrentSignedStepsize();
        double double19 = highamHall54Integrator15.getCurrentStepStart();
        highamHall54Integrator15.setMaxGrowth(0.0d);
        java.lang.String str22 = highamHall54Integrator15.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        highamHall54Integrator15.addSwitchingFunction(switchingFunction23, (double) 100L, (double) 0L, (int) (byte) 1);
        double double28 = highamHall54Integrator15.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 0, 0.2d, (double) 0L, (double) 0L);
        highamHall54Integrator33.setInitialStepSize((double) (byte) 100);
        double double36 = highamHall54Integrator33.getMinReduction();
        org.apache.commons.math.ode.StepHandler stepHandler37 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator15.setStepHandler(stepHandler37);
        highamHall54Integrator4.setStepHandler(stepHandler37);
        double double40 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Higham-Hall 5(4)" + "'", str22, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2d + "'", double36 == 0.2d);
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test15487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15487");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction(10.0d);
        int int8 = highamHall54Integrator4.getOrder();
        double double9 = highamHall54Integrator4.getCurrentStepStart();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        highamHall54Integrator4.setSafety(100.0d);
        int int13 = highamHall54Integrator4.getOrder();
        int int14 = highamHall54Integrator4.getOrder();
        double double15 = highamHall54Integrator4.getCurrentSignedStepsize();
        java.lang.Class<?> wildcardClass16 = highamHall54Integrator4.getClass();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test15488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15488");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setInitialStepSize((double) 3);
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        highamHall54Integrator4.setMaxGrowth((double) (byte) 100);
        double double12 = highamHall54Integrator4.getMaxStep();
        double double13 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) 10.0f);
        highamHall54Integrator4.setInitialStepSize((double) (short) 0);
        double double18 = highamHall54Integrator4.getCurrentStepStart();
        highamHall54Integrator4.setInitialStepSize((double) 'a');
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test15489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15489");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMinStep();
        double double12 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator17 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler18 = highamHall54Integrator17.getStepHandler();
        highamHall54Integrator17.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler21 = highamHall54Integrator17.getStepHandler();
        boolean boolean22 = stepHandler21.requiresDenseOutput();
        highamHall54Integrator4.setStepHandler(stepHandler21);
        double double24 = highamHall54Integrator4.getSafety();
        java.lang.String str25 = highamHall54Integrator4.getName();
        highamHall54Integrator4.setSafety((double) '#');
        java.lang.String str28 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator(1.0d, 0.2d, (double) (-1L), (double) (byte) -1);
        double double34 = highamHall54Integrator33.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator33.getStepHandler();
        highamHall54Integrator4.setStepHandler(stepHandler35);
        java.lang.String str37 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator42 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler43 = highamHall54Integrator42.getStepHandler();
        highamHall54Integrator42.setMinReduction((double) 10L);
        org.apache.commons.math.ode.StepHandler stepHandler46 = highamHall54Integrator42.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        stepHandler46.handleStep(stepInterpolator47, true);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        stepHandler46.handleStep(stepInterpolator50, false);
        highamHall54Integrator4.setStepHandler(stepHandler46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        stepHandler46.handleStep(stepInterpolator54, true);
        stepHandler46.reset();
        stepHandler46.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.9d + "'", double24 == 0.9d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Higham-Hall 5(4)" + "'", str25, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Higham-Hall 5(4)" + "'", str28, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Higham-Hall 5(4)" + "'", str37, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(stepHandler46);
    }

    @Test
    public void test15490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15490");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray11 = new double[] { 1, (short) 100, 1.0f, 10.0d, (byte) 0, (short) 100 };
        double[] doubleArray22 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray25 = null;
        double[] doubleArray32 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator33 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray25, doubleArray32);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray22, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler35.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler39.evaluateStep(stepInterpolator42);
        double[] doubleArray49 = new double[] { 1L, 1, (-1.0d), 1 };
        switchingFunctionsHandler39.stepAccepted((double) (byte) 1, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator52 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 100, (double) (byte) 100, doubleArray22, doubleArray49);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator53 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (short) 1, (double) (byte) 1, doubleArray11, doubleArray22);
        switchingFunctionsHandler0.stepAccepted(Double.NaN, doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler0.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        switchingFunctionsHandler0.add(switchingFunction57, 32.0d, (double) (short) 0, (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[1.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test15491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15491");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) -1, (-1.0d), (double) (short) 100, (double) 0);
        int int5 = highamHall54Integrator4.getOrder();
        java.lang.String str6 = highamHall54Integrator4.getName();
        double double7 = highamHall54Integrator4.getMinReduction();
        double double8 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double9 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double10 = highamHall54Integrator4.getMinStep();
        double double11 = highamHall54Integrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Higham-Hall 5(4)" + "'", str6, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
    }

    @Test
    public void test15492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15492");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getCurrentStepStart();
        double double7 = highamHall54Integrator4.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = null;
        highamHall54Integrator12.setStepHandler(stepHandler13);
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator12.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator12.getMaxStep();
        double double19 = highamHall54Integrator12.getMinStep();
        double double20 = highamHall54Integrator12.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator25 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler26 = null;
        highamHall54Integrator25.setStepHandler(stepHandler26);
        double double28 = highamHall54Integrator25.getCurrentSignedStepsize();
        double double29 = highamHall54Integrator25.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator34 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler35 = highamHall54Integrator34.getStepHandler();
        highamHall54Integrator25.setStepHandler(stepHandler35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        stepHandler35.handleStep(stepInterpolator37, true);
        highamHall54Integrator12.setStepHandler(stepHandler35);
        stepHandler35.reset();
        stepHandler35.reset();
        highamHall54Integrator4.setStepHandler(stepHandler35);
        int int44 = highamHall54Integrator4.getOrder();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator49 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10.0f, (double) 'a', (double) (short) 0, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        highamHall54Integrator49.addSwitchingFunction(switchingFunction50, (double) 0, (double) 1L, (int) '4');
        int int55 = highamHall54Integrator49.getOrder();
        double double56 = highamHall54Integrator49.getMaxGrowth();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator61 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler62 = null;
        highamHall54Integrator61.setStepHandler(stepHandler62);
        double double64 = highamHall54Integrator61.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler65 = null;
        highamHall54Integrator61.setStepHandler(stepHandler65);
        double double67 = highamHall54Integrator61.getMinReduction();
        int int68 = highamHall54Integrator61.getOrder();
        highamHall54Integrator61.setInitialStepSize((double) '4');
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator75 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler76 = null;
        highamHall54Integrator75.setStepHandler(stepHandler76);
        double double78 = highamHall54Integrator75.getCurrentSignedStepsize();
        double double79 = highamHall54Integrator75.getCurrentStepStart();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator84 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler85 = highamHall54Integrator84.getStepHandler();
        highamHall54Integrator75.setStepHandler(stepHandler85);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator87 = null;
        stepHandler85.handleStep(stepInterpolator87, true);
        highamHall54Integrator61.setStepHandler(stepHandler85);
        highamHall54Integrator49.setStepHandler(stepHandler85);
        highamHall54Integrator4.setStepHandler(stepHandler85);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2d + "'", double67 == 0.2d);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 5 + "'", int68 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(stepHandler85);
    }

    @Test
    public void test15493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15493");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        highamHall54Integrator4.addSwitchingFunction(switchingFunction8, (double) 100.0f, (double) 10L, (int) 'a');
        double double13 = highamHall54Integrator4.getCurrentSignedStepsize();
        highamHall54Integrator4.setSafety((double) 1L);
        java.lang.String str16 = highamHall54Integrator4.getName();
        double double17 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str18 = highamHall54Integrator4.getName();
        java.lang.String str19 = highamHall54Integrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Higham-Hall 5(4)" + "'", str16, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Higham-Hall 5(4)" + "'", str18, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
    }

    @Test
    public void test15494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15494");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        double double6 = highamHall54Integrator4.getMinStep();
        java.lang.String str7 = highamHall54Integrator4.getName();
        java.lang.String str8 = highamHall54Integrator4.getName();
        java.lang.String str9 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler10 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Higham-Hall 5(4)" + "'", str7, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Higham-Hall 5(4)" + "'", str8, "Higham-Hall 5(4)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler10);
    }

    @Test
    public void test15495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15495");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        double double8 = highamHall54Integrator4.getCurrentStepStart();
        java.lang.String str9 = highamHall54Integrator4.getName();
        double double10 = highamHall54Integrator4.getMaxGrowth();
        double double11 = highamHall54Integrator4.getSafety();
        highamHall54Integrator4.setMaxGrowth(97.0d);
        int int14 = highamHall54Integrator4.getOrder();
        double double15 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Higham-Hall 5(4)" + "'", str9, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9d + "'", double11 == 0.9d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test15496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15496");
        double[] doubleArray8 = new double[] { 10.0d, 0, 100L, 10.0d, (byte) 1, '4' };
        double[] doubleArray11 = null;
        double[] doubleArray18 = new double[] { 100.0d, 100L, 1, (-1L), 1.0d, 0 };
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator19 = new org.apache.commons.math.ode.HighamHall54Integrator((double) (byte) 1, (double) (-1L), doubleArray11, doubleArray18);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator20 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 1.0f, (double) 0, doubleArray8, doubleArray11);
        highamHall54Integrator20.setMaxGrowth((double) 1.0f);
        double double23 = highamHall54Integrator20.getMinReduction();
        double double24 = highamHall54Integrator20.getCurrentStepStart();
        highamHall54Integrator20.setMaxGrowth((double) 2);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator31.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator31.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator31.getMaxStep();
        double double38 = highamHall54Integrator31.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator31.setStepHandler(stepHandler44);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        highamHall54Integrator31.addSwitchingFunction(switchingFunction46, (double) '4', 1.0d, (int) (short) -1);
        highamHall54Integrator31.setMinReduction((double) (byte) -1);
        double double53 = highamHall54Integrator31.getCurrentStepStart();
        double double54 = highamHall54Integrator31.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler55 = highamHall54Integrator31.getStepHandler();
        highamHall54Integrator20.setStepHandler(stepHandler55);
        org.apache.commons.math.ode.StepHandler stepHandler57 = highamHall54Integrator20.getStepHandler();
        java.lang.String str58 = highamHall54Integrator20.getName();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 0.0, 100.0, 10.0, 1.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0, 1.0, -1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.2d + "'", double23 == 0.2d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1.0d) + "'", double54 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Higham-Hall 5(4)" + "'", str58, "Higham-Hall 5(4)");
    }

    @Test
    public void test15497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15497");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = null;
        highamHall54Integrator4.setStepHandler(stepHandler5);
        double double7 = highamHall54Integrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler8 = null;
        highamHall54Integrator4.setStepHandler(stepHandler8);
        double double10 = highamHall54Integrator4.getMaxStep();
        double double11 = highamHall54Integrator4.getMaxGrowth();
        java.lang.String str12 = highamHall54Integrator4.getName();
        int int13 = highamHall54Integrator4.getOrder();
        highamHall54Integrator4.setMinReduction((double) (-1.0f));
        highamHall54Integrator4.setMaxGrowth((double) 2);
        double double18 = highamHall54Integrator4.getMaxStep();
        java.lang.String str19 = highamHall54Integrator4.getName();
        double double20 = highamHall54Integrator4.getMaxGrowth();
        double double21 = highamHall54Integrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Higham-Hall 5(4)" + "'", str12, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Higham-Hall 5(4)" + "'", str19, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2.0d + "'", double20 == 2.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test15498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15498");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler5 = highamHall54Integrator4.getStepHandler();
        highamHall54Integrator4.setMinReduction((double) 10L);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator12 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler13 = null;
        highamHall54Integrator12.setStepHandler(stepHandler13);
        double double15 = highamHall54Integrator12.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler16 = null;
        highamHall54Integrator12.setStepHandler(stepHandler16);
        double double18 = highamHall54Integrator12.getMaxStep();
        double double19 = highamHall54Integrator12.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator24 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler25 = highamHall54Integrator24.getStepHandler();
        highamHall54Integrator12.setStepHandler(stepHandler25);
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator31 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler32 = null;
        highamHall54Integrator31.setStepHandler(stepHandler32);
        double double34 = highamHall54Integrator31.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler35 = null;
        highamHall54Integrator31.setStepHandler(stepHandler35);
        double double37 = highamHall54Integrator31.getMaxStep();
        double double38 = highamHall54Integrator31.getMinStep();
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator43 = new org.apache.commons.math.ode.HighamHall54Integrator((double) 10, (double) (byte) -1, 100.0d, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler44 = highamHall54Integrator43.getStepHandler();
        highamHall54Integrator31.setStepHandler(stepHandler44);
        highamHall54Integrator12.setStepHandler(stepHandler44);
        highamHall54Integrator4.setStepHandler(stepHandler44);
        double double48 = highamHall54Integrator4.getCurrentStepStart();
        double double49 = highamHall54Integrator4.getMinStep();
        java.lang.String str50 = highamHall54Integrator4.getName();
        int int51 = highamHall54Integrator4.getOrder();
        double double52 = highamHall54Integrator4.getCurrentStepStart();
        double double53 = highamHall54Integrator4.getSafety();
        org.apache.commons.math.ode.StepHandler stepHandler54 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.0d) + "'", double37 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Higham-Hall 5(4)" + "'", str50, "Higham-Hall 5(4)");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.9d + "'", double53 == 0.9d);
        org.junit.Assert.assertNotNull(stepHandler54);
    }

    @Test
    public void test15499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15499");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(100.0d, (double) 0L, (double) 3, (double) (short) 10);
        java.lang.String str5 = highamHall54Integrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler6 = highamHall54Integrator4.getStepHandler();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Higham-Hall 5(4)" + "'", str5, "Higham-Hall 5(4)");
        org.junit.Assert.assertNotNull(stepHandler6);
    }

    @Test
    public void test15500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest30.test15500");
        org.apache.commons.math.ode.HighamHall54Integrator highamHall54Integrator4 = new org.apache.commons.math.ode.HighamHall54Integrator(24.947901585376336d, 2.449489742783178d, 22.02271554554524d, 0.4472135954999579d);
    }
}

